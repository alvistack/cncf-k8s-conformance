  I0902 07:31:10.756800      18 e2e.go:109] Starting e2e run "a4045718-28a9-446b-aff0-dbf2a3f6f45e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756798267 - will randomize all specs

Will run 419 of 6730 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0902 07:31:11.314016 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 07:31:11.360989 18 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0902 07:31:11.438404 18 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0902 07:31:11.466388 18 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0902 07:31:11.466851 18 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  I0902 07:31:11.466886 18 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0902 07:31:11.467144 18 e2e.go:245] e2e test version: v1.33.4
  I0902 07:31:11.469996 18 e2e.go:254] kube-apiserver version: v1.33.4
  I0902 07:31:11.470153 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 07:31:11.477574 18 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.164 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/02/25 07:31:12.158
  I0902 07:31:12.158371 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 07:31:12.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:12.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:12.247
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/25 07:31:12.266
  STEP: Saw pod success @ 09/02/25 07:31:28.576
  I0902 07:31:28.582297 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-78a70834-79c4-4d7a-aad2-10716aa94c59 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 07:31:28.643
  I0902 07:31:28.705474 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9208" for this suite. @ 09/02/25 07:31:28.74
• [16.597 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/02/25 07:31:28.755
  I0902 07:31:28.755998 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/25 07:31:28.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:28.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:28.794
  STEP: creating a target pod @ 09/02/25 07:31:28.81
  STEP: adding an ephemeral container @ 09/02/25 07:31:35.029
  STEP: verifying the pod's generation is 2 @ 09/02/25 07:31:39.083
  STEP: checking pod container endpoints @ 09/02/25 07:31:39.089
  I0902 07:31:39.090134 18 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4832 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:31:39.090201 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 07:31:39.090481 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4832/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0902 07:31:39.195049 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 07:31:39.195155 18 exec_util.go:112] Exec stderr: ""
  I0902 07:31:39.234089 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4832" for this suite. @ 09/02/25 07:31:39.286
• [10.549 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/02/25 07:31:39.305
  I0902 07:31:39.305954 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:31:39.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:39.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:39.359
  STEP: Creating a pod to test downward api env vars @ 09/02/25 07:31:39.365
  STEP: Saw pod success @ 09/02/25 07:31:47.488
  I0902 07:31:47.511700 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod downward-api-ae5888da-d1f4-49c6-9dc4-190525809df3 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:31:47.562
  I0902 07:31:47.613053 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2694" for this suite. @ 09/02/25 07:31:47.651
• [8.377 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/02/25 07:31:47.688
  I0902 07:31:47.688976 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:31:47.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:47.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:47.767
  STEP: Creating configMap with name projected-configmap-test-volume-06c884c8-d3a2-4831-9a6f-0b2ee7919c45 @ 09/02/25 07:31:47.774
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:31:47.786
  STEP: Saw pod success @ 09/02/25 07:31:51.837
  I0902 07:31:51.842997 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-6fb16c09-9395-4649-9c9e-0c8ce09d8c0a container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:31:51.865
  I0902 07:31:51.927090 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5411" for this suite. @ 09/02/25 07:31:51.944
• [4.294 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/02/25 07:31:51.984
  I0902 07:31:51.984254 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename fake-node @ 09/02/25 07:31:51.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:52.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:52.025
  STEP: Create "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.031
  STEP: Getting "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.068
  STEP: Patching "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.08
  STEP: Listing nodes with LabelSelector "e2e-fake-node-bgbtj=patched" @ 09/02/25 07:31:52.144
  STEP: Updating "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.16
  STEP: Delete "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.184
  STEP: Confirm deletion of "e2e-fake-node-bgbtj" @ 09/02/25 07:31:52.209
  I0902 07:31:52.216712 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-5201" for this suite. @ 09/02/25 07:31:52.237
• [0.281 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/02/25 07:31:52.266
  I0902 07:31:52.266078 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 07:31:52.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:52.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:52.316
  I0902 07:31:56.491360 18 security_context.go:619] Got logs for pod "busybox-privileged-false-cec30447-9c30-43a2-bad6-fa40a6b2a4e8": "ip: RTNETLINK answers: Operation not permitted\n"
  I0902 07:31:56.493285 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7552" for this suite. @ 09/02/25 07:31:56.506
• [4.255 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/02/25 07:31:56.524
  I0902 07:31:56.524370 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 07:31:56.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:56.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:56.574
  I0902 07:31:56.594173      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:31:56.600769 18 endpointslice.go:1045] Endpoints addresses: [192.168.121.238 192.168.121.25] , ports: [6443]
  I0902 07:31:56.600848 18 endpointslice.go:1075] EndpointSlices addresses: [192.168.121.238 192.168.121.25] , ports: [6443]
  I0902 07:31:56.601129 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9568" for this suite. @ 09/02/25 07:31:56.613
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/02/25 07:31:56.637
  I0902 07:31:56.637252 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 07:31:56.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:56.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:56.687
  STEP: creating the pod @ 09/02/25 07:31:56.71
  STEP: submitting the pod to kubernetes @ 09/02/25 07:31:56.711
  STEP: verifying QOS class is set on the pod @ 09/02/25 07:31:56.735
  I0902 07:31:56.795827 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5827" for this suite. @ 09/02/25 07:31:56.809
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 09/02/25 07:31:56.842
  I0902 07:31:56.842573 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 07:31:56.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:56.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:56.881
  STEP: Creating a job @ 09/02/25 07:31:56.887
  STEP: Ensuring active pods == parallelism @ 09/02/25 07:31:56.954
  STEP: Orphaning one of the Job's Pods @ 09/02/25 07:32:01.031
  I0902 07:32:01.606719 18 pod_client.go:173] Successfully updated pod "adopt-release-297dz"
  STEP: Checking that the Job readopts the Pod @ 09/02/25 07:32:01.606
  STEP: Removing the labels from the Job's Pod @ 09/02/25 07:32:03.659
  I0902 07:32:04.223853 18 pod_client.go:173] Successfully updated pod "adopt-release-297dz"
  STEP: Checking that the Job releases the Pod @ 09/02/25 07:32:04.224
  I0902 07:32:06.261540 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1420" for this suite. @ 09/02/25 07:32:06.27
• [9.443 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/02/25 07:32:06.286
  I0902 07:32:06.286608 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 07:32:06.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:32:06.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:32:06.337
  I0902 07:32:06.381506 18 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0902 07:32:11.403479 18 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 07:32:11.403
  I0902 07:32:23.587377 18 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0902 07:32:25.595103 18 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0902 07:32:25.614935 18 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0902 07:32:27.634059 18 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0902 07:32:27.653119 18 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0902 07:32:27.668842 18 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0902 07:32:27.686217 18 deployment.go:314] Updating deployment test-rollover-deployment
  I0902 07:32:27.686305 18 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0902 07:32:29.701112 18 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0902 07:32:29.740588 18 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0902 07:32:29.817386 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:29.818110 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:31.833563 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:31.833828 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:33.839710 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:33.840074 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:35.851268 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:35.851509 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:37.905808 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:37.907870 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:39.853684 18 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:32:39.853889 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:32:41.857457 18 deployment.go:95] 
  I0902 07:32:41.857562 18 deployment.go:993] Ensure that both old replica sets have no replicas
  I0902 07:32:41.877610 18 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5884",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32076b32-7c88-4c0b-a15c-7ff6f7976619",
      ResourceVersion: (string) (len=4) "5922",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 07:32:41.894158 18 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5884",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fd67cbc-5baf-483f-973a-e2eba170b4b6",
      ResourceVersion: (string) (len=4) "5911",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "32076b32-7c88-4c0b-a15c-7ff6f7976619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 30 37 36 62  33 32 2d 37 63 38 38 2d  |\"32076b32-7c88-|
              00000120  34 63 30 62 2d 61 31 35  63 2d 37 66 66 36 66 37  |4c0b-a15c-7ff6f7|
              00000130  39 37 36 36 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |976619\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:32:41.898672 18 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0902 07:32:41.899176 18 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5884",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de76a2a3-5a96-4acc-87ea-df16b84b9934",
      ResourceVersion: (string) (len=4) "5920",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "32076b32-7c88-4c0b-a15c-7ff6f7976619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  33 32 30 37 36 62 33 32  2d 37 63 38 38 2d 34 63  |32076b32-7c88-4c|
              000000c0  30 62 2d 61 31 35 63 2d  37 66 66 36 66 37 39 37  |0b-a15c-7ff6f797|
              000000d0  36 36 31 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |6619\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:32:41.903813 18 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5884",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0aaef48a-282f-4e3b-b2af-aa54f2588912",
      ResourceVersion: (string) (len=4) "5866",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "32076b32-7c88-4c0b-a15c-7ff6f7976619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 30 37 36 62  33 32 2d 37 63 38 38 2d  |\"32076b32-7c88-|
              00000120  34 63 30 62 2d 61 31 35  63 2d 37 66 66 36 66 37  |4c0b-a15c-7ff6f7|
              00000130  39 37 36 36 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |976619\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:32:41.913316 18 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-9nmmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-9nmmk",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-5884",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9ec703c-687b-4dd1-8224-302ef0ba5890",
      ResourceVersion: (string) (len=4) "5884",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "9fd67cbc-5baf-483f-973a-e2eba170b4b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  64 36 37 63 62 63 2d 35  |d\":\"9fd67cbc-5|
              00000090  62 61 66 2d 34 38 33 66  2d 39 37 33 61 2d 65 32  |baf-483f-973a-e2|
              000000a0  65 62 61 31 37 30 62 34  62 36 5c 22 7d 22 3a 7b  |eba170b4b6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  37 38 5c 22 7d 22 3a 7b  |.233.64.78\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9dcgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9dcgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=12) "10.233.64.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395148,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://e5c0221768e7df924107756b9ab74142e517574da5f261c55955d7b432d763b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9dcgl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:32:41.922941 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5884" for this suite. @ 09/02/25 07:32:41.93
• [35.656 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/02/25 07:32:41.948
  I0902 07:32:41.948346 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 07:32:41.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:32:42.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:32:42.042
  STEP: fetching the /apis discovery document @ 09/02/25 07:32:42.048
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/02/25 07:32:42.051
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/25 07:32:42.052
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/02/25 07:32:42.052
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/02/25 07:32:42.055
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/25 07:32:42.055
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/25 07:32:42.057
  I0902 07:32:42.058252 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9581" for this suite. @ 09/02/25 07:32:42.071
• [0.178 seconds]
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 09/02/25 07:32:42.126
  I0902 07:32:42.126483 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 07:32:42.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:32:42.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:32:42.239
  I0902 07:32:42.283031      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/02/25 07:32:42.283
  I0902 07:32:42.298577      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/02/25 07:32:42.298
  I0902 07:32:42.302425      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/02/25 07:32:42.302
  I0902 07:32:42.349278      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/02/25 07:32:42.349
  I0902 07:32:42.370266      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:32:42.373110      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/02/25 07:32:42.373
  I0902 07:32:42.379931      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/02/25 07:32:42.38
  I0902 07:32:42.393024      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:32:42.397706      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/02/25 07:32:42.399
  I0902 07:32:42.408076      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/02/25 07:32:42.409
  I0902 07:32:42.507202      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/02/25 07:32:42.507
  I0902 07:32:42.522450      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/02/25 07:32:42.522
  I0902 07:32:42.534752      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:32:42.536032 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5889" for this suite. @ 09/02/25 07:32:42.549
• [0.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/02/25 07:32:42.604
  I0902 07:32:42.605130 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 07:32:42.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:32:42.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:32:42.673
  STEP: Creating a cronjob @ 09/02/25 07:32:42.678
  STEP: Ensuring more than one job is running at a time @ 09/02/25 07:32:42.711
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/02/25 07:34:00.732
  STEP: Removing cronjob @ 09/02/25 07:34:00.741
  I0902 07:34:00.760073 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2377" for this suite. @ 09/02/25 07:34:00.779
• [78.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/02/25 07:34:00.832
  I0902 07:34:00.832935 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:34:00.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:34:00.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:34:00.966
  STEP: Creating the pod @ 09/02/25 07:34:00.972
  I0902 07:34:03.696671 18 pod_client.go:173] Successfully updated pod "labelsupdate8041690c-5c56-432e-9726-c676f26b19c6"
  I0902 07:34:05.805503 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7202" for this suite. @ 09/02/25 07:34:05.835
• [5.068 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/02/25 07:34:05.897
  I0902 07:34:05.897706 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:34:05.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:34:05.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:34:05.985
  STEP: Creating configMap with name cm-test-opt-del-e8c28915-de26-466a-9bf6-49eaaea4b1a6 @ 09/02/25 07:34:06.014
  STEP: Creating configMap with name cm-test-opt-upd-0ab2b75c-384e-4825-985d-b4b499a5bbd6 @ 09/02/25 07:34:06.086
  STEP: Creating the pod @ 09/02/25 07:34:06.112
  STEP: Deleting configmap cm-test-opt-del-e8c28915-de26-466a-9bf6-49eaaea4b1a6 @ 09/02/25 07:34:10.288
  STEP: Updating configmap cm-test-opt-upd-0ab2b75c-384e-4825-985d-b4b499a5bbd6 @ 09/02/25 07:34:10.306
  STEP: Creating configMap with name cm-test-opt-create-daae1738-5179-4679-989b-58c968a2d2f2 @ 09/02/25 07:34:10.317
  STEP: waiting to observe update in volume @ 09/02/25 07:34:10.332
  I0902 07:35:29.903571 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4102" for this suite. @ 09/02/25 07:35:29.916
• [84.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/02/25 07:35:29.936
  I0902 07:35:29.937366 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 07:35:29.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:35:30.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:35:30.013
  STEP: Read namespace status @ 09/02/25 07:35:30.021
  I0902 07:35:30.036397 18 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/02/25 07:35:30.036
  I0902 07:35:30.053545 18 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/02/25 07:35:30.053
  I0902 07:35:30.105382 18 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0902 07:35:30.105614 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-517" for this suite. @ 09/02/25 07:35:30.115
• [0.192 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/02/25 07:35:30.128
  I0902 07:35:30.128394 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 07:35:30.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:35:30.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:35:30.164
  STEP: Creating a suspended cronjob @ 09/02/25 07:35:30.171
  STEP: Ensuring no jobs are scheduled @ 09/02/25 07:35:30.197
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/02/25 07:40:30.199
  STEP: Removing cronjob @ 09/02/25 07:40:30.231
  I0902 07:40:30.250511 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8696" for this suite. @ 09/02/25 07:40:30.283
• [300.182 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/02/25 07:40:30.317
  I0902 07:40:30.317840 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:40:30.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:40:30.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:40:30.385
  STEP: Creating configMap with name configmap-test-volume-fb4b3a2b-8286-4801-be8f-2c6d69539c04 @ 09/02/25 07:40:30.39
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:40:30.404
  STEP: Saw pod success @ 09/02/25 07:40:34.545
  I0902 07:40:34.561017 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-3cb157b3-95dd-4603-bcef-c8f3865e3d22 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:40:34.599
  I0902 07:40:34.658949 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9274" for this suite. @ 09/02/25 07:40:34.694
• [4.456 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/02/25 07:40:34.775
  I0902 07:40:34.775622 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/25 07:40:34.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:40:34.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:40:34.868
  STEP: Setting up server cert @ 09/02/25 07:40:34.871
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 07:40:36.018
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 07:40:36.042
  STEP: Wait for the deployment to be ready @ 09/02/25 07:40:36.064
  I0902 07:40:36.125351 18 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 07:40:38.146
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:40:38.215
  I0902 07:40:39.221771 18 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0902 07:40:39.273188 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Creating a v1 custom resource @ 09/02/25 07:40:42.111
  STEP: v2 custom resource should be converted @ 09/02/25 07:40:42.126
  I0902 07:40:42.879867 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1160" for this suite. @ 09/02/25 07:40:42.897
• [8.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/02/25 07:40:42.919
  I0902 07:40:42.919544 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 07:40:42.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:40:42.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:40:42.975
  STEP: create the deployment @ 09/02/25 07:40:42.981
  I0902 07:40:42.996272      18 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/25 07:40:42.996
  STEP: delete the deployment @ 09/02/25 07:40:43.547
  STEP: wait for all rs to be garbage collected @ 09/02/25 07:40:43.575
  STEP: expected 0 pods, got 2 pods @ 09/02/25 07:40:43.722
  STEP: Gathering metrics @ 09/02/25 07:40:44.154
  I0902 07:40:44.420086 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 07:40:44.420432 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1332" for this suite. @ 09/02/25 07:40:44.431
• [1.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/02/25 07:40:44.523
  I0902 07:40:44.523070 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 07:40:44.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:40:44.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:40:44.552
  STEP: Waiting for pod completion @ 09/02/25 07:40:44.607
  I0902 07:40:49.141970 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4890" for this suite. @ 09/02/25 07:40:49.171
• [4.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/02/25 07:40:49.225
  I0902 07:40:49.225168 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename aggregator @ 09/02/25 07:40:49.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:40:49.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:40:49.299
  I0902 07:40:49.306128 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Registering the sample API server. @ 09/02/25 07:40:49.316
  I0902 07:40:51.827168 18 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0902 07:40:51.905409 18 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0902 07:40:54.039303 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:40:56.047379 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:40:58.048333 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:00.059429 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:02.071857 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:04.165322 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:06.072858 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:08.058001 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:10.164168 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:12.059351 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:14.056033 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:16.068142 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:18.045239 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:20.045764 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 40, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:41:22.284556 18 aggregator.go:756] Waited 216.483931ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/02/25 07:41:22.452
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/02/25 07:41:22.458
  STEP: List APIServices @ 09/02/25 07:41:22.485
  I0902 07:41:22.495829 18 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/02/25 07:41:22.496
  I0902 07:41:22.515782 18 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/02/25 07:41:22.516
  I0902 07:41:22.573976 18 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 2, 7, 41, 22, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/02/25 07:41:22.574
  I0902 07:41:22.584359 18 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-02 07:41:22 +0000 UTC Passed all checks passed}
  I0902 07:41:22.584958 18 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 07:41:22.585412 18 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/02/25 07:41:22.586
  I0902 07:41:22.651846 18 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1694401230" @ 09/02/25 07:41:22.651
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/02/25 07:41:22.693
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/02/25 07:41:22.713
  STEP: Patch APIService Status @ 09/02/25 07:41:22.717
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/02/25 07:41:22.733
  I0902 07:41:22.755350 18 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-02 07:41:22 +0000 UTC Passed all checks passed}
  I0902 07:41:22.756091 18 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 07:41:22.756380 18 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0902 07:41:22.756485 18 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/02/25 07:41:22.756
  STEP: Confirm that the generated APIService has been deleted @ 09/02/25 07:41:22.801
  I0902 07:41:22.801651 18 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0902 07:41:22.807619 18 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0902 07:41:22.808265 18 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0902 07:41:23.400405 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6893" for this suite. @ 09/02/25 07:41:23.41
• [34.201 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 09/02/25 07:41:23.428
  I0902 07:41:23.428996 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 07:41:23.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:41:23.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:41:23.487
  STEP: Setting up server cert @ 09/02/25 07:41:23.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 07:41:24.831
  STEP: Deploying the webhook pod @ 09/02/25 07:41:24.843
  STEP: Wait for the deployment to be ready @ 09/02/25 07:41:24.91
  I0902 07:41:24.955952 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 07:41:26.977663 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 41, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 41, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 07:41:28.99
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:41:29.066
  I0902 07:41:30.077768 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/02/25 07:41:30.083
  I0902 07:41:30.337536 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9012" for this suite. @ 09/02/25 07:41:30.351
  STEP: Destroying namespace "webhook-markers-7276" for this suite. @ 09/02/25 07:41:30.398
• [6.997 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/02/25 07:41:30.425
  I0902 07:41:30.425901 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 07:41:30.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:41:30.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:41:30.49
  I0902 07:41:30.495270 18 deployment.go:1215] Creating deployment "webserver-deployment"
  I0902 07:41:30.509977 18 deployment.go:1219] Waiting for observed generation 1
  I0902 07:41:32.664790 18 deployment.go:1224] Waiting for all required pods to come up
  I0902 07:41:32.886419 18 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/02/25 07:41:32.886
  I0902 07:41:51.387223 18 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0902 07:41:51.423844 18 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0902 07:41:51.450125 18 deployment.go:314] Updating deployment webserver-deployment
  I0902 07:41:51.450200 18 deployment.go:1243] Waiting for observed generation 2
  I0902 07:41:53.543820 18 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0902 07:41:53.551235 18 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0902 07:41:53.557138 18 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0902 07:41:53.622339 18 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0902 07:41:53.622436 18 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0902 07:41:53.636812 18 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0902 07:41:53.677925 18 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0902 07:41:53.678332 18 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0902 07:41:53.720507 18 deployment.go:314] Updating deployment webserver-deployment
  I0902 07:41:53.720618 18 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0902 07:41:53.782500 18 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0902 07:41:53.848930 18 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0902 07:41:53.913605 18 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a782f4d4-3e64-41dd-8c10-c081848701c4",
      ResourceVersion: (string) (len=4) "7839",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 07:41:54.384560 18 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
      ResourceVersion: (string) (len=4) "7824",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a782f4d4-3e64-41dd-8c10-c081848701c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 38 32 66 34  64 34 2d 33 65 36 34 2d  |\"a782f4d4-3e64-|
              00000120  34 31 64 64 2d 38 63 31  30 2d 63 30 38 31 38 34  |41dd-8c10-c08184|
              00000130  38 37 30 31 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8701c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:41:54.460206 18 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0902 07:41:54.507773 18 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
      ResourceVersion: (string) (len=4) "7823",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a782f4d4-3e64-41dd-8c10-c081848701c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 38 32 66 34  64 34 2d 33 65 36 34 2d  |\"a782f4d4-3e64-|
              00000120  34 31 64 64 2d 38 63 31  30 2d 63 30 38 31 38 34  |41dd-8c10-c08184|
              00000130  38 37 30 31 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8701c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:41:54.811719 18 deployment.go:68] Pod "webserver-deployment-685b768f58-6tjhd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6tjhd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a12da25a-ac67-4479-b266-601f5742aaf7",
      ResourceVersion: (string) (len=4) "7867",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tklpl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tklpl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:54.816587 18 deployment.go:68] Pod "webserver-deployment-685b768f58-8l7mj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8l7mj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccc6b0da-8663-40e6-98f4-1f17e16d05be",
      ResourceVersion: (string) (len=4) "7846",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fksq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fksq5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:54.824028 18 deployment.go:68] Pod "webserver-deployment-685b768f58-9qcf2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9qcf2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed684400-aef6-4d2c-a261-8a9850072820",
      ResourceVersion: (string) (len=4) "7833",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86btg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86btg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-86btg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:54.832302 18 deployment.go:68] Pod "webserver-deployment-685b768f58-cfhjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cfhjb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63171af6-0e45-4625-9d81-bb35e38643ad",
      ResourceVersion: (string) (len=4) "7843",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqn9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqn9h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:54.838699 18 deployment.go:68] Pod "webserver-deployment-685b768f58-ffpkf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ffpkf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e89111d-d7d3-4eb0-a91f-166990f75ae9",
      ResourceVersion: (string) (len=4) "7720",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  35 36 5c 22 7d 22 3a 7b  |.233.65.56\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nsnm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nsnm6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) (len=12) "10.233.65.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395706,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://85c2bfd3297e1f7bd21272560349a1565c9c8337ac3ce05824c4d53a487477b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nsnm6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:55.591103 18 deployment.go:68] Pod "webserver-deployment-685b768f58-fnfvs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fnfvs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe634fa3-eb6a-46df-b709-d528cd5eb1cf",
      ResourceVersion: (string) (len=4) "7862",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bdcsn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bdcsn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:55.597978 18 deployment.go:68] Pod "webserver-deployment-685b768f58-fwlxh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fwlxh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52566ad0-8223-4072-8bf4-afb30b1d1a48",
      ResourceVersion: (string) (len=4) "7669",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  39 30 5c 22 7d 22 3a 7b  |.233.64.90\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twtgj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twtgj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=12) "10.233.64.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395694,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://468c6ed6ed594e998bdad59f6c1b2e8e33473d19f015cc78983c8cbf493d1e53",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-twtgj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:55.612275 18 deployment.go:68] Pod "webserver-deployment-685b768f58-jsphn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jsphn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a1b02a9-cd5d-43f4-b9a9-20b9a790b1cd",
      ResourceVersion: (string) (len=4) "7729",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 31 37 5c 22 7d 22 3a  |.233.65.217\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l95kc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l95kc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) (len=13) "10.233.65.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395707,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0281989e76425324c9e589dae3c73c893f472fd965f0442489c3c51fb061a0eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l95kc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:57.658440 18 deployment.go:68] Pod "webserver-deployment-685b768f58-l2bpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l2bpc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c656c74-f1a9-47f8-8354-14b25de7b1fe",
      ResourceVersion: (string) (len=4) "7654",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  36 5c 22 7d 22 3a 7b 22  |.233.64.6\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-84mht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-84mht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=11) "10.233.64.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.64.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395693,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://53c31b8b6ebfe50bb9747b21b9c9787bc0fd87a7ad8fbd3980a6ff6e623d4d7c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-84mht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:57.682813 18 deployment.go:68] Pod "webserver-deployment-685b768f58-mksvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mksvt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2fd75a9-a325-40ec-9172-98e79113ec69",
      ResourceVersion: (string) (len=4) "7863",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bccx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bccx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.003147 18 deployment.go:68] Pod "webserver-deployment-685b768f58-mlbc2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mlbc2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "380e7130-5874-4392-b59d-cedf2295e336",
      ResourceVersion: (string) (len=4) "7871",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brdk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brdk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.007040 18 deployment.go:68] Pod "webserver-deployment-685b768f58-n98jc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n98jc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd31f22a-8d25-4fdc-90ee-7b9a6cfd2a01",
      ResourceVersion: (string) (len=4) "7869",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7p45n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7p45n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.009550 18 deployment.go:68] Pod "webserver-deployment-685b768f58-nr6nq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nr6nq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ec102c1-c9aa-446c-b6c8-9965d7d93064",
      ResourceVersion: (string) (len=4) "7667",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 33 38 5c 22 7d 22 3a  |.233.64.138\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5ddm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5ddm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=13) "10.233.64.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395694,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://fb36949571fc93146d1f928557ed48803fcd45d77c320fbc1bb5101e61308af9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s5ddm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.013772 18 deployment.go:68] Pod "webserver-deployment-685b768f58-nvtdx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nvtdx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c98bd18-4661-4fd5-9c86-2b409c167324",
      ResourceVersion: (string) (len=4) "7870",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk6hq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk6hq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.022003 18 deployment.go:68] Pod "webserver-deployment-685b768f58-pns6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pns6t",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbeb7d9d-10bd-4068-b0f8-ac073546c58a",
      ResourceVersion: (string) (len=4) "7865",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5j9m2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5j9m2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.028012 18 deployment.go:68] Pod "webserver-deployment-685b768f58-qhp65" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qhp65",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "133ef924-e415-443c-aa8a-72ec4ca43faa",
      ResourceVersion: (string) (len=4) "7657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  39 38 5c 22 7d 22 3a 7b  |.233.64.98\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qs27v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qs27v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=12) "10.233.64.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395694,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://1a371eac2aa3bdf61e1156406a64a32d45904de972bc564e7d5d0b52b8322809",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qs27v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.036673 18 deployment.go:68] Pod "webserver-deployment-685b768f58-v9gjq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-v9gjq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca956498-86fd-461e-86ea-3421ce3259cf",
      ResourceVersion: (string) (len=4) "7857",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4n4b9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4n4b9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.054118 18 deployment.go:68] Pod "webserver-deployment-685b768f58-vjmqj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vjmqj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d133689-d40d-45e2-ae43-a8dd5cd56ea2",
      ResourceVersion: (string) (len=4) "7711",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  38 33 5c 22 7d 22 3a 7b  |.233.65.83\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tgxcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tgxcq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) (len=12) "10.233.65.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395704,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://241ff2e548889e219e28f56eac4fe9a92fa9c4da6ed4ceff1111f3162480c1d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tgxcq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.068213 18 deployment.go:68] Pod "webserver-deployment-685b768f58-wzjp6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wzjp6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6feb876e-feee-4a96-9cb8-d8cf755b16c2",
      ResourceVersion: (string) (len=4) "7643",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 31 39 5c 22 7d 22 3a  |.233.64.119\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkxfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkxfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=13) "10.233.64.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395690,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395693,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a44c017f8febecf9d0363fbd9d0b51689ad702f0cf91af34673c650c929c9b7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkxfl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.083015 18 deployment.go:68] Pod "webserver-deployment-685b768f58-zgj42" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zgj42",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd224ed4-da7d-4a2c-8416-a25b641b1689",
      ResourceVersion: (string) (len=4) "7868",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bfe6f8f-73d1-4232-9c46-ced06ebf4f88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  66 65 36 66 38 66 2d 37  |d\":\"4bfe6f8f-7|
              00000090  33 64 31 2d 34 32 33 32  2d 39 63 34 36 2d 63 65  |3d1-4232-9c46-ce|
              000000a0  64 30 36 65 62 66 34 66  38 38 5c 22 7d 22 3a 7b  |d06ebf4f88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62qqs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62qqs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.099398 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4gm7c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4gm7c",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2472e8d-e45f-445b-b2fc-12650e0aaba8",
      ResourceVersion: (string) (len=4) "7864",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9nl5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9nl5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.110312 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4kdmb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4kdmb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7baf9e0c-db51-496a-8605-5506075abbfa",
      ResourceVersion: (string) (len=4) "7859",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbc8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbc8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.119944 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4mlvm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4mlvm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ba58dfb-bb54-4e80-9c0e-074cea7654c2",
      ResourceVersion: (string) (len=4) "7802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hm9l4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hm9l4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hm9l4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.134023 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bphpd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bphpd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "989e64a9-1f87-4799-8397-dcd02501595b",
      ResourceVersion: (string) (len=4) "7854",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w62pk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w62pk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w62pk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:58.357600 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c9r78" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c9r78",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f76b7b3c-6bce-4473-bd4c-3c1bd4a93b02",
      ResourceVersion: (string) (len=4) "7780",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wl9j2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wl9j2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wl9j2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.217531 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cf9rx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cf9rx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2073994a-926a-49b8-a01d-07c04f980c2e",
      ResourceVersion: (string) (len=4) "7856",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h96c8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h96c8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h96c8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.233986 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hnwbr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hnwbr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbf6fb67-4a7b-4c33-9d6b-fcfb5b387ad3",
      ResourceVersion: (string) (len=4) "7770",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9c46w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9c46w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9c46w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.272763 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jsn29" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jsn29",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23c45007-1315-46b3-8bae-691aae55dd65",
      ResourceVersion: (string) (len=4) "7797",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9nmd5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9nmd5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9nmd5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.405373 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-n4b9b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-n4b9b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16c937fe-54bd-46e6-8bb5-5a72577be112",
      ResourceVersion: (string) (len=4) "7861",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gh25f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gh25f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.408829 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sbbqw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sbbqw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "225eca67-85ed-4ec1-8ed1-bfaabdae182c",
      ResourceVersion: (string) (len=4) "7771",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrccm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrccm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lrccm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.418532 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wwww9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wwww9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "068c935e-0faa-4cbc-bc4b-c39026245845",
      ResourceVersion: (string) (len=4) "7866",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmwsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmwsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.431692 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wznqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wznqb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d1c90b6-8964-487d-b90d-4bcf5b133940",
      ResourceVersion: (string) (len=4) "7872",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwp7x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwp7x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.439428 18 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xxvrp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xxvrp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9058d0c-5a5b-4727-8ca9-985c7b3448aa",
      ResourceVersion: (string) (len=4) "7876",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e9d68fcc-4a2c-4554-82af-588079d3f2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  64 36 38 66 63 63 2d 34  |d\":\"e9d68fcc-4|
              00000090  61 32 63 2d 34 35 35 34  2d 38 32 61 66 2d 35 38  |a2c-4554-82af-58|
              000000a0  38 30 37 39 64 33 66 32  64 31 5c 22 7d 22 3a 7b  |8079d3f2d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gj7wn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gj7wn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gj7wn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:41:59.725229 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5650" for this suite. @ 09/02/25 07:42:00.275
• [30.409 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/02/25 07:42:00.945
  I0902 07:42:00.945831 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 07:42:00.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:42:01.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:42:01.942
  STEP: Creating pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400 @ 09/02/25 07:42:01.96
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 07:42:04.097
  I0902 07:42:04.110219 18 container_probe.go:1748] Initial restart count of pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b is 0
  I0902 07:42:04.118623 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:06.445868 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:08.544963 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:10.674599 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:12.775682 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:14.784201 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:16.819003 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:18.827566 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:20.890138 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:22.899175 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:24.905962 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:26.929002 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:28.941464 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:30.950801 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:32.958247 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:34.967769 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:36.974845 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:38.983825 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:40.991179 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:43.016173 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:45.025738 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:47.037695 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:49.044781 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:51.054748 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:53.065865 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:55.078438 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:57.086212 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:42:59.094899 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:01.105297 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:03.119710 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:05.131924 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:07.150198 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:09.161197 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:11.181042 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:13.200193 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:15.237371 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:17.342987 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:19.366347 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:21.380092 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:23.421567 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:25.450440 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:27.542365 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:29.561981 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:31.576792 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:33.594277 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:35.665694 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:37.751370 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:39.778128 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:41.791088 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:43.810017 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:45.821278 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:47.847541 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:49.865090 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:51.879736 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:53.933176 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:55.948276 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:57.993525 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:43:59.999855 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:02.039480 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:04.119397 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:06.135769 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:08.214046 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:10.239267 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:12.251499 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:14.269018 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:16.279568 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:18.310262 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:20.335047 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:22.362466 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:24.393284 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:26.407893 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:28.474093 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:30.508200 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:32.578655 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:34.589089 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:36.600219 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:38.614583 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:40.631033 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:42.642686 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:44.651606 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:46.664405 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:48.752678 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:50.765469 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:52.775822 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:54.831960 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:56.845058 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:44:58.876176 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:00.898447 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:02.923138 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:04.950098 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:06.991058 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:09.006818 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:11.044905 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:13.061060 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:15.097161 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:17.106299 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:19.117604 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:21.131978 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:23.141379 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:25.177332 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:27.190568 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:29.230923 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:31.243020 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:33.251381 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:35.259570 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:37.268270 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:39.279238 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:41.289395 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:43.312782 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:45.343772 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:47.353588 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:49.362707 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:51.378765 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:53.387917 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:55.397754 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:57.411596 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:45:59.421466 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:46:01.432210 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  I0902 07:46:03.446556 18 container_probe.go:1758] Get pod busybox-0bf105f8-12c8-4262-9c55-0e48f8cb7f3b in namespace container-probe-3400
  STEP: deleting the pod @ 09/02/25 07:46:05.451
  I0902 07:46:05.517940 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3400" for this suite. @ 09/02/25 07:46:05.542
• [244.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/02/25 07:46:05.573
  I0902 07:46:05.573226 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename ingressclass @ 09/02/25 07:46:05.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:46:05.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:46:05.66
  STEP: getting /apis @ 09/02/25 07:46:05.668
  STEP: getting /apis/networking.k8s.io @ 09/02/25 07:46:05.917
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/25 07:46:05.985
  STEP: creating @ 09/02/25 07:46:06.01
  STEP: getting @ 09/02/25 07:46:06.094
  STEP: listing @ 09/02/25 07:46:06.103
  STEP: watching @ 09/02/25 07:46:06.115
  I0902 07:46:06.115896 18 ingressclass.go:348] starting watch
  STEP: patching @ 09/02/25 07:46:06.119
  STEP: updating @ 09/02/25 07:46:06.147
  I0902 07:46:06.180764 18 ingressclass.go:364] waiting for watch events with expected annotations
  I0902 07:46:06.181352 18 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/02/25 07:46:06.182
  STEP: deleting a collection @ 09/02/25 07:46:06.228
  I0902 07:46:06.323934 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7895" for this suite. @ 09/02/25 07:46:06.354
• [0.825 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/02/25 07:46:06.4
  I0902 07:46:06.400839 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:46:06.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:46:06.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:46:06.446
  STEP: Creating configMap with name configmap-test-upd-8f5ad06b-5fee-43e5-87f1-4979a3bb02b6 @ 09/02/25 07:46:06.466
  STEP: Creating the pod @ 09/02/25 07:46:06.538
  STEP: Waiting for pod with text data @ 09/02/25 07:46:08.629
  STEP: Waiting for pod with binary data @ 09/02/25 07:46:08.711
  I0902 07:46:08.741702 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1293" for this suite. @ 09/02/25 07:46:08.759
• [2.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/02/25 07:46:08.78
  I0902 07:46:08.780473 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 07:46:08.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:46:08.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:46:08.828
  I0902 07:46:08.905737 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0902 07:47:08.930318 18 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/25 07:47:08.936
  STEP: Adding a custom resource @ 09/02/25 07:47:08.936
  I0902 07:47:08.973109 18 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0902 07:47:08.988103 18 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 07:47:08.988
  I0902 07:47:09.172230 18 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0902 07:47:09.265563 18 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/25 07:47:09.273
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/02/25 07:47:13.338
  STEP: Removing a custom resource @ 09/02/25 07:47:17.537
  STEP: Removing a custom resource @ 09/02/25 07:47:17.589
  I0902 07:47:17.655889 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5409" for this suite. @ 09/02/25 07:47:17.662
• [68.897 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/02/25 07:47:17.677
  I0902 07:47:17.677261 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename init-container @ 09/02/25 07:47:17.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:17.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:17.721
  STEP: creating the pod @ 09/02/25 07:47:17.727
  I0902 07:47:17.727451 18 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0902 07:47:23.469593 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1411" for this suite. @ 09/02/25 07:47:23.493
• [5.832 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/02/25 07:47:23.51
  I0902 07:47:23.510670 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:47:23.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:23.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:23.559
  STEP: Creating configMap with name projected-configmap-test-volume-map-4b8b9e60-e91d-4710-80dd-a1b70258ef90 @ 09/02/25 07:47:23.565
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:47:23.593
  STEP: Saw pod success @ 09/02/25 07:47:27.664
  I0902 07:47:27.670697 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-5adb613f-6bb9-4c10-a469-e5d542db83b6 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:47:27.685
  I0902 07:47:27.775243 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-482" for this suite. @ 09/02/25 07:47:27.782
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/02/25 07:47:27.796
  I0902 07:47:27.796933 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:47:27.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:27.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:27.836
  I0902 07:47:27.942079 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7695" for this suite. @ 09/02/25 07:47:27.949
• [0.201 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/02/25 07:47:27.998
  I0902 07:47:27.998716 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:47:28.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:28.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:28.088
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:47:28.092
  STEP: Saw pod success @ 09/02/25 07:47:32.139
  I0902 07:47:32.150238 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-3ec82941-b97f-409c-92e0-10893cb6e98b container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:47:32.161
  I0902 07:47:32.192702 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8146" for this suite. @ 09/02/25 07:47:32.204
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/02/25 07:47:32.221
  I0902 07:47:32.221069 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 07:47:32.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:32.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:32.256
  STEP: apply creating a deployment @ 09/02/25 07:47:32.262
  I0902 07:47:32.290112 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-754" for this suite. @ 09/02/25 07:47:32.303
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 09/02/25 07:47:32.32
  I0902 07:47:32.320809 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:47:32.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:32.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:32.353
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 07:47:32.361
  I0902 07:47:32.362833 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5572 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0902 07:47:32.820812 18 builder.go:146] stderr: ""
  I0902 07:47:32.821084 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/02/25 07:47:32.821
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/25 07:47:37.876
  I0902 07:47:37.876849 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5572 get pod e2e-test-httpd-pod -o json'
  I0902 07:47:38.260934 18 builder.go:146] stderr: ""
  I0902 07:47:38.261527 18 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-02T07:47:32Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5572\",\n        \"resourceVersion\": \"9341\",\n        \"uid\": \"885f8a36-2e1c-4829-8663-d288b2e9d5ae\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8v8lm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ahkoog9eunoh-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8v8lm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T07:47:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T07:47:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T07:47:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T07:47:34Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T07:47:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://3233095eb889f194f8b5aa86e5bc45af3c6df7bf9a0d580a8843abe15c9dd893\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-02T07:47:33Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8v8lm\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.121.238\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.238\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.64.102\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.64.102\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-02T07:47:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/02/25 07:47:38.261
  I0902 07:47:38.262133 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5572 replace -f -'
  I0902 07:47:38.612498 18 builder.go:146] stderr: ""
  I0902 07:47:38.612595 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/02/25 07:47:38.612
  I0902 07:47:38.623806 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5572 delete pods e2e-test-httpd-pod'
  I0902 07:47:40.259156 18 builder.go:146] stderr: ""
  I0902 07:47:40.259263 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 07:47:40.259973 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5572" for this suite. @ 09/02/25 07:47:40.275
• [7.974 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 09/02/25 07:47:40.308
  I0902 07:47:40.308330 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 07:47:40.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:40.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:40.389
  STEP: Counting existing ResourceQuota @ 09/02/25 07:47:40.401
  STEP: Creating a ResourceQuota @ 09/02/25 07:47:45.431
  STEP: Ensuring resource quota status is calculated @ 09/02/25 07:47:45.444
  STEP: Creating a ReplicaSet @ 09/02/25 07:47:47.456
  STEP: Ensuring resource quota status captures replicaset creation @ 09/02/25 07:47:47.485
  STEP: Deleting a ReplicaSet @ 09/02/25 07:47:49.495
  STEP: Ensuring resource quota status released usage @ 09/02/25 07:47:49.506
  I0902 07:47:51.522825 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6546" for this suite. @ 09/02/25 07:47:51.533
• [11.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/02/25 07:47:51.547
  I0902 07:47:51.547739 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 07:47:51.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:51.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:51.636
  STEP: Updating Namespace "namespaces-1455" @ 09/02/25 07:47:51.664
  I0902 07:47:51.705432 18 namespace.go:390] Namespace "namespaces-1455" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a4045718-28a9-446b-aff0-dbf2a3f6f45e", "kubernetes.io/metadata.name":"namespaces-1455", "namespaces-1455":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0902 07:47:51.706038 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1455" for this suite. @ 09/02/25 07:47:51.756
• [0.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/02/25 07:47:51.774
  I0902 07:47:51.774755 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/25 07:47:51.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:51.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:51.882
  STEP: creating @ 09/02/25 07:47:51.895
  STEP: getting @ 09/02/25 07:47:51.973
  STEP: listing in namespace @ 09/02/25 07:47:52.051
  STEP: patching @ 09/02/25 07:47:52.061
  STEP: deleting @ 09/02/25 07:47:52.131
  I0902 07:47:52.180448 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7042" for this suite. @ 09/02/25 07:47:52.199
• [0.481 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/02/25 07:47:52.253
  I0902 07:47:52.253367 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename init-container @ 09/02/25 07:47:52.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:47:52.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:47:52.294
  STEP: creating the pod @ 09/02/25 07:47:52.3
  I0902 07:47:52.300395 18 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0902 07:48:34.468970 18 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e6e007ea-ccca-4d9f-92cc-4499901db2d8", GenerateName:"", Namespace:"init-container-2462", SelfLink:"", UID:"fb7ccf49-0962-4fcf-9c4c-7594dc12043a", ResourceVersion:"9578", Generation:1, CreationTimestamp:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"300368465"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c00780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 7, 48, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c007b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-k9g2r", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0012c5960), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k9g2r", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k9g2r", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-k9g2r", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00353e958), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ahkoog9eunoh-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0034cae10), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00353e9e0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00353ea00)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00353ea08), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00353ea0c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00152a030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 47, 54, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.25", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.25"}}, PodIP:"10.233.65.27", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.65.27"}}, StartTime:time.Date(2025, time.September, 2, 7, 47, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0031c3d50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0031c3dc0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://b20fbe88494f9acc61ddcc7bd5667492f584fdfac52598fbd3a4a8e0df6c29f5", Started:(*bool)(0xc00353eaba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0034e37a0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k9g2r", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00152a060)}}, User:(*v1.ContainerUser)(0xc0005ffd18), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0012c59c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00353eae5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k9g2r", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00152a080)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0012c59a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00353ea8f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-k9g2r", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00152a050)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0902 07:48:34.483743 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2462" for this suite. @ 09/02/25 07:48:34.518
• [42.292 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/02/25 07:48:34.546
  I0902 07:48:34.546752 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 07:48:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:48:34.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:48:34.608
  STEP: Performing setup for networking test in namespace pod-network-test-2134 @ 09/02/25 07:48:34.615
  STEP: creating a selector @ 09/02/25 07:48:34.615
  STEP: Creating the service pods in kubernetes @ 09/02/25 07:48:34.616
  I0902 07:48:34.616181 18 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/25 07:49:01.148
  I0902 07:49:03.206520 18 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0902 07:49:03.206685 18 networking.go:42] Breadth first check of 10.233.65.154 on host 192.168.121.25...
  I0902 07:49:03.213967 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.133:9080/dial?request=hostname&protocol=udp&host=10.233.65.154&port=8081&tries=1'] Namespace:pod-network-test-2134 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:49:03.214061 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 07:49:03.214261 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2134/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.154%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 07:49:03.396332 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 07:49:03.396525 18 utils.go:355] Waiting for responses: map[]
  I0902 07:49:03.396568 18 utils.go:359] reached 10.233.65.154 after 0/1 tries
  I0902 07:49:03.396589 18 networking.go:42] Breadth first check of 10.233.64.60 on host 192.168.121.238...
  I0902 07:49:03.410241 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.133:9080/dial?request=hostname&protocol=udp&host=10.233.64.60&port=8081&tries=1'] Namespace:pod-network-test-2134 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:49:03.410296 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 07:49:03.410389 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2134/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.60%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 07:49:03.551528 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 07:49:03.551647 18 utils.go:355] Waiting for responses: map[]
  I0902 07:49:03.551674 18 utils.go:359] reached 10.233.64.60 after 0/1 tries
  I0902 07:49:03.551692 18 networking.go:53] Going to retry 0 out of 2 pods....
  I0902 07:49:03.552045 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2134" for this suite. @ 09/02/25 07:49:03.569
• [29.036 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/02/25 07:49:03.586
  I0902 07:49:03.586393 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:49:03.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:49:03.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:49:03.67
  STEP: creating the pod with failed condition @ 09/02/25 07:49:03.676
  STEP: updating the pod @ 09/02/25 07:51:03.747
  I0902 07:51:04.277431 18 pod_client.go:173] Successfully updated pod "var-expansion-c4f96d80-f94f-4a08-bf44-8a7f9d937751"
  STEP: waiting for pod running @ 09/02/25 07:51:04.277
  STEP: deleting the pod gracefully @ 09/02/25 07:51:06.445
  I0902 07:51:06.445556 18 delete.go:62] Deleting pod "var-expansion-c4f96d80-f94f-4a08-bf44-8a7f9d937751" in namespace "var-expansion-537"
  I0902 07:51:06.465130 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-c4f96d80-f94f-4a08-bf44-8a7f9d937751" to be fully deleted
  I0902 07:51:39.096752 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-537" for this suite. @ 09/02/25 07:51:39.103
• [155.531 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/02/25 07:51:39.118
  I0902 07:51:39.118922 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename apf @ 09/02/25 07:51:39.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:51:39.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:51:39.165
  STEP: getting /apis @ 09/02/25 07:51:39.171
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/02/25 07:51:39.182
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/02/25 07:51:39.184
  STEP: creating @ 09/02/25 07:51:39.188
  STEP: getting @ 09/02/25 07:51:39.279
  STEP: listing @ 09/02/25 07:51:39.302
  STEP: watching @ 09/02/25 07:51:39.31
  I0902 07:51:39.310747 18 flowcontrol.go:394] starting watch
  STEP: patching @ 09/02/25 07:51:39.312
  STEP: updating @ 09/02/25 07:51:39.326
  I0902 07:51:39.352131 18 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/02/25 07:51:39.352
  STEP: patching /status @ 09/02/25 07:51:39.372
  STEP: updating /status @ 09/02/25 07:51:39.383
  STEP: deleting @ 09/02/25 07:51:39.484
  STEP: deleting a collection @ 09/02/25 07:51:39.509
  I0902 07:51:39.576114 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7109" for this suite. @ 09/02/25 07:51:39.586
• [0.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/02/25 07:51:39.6
  I0902 07:51:39.600162 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 07:51:39.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:51:39.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:51:39.67
  STEP: Performing setup for networking test in namespace pod-network-test-3626 @ 09/02/25 07:51:39.686
  STEP: creating a selector @ 09/02/25 07:51:39.686
  STEP: Creating the service pods in kubernetes @ 09/02/25 07:51:39.686
  I0902 07:51:39.686460 18 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/25 07:51:54.017
  I0902 07:51:56.138135 18 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0902 07:51:56.138199 18 networking.go:42] Breadth first check of 10.233.65.130 on host 192.168.121.25...
  I0902 07:51:56.153342 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.19:9080/dial?request=hostname&protocol=http&host=10.233.65.130&port=8083&tries=1'] Namespace:pod-network-test-3626 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:51:56.153435 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 07:51:56.153785 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3626/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.19%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.130%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 07:51:56.344083 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 07:51:56.344230 18 utils.go:355] Waiting for responses: map[]
  I0902 07:51:56.344314 18 utils.go:359] reached 10.233.65.130 after 0/1 tries
  I0902 07:51:56.344344 18 networking.go:42] Breadth first check of 10.233.64.142 on host 192.168.121.238...
  I0902 07:51:56.356155 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.19:9080/dial?request=hostname&protocol=http&host=10.233.64.142&port=8083&tries=1'] Namespace:pod-network-test-3626 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:51:56.358106 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 07:51:56.358217 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3626/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.19%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.142%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 07:51:56.602831 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 07:51:56.602928 18 utils.go:355] Waiting for responses: map[]
  I0902 07:51:56.602950 18 utils.go:359] reached 10.233.64.142 after 0/1 tries
  I0902 07:51:56.602978 18 networking.go:53] Going to retry 0 out of 2 pods....
  I0902 07:51:56.603176 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3626" for this suite. @ 09/02/25 07:51:56.653
• [17.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/02/25 07:51:56.67
  I0902 07:51:56.670053 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 07:51:56.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:51:56.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:51:56.726
  STEP: Setting up server cert @ 09/02/25 07:51:56.808
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 07:51:58.001
  STEP: Deploying the webhook pod @ 09/02/25 07:51:58.015
  STEP: Wait for the deployment to be ready @ 09/02/25 07:51:58.059
  I0902 07:51:58.094033 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 07:52:00.113
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:52:00.16
  I0902 07:52:01.161793 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/02/25 07:52:01.196
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 07:52:01.265
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/02/25 07:52:01.282
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 07:52:01.307
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/02/25 07:52:01.36
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 07:52:01.376
  I0902 07:52:01.604562 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9778" for this suite. @ 09/02/25 07:52:01.628
  STEP: Destroying namespace "webhook-markers-695" for this suite. @ 09/02/25 07:52:01.678
• [5.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/02/25 07:52:01.706
  I0902 07:52:01.706834 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 07:52:01.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:01.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:01.814
  STEP: Setting up server cert @ 09/02/25 07:52:01.899
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 07:52:02.406
  STEP: Deploying the webhook pod @ 09/02/25 07:52:02.415
  STEP: Wait for the deployment to be ready @ 09/02/25 07:52:02.448
  I0902 07:52:02.516204 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 07:52:04.569170 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 52, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 52, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 52, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 52, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 07:52:06.576
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:52:06.641
  I0902 07:52:07.643784 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/25 07:52:07.665
  STEP: create a pod @ 09/02/25 07:52:07.733
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/02/25 07:52:11.776
  I0902 07:52:11.776593 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=webhook-8734 attach --namespace=webhook-8734 to-be-attached-pod -i -c=container1'
  I0902 07:52:12.139425 18 builder.go:135] rc: 1
  I0902 07:52:12.393253 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8734" for this suite. @ 09/02/25 07:52:12.41
  STEP: Destroying namespace "webhook-markers-9112" for this suite. @ 09/02/25 07:52:12.507
• [10.814 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/02/25 07:52:12.522
  I0902 07:52:12.522691 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 07:52:12.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:12.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:12.611
  STEP: Creating replication controller my-hostname-basic-cc076e9c-f207-49f7-aabb-9a859681bc1c @ 09/02/25 07:52:12.62
  I0902 07:52:12.730200 18 resource.go:81] Pod name my-hostname-basic-cc076e9c-f207-49f7-aabb-9a859681bc1c: Found 0 pods out of 1
  I0902 07:52:17.797397 18 resource.go:81] Pod name my-hostname-basic-cc076e9c-f207-49f7-aabb-9a859681bc1c: Found 1 pods out of 1
  I0902 07:52:17.797472 18 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-cc076e9c-f207-49f7-aabb-9a859681bc1c" are running
  I0902 07:52:17.812322 18 rc.go:525] Pod "my-hostname-basic-cc076e9c-f207-49f7-aabb-9a859681bc1c-6xqbl" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 07:52:14 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 07:52:12 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 07:52:14 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 07:52:14 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 07:52:12 +0000 UTC Reason: Message:}])
  I0902 07:52:17.814460 18 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/25 07:52:17.814
  I0902 07:52:17.897926 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5757" for this suite. @ 09/02/25 07:52:17.924
• [5.541 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 09/02/25 07:52:18.064
  I0902 07:52:18.064216 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 07:52:18.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:18.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:18.198
  STEP: Counting existing ResourceQuota @ 09/02/25 07:52:18.203
  STEP: Creating a ResourceQuota @ 09/02/25 07:52:23.237
  STEP: Ensuring resource quota status is calculated @ 09/02/25 07:52:23.271
  I0902 07:52:25.328124 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-276" for this suite. @ 09/02/25 07:52:25.337
• [7.288 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 09/02/25 07:52:25.355
  I0902 07:52:25.355452 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 07:52:25.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:25.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:25.386
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2878 @ 09/02/25 07:52:25.394
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/25 07:52:25.506
  STEP: creating service externalsvc in namespace services-2878 @ 09/02/25 07:52:25.512
  I0902 07:52:25.609308 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 09/02/25 07:52:27.665
  I0902 07:52:27.764405 18 resource.go:361] Creating new exec pod
  I0902 07:52:31.822131 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2878 exec execpodmcskb -- /bin/sh -x -c nslookup nodeport-service.services-2878.svc.cluster.local'
  I0902 07:52:32.376051 18 builder.go:146] stderr: "+ nslookup nodeport-service.services-2878.svc.cluster.local\n"
  I0902 07:52:32.376167 18 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-2878.svc.cluster.local\tcanonical name = externalsvc.services-2878.svc.cluster.local.\nName:\texternalsvc.services-2878.svc.cluster.local\nAddress: 10.233.61.201\n\n"
  I0902 07:52:32.584304 18 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0902 07:52:32.684430 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2878" for this suite. @ 09/02/25 07:52:32.698
• [7.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 09/02/25 07:52:32.717
  I0902 07:52:32.717819 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 07:52:32.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:32.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:32.746
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1609 @ 09/02/25 07:52:32.751
  STEP: changing the ExternalName service to type=NodePort @ 09/02/25 07:52:32.76
  I0902 07:52:32.846083 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0902 07:52:34.927744 18 resource.go:361] Creating new exec pod
  I0902 07:52:36.997344 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0902 07:52:37.305602 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.30.67) 80 port [tcp/http] succeeded!\n"
  I0902 07:52:37.305902 18 builder.go:147] stdout: ""
  I0902 07:52:38.000491 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0902 07:52:38.549688 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.30.67) 80 port [tcp/http] succeeded!\n"
  I0902 07:52:38.549881 18 builder.go:147] stdout: "externalname-service-5885f49fd6-ztgpk"
  I0902 07:52:38.551863 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.67 80'
  I0902 07:52:38.920010 18 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.30.67 80\necho hostNameConnection to 10.233.30.67 80 port [tcp/http] succeeded!\n\n"
  I0902 07:52:38.920087 18 builder.go:147] stdout: "externalname-service-5885f49fd6-sc7sg"
  I0902 07:52:38.920839 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 32591'
  I0902 07:52:39.225317 18 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.121.25 32591\n+ echo hostName\nConnection to 192.168.121.25 32591 port [tcp/*] succeeded!\n"
  I0902 07:52:39.225399 18 builder.go:147] stdout: ""
  I0902 07:52:39.921572 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 32591'
  I0902 07:52:40.215816 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.25 32591\nConnection to 192.168.121.25 32591 port [tcp/*] succeeded!\n"
  I0902 07:52:40.216045 18 builder.go:147] stdout: "externalname-service-5885f49fd6-ztgpk"
  I0902 07:52:40.217352 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.238 32591'
  I0902 07:52:40.513801 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.238 32591\nConnection to 192.168.121.238 32591 port [tcp/*] succeeded!\n"
  I0902 07:52:40.513886 18 builder.go:147] stdout: ""
  I0902 07:52:41.217537 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-1609 exec execpodn542n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.238 32591'
  I0902 07:52:41.499006 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.238 32591\nConnection to 192.168.121.238 32591 port [tcp/*] succeeded!\n"
  I0902 07:52:41.499090 18 builder.go:147] stdout: "externalname-service-5885f49fd6-sc7sg"
  I0902 07:52:41.499267 18 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0902 07:52:41.631112 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1609" for this suite. @ 09/02/25 07:52:41.645
• [8.944 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/02/25 07:52:41.663
  I0902 07:52:41.663126 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 07:52:41.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:41.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:41.72
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/02/25 07:52:41.725
  STEP: When a replicaset with a matching selector is created @ 09/02/25 07:52:43.773
  STEP: Then the orphan pod is adopted @ 09/02/25 07:52:43.788
  STEP: When the matched label of one of its pods change @ 09/02/25 07:52:44.807
  I0902 07:52:44.816133 18 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/02/25 07:52:44.866
  I0902 07:52:45.901057 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3976" for this suite. @ 09/02/25 07:52:45.918
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/02/25 07:52:45.936
  I0902 07:52:45.937245 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 07:52:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:46.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:46.021
  STEP: Creating an indexed job with successPolicy @ 09/02/25 07:52:46.027
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/02/25 07:52:46.062
  STEP: Ensure that the job reaches completions @ 09/02/25 07:52:52.179
  STEP: Verifying that the job status to ensure correct final state @ 09/02/25 07:52:52.209
  I0902 07:52:52.228979 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4736" for this suite. @ 09/02/25 07:52:52.266
• [6.351 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 09/02/25 07:52:52.288
  I0902 07:52:52.288162 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:52:52.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:52.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:52.359
  I0902 07:52:52.366614 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 create -f -'
  I0902 07:52:52.814228 18 builder.go:146] stderr: ""
  I0902 07:52:52.814405 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0902 07:52:52.815153 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 create -f -'
  I0902 07:52:53.612345 18 builder.go:146] stderr: ""
  I0902 07:52:53.612447 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 07:52:53.612
  I0902 07:52:54.631424 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:52:54.631513 18 framework.go:733] Found 1 / 1
  I0902 07:52:54.631589 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0902 07:52:54.640026 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:52:54.640112 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 07:52:54.640481 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 describe pod agnhost-primary-wqdcv'
  I0902 07:52:55.173443 18 builder.go:146] stderr: ""
  I0902 07:52:55.173890 18 builder.go:147] stdout: "Name:             agnhost-primary-wqdcv\nNamespace:        kubectl-1871\nPriority:         0\nService Account:  default\nNode:             ahkoog9eunoh-2/192.168.121.238\nStart Time:       Tue, 02 Sep 2025 07:52:52 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.64.113\nIPs:\n  IP:           10.233.64.113\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://d1d05d36c734864bacd7ddaba6ec10fb0b4b53adc0805a5737056b20a83df3cf\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 02 Sep 2025 07:52:53 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-9czs5 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-9czs5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-1871/agnhost-primary-wqdcv to ahkoog9eunoh-2\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0902 07:52:55.174200 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 describe rc agnhost-primary'
  I0902 07:52:55.529934 18 builder.go:146] stderr: ""
  I0902 07:52:55.530138 18 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1871\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-wqdcv\n"
  I0902 07:52:55.531954 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 describe service agnhost-primary'
  I0902 07:52:55.839228 18 builder.go:146] stderr: ""
  I0902 07:52:55.839514 18 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1871\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.39.162\nIPs:                      10.233.39.162\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.64.113:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0902 07:52:55.859255 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 describe node ahkoog9eunoh-1'
  I0902 07:52:56.329909 18 builder.go:146] stderr: ""
  I0902 07:52:56.330208 18 builder.go:147] stdout: "Name:               ahkoog9eunoh-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ahkoog9eunoh-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 02 Sep 2025 06:49:32 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ahkoog9eunoh-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 02 Sep 2025 07:52:48 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 02 Sep 2025 07:08:53 +0000   Tue, 02 Sep 2025 07:08:53 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Tue, 02 Sep 2025 07:49:17 +0000   Tue, 02 Sep 2025 07:02:51 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 02 Sep 2025 07:49:17 +0000   Tue, 02 Sep 2025 07:02:51 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 02 Sep 2025 07:49:17 +0000   Tue, 02 Sep 2025 07:02:51 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 02 Sep 2025 07:49:17 +0000   Tue, 02 Sep 2025 07:07:40 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.25\n  Hostname:    ahkoog9eunoh-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8133132Ki\n  pods:               256\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283468Ki\n  pods:               256\nSystem Info:\n  Machine ID:                 7717cdeacbfc4f31aaf025dcbfad426d\n  System UUID:                7717cdea-cbfc-4f31-aaf0-25dcbfad426d\n  Boot ID:                    ffc5b85d-961f-4308-8522-847977fd8f2f\n  Kernel Version:             6.14.0-29-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.33.4\n  Kubelet Version:            v1.33.4\n  Kube-Proxy Version:         \nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-jhvxm                                               100m (6%)     0 (0%)      10Mi (0%)        0 (0%)         55m\n  kube-system                 cilium-node-init-j6hbf                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         55m\n  kube-system                 kube-apiserver-ahkoog9eunoh-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         63m\n  kube-system                 kube-controller-manager-ahkoog9eunoh-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         63m\n  kube-system                 kube-proxy-6snpl                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         63m\n  kube-system                 kube-scheduler-ahkoog9eunoh-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         63m\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         23m\n  sonobuoy                    sonobuoy-e2e-job-898f82e033984cdd                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                750m (46%)  0 (0%)\n  memory             110Mi (3%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 63m                kube-proxy       \n  Normal   Starting                 46m                kube-proxy       \n  Normal   NodeHasNoDiskPressure    63m (x8 over 63m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  63m (x8 over 63m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     63m (x7 over 63m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  63m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeAllocatableEnforced  63m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 63m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  63m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    63m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     63m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           63m                node-controller  Node ahkoog9eunoh-1 event: Registered Node ahkoog9eunoh-1 in Controller\n  Normal   NodeHasSufficientPID     56m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n  Normal   Starting                 56m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  56m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  56m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    56m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 51m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  51m (x8 over 51m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    51m (x8 over 51m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     51m (x7 over 51m)  kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  51m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           51m                node-controller  Node ahkoog9eunoh-1 event: Registered Node ahkoog9eunoh-1 in Controller\n  Warning  Rebooted                 50m                kubelet          Node ahkoog9eunoh-1 has been rebooted, boot id: ffc5b85d-961f-4308-8522-847977fd8f2f\n  Normal   RegisteredNode           45m                node-controller  Node ahkoog9eunoh-1 event: Registered Node ahkoog9eunoh-1 in Controller\n  Normal   NodeReady                45m                kubelet          Node ahkoog9eunoh-1 status is now: NodeReady\n  Normal   Starting                 32m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  32m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n  Normal   Starting                 32m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  32m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     32m                kubelet          Node ahkoog9eunoh-1 status is now: NodeHasSufficientPID\n"
  I0902 07:52:56.388951 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-1871 describe namespace kubectl-1871'
  I0902 07:52:56.920095 18 builder.go:146] stderr: ""
  I0902 07:52:56.920210 18 builder.go:147] stdout: "Name:         kubectl-1871\nLabels:       e2e-framework=kubectl\n              e2e-run=a4045718-28a9-446b-aff0-dbf2a3f6f45e\n              kubernetes.io/metadata.name=kubectl-1871\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0902 07:52:56.920537 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1871" for this suite. @ 09/02/25 07:52:56.936
• [4.670 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 09/02/25 07:52:56.959
  I0902 07:52:56.959396 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename proxy @ 09/02/25 07:52:56.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:52:57.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:52:57.041
  I0902 07:52:57.048126 18 proxy.go:430] Creating pod...
  I0902 07:53:03.170293 18 proxy.go:454] Creating service...
  I0902 07:53:03.228392 18 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=DELETE
  I0902 07:53:03.301880 18 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 07:53:03.302164 18 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=OPTIONS
  I0902 07:53:03.310520 18 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 07:53:03.310821 18 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=PATCH
  I0902 07:53:03.326383 18 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 07:53:03.326472 18 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=POST
  I0902 07:53:03.333446 18 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 07:53:03.333540 18 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=PUT
  I0902 07:53:03.343427 18 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 07:53:03.343533 18 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=DELETE
  I0902 07:53:03.382738 18 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 07:53:03.382827 18 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0902 07:53:03.428052 18 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 07:53:03.428316 18 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=PATCH
  I0902 07:53:03.440401 18 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 07:53:03.440481 18 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=POST
  I0902 07:53:03.451182 18 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 07:53:03.451247 18 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=PUT
  I0902 07:53:03.464206 18 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 07:53:03.464329 18 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=GET
  I0902 07:53:03.470650 18 proxy.go:530] http.Client request:GET StatusCode:301
  I0902 07:53:03.470710 18 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=GET
  I0902 07:53:03.478065 18 proxy.go:530] http.Client request:GET StatusCode:301
  I0902 07:53:03.478128 18 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/pods/agnhost/proxy?method=HEAD
  I0902 07:53:03.484074 18 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0902 07:53:03.484415 18 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1003/services/e2e-proxy-test-service/proxy?method=HEAD
  I0902 07:53:03.491914 18 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0902 07:53:03.492139 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1003" for this suite. @ 09/02/25 07:53:03.509
• [6.608 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/02/25 07:53:03.567
  I0902 07:53:03.568152 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:53:03.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:03.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:03.611
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:53:03.642
  STEP: Saw pod success @ 09/02/25 07:53:07.779
  I0902 07:53:07.808032 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-b70e9767-53ab-44bc-be9f-fed24d3803c3 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:53:07.851
  I0902 07:53:07.912895 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8603" for this suite. @ 09/02/25 07:53:07.927
• [4.371 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/02/25 07:53:07.939
  I0902 07:53:07.939981 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 07:53:07.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:08.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:08.03
  STEP: Creating a test namespace @ 09/02/25 07:53:08.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:08.169
  STEP: Creating a pod in the namespace @ 09/02/25 07:53:08.176
  STEP: Waiting for the pod to have running status @ 09/02/25 07:53:08.244
  STEP: Deleting the namespace @ 09/02/25 07:53:12.28
  STEP: Waiting for the namespace to be removed. @ 09/02/25 07:53:12.295
  STEP: Recreating the namespace @ 09/02/25 07:53:24.304
  STEP: Verifying there are no pods in the namespace @ 09/02/25 07:53:24.351
  I0902 07:53:24.358180 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4016" for this suite. @ 09/02/25 07:53:24.367
  STEP: Destroying namespace "nsdeletetest-4532" for this suite. @ 09/02/25 07:53:24.39
  I0902 07:53:24.454855 18 framework.go:370] Namespace nsdeletetest-4532 was already deleted
  STEP: Destroying namespace "nsdeletetest-9376" for this suite. @ 09/02/25 07:53:24.454
• [16.545 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/02/25 07:53:24.485
  I0902 07:53:24.485230 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svc-latency @ 09/02/25 07:53:24.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:24.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:24.519
  I0902 07:53:24.525258 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 07:53:24.590398 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0902 07:53:26.618728      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:53:26.655703      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:53:26.797947 18 service_latency.go:351] Created: latency-svc-z6l67
  I0902 07:53:26.817866 18 service_latency.go:358] Got endpoints: latency-svc-z6l67 [102.697986ms]
  I0902 07:53:26.932734 18 service_latency.go:351] Created: latency-svc-rv6kr
  I0902 07:53:26.945805 18 service_latency.go:358] Got endpoints: latency-svc-rv6kr [123.566301ms]
  I0902 07:53:26.989605 18 service_latency.go:351] Created: latency-svc-lr4cj
  I0902 07:53:26.989918 18 service_latency.go:351] Created: latency-svc-xw56p
  I0902 07:53:26.989975 18 service_latency.go:358] Got endpoints: latency-svc-xw56p [164.679683ms]
  I0902 07:53:26.990260 18 service_latency.go:358] Got endpoints: latency-svc-lr4cj [165.765766ms]
  I0902 07:53:27.032388 18 service_latency.go:351] Created: latency-svc-7pdkl
  I0902 07:53:27.091300 18 service_latency.go:351] Created: latency-svc-lnv4n
  I0902 07:53:27.159213 18 service_latency.go:358] Got endpoints: latency-svc-7pdkl [333.508424ms]
  I0902 07:53:27.160199 18 service_latency.go:358] Got endpoints: latency-svc-lnv4n [334.714337ms]
  I0902 07:53:27.174855 18 service_latency.go:351] Created: latency-svc-pf9tl
  I0902 07:53:27.187252 18 service_latency.go:351] Created: latency-svc-p696z
  I0902 07:53:27.233894 18 service_latency.go:358] Got endpoints: latency-svc-pf9tl [408.023177ms]
  I0902 07:53:27.249100 18 service_latency.go:351] Created: latency-svc-cgjbx
  I0902 07:53:27.268131 18 service_latency.go:358] Got endpoints: latency-svc-p696z [442.071044ms]
  I0902 07:53:27.280288 18 service_latency.go:358] Got endpoints: latency-svc-cgjbx [453.917613ms]
  I0902 07:53:27.281708 18 service_latency.go:351] Created: latency-svc-grkm9
  I0902 07:53:27.320087 18 service_latency.go:358] Got endpoints: latency-svc-grkm9 [493.842891ms]
  I0902 07:53:27.324609 18 service_latency.go:351] Created: latency-svc-22qb2
  I0902 07:53:27.394145 18 service_latency.go:358] Got endpoints: latency-svc-22qb2 [567.427325ms]
  I0902 07:53:27.410535 18 service_latency.go:351] Created: latency-svc-x5tml
  I0902 07:53:27.410688 18 service_latency.go:351] Created: latency-svc-m22xj
  I0902 07:53:27.455335 18 service_latency.go:351] Created: latency-svc-pgcr7
  I0902 07:53:27.455474 18 service_latency.go:358] Got endpoints: latency-svc-m22xj [628.032791ms]
  I0902 07:53:27.455991 18 service_latency.go:358] Got endpoints: latency-svc-x5tml [628.849896ms]
  I0902 07:53:27.504156 18 service_latency.go:358] Got endpoints: latency-svc-pgcr7 [675.254663ms]
  I0902 07:53:27.523241 18 service_latency.go:351] Created: latency-svc-h5xkz
  I0902 07:53:27.567757 18 service_latency.go:358] Got endpoints: latency-svc-h5xkz [738.299399ms]
  I0902 07:53:27.569720 18 service_latency.go:351] Created: latency-svc-kpb6g
  I0902 07:53:27.571490 18 service_latency.go:351] Created: latency-svc-msz57
  I0902 07:53:27.596293 18 service_latency.go:358] Got endpoints: latency-svc-kpb6g [140.766946ms]
  I0902 07:53:27.603993 18 service_latency.go:358] Got endpoints: latency-svc-msz57 [775.137461ms]
  I0902 07:53:27.611110 18 service_latency.go:351] Created: latency-svc-tmqft
  I0902 07:53:27.712341 18 service_latency.go:351] Created: latency-svc-87tkh
  I0902 07:53:27.713011 18 service_latency.go:358] Got endpoints: latency-svc-87tkh [722.998568ms]
  I0902 07:53:27.713068 18 service_latency.go:351] Created: latency-svc-x6hg7
  I0902 07:53:27.713117 18 service_latency.go:358] Got endpoints: latency-svc-x6hg7 [722.817119ms]
  I0902 07:53:27.716119 18 service_latency.go:358] Got endpoints: latency-svc-tmqft [260.040929ms]
  I0902 07:53:27.752494 18 service_latency.go:351] Created: latency-svc-tvdrg
  I0902 07:53:27.762261 18 service_latency.go:358] Got endpoints: latency-svc-tvdrg [602.843341ms]
  I0902 07:53:27.783027 18 service_latency.go:351] Created: latency-svc-8kgrh
  I0902 07:53:27.856031 18 service_latency.go:358] Got endpoints: latency-svc-8kgrh [695.781671ms]
  I0902 07:53:27.856559 18 service_latency.go:351] Created: latency-svc-rxm56
  I0902 07:53:27.907318 18 service_latency.go:351] Created: latency-svc-kf2s9
  I0902 07:53:27.938545 18 service_latency.go:358] Got endpoints: latency-svc-rxm56 [704.06376ms]
  I0902 07:53:27.999293 18 service_latency.go:351] Created: latency-svc-tb9bv
  I0902 07:53:28.040900 18 service_latency.go:358] Got endpoints: latency-svc-kf2s9 [772.685502ms]
  I0902 07:53:28.042451 18 service_latency.go:351] Created: latency-svc-nqhbr
  I0902 07:53:28.057440 18 service_latency.go:358] Got endpoints: latency-svc-tb9bv [777.019799ms]
  I0902 07:53:28.067696 18 service_latency.go:358] Got endpoints: latency-svc-nqhbr [747.454109ms]
  I0902 07:53:28.145461 18 service_latency.go:351] Created: latency-svc-9f78l
  I0902 07:53:28.145586 18 service_latency.go:351] Created: latency-svc-xxnpv
  I0902 07:53:28.204053 18 service_latency.go:358] Got endpoints: latency-svc-xxnpv [807.271081ms]
  I0902 07:53:28.204122 18 service_latency.go:351] Created: latency-svc-d4c9t
  I0902 07:53:28.204258 18 service_latency.go:358] Got endpoints: latency-svc-9f78l [1.243000605s]
  I0902 07:53:28.355571 18 service_latency.go:358] Got endpoints: latency-svc-d4c9t [851.138105ms]
  I0902 07:53:28.355444 18 service_latency.go:351] Created: latency-svc-7csps
  I0902 07:53:28.359556 18 service_latency.go:358] Got endpoints: latency-svc-7csps [791.667576ms]
  I0902 07:53:28.356089 18 service_latency.go:351] Created: latency-svc-9h2j2
  I0902 07:53:28.386543 18 service_latency.go:351] Created: latency-svc-85hsd
  I0902 07:53:28.386694 18 service_latency.go:358] Got endpoints: latency-svc-9h2j2 [790.306827ms]
  I0902 07:53:28.420288 18 service_latency.go:358] Got endpoints: latency-svc-85hsd [816.061686ms]
  I0902 07:53:28.503445 18 service_latency.go:351] Created: latency-svc-5t7fc
  I0902 07:53:28.511870 18 service_latency.go:358] Got endpoints: latency-svc-5t7fc [798.571598ms]
  I0902 07:53:28.580864 18 service_latency.go:351] Created: latency-svc-r2pfj
  I0902 07:53:28.581819 18 service_latency.go:358] Got endpoints: latency-svc-r2pfj [865.382226ms]
  I0902 07:53:28.588320 18 service_latency.go:351] Created: latency-svc-fbl7b
  I0902 07:53:28.643465 18 service_latency.go:358] Got endpoints: latency-svc-fbl7b [930.305692ms]
  I0902 07:53:28.678896 18 service_latency.go:351] Created: latency-svc-qsmq8
  I0902 07:53:28.704864 18 service_latency.go:358] Got endpoints: latency-svc-qsmq8 [942.474857ms]
  I0902 07:53:28.762402 18 service_latency.go:351] Created: latency-svc-jxdgs
  I0902 07:53:28.777457 18 service_latency.go:351] Created: latency-svc-t9pj5
  I0902 07:53:28.816347 18 service_latency.go:358] Got endpoints: latency-svc-jxdgs [960.228507ms]
  I0902 07:53:28.817813 18 service_latency.go:358] Got endpoints: latency-svc-t9pj5 [879.159273ms]
  I0902 07:53:28.840895 18 service_latency.go:351] Created: latency-svc-hll7v
  I0902 07:53:28.851887 18 service_latency.go:358] Got endpoints: latency-svc-hll7v [810.903117ms]
  I0902 07:53:28.887611 18 service_latency.go:351] Created: latency-svc-zl7rp
  I0902 07:53:28.922335 18 service_latency.go:358] Got endpoints: latency-svc-zl7rp [864.760771ms]
  I0902 07:53:28.949530 18 service_latency.go:351] Created: latency-svc-xk8xh
  I0902 07:53:28.991684 18 service_latency.go:351] Created: latency-svc-72kf6
  I0902 07:53:28.992411 18 service_latency.go:358] Got endpoints: latency-svc-xk8xh [924.568205ms]
  I0902 07:53:29.016506 18 service_latency.go:351] Created: latency-svc-qq224
  I0902 07:53:29.043272 18 service_latency.go:358] Got endpoints: latency-svc-72kf6 [839.09116ms]
  I0902 07:53:29.066416 18 service_latency.go:358] Got endpoints: latency-svc-qq224 [862.114005ms]
  I0902 07:53:29.068715 18 service_latency.go:351] Created: latency-svc-nclfg
  I0902 07:53:29.112003 18 service_latency.go:358] Got endpoints: latency-svc-nclfg [755.684738ms]
  I0902 07:53:29.112714 18 service_latency.go:351] Created: latency-svc-2l9xw
  I0902 07:53:29.144990 18 service_latency.go:358] Got endpoints: latency-svc-2l9xw [785.380141ms]
  I0902 07:53:29.145547 18 service_latency.go:351] Created: latency-svc-kbw6h
  I0902 07:53:29.187783 18 service_latency.go:358] Got endpoints: latency-svc-kbw6h [801.04086ms]
  I0902 07:53:29.190937 18 service_latency.go:351] Created: latency-svc-4bk44
  I0902 07:53:29.191344 18 service_latency.go:351] Created: latency-svc-hdb6v
  I0902 07:53:29.191461 18 service_latency.go:358] Got endpoints: latency-svc-4bk44 [770.867702ms]
  I0902 07:53:29.215341 18 service_latency.go:351] Created: latency-svc-grm6j
  I0902 07:53:29.331301 18 service_latency.go:358] Got endpoints: latency-svc-grm6j [749.433233ms]
  I0902 07:53:29.341308 18 service_latency.go:358] Got endpoints: latency-svc-hdb6v [829.353191ms]
  I0902 07:53:29.359723 18 service_latency.go:351] Created: latency-svc-lgmg4
  I0902 07:53:29.359911 18 service_latency.go:358] Got endpoints: latency-svc-lgmg4 [543.4782ms]
  I0902 07:53:29.361690 18 service_latency.go:351] Created: latency-svc-d9h5m
  I0902 07:53:29.361745 18 service_latency.go:358] Got endpoints: latency-svc-d9h5m [656.789955ms]
  I0902 07:53:29.361917 18 service_latency.go:351] Created: latency-svc-h5l9b
  I0902 07:53:29.374431 18 service_latency.go:351] Created: latency-svc-k5q7b
  I0902 07:53:29.374501 18 service_latency.go:358] Got endpoints: latency-svc-k5q7b [730.955803ms]
  I0902 07:53:29.393739 18 service_latency.go:358] Got endpoints: latency-svc-h5l9b [575.742332ms]
  I0902 07:53:29.400087 18 service_latency.go:351] Created: latency-svc-frsn4
  I0902 07:53:29.473383 18 service_latency.go:358] Got endpoints: latency-svc-frsn4 [621.418791ms]
  I0902 07:53:29.476970 18 service_latency.go:351] Created: latency-svc-f8nmg
  I0902 07:53:29.492334 18 service_latency.go:358] Got endpoints: latency-svc-f8nmg [569.907438ms]
  I0902 07:53:29.503671 18 service_latency.go:351] Created: latency-svc-z7tc5
  I0902 07:53:29.535911 18 service_latency.go:358] Got endpoints: latency-svc-z7tc5 [543.425282ms]
  I0902 07:53:29.538264 18 service_latency.go:351] Created: latency-svc-tfqcm
  I0902 07:53:29.540873 18 service_latency.go:358] Got endpoints: latency-svc-tfqcm [474.367122ms]
  I0902 07:53:29.623391 18 service_latency.go:351] Created: latency-svc-p2clz
  I0902 07:53:29.654164 18 service_latency.go:358] Got endpoints: latency-svc-p2clz [610.471304ms]
  I0902 07:53:29.733716 18 service_latency.go:351] Created: latency-svc-f8zcp
  I0902 07:53:29.734057 18 service_latency.go:358] Got endpoints: latency-svc-f8zcp [621.970379ms]
  I0902 07:53:29.779341 18 service_latency.go:351] Created: latency-svc-pnkjc
  I0902 07:53:29.883037 18 service_latency.go:351] Created: latency-svc-2qbmj
  I0902 07:53:29.883142 18 service_latency.go:358] Got endpoints: latency-svc-2qbmj [694.982932ms]
  I0902 07:53:29.883578 18 service_latency.go:358] Got endpoints: latency-svc-pnkjc [738.510585ms]
  I0902 07:53:29.923974 18 service_latency.go:351] Created: latency-svc-k5j29
  I0902 07:53:29.986409 18 service_latency.go:351] Created: latency-svc-q4cgw
  I0902 07:53:29.995657 18 service_latency.go:358] Got endpoints: latency-svc-k5j29 [804.099064ms]
  I0902 07:53:30.129754 18 service_latency.go:351] Created: latency-svc-7zxzx
  I0902 07:53:30.137503 18 service_latency.go:351] Created: latency-svc-npsrr
  I0902 07:53:30.138277 18 service_latency.go:358] Got endpoints: latency-svc-npsrr [796.863823ms]
  I0902 07:53:30.139153 18 service_latency.go:358] Got endpoints: latency-svc-7zxzx [779.139048ms]
  I0902 07:53:30.137974 18 service_latency.go:358] Got endpoints: latency-svc-q4cgw [806.537863ms]
  I0902 07:53:30.209828 18 service_latency.go:351] Created: latency-svc-84s6q
  I0902 07:53:30.258076 18 service_latency.go:358] Got endpoints: latency-svc-84s6q [883.534653ms]
  I0902 07:53:30.258737 18 service_latency.go:351] Created: latency-svc-8s7cd
  I0902 07:53:30.356037 18 service_latency.go:351] Created: latency-svc-x5rnw
  I0902 07:53:30.356340 18 service_latency.go:358] Got endpoints: latency-svc-8s7cd [994.56269ms]
  I0902 07:53:30.501390 18 service_latency.go:358] Got endpoints: latency-svc-x5rnw [1.106030085s]
  I0902 07:53:30.501504 18 service_latency.go:351] Created: latency-svc-q7qhl
  I0902 07:53:30.502422 18 service_latency.go:351] Created: latency-svc-qks5v
  I0902 07:53:30.502797 18 service_latency.go:351] Created: latency-svc-dt267
  I0902 07:53:30.502988 18 service_latency.go:351] Created: latency-svc-vkz5v
  I0902 07:53:30.520300 18 service_latency.go:358] Got endpoints: latency-svc-q7qhl [1.027769519s]
  I0902 07:53:30.536950 18 service_latency.go:358] Got endpoints: latency-svc-vkz5v [1.063477184s]
  I0902 07:53:30.607776 18 service_latency.go:358] Got endpoints: latency-svc-qks5v [1.065696685s]
  I0902 07:53:30.614396 18 service_latency.go:351] Created: latency-svc-sp9v2
  I0902 07:53:30.651471 18 service_latency.go:358] Got endpoints: latency-svc-dt267 [1.115223621s]
  I0902 07:53:30.675747 18 service_latency.go:351] Created: latency-svc-p48np
  I0902 07:53:30.677489 18 service_latency.go:358] Got endpoints: latency-svc-sp9v2 [1.022732525s]
  I0902 07:53:30.679992 18 service_latency.go:351] Created: latency-svc-8gg78
  I0902 07:53:30.715600 18 service_latency.go:358] Got endpoints: latency-svc-8gg78 [832.416591ms]
  I0902 07:53:30.715749 18 service_latency.go:358] Got endpoints: latency-svc-p48np [981.578862ms]
  I0902 07:53:30.742114 18 service_latency.go:351] Created: latency-svc-btnl4
  I0902 07:53:30.787583 18 service_latency.go:358] Got endpoints: latency-svc-btnl4 [903.960093ms]
  I0902 07:53:30.860497 18 service_latency.go:351] Created: latency-svc-6jhd4
  I0902 07:53:30.861437 18 service_latency.go:351] Created: latency-svc-llfww
  I0902 07:53:30.861703 18 service_latency.go:351] Created: latency-svc-rrnm4
  I0902 07:53:30.861941 18 service_latency.go:358] Got endpoints: latency-svc-6jhd4 [864.001364ms]
  I0902 07:53:30.891238 18 service_latency.go:358] Got endpoints: latency-svc-llfww [751.732584ms]
  I0902 07:53:30.940246 18 service_latency.go:358] Got endpoints: latency-svc-rrnm4 [801.314077ms]
  I0902 07:53:30.975085 18 service_latency.go:351] Created: latency-svc-rnfgd
  I0902 07:53:31.058711 18 service_latency.go:351] Created: latency-svc-b5btl
  I0902 07:53:31.124122 18 service_latency.go:358] Got endpoints: latency-svc-rnfgd [984.433482ms]
  I0902 07:53:31.143927 18 service_latency.go:358] Got endpoints: latency-svc-b5btl [885.74482ms]
  I0902 07:53:31.284656 18 service_latency.go:351] Created: latency-svc-dg66f
  I0902 07:53:31.284803 18 service_latency.go:358] Got endpoints: latency-svc-dg66f [916.015455ms]
  I0902 07:53:31.289601 18 service_latency.go:351] Created: latency-svc-nb6c8
  I0902 07:53:31.313930 18 service_latency.go:351] Created: latency-svc-wf629
  I0902 07:53:31.321711 18 service_latency.go:358] Got endpoints: latency-svc-nb6c8 [818.596141ms]
  I0902 07:53:31.427946 18 service_latency.go:351] Created: latency-svc-b8s9l
  I0902 07:53:31.430266 18 service_latency.go:358] Got endpoints: latency-svc-b8s9l [893.23399ms]
  I0902 07:53:31.429992 18 service_latency.go:358] Got endpoints: latency-svc-wf629 [909.605718ms]
  I0902 07:53:31.855279 18 service_latency.go:351] Created: latency-svc-8zvtt
  I0902 07:53:31.855377 18 service_latency.go:351] Created: latency-svc-lbffq
  I0902 07:53:31.855460 18 service_latency.go:351] Created: latency-svc-w6csp
  I0902 07:53:31.855540 18 service_latency.go:351] Created: latency-svc-vnn9m
  I0902 07:53:31.875138 18 service_latency.go:351] Created: latency-svc-mn8zx
  I0902 07:53:31.875543 18 service_latency.go:351] Created: latency-svc-hwjc2
  I0902 07:53:31.890413 18 service_latency.go:351] Created: latency-svc-m4xfl
  I0902 07:53:31.890583 18 service_latency.go:351] Created: latency-svc-9lkxh
  I0902 07:53:31.890705 18 service_latency.go:351] Created: latency-svc-dcqxq
  I0902 07:53:31.890765 18 service_latency.go:351] Created: latency-svc-kwwxk
  I0902 07:53:31.890877 18 service_latency.go:351] Created: latency-svc-k22sf
  I0902 07:53:31.890954 18 service_latency.go:351] Created: latency-svc-dsrfn
  I0902 07:53:31.891320 18 service_latency.go:351] Created: latency-svc-qsl5g
  I0902 07:53:31.891381 18 service_latency.go:351] Created: latency-svc-7dct7
  I0902 07:53:31.891427 18 service_latency.go:351] Created: latency-svc-lnjns
  I0902 07:53:31.911120 18 service_latency.go:358] Got endpoints: latency-svc-vnn9m [666.3699ms]
  I0902 07:53:31.937066 18 service_latency.go:358] Got endpoints: latency-svc-9lkxh [506.312714ms]
  I0902 07:53:31.937472 18 service_latency.go:358] Got endpoints: latency-svc-m4xfl [1.221669645s]
  I0902 07:53:31.947901 18 service_latency.go:358] Got endpoints: latency-svc-dcqxq [1.085858879s]
  I0902 07:53:31.955884 18 service_latency.go:358] Got endpoints: latency-svc-hwjc2 [1.06456213s]
  I0902 07:53:31.956558 18 service_latency.go:358] Got endpoints: latency-svc-kwwxk [751.440291ms]
  I0902 07:53:31.976527 18 service_latency.go:358] Got endpoints: latency-svc-mn8zx [1.036005075s]
  I0902 07:53:32.006393 18 service_latency.go:358] Got endpoints: latency-svc-w6csp [1.328836158s]
  I0902 07:53:32.035697 18 service_latency.go:358] Got endpoints: latency-svc-lbffq [604.631263ms]
  I0902 07:53:32.114234 18 service_latency.go:358] Got endpoints: latency-svc-7dct7 [1.462128892s]
  I0902 07:53:32.114769 18 service_latency.go:358] Got endpoints: latency-svc-dsrfn [1.506512827s]
  I0902 07:53:32.115131 18 service_latency.go:358] Got endpoints: latency-svc-lnjns [684.82641ms]
  I0902 07:53:32.191135 18 service_latency.go:358] Got endpoints: latency-svc-qsl5g [906.228557ms]
  I0902 07:53:32.205917 18 service_latency.go:358] Got endpoints: latency-svc-8zvtt [1.490107696s]
  I0902 07:53:32.237975 18 service_latency.go:358] Got endpoints: latency-svc-k22sf [1.450268509s]
  I0902 07:53:32.264721 18 service_latency.go:351] Created: latency-svc-c2wfc
  I0902 07:53:32.289783 18 service_latency.go:358] Got endpoints: latency-svc-c2wfc [378.568437ms]
  I0902 07:53:32.372188 18 service_latency.go:351] Created: latency-svc-n5vzh
  I0902 07:53:32.372324 18 service_latency.go:358] Got endpoints: latency-svc-n5vzh [435.190046ms]
  I0902 07:53:32.512988 18 service_latency.go:351] Created: latency-svc-7vq79
  I0902 07:53:32.560507 18 service_latency.go:358] Got endpoints: latency-svc-7vq79 [622.989336ms]
  I0902 07:53:32.576402 18 service_latency.go:351] Created: latency-svc-p9h8j
  I0902 07:53:32.586491 18 service_latency.go:358] Got endpoints: latency-svc-p9h8j [630.536422ms]
  I0902 07:53:32.642041 18 service_latency.go:351] Created: latency-svc-bx4g4
  I0902 07:53:32.674708 18 service_latency.go:358] Got endpoints: latency-svc-bx4g4 [718.103909ms]
  I0902 07:53:32.675425 18 service_latency.go:351] Created: latency-svc-dkv6l
  I0902 07:53:32.689732 18 service_latency.go:358] Got endpoints: latency-svc-dkv6l [739.544014ms]
  I0902 07:53:32.783825 18 service_latency.go:351] Created: latency-svc-6vpxw
  I0902 07:53:32.787405 18 service_latency.go:351] Created: latency-svc-gbvm6
  I0902 07:53:32.814783 18 service_latency.go:358] Got endpoints: latency-svc-gbvm6 [837.603923ms]
  I0902 07:53:32.832229 18 service_latency.go:358] Got endpoints: latency-svc-6vpxw [818.665644ms]
  I0902 07:53:32.832459 18 service_latency.go:351] Created: latency-svc-5svwf
  I0902 07:53:32.857599 18 service_latency.go:358] Got endpoints: latency-svc-5svwf [817.867344ms]
  I0902 07:53:32.969236 18 service_latency.go:351] Created: latency-svc-pskft
  I0902 07:53:32.996464 18 service_latency.go:351] Created: latency-svc-jgkc5
  I0902 07:53:33.011243 18 service_latency.go:358] Got endpoints: latency-svc-pskft [896.415547ms]
  I0902 07:53:33.032199 18 service_latency.go:358] Got endpoints: latency-svc-jgkc5 [917.875739ms]
  I0902 07:53:33.032818 18 service_latency.go:351] Created: latency-svc-md6tn
  I0902 07:53:33.079030 18 service_latency.go:358] Got endpoints: latency-svc-md6tn [887.817926ms]
  I0902 07:53:33.101974 18 service_latency.go:351] Created: latency-svc-dpjz5
  I0902 07:53:33.140016 18 service_latency.go:358] Got endpoints: latency-svc-dpjz5 [1.024839263s]
  I0902 07:53:33.168288 18 service_latency.go:351] Created: latency-svc-m5p2d
  I0902 07:53:33.192216 18 service_latency.go:358] Got endpoints: latency-svc-m5p2d [985.559718ms]
  I0902 07:53:33.237334 18 service_latency.go:351] Created: latency-svc-lxtg4
  I0902 07:53:33.273818 18 service_latency.go:358] Got endpoints: latency-svc-lxtg4 [1.035674051s]
  I0902 07:53:33.281489 18 service_latency.go:351] Created: latency-svc-nftms
  I0902 07:53:33.324055 18 service_latency.go:351] Created: latency-svc-gg9pw
  I0902 07:53:33.324606 18 service_latency.go:358] Got endpoints: latency-svc-nftms [1.034720214s]
  I0902 07:53:33.334143 18 service_latency.go:358] Got endpoints: latency-svc-gg9pw [961.780618ms]
  I0902 07:53:33.392396 18 service_latency.go:351] Created: latency-svc-x9zhc
  I0902 07:53:33.425199 18 service_latency.go:358] Got endpoints: latency-svc-x9zhc [864.401243ms]
  I0902 07:53:33.432872 18 service_latency.go:351] Created: latency-svc-mdpmt
  I0902 07:53:33.444228 18 service_latency.go:358] Got endpoints: latency-svc-mdpmt [857.65279ms]
  I0902 07:53:33.899436 18 service_latency.go:351] Created: latency-svc-2kd8x
  I0902 07:53:33.899541 18 service_latency.go:351] Created: latency-svc-9nz2q
  I0902 07:53:33.899592 18 service_latency.go:351] Created: latency-svc-kp9qc
  I0902 07:53:33.899678 18 service_latency.go:351] Created: latency-svc-jbx9n
  I0902 07:53:33.899737 18 service_latency.go:351] Created: latency-svc-5ps25
  I0902 07:53:33.984248 18 service_latency.go:351] Created: latency-svc-mpkbk
  I0902 07:53:33.984359 18 service_latency.go:351] Created: latency-svc-vpsq9
  I0902 07:53:33.984579 18 service_latency.go:351] Created: latency-svc-xmkvq
  I0902 07:53:33.984676 18 service_latency.go:351] Created: latency-svc-drnn7
  I0902 07:53:33.984734 18 service_latency.go:351] Created: latency-svc-gzdtq
  I0902 07:53:33.984780 18 service_latency.go:351] Created: latency-svc-dj6p6
  I0902 07:53:34.092885 18 service_latency.go:358] Got endpoints: latency-svc-jbx9n [1.417715739s]
  I0902 07:53:34.207048 18 service_latency.go:351] Created: latency-svc-tlcng
  I0902 07:53:34.211813 18 service_latency.go:358] Got endpoints: latency-svc-tlcng [887.082297ms]
  I0902 07:53:34.207581 18 service_latency.go:358] Got endpoints: latency-svc-mpkbk [782.282437ms]
  I0902 07:53:34.110159 18 service_latency.go:358] Got endpoints: latency-svc-5ps25 [1.295263318s]
  I0902 07:53:34.110176 18 service_latency.go:358] Got endpoints: latency-svc-2kd8x [1.09884789s]
  I0902 07:53:34.110187 18 service_latency.go:358] Got endpoints: latency-svc-kp9qc [831.171227ms]
  I0902 07:53:34.110196 18 service_latency.go:351] Created: latency-svc-cfbvt
  I0902 07:53:34.110287 18 service_latency.go:351] Created: latency-svc-kvw4t
  I0902 07:53:34.110123 18 service_latency.go:358] Got endpoints: latency-svc-9nz2q [917.715469ms]
  I0902 07:53:34.208935 18 service_latency.go:351] Created: latency-svc-8lv56
  I0902 07:53:34.211695 18 service_latency.go:358] Got endpoints: latency-svc-drnn7 [1.179411536s]
  I0902 07:53:34.211721 18 service_latency.go:358] Got endpoints: latency-svc-vpsq9 [877.510729ms]
  I0902 07:53:34.211771 18 service_latency.go:358] Got endpoints: latency-svc-dj6p6 [1.111056622s]
  I0902 07:53:34.211785 18 service_latency.go:358] Got endpoints: latency-svc-gzdtq [1.521986571s]
  I0902 07:53:34.211795 18 service_latency.go:358] Got endpoints: latency-svc-xmkvq [767.485556ms]
  I0902 07:53:34.319073 18 service_latency.go:358] Got endpoints: latency-svc-cfbvt [1.484246621s]
  I0902 07:53:34.320381 18 service_latency.go:358] Got endpoints: latency-svc-8lv56 [1.461391278s]
  I0902 07:53:34.325526 18 service_latency.go:358] Got endpoints: latency-svc-kvw4t [1.179326391s]
  I0902 07:53:34.352027 18 service_latency.go:351] Created: latency-svc-gvpws
  I0902 07:53:34.430124 18 service_latency.go:351] Created: latency-svc-qr2wp
  I0902 07:53:34.430290 18 service_latency.go:358] Got endpoints: latency-svc-gvpws [222.597801ms]
  I0902 07:53:34.499756 18 service_latency.go:358] Got endpoints: latency-svc-qr2wp [287.538351ms]
  I0902 07:53:34.531960 18 service_latency.go:351] Created: latency-svc-nqz44
  I0902 07:53:34.552340 18 service_latency.go:358] Got endpoints: latency-svc-nqz44 [334.05661ms]
  I0902 07:53:34.606054 18 service_latency.go:351] Created: latency-svc-dz8p9
  I0902 07:53:34.611442 18 service_latency.go:351] Created: latency-svc-474rx
  I0902 07:53:34.624205 18 service_latency.go:358] Got endpoints: latency-svc-dz8p9 [410.393044ms]
  I0902 07:53:34.646293 18 service_latency.go:351] Created: latency-svc-r76cj
  I0902 07:53:34.702234 18 service_latency.go:358] Got endpoints: latency-svc-r76cj [488.145978ms]
  I0902 07:53:34.703314 18 service_latency.go:358] Got endpoints: latency-svc-474rx [489.84388ms]
  I0902 07:53:34.732182 18 service_latency.go:351] Created: latency-svc-wnknq
  I0902 07:53:34.779540 18 service_latency.go:358] Got endpoints: latency-svc-wnknq [564.503244ms]
  I0902 07:53:34.779840 18 service_latency.go:351] Created: latency-svc-dmknl
  I0902 07:53:34.787557 18 service_latency.go:358] Got endpoints: latency-svc-dmknl [571.451026ms]
  I0902 07:53:34.853408 18 service_latency.go:351] Created: latency-svc-kvvf7
  I0902 07:53:34.861360 18 service_latency.go:351] Created: latency-svc-tbmzm
  I0902 07:53:34.862393 18 service_latency.go:358] Got endpoints: latency-svc-tbmzm [645.608034ms]
  I0902 07:53:34.895437 18 service_latency.go:358] Got endpoints: latency-svc-kvvf7 [678.233401ms]
  I0902 07:53:34.921231 18 service_latency.go:351] Created: latency-svc-wmkvs
  I0902 07:53:35.044400 18 service_latency.go:358] Got endpoints: latency-svc-wmkvs [827.015966ms]
  I0902 07:53:35.044846 18 service_latency.go:351] Created: latency-svc-zc2j7
  I0902 07:53:35.086550 18 service_latency.go:358] Got endpoints: latency-svc-zc2j7 [868.081918ms]
  I0902 07:53:35.119093 18 service_latency.go:351] Created: latency-svc-mbwbx
  I0902 07:53:35.201517 18 service_latency.go:358] Got endpoints: latency-svc-mbwbx [880.415977ms]
  I0902 07:53:35.225201 18 service_latency.go:351] Created: latency-svc-gp6ww
  I0902 07:53:35.295937 18 service_latency.go:358] Got endpoints: latency-svc-gp6ww [974.958664ms]
  I0902 07:53:35.318853 18 service_latency.go:351] Created: latency-svc-lw9pf
  I0902 07:53:35.327011 18 service_latency.go:358] Got endpoints: latency-svc-lw9pf [998.456786ms]
  I0902 07:53:35.409051 18 service_latency.go:351] Created: latency-svc-k4lgg
  I0902 07:53:35.409161 18 service_latency.go:351] Created: latency-svc-rktsq
  I0902 07:53:35.415549 18 service_latency.go:358] Got endpoints: latency-svc-rktsq [915.700713ms]
  I0902 07:53:35.415252 18 service_latency.go:358] Got endpoints: latency-svc-k4lgg [969.286872ms]
  I0902 07:53:35.549707 18 service_latency.go:351] Created: latency-svc-tk4s4
  I0902 07:53:35.551362 18 service_latency.go:351] Created: latency-svc-bgvmk
  I0902 07:53:35.551518 18 service_latency.go:358] Got endpoints: latency-svc-tk4s4 [999.09579ms]
  I0902 07:53:35.651819 18 service_latency.go:358] Got endpoints: latency-svc-bgvmk [1.010920442s]
  I0902 07:53:35.703556 18 service_latency.go:351] Created: latency-svc-d5g85
  I0902 07:53:35.732851 18 service_latency.go:358] Got endpoints: latency-svc-d5g85 [1.030518472s]
  I0902 07:53:35.733621 18 service_latency.go:351] Created: latency-svc-qvg5d
  I0902 07:53:35.748220 18 service_latency.go:358] Got endpoints: latency-svc-qvg5d [1.044028532s]
  I0902 07:53:35.755437 18 service_latency.go:351] Created: latency-svc-p8rz9
  I0902 07:53:35.832843 18 service_latency.go:358] Got endpoints: latency-svc-p8rz9 [1.05312067s]
  I0902 07:53:35.877346 18 service_latency.go:351] Created: latency-svc-9hr57
  I0902 07:53:35.881207 18 service_latency.go:351] Created: latency-svc-g5vh9
  I0902 07:53:35.881580 18 service_latency.go:358] Got endpoints: latency-svc-g5vh9 [1.01431989s]
  I0902 07:53:35.881404 18 service_latency.go:358] Got endpoints: latency-svc-9hr57 [1.093770606s]
  I0902 07:53:36.429345 18 service_latency.go:351] Created: latency-svc-5p8ln
  I0902 07:53:36.430064 18 service_latency.go:351] Created: latency-svc-s5c6z
  I0902 07:53:36.430161 18 service_latency.go:351] Created: latency-svc-4kq55
  I0902 07:53:36.430257 18 service_latency.go:351] Created: latency-svc-fbt4c
  I0902 07:53:36.433352 18 service_latency.go:351] Created: latency-svc-z4glj
  I0902 07:53:36.433940 18 service_latency.go:351] Created: latency-svc-vsjnk
  I0902 07:53:36.434011 18 service_latency.go:358] Got endpoints: latency-svc-vsjnk [552.34664ms]
  I0902 07:53:36.435561 18 service_latency.go:351] Created: latency-svc-d7vms
  I0902 07:53:36.435988 18 service_latency.go:351] Created: latency-svc-xm24m
  I0902 07:53:36.437510 18 service_latency.go:351] Created: latency-svc-4s4nn
  I0902 07:53:36.437824 18 service_latency.go:351] Created: latency-svc-fnczt
  I0902 07:53:36.437877 18 service_latency.go:351] Created: latency-svc-cjgfb
  I0902 07:53:36.450988 18 service_latency.go:358] Got endpoints: latency-svc-z4glj [568.130352ms]
  I0902 07:53:36.461427 18 service_latency.go:358] Got endpoints: latency-svc-xm24m [1.416938406s]
  I0902 07:53:36.461912 18 service_latency.go:358] Got endpoints: latency-svc-4s4nn [1.566389165s]
  I0902 07:53:36.486211 18 service_latency.go:351] Created: latency-svc-rhn58
  I0902 07:53:36.486357 18 service_latency.go:351] Created: latency-svc-bgvlz
  I0902 07:53:36.486425 18 service_latency.go:351] Created: latency-svc-cgxg9
  I0902 07:53:36.486478 18 service_latency.go:351] Created: latency-svc-gf6vh
  I0902 07:53:36.558973 18 service_latency.go:358] Got endpoints: latency-svc-fbt4c [1.352440898s]
  I0902 07:53:36.561397 18 service_latency.go:358] Got endpoints: latency-svc-fnczt [728.441104ms]
  I0902 07:53:36.562309 18 service_latency.go:358] Got endpoints: latency-svc-cjgfb [909.186868ms]
  I0902 07:53:36.563327 18 service_latency.go:358] Got endpoints: latency-svc-4kq55 [1.146008787s]
  I0902 07:53:36.564004 18 service_latency.go:358] Got endpoints: latency-svc-d7vms [1.236260724s]
  I0902 07:53:36.614866 18 service_latency.go:358] Got endpoints: latency-svc-5p8ln [1.063216817s]
  I0902 07:53:36.633856 18 service_latency.go:351] Created: latency-svc-2wldl
  I0902 07:53:36.633985 18 service_latency.go:358] Got endpoints: latency-svc-bgvlz [1.33795066s]
  I0902 07:53:36.634362 18 service_latency.go:358] Got endpoints: latency-svc-gf6vh [886.073021ms]
  I0902 07:53:36.634967 18 service_latency.go:358] Got endpoints: latency-svc-s5c6z [1.545995338s]
  I0902 07:53:36.635098 18 service_latency.go:358] Got endpoints: latency-svc-cgxg9 [902.181936ms]
  I0902 07:53:36.665935 18 service_latency.go:358] Got endpoints: latency-svc-2wldl [231.874864ms]
  I0902 07:53:36.692740 18 service_latency.go:358] Got endpoints: latency-svc-rhn58 [1.276346084s]
  I0902 07:53:36.696852 18 service_latency.go:351] Created: latency-svc-kff7w
  I0902 07:53:36.731105 18 service_latency.go:351] Created: latency-svc-6488r
  I0902 07:53:36.748295 18 service_latency.go:358] Got endpoints: latency-svc-6488r [286.792778ms]
  I0902 07:53:36.752996 18 service_latency.go:358] Got endpoints: latency-svc-kff7w [301.938186ms]
  I0902 07:53:36.868366 18 service_latency.go:351] Created: latency-svc-vbqzq
  I0902 07:53:36.870286 18 service_latency.go:358] Got endpoints: latency-svc-vbqzq [408.326346ms]
  I0902 07:53:36.872387 18 service_latency.go:351] Created: latency-svc-j968s
  I0902 07:53:36.888858 18 service_latency.go:358] Got endpoints: latency-svc-j968s [329.794129ms]
  I0902 07:53:36.906707 18 service_latency.go:351] Created: latency-svc-db8sx
  I0902 07:53:37.004179 18 service_latency.go:351] Created: latency-svc-2j7bs
  I0902 07:53:37.004954 18 service_latency.go:351] Created: latency-svc-r7mdm
  I0902 07:53:37.005066 18 service_latency.go:351] Created: latency-svc-hwzp2
  I0902 07:53:37.005323 18 service_latency.go:358] Got endpoints: latency-svc-db8sx [443.825511ms]
  I0902 07:53:37.005522 18 service_latency.go:358] Got endpoints: latency-svc-2j7bs [443.167742ms]
  I0902 07:53:37.006128 18 service_latency.go:358] Got endpoints: latency-svc-hwzp2 [442.025493ms]
  I0902 07:53:37.049702 18 service_latency.go:358] Got endpoints: latency-svc-r7mdm [486.185433ms]
  I0902 07:53:37.108576 18 service_latency.go:351] Created: latency-svc-wgtcj
  I0902 07:53:37.138490 18 service_latency.go:358] Got endpoints: latency-svc-wgtcj [504.459353ms]
  I0902 07:53:37.139235 18 service_latency.go:351] Created: latency-svc-w2z2n
  I0902 07:53:37.189290 18 service_latency.go:358] Got endpoints: latency-svc-w2z2n [554.145869ms]
  I0902 07:53:37.195315 18 service_latency.go:351] Created: latency-svc-s7d42
  I0902 07:53:37.223528 18 service_latency.go:358] Got endpoints: latency-svc-s7d42 [589.121716ms]
  I0902 07:53:37.239099 18 service_latency.go:351] Created: latency-svc-r9d2d
  I0902 07:53:37.315003 18 service_latency.go:358] Got endpoints: latency-svc-r9d2d [699.776098ms]
  I0902 07:53:37.341259 18 service_latency.go:351] Created: latency-svc-42tkp
  I0902 07:53:37.368449 18 service_latency.go:358] Got endpoints: latency-svc-42tkp [733.436085ms]
  I0902 07:53:37.401120 18 service_latency.go:351] Created: latency-svc-gtkl4
  I0902 07:53:37.401332 18 service_latency.go:358] Got endpoints: latency-svc-gtkl4 [709.188381ms]
  I0902 07:53:37.435122 18 service_latency.go:351] Created: latency-svc-jcnqc
  I0902 07:53:37.459980 18 service_latency.go:358] Got endpoints: latency-svc-jcnqc [766.997322ms]
  I0902 07:53:37.510850 18 service_latency.go:351] Created: latency-svc-89bsg
  I0902 07:53:37.511012 18 service_latency.go:351] Created: latency-svc-m49wn
  I0902 07:53:37.570970 18 service_latency.go:358] Got endpoints: latency-svc-89bsg [817.919416ms]
  I0902 07:53:37.613517 18 service_latency.go:351] Created: latency-svc-9jkjv
  I0902 07:53:37.614318 18 service_latency.go:351] Created: latency-svc-ww56w
  I0902 07:53:37.614762 18 service_latency.go:358] Got endpoints: latency-svc-9jkjv [743.916289ms]
  I0902 07:53:37.614865 18 service_latency.go:358] Got endpoints: latency-svc-m49wn [866.499697ms]
  I0902 07:53:37.690801 18 service_latency.go:351] Created: latency-svc-h5qc7
  I0902 07:53:37.695799 18 service_latency.go:358] Got endpoints: latency-svc-ww56w [806.835488ms]
  I0902 07:53:37.707003 18 service_latency.go:358] Got endpoints: latency-svc-h5qc7 [701.620022ms]
  I0902 07:53:37.724593 18 service_latency.go:351] Created: latency-svc-7h4nh
  I0902 07:53:37.755494 18 service_latency.go:358] Got endpoints: latency-svc-7h4nh [749.918465ms]
  I0902 07:53:37.797264 18 service_latency.go:351] Created: latency-svc-8v6qx
  I0902 07:53:37.808190 18 service_latency.go:351] Created: latency-svc-x7zw6
  I0902 07:53:37.808470 18 service_latency.go:358] Got endpoints: latency-svc-x7zw6 [758.275744ms]
  I0902 07:53:37.808501 18 service_latency.go:358] Got endpoints: latency-svc-8v6qx [801.410332ms]
  I0902 07:53:37.856347 18 service_latency.go:351] Created: latency-svc-kdwdm
  I0902 07:53:37.864486 18 service_latency.go:351] Created: latency-svc-8hr49
  I0902 07:53:37.864613 18 service_latency.go:358] Got endpoints: latency-svc-kdwdm [726.048101ms]
  I0902 07:53:37.907257 18 service_latency.go:358] Got endpoints: latency-svc-8hr49 [717.877571ms]
  I0902 07:53:37.910735 18 service_latency.go:351] Created: latency-svc-k6bjz
  I0902 07:53:37.926306 18 service_latency.go:358] Got endpoints: latency-svc-k6bjz [702.512104ms]
  I0902 07:53:37.957741 18 service_latency.go:351] Created: latency-svc-5dblq
  I0902 07:53:37.970456 18 service_latency.go:358] Got endpoints: latency-svc-5dblq [655.170674ms]
  I0902 07:53:37.973021 18 service_latency.go:114] Latencies: [123.566301ms 140.766946ms 164.679683ms 165.765766ms 222.597801ms 231.874864ms 260.040929ms 286.792778ms 287.538351ms 301.938186ms 329.794129ms 333.508424ms 334.05661ms 334.714337ms 378.568437ms 408.023177ms 408.326346ms 410.393044ms 435.190046ms 442.025493ms 442.071044ms 443.167742ms 443.825511ms 453.917613ms 474.367122ms 486.185433ms 488.145978ms 489.84388ms 493.842891ms 504.459353ms 506.312714ms 543.425282ms 543.4782ms 552.34664ms 554.145869ms 564.503244ms 567.427325ms 568.130352ms 569.907438ms 571.451026ms 575.742332ms 589.121716ms 602.843341ms 604.631263ms 610.471304ms 621.418791ms 621.970379ms 622.989336ms 628.032791ms 628.849896ms 630.536422ms 645.608034ms 655.170674ms 656.789955ms 666.3699ms 675.254663ms 678.233401ms 684.82641ms 694.982932ms 695.781671ms 699.776098ms 701.620022ms 702.512104ms 704.06376ms 709.188381ms 717.877571ms 718.103909ms 722.817119ms 722.998568ms 726.048101ms 728.441104ms 730.955803ms 733.436085ms 738.299399ms 738.510585ms 739.544014ms 743.916289ms 747.454109ms 749.433233ms 749.918465ms 751.440291ms 751.732584ms 755.684738ms 758.275744ms 766.997322ms 767.485556ms 770.867702ms 772.685502ms 775.137461ms 777.019799ms 779.139048ms 782.282437ms 785.380141ms 790.306827ms 791.667576ms 796.863823ms 798.571598ms 801.04086ms 801.314077ms 801.410332ms 804.099064ms 806.537863ms 806.835488ms 807.271081ms 810.903117ms 816.061686ms 817.867344ms 817.919416ms 818.596141ms 818.665644ms 827.015966ms 829.353191ms 831.171227ms 832.416591ms 837.603923ms 839.09116ms 851.138105ms 857.65279ms 862.114005ms 864.001364ms 864.401243ms 864.760771ms 865.382226ms 866.499697ms 868.081918ms 877.510729ms 879.159273ms 880.415977ms 883.534653ms 885.74482ms 886.073021ms 887.082297ms 887.817926ms 893.23399ms 896.415547ms 902.181936ms 903.960093ms 906.228557ms 909.186868ms 909.605718ms 915.700713ms 916.015455ms 917.715469ms 917.875739ms 924.568205ms 930.305692ms 942.474857ms 960.228507ms 961.780618ms 969.286872ms 974.958664ms 981.578862ms 984.433482ms 985.559718ms 994.56269ms 998.456786ms 999.09579ms 1.010920442s 1.01431989s 1.022732525s 1.024839263s 1.027769519s 1.030518472s 1.034720214s 1.035674051s 1.036005075s 1.044028532s 1.05312067s 1.063216817s 1.063477184s 1.06456213s 1.065696685s 1.085858879s 1.093770606s 1.09884789s 1.106030085s 1.111056622s 1.115223621s 1.146008787s 1.179326391s 1.179411536s 1.221669645s 1.236260724s 1.243000605s 1.276346084s 1.295263318s 1.328836158s 1.33795066s 1.352440898s 1.416938406s 1.417715739s 1.450268509s 1.461391278s 1.462128892s 1.484246621s 1.490107696s 1.506512827s 1.521986571s 1.545995338s 1.566389165s]
  I0902 07:53:37.973217 18 service_latency.go:118] 50 %ile: 804.099064ms
  I0902 07:53:37.973238 18 service_latency.go:119] 90 %ile: 1.179411536s
  I0902 07:53:37.973252 18 service_latency.go:120] 99 %ile: 1.545995338s
  I0902 07:53:37.973876 18 service_latency.go:121] Total sample count: 200
  I0902 07:53:37.977276 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7475" for this suite. @ 09/02/25 07:53:38.01
• [13.546 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 09/02/25 07:53:38.031
  I0902 07:53:38.031600 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 07:53:38.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:38.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:38.062
  I0902 07:53:38.078252 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8399" for this suite. @ 09/02/25 07:53:38.134
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/02/25 07:53:38.156
  I0902 07:53:38.156774 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename containers @ 09/02/25 07:53:38.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:38.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:38.19
  STEP: Creating a pod to test override all @ 09/02/25 07:53:38.198
  STEP: Saw pod success @ 09/02/25 07:53:42.276
  I0902 07:53:42.297017 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod client-containers-85992005-212a-4cbf-bbb0-71882ae45c43 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:53:42.363
  I0902 07:53:42.456507 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1536" for this suite. @ 09/02/25 07:53:42.465
• [4.339 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/02/25 07:53:42.495
  I0902 07:53:42.495553 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 07:53:42.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:42.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:42.531
  I0902 07:53:42.543683 18 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-7843"
  I0902 07:53:42.559882 18 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-7843"
  STEP: waiting for a new root ca configmap created @ 09/02/25 07:53:43.06
  I0902 07:53:43.069317 18 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-7843"
  I0902 07:53:43.079993 18 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-7843"
  STEP: waiting for the root ca configmap reconciled @ 09/02/25 07:53:43.609
  I0902 07:53:43.770263 18 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-7843"
  I0902 07:53:43.770815 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7843" for this suite. @ 09/02/25 07:53:43.867
• [1.511 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/02/25 07:53:44.01
  I0902 07:53:44.010785 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 07:53:44.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:53:44.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:53:44.105
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/02/25 07:53:44.114
  I0902 07:53:44.120933 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 07:53:48.972557 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 07:54:02.780457 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8344" for this suite. @ 09/02/25 07:54:02.848
• [18.907 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/02/25 07:54:02.919
  I0902 07:54:02.919247 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 07:54:02.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:02.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:02.971
  STEP: create the container @ 09/02/25 07:54:02.977
  I0902 07:54:03.026125      18 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/02/25 07:54:03.026
  STEP: get the container status @ 09/02/25 07:54:06.144
  STEP: the container should be terminated @ 09/02/25 07:54:06.169
  STEP: the termination message should be set @ 09/02/25 07:54:06.17
  I0902 07:54:06.170606 18 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/25 07:54:06.17
  I0902 07:54:06.279226 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-160" for this suite. @ 09/02/25 07:54:06.303
• [3.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/02/25 07:54:06.341
  I0902 07:54:06.341119 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 07:54:06.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:06.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:06.378
  STEP: Setting up server cert @ 09/02/25 07:54:06.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 07:54:07.712
  STEP: Deploying the webhook pod @ 09/02/25 07:54:07.73
  STEP: Wait for the deployment to be ready @ 09/02/25 07:54:07.779
  I0902 07:54:07.873374 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 07:54:09.929173 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 7, 54, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 54, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 54, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 07:54:11.943
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:54:12.18
  I0902 07:54:13.182690 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/25 07:54:13.191
  I0902 07:54:13.234804 18 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/25 07:54:13.36
  STEP: Creating a dummy validating-webhook-configuration object @ 09/02/25 07:54:13.39
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/02/25 07:54:13.406
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/02/25 07:54:13.419
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/02/25 07:54:13.432
  I0902 07:54:13.596138 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4761" for this suite. @ 09/02/25 07:54:13.615
  STEP: Destroying namespace "webhook-markers-4669" for this suite. @ 09/02/25 07:54:13.633
• [7.305 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/02/25 07:54:13.646
  I0902 07:54:13.646477 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:54:13.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:13.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:13.677
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:54:13.686
  STEP: Saw pod success @ 09/02/25 07:54:17.777
  I0902 07:54:17.784016 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-6d4ba28d-f614-4e5e-82ce-f2c98dff0665 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:54:17.821
  I0902 07:54:17.854708 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6022" for this suite. @ 09/02/25 07:54:17.869
• [4.244 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 09/02/25 07:54:17.894
  I0902 07:54:17.894517 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 07:54:17.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:17.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:17.933
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/25 07:54:17.938
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/25 07:54:17.938
  STEP: creating a pod to probe DNS @ 09/02/25 07:54:17.938
  STEP: submitting the pod to kubernetes @ 09/02/25 07:54:17.938
  STEP: retrieving the pod @ 09/02/25 07:54:42.705
  STEP: looking for the results for each expected name from probers @ 09/02/25 07:54:42.715
  I0902 07:54:42.757941 18 dns_common.go:546] DNS probes using dns-8352/dns-test-1bf1287a-4b78-43f1-8393-ca0024a69094 succeeded

  STEP: deleting the pod @ 09/02/25 07:54:42.758
  I0902 07:54:42.810079 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8352" for this suite. @ 09/02/25 07:54:42.827
• [24.967 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/02/25 07:54:42.863
  I0902 07:54:42.863867 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 07:54:42.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:42.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:42.917
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 07:54:42.941
  STEP: create the pod with lifecycle hook @ 09/02/25 07:54:47.081
  STEP: delete the pod with lifecycle hook @ 09/02/25 07:54:51.147
  STEP: check prestop hook @ 09/02/25 07:54:53.213
  I0902 07:54:53.235108 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2400" for this suite. @ 09/02/25 07:54:53.244
• [10.404 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/02/25 07:54:53.267
  I0902 07:54:53.267592 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:54:53.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:53.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:53.334
  STEP: Creating a pod to test downward api env vars @ 09/02/25 07:54:53.339
  STEP: Saw pod success @ 09/02/25 07:54:57.436
  I0902 07:54:57.447276 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod downward-api-8c333df4-bf85-4cf7-b73f-aa29b8418428 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:54:57.493
  I0902 07:54:57.538204 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4868" for this suite. @ 09/02/25 07:54:57.547
• [4.297 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/02/25 07:54:57.565
  I0902 07:54:57.565110 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 07:54:57.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:57.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:57.642
  STEP: Creating secret with name secret-test-29ca4dbf-9d51-45dc-bf3f-6b7f05739bd2 @ 09/02/25 07:54:57.703
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:54:57.716
  STEP: Saw pod success @ 09/02/25 07:55:01.806
  I0902 07:55:01.813799 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod pod-secrets-5c4c8d3d-42aa-4350-8cfe-ba5a3db06637 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 07:55:01.826
  I0902 07:55:01.862335 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5423" for this suite. @ 09/02/25 07:55:01.875
  STEP: Destroying namespace "secret-namespace-9830" for this suite. @ 09/02/25 07:55:01.929
• [4.380 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/02/25 07:55:01.945
  I0902 07:55:01.945362 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:55:01.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:01.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:01.984
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:55:02.025
  STEP: Saw pod success @ 09/02/25 07:55:06.136
  I0902 07:55:06.145238 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod downwardapi-volume-6a672622-1111-44b3-916a-35949ab32915 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:55:06.157
  I0902 07:55:06.251728 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-299" for this suite. @ 09/02/25 07:55:06.275
• [4.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 09/02/25 07:55:06.296
  I0902 07:55:06.296966 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 07:55:06.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:06.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:06.345
  STEP: Creating service test in namespace statefulset-3219 @ 09/02/25 07:55:06.359
  STEP: Creating a new StatefulSet @ 09/02/25 07:55:06.381
  I0902 07:55:06.455211 18 wait.go:44] Found 0 stateful pods, waiting for 3
  I0902 07:55:16.447494 18 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:55:16.447599 18 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:55:16.450185 18 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/25 07:55:16.468
  I0902 07:55:16.507793 18 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/25 07:55:16.507
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/02/25 07:55:26.525
  STEP: Performing a canary update @ 09/02/25 07:55:26.526
  I0902 07:55:26.545896 18 statefulset.go:2542] Updating stateful set ss2
  I0902 07:55:26.627710 18 wait.go:74] Waiting for Pod statefulset-3219/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/02/25 07:55:36.596
  I0902 07:55:36.960333 18 wait.go:44] Found 2 stateful pods, waiting for 3
  I0902 07:55:46.907148 18 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:55:46.907412 18 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:55:46.907493 18 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/02/25 07:55:46.92
  I0902 07:55:46.965986 18 statefulset.go:2542] Updating stateful set ss2
  I0902 07:55:47.004134 18 wait.go:74] Waiting for Pod statefulset-3219/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0902 07:55:57.098298 18 statefulset.go:2542] Updating stateful set ss2
  I0902 07:55:57.140831 18 wait.go:56] Waiting for StatefulSet statefulset-3219/ss2 to complete update
  I0902 07:55:57.141145 18 wait.go:63] Waiting for Pod statefulset-3219/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0902 07:56:07.148451 18 statefulset.go:138] Deleting all statefulset in ns statefulset-3219
  I0902 07:56:07.158355 18 rest.go:153] Scaling statefulset ss2 to 0
  I0902 07:56:17.203818 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 07:56:17.230359 18 rest.go:91] Deleting statefulset ss2
  I0902 07:56:17.275525 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3219" for this suite. @ 09/02/25 07:56:17.304
• [71.032 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/02/25 07:56:17.335
  I0902 07:56:17.335235 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:56:17.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:17.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:17.483
  STEP: Creating configMap with name configmap-test-volume-map-782850d1-abc6-4604-9d98-f68dec463e24 @ 09/02/25 07:56:17.497
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:56:17.519
  STEP: Saw pod success @ 09/02/25 07:56:21.649
  I0902 07:56:21.656978 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-c18a8e46-409c-492e-8251-2ba40b1cbf15 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:56:21.669
  I0902 07:56:21.734488 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9880" for this suite. @ 09/02/25 07:56:21.745
• [4.423 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/02/25 07:56:21.758
  I0902 07:56:21.758273 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename certificates @ 09/02/25 07:56:21.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:21.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:21.861
  STEP: getting /apis @ 09/02/25 07:56:25.934
  STEP: getting /apis/certificates.k8s.io @ 09/02/25 07:56:25.944
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/02/25 07:56:25.946
  STEP: creating @ 09/02/25 07:56:25.948
  STEP: getting @ 09/02/25 07:56:26.019
  STEP: listing @ 09/02/25 07:56:26.024
  STEP: watching @ 09/02/25 07:56:26.032
  I0902 07:56:26.032360 18 certificates.go:316] starting watch
  STEP: patching @ 09/02/25 07:56:26.034
  STEP: updating @ 09/02/25 07:56:26.044
  I0902 07:56:26.056066 18 certificates.go:332] waiting for watch events with expected annotations
  I0902 07:56:26.056365 18 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/02/25 07:56:26.057
  STEP: patching /approval @ 09/02/25 07:56:26.063
  STEP: updating /approval @ 09/02/25 07:56:26.074
  STEP: getting /status @ 09/02/25 07:56:26.086
  STEP: patching /status @ 09/02/25 07:56:26.094
  STEP: updating /status @ 09/02/25 07:56:26.134
  STEP: deleting @ 09/02/25 07:56:26.157
  STEP: deleting a collection @ 09/02/25 07:56:26.177
  I0902 07:56:26.207108 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2002" for this suite. @ 09/02/25 07:56:26.221
• [4.496 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/02/25 07:56:26.255
  I0902 07:56:26.255916 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 07:56:26.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:26.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:26.283
  STEP: Creating namespace "e2e-ns-n2v7b" @ 09/02/25 07:56:26.288
  I0902 07:56:26.310829 18 namespace.go:412] Namespace "e2e-ns-n2v7b-3202" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-n2v7b-3202" @ 09/02/25 07:56:26.31
  I0902 07:56:26.352283 18 namespace.go:435] Namespace "e2e-ns-n2v7b-3202" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-n2v7b-3202" @ 09/02/25 07:56:26.352
  I0902 07:56:26.372231 18 namespace.go:464] Namespace "e2e-ns-n2v7b-3202" has []v1.FinalizerName{"kubernetes"}
  I0902 07:56:26.373597 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-691" for this suite. @ 09/02/25 07:56:26.381
  STEP: Destroying namespace "e2e-ns-n2v7b-3202" for this suite. @ 09/02/25 07:56:26.393
• [0.173 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 09/02/25 07:56:26.429
  I0902 07:56:26.429497 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 07:56:26.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:26.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:26.464
  STEP: creating service multiprotocol-test in namespace services-2459 @ 09/02/25 07:56:26.47
  STEP: creating pod pod1 in namespace services-2459 @ 09/02/25 07:56:26.552
  STEP: Creating pod pod1 in namespace services-2459 @ 09/02/25 07:56:26.552
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2459 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/02/25 07:56:28.653
  I0902 07:56:28.710562      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 07:56:28.724206 18 service.go:4729] successfully validated that service multiprotocol-test in namespace services-2459 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/02/25 07:56:28.724
  I0902 07:56:28.724393 18 resource.go:361] Creating new exec pod
  I0902 07:56:30.764988 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80'
  I0902 07:56:31.101030 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.132 80\nConnection to 10.233.27.132 80 port [tcp/http] succeeded!\n"
  I0902 07:56:31.101125 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 07:56:31.102678 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.132 80'
  I0902 07:56:34.047144 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.132 80\n"
  I0902 07:56:34.047229 18 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/02/25 07:56:34.047
  I0902 07:56:34.103214 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80'
  I0902 07:56:34.636754 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.132 80\nConnection to 10.233.27.132 80 port [tcp/http] succeeded!\n"
  I0902 07:56:34.636899 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 07:56:34.637364 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.132 80'
  I0902 07:56:36.909075 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.132 80\n"
  I0902 07:56:36.909290 18 builder.go:147] stdout: ""
  I0902 07:56:36.909770 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.132 80'
  I0902 07:56:39.269064 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.132 80\n"
  I0902 07:56:39.269145 18 builder.go:147] stdout: ""
  I0902 07:56:39.269332 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.132 80'
  I0902 07:56:41.498022 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.132 80\n"
  I0902 07:56:41.498119 18 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/02/25 07:56:41.498
  I0902 07:56:41.536116 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.132 80'
  I0902 07:56:44.016380 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.132 80\n"
  I0902 07:56:44.016467 18 builder.go:147] stdout: "pod1"
  I0902 07:56:44.017329 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80'
  I0902 07:56:46.382427 18 builder.go:135] rc: 1
  I0902 07:56:46.382709 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.132 80
  nc: connect to 10.233.27.132 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 07:56:46.383071 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80'
  I0902 07:56:48.738657 18 builder.go:135] rc: 1
  I0902 07:56:48.738758 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.132 80
  nc: connect to 10.233.27.132 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 07:56:48.739586 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80'
  I0902 07:56:50.979936 18 builder.go:135] rc: 1
  I0902 07:56:50.980526 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2459 exec execpod524wg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.132 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.132 80
  nc: connect to 10.233.27.132 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 07:56:50.981474 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2459" for this suite. @ 09/02/25 07:56:51.007
• [24.599 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/02/25 07:56:51.028
  I0902 07:56:51.029108 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:56:51.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:51.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:51.061
  STEP: Creating a pod to test substitution in container's command @ 09/02/25 07:56:51.065
  STEP: Saw pod success @ 09/02/25 07:56:55.136
  I0902 07:56:55.143309 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod var-expansion-f3d49a4b-deba-4ba3-92df-447f2fa74a09 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:56:55.159
  I0902 07:56:55.203377 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1123" for this suite. @ 09/02/25 07:56:55.226
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 09/02/25 07:56:55.264
  I0902 07:56:55.264909 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:56:55.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:56:55.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:56:55.31
  STEP: creating a replication controller @ 09/02/25 07:56:55.319
  I0902 07:56:55.320385 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 create -f -'
  I0902 07:56:55.781078 18 builder.go:146] stderr: ""
  I0902 07:56:55.781195 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 07:56:55.781
  I0902 07:56:55.781622 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 07:56:56.015703 18 builder.go:146] stderr: ""
  I0902 07:56:56.015996 18 builder.go:147] stdout: "update-demo-nautilus-cbwfd update-demo-nautilus-kwxxq "
  I0902 07:56:56.017173 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:56:56.332329 18 builder.go:146] stderr: ""
  I0902 07:56:56.332407 18 builder.go:147] stdout: ""
  I0902 07:56:56.332432 18 kubectl.go:2505] update-demo-nautilus-cbwfd is created but not running
  I0902 07:57:01.335694 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 07:57:01.821580 18 builder.go:146] stderr: ""
  I0902 07:57:01.821672 18 builder.go:147] stdout: "update-demo-nautilus-cbwfd update-demo-nautilus-kwxxq "
  I0902 07:57:01.822731 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:57:02.212965 18 builder.go:146] stderr: ""
  I0902 07:57:02.213050 18 builder.go:147] stdout: ""
  I0902 07:57:02.213068 18 kubectl.go:2505] update-demo-nautilus-cbwfd is created but not running
  I0902 07:57:07.213927 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 07:57:07.603383 18 builder.go:146] stderr: ""
  I0902 07:57:07.603519 18 builder.go:147] stdout: "update-demo-nautilus-cbwfd update-demo-nautilus-kwxxq "
  I0902 07:57:07.603909 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:57:07.932151 18 builder.go:146] stderr: ""
  I0902 07:57:07.932347 18 builder.go:147] stdout: ""
  I0902 07:57:07.932371 18 kubectl.go:2505] update-demo-nautilus-cbwfd is created but not running
  I0902 07:57:12.936674 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 07:57:13.464006 18 builder.go:146] stderr: ""
  I0902 07:57:13.464466 18 builder.go:147] stdout: "update-demo-nautilus-cbwfd update-demo-nautilus-kwxxq "
  I0902 07:57:13.465827 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:57:13.859395 18 builder.go:146] stderr: ""
  I0902 07:57:13.859474 18 builder.go:147] stdout: ""
  I0902 07:57:13.859508 18 kubectl.go:2505] update-demo-nautilus-cbwfd is created but not running
  I0902 07:57:18.863649 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 07:57:19.109392 18 builder.go:146] stderr: ""
  I0902 07:57:19.109494 18 builder.go:147] stdout: "update-demo-nautilus-cbwfd update-demo-nautilus-kwxxq "
  I0902 07:57:19.110086 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:57:19.286005 18 builder.go:146] stderr: ""
  I0902 07:57:19.286073 18 builder.go:147] stdout: "true"
  I0902 07:57:19.286675 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-cbwfd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 07:57:19.458761 18 builder.go:146] stderr: ""
  I0902 07:57:19.458828 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 07:57:19.458876 18 kubectl.go:2396] validating pod update-demo-nautilus-cbwfd
  I0902 07:57:19.477364 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 07:57:19.477739 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 07:57:19.477906 18 kubectl.go:2523] update-demo-nautilus-cbwfd is verified up and running
  I0902 07:57:19.478312 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-kwxxq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 07:57:19.671001 18 builder.go:146] stderr: ""
  I0902 07:57:19.671068 18 builder.go:147] stdout: "true"
  I0902 07:57:19.671347 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods update-demo-nautilus-kwxxq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 07:57:19.848621 18 builder.go:146] stderr: ""
  I0902 07:57:19.850370 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 07:57:19.850401 18 kubectl.go:2396] validating pod update-demo-nautilus-kwxxq
  I0902 07:57:19.876304 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 07:57:19.876441 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 07:57:19.876469 18 kubectl.go:2523] update-demo-nautilus-kwxxq is verified up and running
  STEP: using delete to clean up resources @ 09/02/25 07:57:19.877
  I0902 07:57:19.877754 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 delete --grace-period=0 --force -f -'
  I0902 07:57:20.174533 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 07:57:20.174678 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0902 07:57:20.175269 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get rc,svc -l name=update-demo --no-headers'
  I0902 07:57:20.744947 18 builder.go:146] stderr: "No resources found in kubectl-6249 namespace.\n"
  I0902 07:57:20.745042 18 builder.go:147] stdout: ""
  I0902 07:57:20.745318 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6249 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0902 07:57:20.971390 18 builder.go:146] stderr: ""
  I0902 07:57:20.971528 18 builder.go:147] stdout: ""
  I0902 07:57:20.972589 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6249" for this suite. @ 09/02/25 07:57:21.013
• [25.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 09/02/25 07:57:21.046
  I0902 07:57:21.046276 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 07:57:21.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:57:21.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:57:21.1
  STEP: Counting existing ResourceQuota @ 09/02/25 07:57:21.108
  STEP: Creating a ResourceQuota @ 09/02/25 07:57:26.116
  STEP: Ensuring resource quota status is calculated @ 09/02/25 07:57:26.129
  STEP: Creating a Pod that fits quota @ 09/02/25 07:57:28.137
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/02/25 07:57:28.197
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/02/25 07:57:30.243
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/02/25 07:57:30.25
  STEP: Ensuring a pod cannot update its resource requirements @ 09/02/25 07:57:30.254
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/02/25 07:57:30.265
  STEP: Deleting the pod @ 09/02/25 07:57:32.272
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 07:57:32.288
  I0902 07:57:34.298036 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4954" for this suite. @ 09/02/25 07:57:34.306
• [13.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/02/25 07:57:34.321
  I0902 07:57:34.321358 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 07:57:34.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:57:34.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:57:34.356
  STEP: Setting up server cert @ 09/02/25 07:57:34.391
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 07:57:35.54
  STEP: Deploying the webhook pod @ 09/02/25 07:57:35.551
  STEP: Wait for the deployment to be ready @ 09/02/25 07:57:35.572
  I0902 07:57:35.595620 18 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/02/25 07:57:37.635
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:57:37.666
  I0902 07:57:38.666615 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 07:57:38.676727 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-645-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 07:57:39.193
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/25 07:57:39.223
  I0902 07:57:41.995364 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3268" for this suite. @ 09/02/25 07:57:42.005
  STEP: Destroying namespace "webhook-markers-7756" for this suite. @ 09/02/25 07:57:42.032
• [7.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/02/25 07:57:42.054
  I0902 07:57:42.054928 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 07:57:42.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:57:42.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:57:42.086
  STEP: getting /apis @ 09/02/25 07:57:42.094
  STEP: getting /apis/node.k8s.io @ 09/02/25 07:57:42.102
  STEP: getting /apis/node.k8s.io/v1 @ 09/02/25 07:57:42.105
  STEP: creating @ 09/02/25 07:57:42.108
  STEP: watching @ 09/02/25 07:57:42.135
  I0902 07:57:42.135605 18 runtimeclass.go:278] starting watch
  STEP: getting @ 09/02/25 07:57:42.146
  STEP: listing @ 09/02/25 07:57:42.151
  STEP: patching @ 09/02/25 07:57:42.156
  STEP: updating @ 09/02/25 07:57:42.165
  I0902 07:57:42.171959 18 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/02/25 07:57:42.172
  STEP: deleting a collection @ 09/02/25 07:57:42.199
  I0902 07:57:42.224730 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5690" for this suite. @ 09/02/25 07:57:42.23
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/02/25 07:57:42.245
  I0902 07:57:42.245084 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 07:57:42.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:57:42.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:57:42.272
  STEP: Creating secret with name secret-test-map-fc0057b2-9cae-4b13-b89e-85eb1d03d019 @ 09/02/25 07:57:42.277
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:57:42.287
  STEP: Saw pod success @ 09/02/25 07:57:46.333
  I0902 07:57:46.337679 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-abe05a4b-d923-4677-9c90-c90fba1ab0ca container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 07:57:46.353
  I0902 07:57:46.408857 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-746" for this suite. @ 09/02/25 07:57:46.422
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/02/25 07:57:46.45
  I0902 07:57:46.450912 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 07:57:46.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:57:46.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:57:46.519
  STEP: create the rc @ 09/02/25 07:57:46.533
  I0902 07:57:46.545909      18 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/02/25 07:57:55.893
  STEP: wait for the rc to be deleted @ 09/02/25 07:57:56.606
  I0902 07:57:59.786135 18 garbage_collector.go:678] 95 pods remaining
  I0902 07:57:59.786258 18 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0902 07:57:59.786279 18 garbage_collector.go:686] 
  I0902 07:58:00.271319 18 garbage_collector.go:678] 88 pods remaining
  I0902 07:58:00.271392 18 garbage_collector.go:685] 72 pods has nil DeletionTimestamp
  I0902 07:58:00.271410 18 garbage_collector.go:686] 
  I0902 07:58:01.482374 18 garbage_collector.go:678] 76 pods remaining
  I0902 07:58:01.482543 18 garbage_collector.go:685] 54 pods has nil DeletionTimestamp
  I0902 07:58:01.482566 18 garbage_collector.go:686] 
  I0902 07:58:02.374321 18 garbage_collector.go:678] 65 pods remaining
  I0902 07:58:02.374525 18 garbage_collector.go:685] 45 pods has nil DeletionTimestamp
  I0902 07:58:02.374547 18 garbage_collector.go:686] 
  I0902 07:58:02.965164 18 garbage_collector.go:678] 62 pods remaining
  I0902 07:58:02.965239 18 garbage_collector.go:685] 38 pods has nil DeletionTimestamp
  I0902 07:58:02.965270 18 garbage_collector.go:686] 
  I0902 07:58:04.795867 18 garbage_collector.go:678] 47 pods remaining
  I0902 07:58:04.796047 18 garbage_collector.go:685] 16 pods has nil DeletionTimestamp
  I0902 07:58:04.796069 18 garbage_collector.go:686] 
  I0902 07:58:05.579579 18 garbage_collector.go:678] 32 pods remaining
  I0902 07:58:05.580056 18 garbage_collector.go:685] 1 pods has nil DeletionTimestamp
  I0902 07:58:05.580082 18 garbage_collector.go:686] 
  I0902 07:58:06.518430 18 garbage_collector.go:678] 29 pods remaining
  I0902 07:58:06.714150 18 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0902 07:58:06.714202 18 garbage_collector.go:686] 
  I0902 07:58:07.509056 18 garbage_collector.go:678] 20 pods remaining
  I0902 07:58:07.509482 18 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0902 07:58:07.509506 18 garbage_collector.go:686] 
  I0902 07:58:08.434078 18 garbage_collector.go:678] 17 pods remaining
  I0902 07:58:08.434278 18 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0902 07:58:08.434302 18 garbage_collector.go:686] 
  I0902 07:58:09.449293 18 garbage_collector.go:678] 9 pods remaining
  I0902 07:58:09.449376 18 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0902 07:58:09.449400 18 garbage_collector.go:686] 
  I0902 07:58:10.447513 18 garbage_collector.go:678] 0 pods remaining
  I0902 07:58:10.447703 18 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0902 07:58:10.447732 18 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/02/25 07:58:13.013
  I0902 07:58:15.000308 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 07:58:15.000939 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8336" for this suite. @ 09/02/25 07:58:15.258
• [28.912 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/02/25 07:58:15.371
  I0902 07:58:15.371450 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 07:58:15.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:58:15.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:58:15.514
  STEP: Creating a ForbidConcurrent cronjob @ 09/02/25 07:58:15.672
  STEP: Ensuring a job is scheduled @ 09/02/25 07:58:16.095
  STEP: Ensuring exactly one is scheduled @ 09/02/25 07:59:02.105
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/25 07:59:02.116
  STEP: Ensuring no more jobs are scheduled @ 09/02/25 07:59:02.138
  STEP: Removing cronjob @ 09/02/25 07:59:02.181
  I0902 07:59:02.224680 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8766" for this suite. @ 09/02/25 07:59:02.251
• [46.924 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/02/25 07:59:02.324
  I0902 07:59:02.324392 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename containers @ 09/02/25 07:59:02.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:59:02.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:59:02.449
  STEP: Creating a pod to test override command @ 09/02/25 07:59:02.458
  STEP: Saw pod success @ 09/02/25 07:59:06.609
  I0902 07:59:06.617082 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod client-containers-63ebae9e-3911-4ffb-85c7-1e7fac2eb1ab container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:59:06.658
  I0902 07:59:06.703318 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1570" for this suite. @ 09/02/25 07:59:06.713
• [4.427 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 09/02/25 07:59:06.753
  I0902 07:59:06.753065 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 07:59:06.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:59:06.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:59:06.817
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/02/25 07:59:06.825
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/02/25 07:59:06.84
  STEP: Ensure that the job reaches completions @ 09/02/25 07:59:12.938
  STEP: Verifying that the job status to ensure correct final state @ 09/02/25 07:59:18.993
  I0902 07:59:18.999301 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4478" for this suite. @ 09/02/25 07:59:19.009
• [12.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/02/25 07:59:19.027
  I0902 07:59:19.027622 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename taint-single-pod @ 09/02/25 07:59:19.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:59:19.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:59:19.064
  I0902 07:59:19.070038 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0902 08:00:19.072194 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 08:00:19.088893 18 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/02/25 08:00:19.088
  I0902 08:00:19.336159 18 taints.go:294] Pod is running on ahkoog9eunoh-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/25 08:00:19.336
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:00:19.373
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/02/25 08:00:19.414
  I0902 08:00:19.414706 18 taints.go:313] Pod wasn't evicted. Proceeding
  I0902 08:00:19.415240 18 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:00:19.46
  STEP: Waiting some time to make sure that toleration time passed. @ 09/02/25 08:00:19.49
  I0902 08:01:34.493859 18 taints.go:329] Pod wasn't evicted. Test successful
  I0902 08:01:34.496946 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6426" for this suite. @ 09/02/25 08:01:34.518
• [135.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 09/02/25 08:01:34.544
  I0902 08:01:34.544530 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:01:34.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:01:34.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:01:34.626
  STEP: creating the pod @ 09/02/25 08:01:34.631
  I0902 08:01:34.633496 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 create -f -'
  I0902 08:01:35.129829 18 builder.go:146] stderr: ""
  I0902 08:01:35.130135 18 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/02/25 08:01:39.183
  I0902 08:01:39.185008 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 label pods pause testing-label=testing-label-value'
  I0902 08:01:39.401489 18 builder.go:146] stderr: ""
  I0902 08:01:39.401569 18 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/02/25 08:01:39.401
  I0902 08:01:39.401899 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 get pod pause -L testing-label'
  I0902 08:01:39.844562 18 builder.go:146] stderr: ""
  I0902 08:01:39.844835 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/02/25 08:01:39.845
  I0902 08:01:39.846030 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 label pods pause testing-label-'
  I0902 08:01:40.222866 18 builder.go:146] stderr: ""
  I0902 08:01:40.223088 18 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/02/25 08:01:40.223
  I0902 08:01:40.223576 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 get pod pause -L testing-label'
  I0902 08:01:40.530299 18 builder.go:146] stderr: ""
  I0902 08:01:40.530424 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 09/02/25 08:01:40.53
  I0902 08:01:40.531352 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 delete --grace-period=0 --force -f -'
  I0902 08:01:40.798137 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:01:40.798206 18 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0902 08:01:40.799058 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 get rc,svc -l name=pause --no-headers'
  I0902 08:01:40.984008 18 builder.go:146] stderr: "No resources found in kubectl-8480 namespace.\n"
  I0902 08:01:40.984131 18 builder.go:147] stdout: ""
  I0902 08:01:40.984784 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8480 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0902 08:01:41.203620 18 builder.go:146] stderr: ""
  I0902 08:01:41.203712 18 builder.go:147] stdout: ""
  I0902 08:01:41.207382 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8480" for this suite. @ 09/02/25 08:01:41.221
• [6.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/02/25 08:01:41.271
  I0902 08:01:41.271916 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:01:41.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:01:41.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:01:41.39
  STEP: Creating configMap with name configmap-test-upd-08407e5e-d421-4c9e-b6a8-6b8bc17c6dcd @ 09/02/25 08:01:41.486
  STEP: Creating the pod @ 09/02/25 08:01:41.56
  STEP: Updating configmap configmap-test-upd-08407e5e-d421-4c9e-b6a8-6b8bc17c6dcd @ 09/02/25 08:01:43.724
  STEP: waiting to observe update in volume @ 09/02/25 08:01:43.752
  I0902 08:02:56.921330 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5412" for this suite. @ 09/02/25 08:02:56.935
• [75.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:02:56.966
  I0902 08:02:56.966483 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:02:56.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:02:57.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:02:57.043
  STEP: Creating configMap with name configmap-test-volume-f16fbcf3-9e4f-4e2f-8c5c-c7ea5e46a56e @ 09/02/25 08:02:57.051
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:02:57.062
  STEP: Saw pod success @ 09/02/25 08:03:01.169
  I0902 08:03:01.187153 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-8f26386b-923a-4c2f-b160-cb5db14cd802 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:03:01.211
  I0902 08:03:01.255560 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4288" for this suite. @ 09/02/25 08:03:01.268
• [4.323 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/02/25 08:03:01.292
  I0902 08:03:01.292374 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:03:01.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:03:01.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:03:01.366
  STEP: Creating secret with name s-test-opt-del-ddcee0b9-288a-4cdf-9c18-6df454726927 @ 09/02/25 08:03:01.386
  STEP: Creating secret with name s-test-opt-upd-536d2f56-8e52-4eb4-85ed-e28775aa59e1 @ 09/02/25 08:03:01.401
  STEP: Creating the pod @ 09/02/25 08:03:01.417
  STEP: Deleting secret s-test-opt-del-ddcee0b9-288a-4cdf-9c18-6df454726927 @ 09/02/25 08:03:05.589
  STEP: Updating secret s-test-opt-upd-536d2f56-8e52-4eb4-85ed-e28775aa59e1 @ 09/02/25 08:03:05.611
  STEP: Creating secret with name s-test-opt-create-0ffbea51-9ce6-48a4-8fc8-e2265f55c21c @ 09/02/25 08:03:05.629
  STEP: waiting to observe update in volume @ 09/02/25 08:03:05.648
  I0902 08:04:25.125976 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5592" for this suite. @ 09/02/25 08:04:25.141
• [83.864 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:04:25.16
  I0902 08:04:25.160962 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename csinodes @ 09/02/25 08:04:25.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:04:25.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:04:25.21
  STEP: Creating initial csiNode "e2e-csinode-rs4f9" @ 09/02/25 08:04:25.216
  STEP: Getting initial csiNode "e2e-csinode-rs4f9" @ 09/02/25 08:04:25.231
  STEP: Patching initial csiNode: "e2e-csinode-rs4f9" @ 09/02/25 08:04:25.238
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-rs4f9=patched" @ 09/02/25 08:04:25.249
  STEP: Delete initial csiNode: "e2e-csinode-rs4f9" @ 09/02/25 08:04:25.256
  STEP: Confirm deletion of csiNode "e2e-csinode-rs4f9" @ 09/02/25 08:04:25.27
  STEP: Creating replacement csiNode "e2e-csinode-trrhs" @ 09/02/25 08:04:25.277
  STEP: Getting replacement csiNode "e2e-csinode-trrhs" @ 09/02/25 08:04:25.286
  STEP: Updating replacement csiNode "e2e-csinode-trrhs" @ 09/02/25 08:04:25.292
  STEP: DeleteCollection of CSINodes with "e2e-csinode-trrhs=updated" label @ 09/02/25 08:04:25.307
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-trrhs=updated" @ 09/02/25 08:04:25.321
  I0902 08:04:25.328418 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4639" for this suite. @ 09/02/25 08:04:25.339
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/02/25 08:04:25.353
  I0902 08:04:25.353717 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename servicecidr @ 09/02/25 08:04:25.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:04:25.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:04:25.39
  STEP: getting @ 09/02/25 08:04:25.397
  STEP: patching @ 09/02/25 08:04:25.405
  STEP: updating @ 09/02/25 08:04:25.42
  STEP: listing @ 09/02/25 08:04:25.488
  STEP: watching @ 09/02/25 08:04:25.494
  I0902 08:04:25.497764 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-1552" for this suite. @ 09/02/25 08:04:25.505
• [0.164 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/02/25 08:04:25.519
  I0902 08:04:25.519398 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename events @ 09/02/25 08:04:25.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:04:25.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:04:25.555
  STEP: Create set of events @ 09/02/25 08:04:25.563
  I0902 08:04:25.578231 18 core_events.go:198] created test-event-1
  I0902 08:04:25.584961 18 core_events.go:198] created test-event-2
  I0902 08:04:25.595096 18 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/02/25 08:04:25.595
  STEP: delete collection of events @ 09/02/25 08:04:25.601
  I0902 08:04:25.601705 18 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/25 08:04:25.678
  I0902 08:04:25.678201 18 core_events.go:230] requesting list of events to confirm quantity
  I0902 08:04:25.684446 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6529" for this suite. @ 09/02/25 08:04:25.701
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/02/25 08:04:25.724
  I0902 08:04:25.726941 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:04:25.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:04:25.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:04:25.788
  I0902 08:04:25.793398 18 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:04:25.820725 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 08:04:25.831368 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-1 before test
  I0902 08:04:25.847106 18 predicates.go:958] cilium-jhvxm from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.847291 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0902 08:04:25.847328 18 predicates.go:958] cilium-node-init-j6hbf from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.847346 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:04:25.847365 18 predicates.go:958] cilium-operator-6f8d5c5f87-jdv7t from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.847529 18 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0902 08:04:25.847559 18 predicates.go:958] coredns-674b8bbfcf-5z5tp from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.847921 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:04:25.847947 18 predicates.go:958] coredns-674b8bbfcf-zrpl6 from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848079 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:04:25.848099 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848115 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:04:25.848132 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848148 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:04:25.848165 18 predicates.go:958] kube-proxy-6snpl from kube-system started at 2025-09-02 06:49:43 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848220 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:04:25.848239 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848254 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:04:25.848270 18 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-02 07:29:56 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.848287 18 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:04:25.848303 18 predicates.go:958] sonobuoy-e2e-job-898f82e033984cdd from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:04:25.848319 18 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0902 08:04:25.848334 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:04:25.848350 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:04:25.848364 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:04:25.848379 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0902 08:04:25.848404 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-2 before test
  I0902 08:04:25.864384 18 predicates.go:958] cilium-8mzx4 from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.865822 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 2
  I0902 08:04:25.866526 18 predicates.go:958] cilium-node-init-9ktxz from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.866617 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:04:25.866723 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.866759 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:04:25.866792 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.866820 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:04:25.866850 18 predicates.go:958] kube-proxy-mpdjr from kube-system started at 2025-09-02 06:56:43 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.866901 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:04:25.866938 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:04:25.866991 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:04:25.867036 18 predicates.go:958] pod-projected-secrets-267b55c8-7850-4773-ac60-f88905c8b494 from projected-5592 started at 2025-09-02 08:03:01 +0000 UTC (3 container statuses recorded)
  I0902 08:04:25.867087 18 predicates.go:960] 	Container creates-volume-test ready: true, restart count 0
  I0902 08:04:25.867115 18 predicates.go:960] 	Container dels-volume-test ready: true, restart count 0
  I0902 08:04:25.867140 18 predicates.go:960] 	Container upds-volume-test ready: true, restart count 0
  I0902 08:04:25.867175 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-swkx7 from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:04:25.867204 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:04:25.867228 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 08:04:25.868
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 08:04:27.961
  STEP: Trying to apply a random label on the found node. @ 09/02/25 08:04:27.998
  STEP: verifying the node has the label kubernetes.io/e2e-8a07ba20-872e-4623-b7a1-f952b37523aa 95 @ 09/02/25 08:04:28.075
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/02/25 08:04:28.135
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.238 on the node which pod4 resides and expect not scheduled @ 09/02/25 08:04:32.245
  STEP: removing the label kubernetes.io/e2e-8a07ba20-872e-4623-b7a1-f952b37523aa off the node ahkoog9eunoh-2 @ 09/02/25 08:09:32.348
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8a07ba20-872e-4623-b7a1-f952b37523aa @ 09/02/25 08:09:32.416
  I0902 08:09:32.479957 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7739" for this suite. @ 09/02/25 08:09:32.494
• [306.800 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/02/25 08:09:32.527
  I0902 08:09:32.527860 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:09:32.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:32.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:32.576
  STEP: Creating pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073 @ 09/02/25 08:09:32.584
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:09:36.684
  I0902 08:09:36.715803 18 container_probe.go:1748] Initial restart count of pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 is 0
  I0902 08:09:36.756206 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:38.766430 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:40.785382 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:42.801055 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:44.820141 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:46.827380 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:48.837084 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:50.877594 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:52.888280 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:54.900577 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:56.933184 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:09:58.950489 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:00.963485 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:02.971392 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:04.985874 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:07.014901 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:09.054556 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:11.064074 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:13.071265 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:15.081089 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:17.089256 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:19.097315 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:21.107600 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:23.122149 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:25.141806 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:27.150093 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:29.177434 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:31.186598 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:33.198672 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:35.209063 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:37.230268 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:39.270064 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:41.282691 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:43.304198 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:45.314040 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:47.326305 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:49.354072 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:51.374776 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:53.388534 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:55.405055 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:57.414534 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:10:59.426915 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:01.438338 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:03.447329 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:05.458625 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:07.470148 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:09.479418 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:11.493069 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:13.504850 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:15.513881 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:17.528975 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:19.547109 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:21.579302 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:23.588350 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:25.599443 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:27.654500 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:29.664261 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:31.675611 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:33.684471 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:35.695033 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:37.709870 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:39.727438 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:41.735808 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:43.743920 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:45.753719 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:47.833982 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:49.844577 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:51.852556 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:53.869506 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:55.876469 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:57.905438 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:11:59.935106 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:01.991117 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:04.003370 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:06.056186 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:08.062982 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:10.078003 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:12.097037 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:14.118269 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:16.128536 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:18.148379 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:20.167825 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:22.188998 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:24.197613 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:26.232704 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:28.257274 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:30.287227 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:32.331322 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:34.352499 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:36.420823 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:38.430229 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:40.440152 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:42.450090 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:44.497588 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:46.507451 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:48.520721 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:50.529367 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:52.540910 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:54.579292 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:56.589343 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:12:58.597738 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:00.610168 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:02.646552 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:04.715279 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:06.735602 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:08.755460 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:10.764996 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:12.804956 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:14.842005 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:16.887812 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:18.897528 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:20.907367 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:22.936382 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:24.965395 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:26.987123 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:28.997108 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:31.014188 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:33.029969 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  I0902 08:13:35.037287 18 container_probe.go:1758] Get pod liveness-1e3dace8-d6a5-49ae-ad1c-8b18c9347327 in namespace container-probe-6073
  STEP: deleting the pod @ 09/02/25 08:13:37.038
  I0902 08:13:37.095992 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6073" for this suite. @ 09/02/25 08:13:37.246
• [244.767 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/02/25 08:13:37.295
  I0902 08:13:37.296036 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:13:37.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:37.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:37.432
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 08:13:37.656
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:13:37.703
  I0902 08:13:37.741729 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:13:37.743334 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:13:39.059396 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:13:39.059768 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:13:39.756851 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:13:39.756953 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/02/25 08:13:39.763
  I0902 08:13:39.895583 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:13:39.895916 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:13:41.121978 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:13:41.122263 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:13:42.010671 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:13:42.010932 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:13:42.815442 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:13:42.815506 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:13:42.822
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8864, will wait for the garbage collector to delete the pods @ 09/02/25 08:13:42.823
  I0902 08:13:42.916336 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.483113ms
  I0902 08:13:43.026850 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 110.496402ms
  I0902 08:13:44.890337 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:13:44.890403 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:13:44.896375 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18729"},"items":null}

  I0902 08:13:44.902815 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18729"},"items":null}

  I0902 08:13:44.923703 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8864" for this suite. @ 09/02/25 08:13:44.931
• [7.653 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:13:44.948
  I0902 08:13:44.948281 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:13:44.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:45.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:45.04
  STEP: Creating configMap with name projected-configmap-test-volume-0979ab7b-5c2b-4686-b6d0-6043564fc88b @ 09/02/25 08:13:45.05
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:13:45.059
  STEP: Saw pod success @ 09/02/25 08:13:49.143
  I0902 08:13:49.156049 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-3187f6a6-d8d5-46a8-acf3-ffedc4c331f5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:13:49.193
  I0902 08:13:49.220066 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6027" for this suite. @ 09/02/25 08:13:49.228
• [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 09/02/25 08:13:49.242
  I0902 08:13:49.242250 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:13:49.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:49.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:49.32
  STEP: creating service in namespace services-8208 @ 09/02/25 08:13:49.333
  STEP: creating service affinity-nodeport in namespace services-8208 @ 09/02/25 08:13:49.333
  I0902 08:13:49.448490 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0902 08:13:51.515549 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 13, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 13, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 13, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 13, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:13:53.515765 18 resource.go:361] Creating new exec pod
  I0902 08:13:55.565710 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8208 exec execpod-affinityzgmvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0902 08:13:55.959362 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.26.10) 80 port [tcp/http] succeeded!\n"
  I0902 08:13:55.959456 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:13:55.961218 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8208 exec execpod-affinityzgmvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.26.10 80'
  I0902 08:13:56.336819 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.26.10 80\nConnection to 10.233.26.10 80 port [tcp/http] succeeded!\n"
  I0902 08:13:56.338440 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:13:56.339470 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8208 exec execpod-affinityzgmvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 32376'
  I0902 08:13:56.594014 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.25 32376\nConnection to 192.168.121.25 32376 port [tcp/*] succeeded!\n"
  I0902 08:13:56.594355 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:13:56.594762 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8208 exec execpod-affinityzgmvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.238 32376'
  I0902 08:13:56.917845 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.238 32376\nConnection to 192.168.121.238 32376 port [tcp/*] succeeded!\n"
  I0902 08:13:56.918060 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:13:56.918472 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8208 exec execpod-affinityzgmvn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/ ; done'
  I0902 08:13:57.513460 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:32376/\n"
  I0902 08:13:57.513552 18 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws\naffinity-nodeport-85dffb5fc7-dv6ws"
  I0902 08:13:57.513599 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513619 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513665 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513680 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513696 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513711 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513725 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513740 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513754 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513791 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513806 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513823 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513839 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513852 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513865 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.513879 18 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dv6ws
  I0902 08:13:57.514009 18 service.go:4352] Cleaning up the exec pod
  I0902 08:13:57.864454 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8208" for this suite. @ 09/02/25 08:13:57.984
• [8.794 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/02/25 08:13:58.047
  I0902 08:13:58.047607 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:13:58.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:58.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:58.103
  I0902 08:13:58.121054 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 08:14:02.053
  I0902 08:14:02.054396 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-2836 --namespace=crd-publish-openapi-2836 create -f -'
  I0902 08:14:02.385295 18 builder.go:146] stderr: ""
  I0902 08:14:02.385565 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1846-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0902 08:14:02.385851 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-2836 --namespace=crd-publish-openapi-2836 delete e2e-test-crd-publish-openapi-1846-crds test-cr'
  I0902 08:14:02.658402 18 builder.go:146] stderr: ""
  I0902 08:14:02.658509 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1846-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0902 08:14:02.658874 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-2836 --namespace=crd-publish-openapi-2836 apply -f -'
  I0902 08:14:02.879824 18 builder.go:146] stderr: ""
  I0902 08:14:02.879939 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1846-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0902 08:14:02.880308 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-2836 --namespace=crd-publish-openapi-2836 delete e2e-test-crd-publish-openapi-1846-crds test-cr'
  I0902 08:14:03.095034 18 builder.go:146] stderr: ""
  I0902 08:14:03.095214 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1846-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/25 08:14:03.095
  I0902 08:14:03.095860 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-2836 explain e2e-test-crd-publish-openapi-1846-crds'
  I0902 08:14:03.488703 18 builder.go:146] stderr: ""
  I0902 08:14:03.488891 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1846-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0902 08:14:05.831281 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2836" for this suite. @ 09/02/25 08:14:05.847
• [7.816 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 09/02/25 08:14:05.863
  I0902 08:14:05.863469 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:14:05.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:05.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:05.93
  STEP: Creating a test headless service @ 09/02/25 08:14:05.935
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7967.svc.cluster.local;sleep 1; done
   @ 09/02/25 08:14:05.948
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7967.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7967.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7967.svc.cluster.local;sleep 1; done
   @ 09/02/25 08:14:05.948
  STEP: creating a pod to probe DNS @ 09/02/25 08:14:05.948
  STEP: submitting the pod to kubernetes @ 09/02/25 08:14:05.948
  STEP: retrieving the pod @ 09/02/25 08:14:10.028
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:14:10.039
  I0902 08:14:10.111990 18 dns_common.go:546] DNS probes using dns-7967/dns-test-893142a8-6db3-4f76-93fc-6751557e5398 succeeded

  STEP: deleting the pod @ 09/02/25 08:14:10.113
  STEP: deleting the test headless service @ 09/02/25 08:14:10.193
  I0902 08:14:10.242309 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7967" for this suite. @ 09/02/25 08:14:10.302
• [4.468 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/02/25 08:14:10.337
  I0902 08:14:10.337074 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:14:10.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:10.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:10.416
  STEP: Creating a pod to test substitution in volume subpath @ 09/02/25 08:14:10.42
  STEP: Saw pod success @ 09/02/25 08:14:14.518
  I0902 08:14:14.528848 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod var-expansion-ea3fb5ae-a81b-4602-8dc0-a85b7ce362bc container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:14:14.547
  I0902 08:14:14.582777 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6407" for this suite. @ 09/02/25 08:14:14.591
• [4.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/02/25 08:14:14.606
  I0902 08:14:14.606666 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:14:14.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:14.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:14.988
  I0902 08:14:15.001033 18 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:14:15.049041 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 08:14:15.057309 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-1 before test
  I0902 08:14:15.069267 18 predicates.go:958] cilium-jhvxm from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.070306 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0902 08:14:15.070432 18 predicates.go:958] cilium-node-init-j6hbf from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.070451 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:14:15.070810 18 predicates.go:958] cilium-operator-6f8d5c5f87-jdv7t from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.070829 18 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0902 08:14:15.071099 18 predicates.go:958] coredns-674b8bbfcf-5z5tp from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071291 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:14:15.071315 18 predicates.go:958] coredns-674b8bbfcf-zrpl6 from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071331 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:14:15.071367 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071384 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:14:15.071398 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071410 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:14:15.071424 18 predicates.go:958] kube-proxy-6snpl from kube-system started at 2025-09-02 06:49:43 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071436 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:14:15.071452 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071465 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:14:15.071479 18 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-02 07:29:56 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.071491 18 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:14:15.071505 18 predicates.go:958] sonobuoy-e2e-job-898f82e033984cdd from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:14:15.071517 18 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0902 08:14:15.071529 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:14:15.071543 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:14:15.071555 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:14:15.071567 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0902 08:14:15.071580 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-2 before test
  I0902 08:14:15.083373 18 predicates.go:958] cilium-8mzx4 from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.083690 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 2
  I0902 08:14:15.083721 18 predicates.go:958] cilium-node-init-9ktxz from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.084160 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:14:15.084357 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.084907 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:14:15.085235 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.085762 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:14:15.086083 18 predicates.go:958] kube-proxy-mpdjr from kube-system started at 2025-09-02 06:56:43 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.086105 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:14:15.086304 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:14:15.086557 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:14:15.086578 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-swkx7 from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:14:15.086622 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:14:15.086656 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 08:14:15.086
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 08:14:17.131
  STEP: Trying to apply a random label on the found node. @ 09/02/25 08:14:17.155
  STEP: verifying the node has the label kubernetes.io/e2e-0ced3bce-86b4-406b-8c82-b05d6d37c661 42 @ 09/02/25 08:14:17.183
  STEP: Trying to relaunch the pod, now with labels. @ 09/02/25 08:14:17.196
  STEP: removing the label kubernetes.io/e2e-0ced3bce-86b4-406b-8c82-b05d6d37c661 off the node ahkoog9eunoh-2 @ 09/02/25 08:14:19.265
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0ced3bce-86b4-406b-8c82-b05d6d37c661 @ 09/02/25 08:14:19.292
  I0902 08:14:19.310283 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8217" for this suite. @ 09/02/25 08:14:19.323
• [4.732 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 09/02/25 08:14:19.338
  I0902 08:14:19.338582 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:14:19.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:19.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:19.377
  STEP: Counting existing ResourceQuota @ 09/02/25 08:14:19.391
  STEP: Creating a ResourceQuota @ 09/02/25 08:14:24.403
  STEP: Ensuring resource quota status is calculated @ 09/02/25 08:14:24.418
  STEP: Creating a ReplicationController @ 09/02/25 08:14:26.431
  STEP: Ensuring resource quota status captures replication controller creation @ 09/02/25 08:14:26.467
  STEP: Deleting a ReplicationController @ 09/02/25 08:14:28.477
  STEP: Ensuring resource quota status released usage @ 09/02/25 08:14:28.505
  I0902 08:14:30.516437 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7277" for this suite. @ 09/02/25 08:14:30.535
• [11.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/02/25 08:14:30.586
  I0902 08:14:30.586560 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 08:14:30.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:30.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:30.732
  STEP: Creating a cronjob @ 09/02/25 08:14:30.741
  STEP: creating @ 09/02/25 08:14:30.741
  STEP: getting @ 09/02/25 08:14:30.766
  STEP: listing @ 09/02/25 08:14:30.827
  STEP: watching @ 09/02/25 08:14:30.837
  I0902 08:14:30.837800 18 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:14:30.84
  STEP: cluster-wide watching @ 09/02/25 08:14:30.851
  I0902 08:14:30.851753 18 cronjob.go:407] starting watch
  STEP: patching @ 09/02/25 08:14:30.855
  STEP: updating @ 09/02/25 08:14:30.887
  I0902 08:14:30.934218 18 cronjob.go:431] waiting for watch events with expected annotations
  I0902 08:14:30.934625 18 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/02/25 08:14:30.935
  STEP: updating /status @ 09/02/25 08:14:30.948
  STEP: get /status @ 09/02/25 08:14:30.965
  STEP: deleting @ 09/02/25 08:14:30.98
  STEP: deleting a collection @ 09/02/25 08:14:31.046
  I0902 08:14:31.075159 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7940" for this suite. @ 09/02/25 08:14:31.084
• [0.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/02/25 08:14:31.103
  I0902 08:14:31.104558 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 08:14:31.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:31.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:31.159
  I0902 08:14:31.166806 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 08:14:31.797411 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8826" for this suite. @ 09/02/25 08:14:31.829
• [0.749 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 09/02/25 08:14:31.854
  I0902 08:14:31.854229 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:14:31.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:31.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:31.931
  STEP: Creating a test headless service @ 09/02/25 08:14:31.946
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5413 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5413;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5413 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5413;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5413.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5413.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5413.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5413.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5413.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5413.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5413.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5413.svc;check="$$(dig +notcp +noall +answer +search 244.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.244_tcp@PTR;sleep 1; done
   @ 09/02/25 08:14:32.17
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5413 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5413;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5413 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5413;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5413.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5413.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5413.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5413.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5413.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5413.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5413.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5413.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5413.svc;check="$$(dig +notcp +noall +answer +search 244.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.244_tcp@PTR;sleep 1; done
   @ 09/02/25 08:14:32.17
  STEP: creating a pod to probe DNS @ 09/02/25 08:14:32.17
  STEP: submitting the pod to kubernetes @ 09/02/25 08:14:32.171
  STEP: retrieving the pod @ 09/02/25 08:14:36.351
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:14:36.369
  I0902 08:14:36.588359 18 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.599199 18 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.607864 18 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5413 from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.659737 18 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5413 from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.666984 18 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.677549 18 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.686677 18 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.696376 18 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.804813 18 dns_common.go:495] Unable to read jessie_udp@_http._tcp.test-service-2.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.929888 18 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-5413.svc from pod dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b: the server could not find the requested resource (get pods dns-test-7d060dbb-303b-40aa-bda8-417a0798719b)
  I0902 08:14:36.998726 18 dns_common.go:506] Lookups using dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5413 jessie_tcp@dns-test-service.dns-5413 jessie_udp@dns-test-service.dns-5413.svc jessie_tcp@dns-test-service.dns-5413.svc jessie_udp@_http._tcp.dns-test-service.dns-5413.svc jessie_tcp@_http._tcp.dns-test-service.dns-5413.svc jessie_udp@_http._tcp.test-service-2.dns-5413.svc jessie_tcp@_http._tcp.test-service-2.dns-5413.svc]

  I0902 08:14:37.020173 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:14:37.078682 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:14:37.113114 18 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:14:41.704568 18 dns_common.go:546] DNS probes using dns-5413/dns-test-7d060dbb-303b-40aa-bda8-417a0798719b succeeded

  STEP: deleting the pod @ 09/02/25 08:14:41.705
  STEP: deleting the test service @ 09/02/25 08:14:41.803
  STEP: deleting the test headless service @ 09/02/25 08:14:41.992
  I0902 08:14:42.043811 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5413" for this suite. @ 09/02/25 08:14:42.087
• [10.269 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/02/25 08:14:42.123
  I0902 08:14:42.123691 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:14:42.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:42.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:42.172
  STEP: Setting up server cert @ 09/02/25 08:14:42.351
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:14:44.01
  STEP: Deploying the webhook pod @ 09/02/25 08:14:44.068
  STEP: Wait for the deployment to be ready @ 09/02/25 08:14:44.214
  I0902 08:14:44.230249 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:14:46.277
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:14:46.339
  I0902 08:14:47.340083 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/02/25 08:14:47.352
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/02/25 08:14:47.43
  I0902 08:14:47.431288 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 08:14:47.815935 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9262" for this suite. @ 09/02/25 08:14:47.848
  STEP: Destroying namespace "webhook-markers-9059" for this suite. @ 09/02/25 08:14:47.887
• [5.791 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/02/25 08:14:47.915
  I0902 08:14:47.915725 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:14:47.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:47.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:48.005
  STEP: Creating configMap with name projected-configmap-test-volume-map-508154f4-a284-49f7-8b55-59e62f9ea88a @ 09/02/25 08:14:48.012
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:14:48.032
  STEP: Saw pod success @ 09/02/25 08:14:52.089
  I0902 08:14:52.102135 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-cde18ee8-a9c4-4afd-869d-2fe2842c63a0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:14:52.149
  I0902 08:14:52.180559 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6148" for this suite. @ 09/02/25 08:14:52.187
• [4.284 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/02/25 08:14:52.2
  I0902 08:14:52.200440 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:14:52.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:52.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:52.258
  STEP: Creating projection with secret that has name projected-secret-test-bf94f0fc-0e07-43b4-9c11-00a7e7e31e1a @ 09/02/25 08:14:52.264
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:14:52.273
  STEP: Saw pod success @ 09/02/25 08:14:56.322
  I0902 08:14:56.328813 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-secrets-cc7ea236-0faa-4400-8881-be88a2342123 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:14:56.341
  I0902 08:14:56.418177 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1067" for this suite. @ 09/02/25 08:14:56.426
• [4.260 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 09/02/25 08:14:56.461
  I0902 08:14:56.461550 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:14:56.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:56.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:56.52
  STEP: validating cluster-info @ 09/02/25 08:14:56.526
  I0902 08:14:56.526854 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-480 cluster-info'
  I0902 08:14:56.766461 18 builder.go:146] stderr: ""
  I0902 08:14:56.766530 18 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0902 08:14:56.766822 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-480" for this suite. @ 09/02/25 08:14:56.778
• [0.329 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 09/02/25 08:14:56.79
  I0902 08:14:56.790410 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename servicecidr @ 09/02/25 08:14:56.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:56.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:56.908
  STEP: creating @ 09/02/25 08:14:56.917
  STEP: patching @ 09/02/25 08:14:56.942
  STEP: updating @ 09/02/25 08:14:56.963
  STEP: getting @ 09/02/25 08:14:57.001
  STEP: listing @ 09/02/25 08:14:57.013
  STEP: watching @ 09/02/25 08:14:57.018
  STEP: deleting @ 09/02/25 08:14:57.02
  STEP: deleting a collection @ 09/02/25 08:14:57.058
  I0902 08:14:57.104969 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5531" for this suite. @ 09/02/25 08:14:57.115
• [0.373 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 09/02/25 08:14:57.163
  I0902 08:14:57.163994 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 08:14:57.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:57.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:57.192
  I0902 08:15:05.346586 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2451" for this suite. @ 09/02/25 08:15:05.375
• [8.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/02/25 08:15:05.432
  I0902 08:15:05.433009 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:15:05.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:05.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:05.529
  I0902 08:15:05.574474 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0902 08:16:05.587791 18 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/02/25 08:16:05.596
  STEP: Adding a custom resource @ 09/02/25 08:16:05.596
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/02/25 08:16:05.621
  I0902 08:16:05.644457 18 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/02/25 08:16:05.644
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/02/25 08:16:07.663
  I0902 08:16:07.676443 18 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/02/25 08:16:07.676
  STEP: Verifying the pod has the pod disruption condition @ 09/02/25 08:16:09.718
  I0902 08:16:09.733223 18 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0902 08:16:10.291041 18 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/02/25 08:16:10.338
  STEP: Removing a custom resource @ 09/02/25 08:16:10.394
  I0902 08:16:10.423188 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3051" for this suite. @ 09/02/25 08:16:10.43
• [65.013 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 09/02/25 08:16:10.446
  I0902 08:16:10.446811 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:16:10.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:10.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:10.514
  STEP: creating Agnhost RC @ 09/02/25 08:16:10.521
  I0902 08:16:10.521752 18 kubectl.go:1540] namespace kubectl-7546
  I0902 08:16:10.523033 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7546 create -f -'
  I0902 08:16:11.128172 18 builder.go:146] stderr: ""
  I0902 08:16:11.128279 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 08:16:11.128
  I0902 08:16:12.154126 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:16:12.154190 18 framework.go:733] Found 0 / 1
  I0902 08:16:13.149937 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:16:13.150028 18 framework.go:733] Found 0 / 1
  I0902 08:16:14.140822 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:16:14.140966 18 framework.go:733] Found 1 / 1
  I0902 08:16:14.141217 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0902 08:16:14.146465 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:16:14.146553 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 08:16:14.146582 18 kubectl.go:1547] wait on agnhost-primary startup in kubectl-7546 
  I0902 08:16:14.146926 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7546 logs agnhost-primary-wgfxj agnhost-primary'
  I0902 08:16:14.322294 18 builder.go:146] stderr: ""
  I0902 08:16:14.322360 18 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/02/25 08:16:14.322
  I0902 08:16:14.322696 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7546 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0902 08:16:14.553418 18 builder.go:146] stderr: ""
  I0902 08:16:14.553482 18 builder.go:147] stdout: "service/rm2 exposed\n"
  I0902 08:16:14.576768 18 utils.go:1115] Service rm2 in namespace kubectl-7546 found.
  STEP: exposing service @ 09/02/25 08:16:16.595
  I0902 08:16:16.596249 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7546 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0902 08:16:16.959000 18 builder.go:146] stderr: ""
  I0902 08:16:16.959117 18 builder.go:147] stdout: "service/rm3 exposed\n"
  I0902 08:16:16.992882 18 utils.go:1115] Service rm3 in namespace kubectl-7546 found.
  I0902 08:16:19.006253 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7546" for this suite. @ 09/02/25 08:16:19.021
• [8.586 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/02/25 08:16:19.034
  I0902 08:16:19.034747 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:16:19.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:19.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:19.067
  STEP: Setting up server cert @ 09/02/25 08:16:19.14
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:16:20.614
  STEP: Deploying the webhook pod @ 09/02/25 08:16:20.627
  STEP: Wait for the deployment to be ready @ 09/02/25 08:16:20.728
  I0902 08:16:20.806381 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 08:16:22.833690 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 08:16:24.87
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:16:24.913
  I0902 08:16:25.923291 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 08:16:25.931
  STEP: verifying the mutating webhook match conditions @ 09/02/25 08:16:25.982
  STEP: updating the mutating webhook match conditions @ 09/02/25 08:16:25.997
  STEP: verifying the mutating webhook match conditions @ 09/02/25 08:16:26.022
  I0902 08:16:26.208917 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3384" for this suite. @ 09/02/25 08:16:26.219
  STEP: Destroying namespace "webhook-markers-1874" for this suite. @ 09/02/25 08:16:26.252
• [7.250 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 09/02/25 08:16:26.284
  I0902 08:16:26.284673 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:16:26.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:26.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:26.373
  STEP: creating service in namespace services-6749 @ 09/02/25 08:16:26.379
  STEP: creating service affinity-clusterip in namespace services-6749 @ 09/02/25 08:16:26.379
  I0902 08:16:26.521704 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0902 08:16:28.605737 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-6dd57cf8dc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:16:30.583268 18 resource.go:361] Creating new exec pod
  I0902 08:16:32.698723 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-6749 exec execpod-affinity92msg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0902 08:16:33.052243 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.52.16) 80 port [tcp/http] succeeded!\n"
  I0902 08:16:33.052357 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:16:33.052541 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-6749 exec execpod-affinity92msg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.16 80'
  I0902 08:16:33.319014 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.16 80\nConnection to 10.233.52.16 80 port [tcp/http] succeeded!\n"
  I0902 08:16:33.319126 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:16:33.319525 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-6749 exec execpod-affinity92msg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/ ; done'
  I0902 08:16:33.937990 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.52.16:80/\n"
  I0902 08:16:33.938150 18 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p\naffinity-clusterip-6dd57cf8dc-z474p"
  I0902 08:16:33.938213 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938233 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938272 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938289 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938303 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938316 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938329 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938342 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938387 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938407 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938421 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938435 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938449 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938475 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938488 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938501 18 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-z474p
  I0902 08:16:33.938613 18 service.go:4352] Cleaning up the exec pod
  I0902 08:16:34.151595 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6749" for this suite. @ 09/02/25 08:16:34.205
• [7.983 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/02/25 08:16:34.268
  I0902 08:16:34.268217 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:16:34.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:34.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:34.348
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/25 08:16:34.359
  STEP: Saw pod success @ 09/02/25 08:16:38.542
  I0902 08:16:38.566066 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-c9d17e37-91a9-408f-8767-405bd00793e2 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:16:38.602
  I0902 08:16:38.649482 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5489" for this suite. @ 09/02/25 08:16:38.66
• [4.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/02/25 08:16:38.684
  I0902 08:16:38.684895 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:16:38.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:38.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:38.766
  STEP: Creating configMap with name cm-test-opt-del-d1988885-b077-4c45-b386-1a4129d69c9b @ 09/02/25 08:16:38.785
  STEP: Creating configMap with name cm-test-opt-upd-af93912f-a80a-4b38-ba4a-69c89e7c9c3b @ 09/02/25 08:16:38.801
  STEP: Creating the pod @ 09/02/25 08:16:38.811
  STEP: Deleting configmap cm-test-opt-del-d1988885-b077-4c45-b386-1a4129d69c9b @ 09/02/25 08:16:40.993
  STEP: Updating configmap cm-test-opt-upd-af93912f-a80a-4b38-ba4a-69c89e7c9c3b @ 09/02/25 08:16:41.016
  STEP: Creating configMap with name cm-test-opt-create-6deaeba4-44a8-439b-84c9-8c9f5c26175e @ 09/02/25 08:16:41.026
  STEP: waiting to observe update in volume @ 09/02/25 08:16:41.048
  I0902 08:18:00.555048 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9040" for this suite. @ 09/02/25 08:18:00.57
• [81.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/02/25 08:18:00.588
  I0902 08:18:00.588544 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename server-version @ 09/02/25 08:18:00.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:00.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:00.736
  STEP: Request ServerVersion @ 09/02/25 08:18:00.75
  STEP: Confirm major version @ 09/02/25 08:18:00.753
  I0902 08:18:00.754318 18 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/02/25 08:18:00.754
  I0902 08:18:00.754652 18 server_version.go:58] cleanMinorVersion: 33
  I0902 08:18:00.754689 18 server_version.go:62] Minor version: 33
  I0902 08:18:00.755696 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2959" for this suite. @ 09/02/25 08:18:00.776
• [0.203 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/02/25 08:18:00.792
  I0902 08:18:00.792920 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:18:00.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:00.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:00.848
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:18:00.889
  STEP: Saw pod success @ 09/02/25 08:18:04.954
  I0902 08:18:04.962676 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-9b33b2e7-dc55-470d-9dc7-40dd88709ad3 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:18:04.978
  I0902 08:18:05.009390 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9454" for this suite. @ 09/02/25 08:18:05.018
• [4.243 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/02/25 08:18:05.036
  I0902 08:18:05.037013 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:18:05.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:05.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:05.107
  STEP: Creating a pod to test env composition @ 09/02/25 08:18:05.114
  STEP: Saw pod success @ 09/02/25 08:18:09.197
  I0902 08:18:09.202468 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod var-expansion-08908755-772d-41f6-84d8-c02cc9844244 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:18:09.219
  I0902 08:18:09.288769 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5762" for this suite. @ 09/02/25 08:18:09.298
• [4.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/02/25 08:18:09.323
  I0902 08:18:09.323112 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 08:18:09.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:09.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:09.367
  STEP: referencing a single matching pod @ 09/02/25 08:18:11.826
  I0902 08:18:11.844694      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/02/25 08:18:11.844
  I0902 08:18:11.852592 18 endpointslice.go:946] Expected at least 2 EndpointSlices for Service endpointslice-6053/example-named-port, got 1
  I0902 08:18:11.854164 18 endpointslice.go:952] 0 - {"metadata":{"name":"example-named-port-rd82f","generateName":"example-named-port-","namespace":"endpointslice-6053","uid":"8214b723-8c45-42a9-9b41-7233dd61d9a5","resourceVersion":"20368","generation":2,"creationTimestamp":"2025-09-02T08:18:09Z","labels":{"endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","kubernetes.io/service-name":"example-named-port"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2025-09-02T08:18:11Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"example-named-port","uid":"bf1cbbc6-7286-4e76-af2b-18662a93d56f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2025-09-02T08:18:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:kubernetes.io/service-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bf1cbbc6-7286-4e76-af2b-18662a93d56f\"}":{}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.233.64.35"],"conditions":{"ready":true,"serving":true,"terminating":false},"targetRef":{"kind":"Pod","namespace":"endpointslice-6053","name":"pod1","uid":"6137fb91-0196-400b-99e3-32b2be4890c0"},"nodeName":"ahkoog9eunoh-2"}],"ports":[{"name":"http","protocol":"TCP","port":3000}]}
  I0902 08:18:13.861218      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/02/25 08:18:13.861
  I0902 08:18:13.908281      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/02/25 08:18:13.908
  I0902 08:18:14.065662 18 endpointslice.go:938] EndpointSlice for Service endpointslice-6053/example-named-port not found
  I0902 08:18:16.067420      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:18:16.067801 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6053" for this suite. @ 09/02/25 08:18:16.12
• [6.823 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/02/25 08:18:16.146
  I0902 08:18:16.146830 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption @ 09/02/25 08:18:16.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:16.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:16.223
  STEP: Creating a kubernetes client @ 09/02/25 08:18:16.23
  I0902 08:18:16.231033 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption-2 @ 09/02/25 08:18:16.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:16.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:16.269
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:18:16.291
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:18:18.309
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:18:20.328
  STEP: listing a collection of PDBs across all namespaces @ 09/02/25 08:18:20.361
  STEP: listing a collection of PDBs in namespace disruption-8772 @ 09/02/25 08:18:20.392
  STEP: deleting a collection of PDBs @ 09/02/25 08:18:20.492
  STEP: Waiting for the PDB collection to be deleted @ 09/02/25 08:18:20.537
  I0902 08:18:20.544416 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7313" for this suite. @ 09/02/25 08:18:20.556
  I0902 08:18:20.572429 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8772" for this suite. @ 09/02/25 08:18:20.675
• [4.570 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/02/25 08:18:20.716
  I0902 08:18:20.716730 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:18:20.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:20.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:20.826
  STEP: Setting up server cert @ 09/02/25 08:18:20.89
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:18:23.265
  STEP: Deploying the webhook pod @ 09/02/25 08:18:23.284
  STEP: Wait for the deployment to be ready @ 09/02/25 08:18:23.315
  I0902 08:18:23.386430 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:18:25.431
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:18:25.523
  I0902 08:18:26.523733 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/02/25 08:18:26.538
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:18:26.539
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/02/25 08:18:26.612
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/02/25 08:18:27.683
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:18:27.685
  STEP: Having no error when timeout is longer than webhook latency @ 09/02/25 08:18:28.879
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:18:28.879
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/02/25 08:18:33.983
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:18:33.983
  I0902 08:18:39.349482 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-554" for this suite. @ 09/02/25 08:18:39.359
  STEP: Destroying namespace "webhook-markers-3850" for this suite. @ 09/02/25 08:18:39.373
• [18.672 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/02/25 08:18:39.393
  I0902 08:18:39.393801 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:18:39.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:39.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:39.446
  STEP: Create a pod template @ 09/02/25 08:18:39.454
  STEP: Replace a pod template @ 09/02/25 08:18:39.487
  I0902 08:18:39.533151 18 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0902 08:18:39.533649 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9081" for this suite. @ 09/02/25 08:18:39.542
• [0.161 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 09/02/25 08:18:39.554
  I0902 08:18:39.554672 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 08:18:39.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:39.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:39.588
  STEP: Creating a job @ 09/02/25 08:18:39.597
  STEP: Ensuring active pods == parallelism @ 09/02/25 08:18:39.643
  STEP: delete a job @ 09/02/25 08:18:41.669
  STEP: deleting Job.batch foo in namespace job-7215, will wait for the garbage collector to delete the pods @ 09/02/25 08:18:41.67
  I0902 08:18:41.761368 18 resources.go:139] Deleting Job.batch foo took: 29.549148ms
  I0902 08:18:41.866326 18 resources.go:163] Terminating Job.batch foo pods took: 104.945839ms
  STEP: Ensuring job was deleted @ 09/02/25 08:18:43.566
  I0902 08:18:43.574179 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7215" for this suite. @ 09/02/25 08:18:43.584
• [4.042 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/02/25 08:18:43.597
  I0902 08:18:43.597579 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:18:43.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:43.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:43.63
  STEP: Create a ReplicaSet @ 09/02/25 08:18:43.636
  STEP: Verify that the required pods have come up @ 09/02/25 08:18:43.647
  I0902 08:18:43.654759 18 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0902 08:18:48.668361 18 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/02/25 08:18:48.668
  I0902 08:18:48.676009 18 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/02/25 08:18:48.676
  STEP: DeleteCollection of the ReplicaSets @ 09/02/25 08:18:48.683
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/02/25 08:18:48.726
  I0902 08:18:48.746240 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3162" for this suite. @ 09/02/25 08:18:48.764
• [5.230 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 09/02/25 08:18:48.865
  I0902 08:18:48.865917 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:18:48.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:48.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:48.933
  STEP: creating service endpoint-test2 in namespace services-7124 @ 09/02/25 08:18:48.947
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7124 to expose endpoints map[] @ 09/02/25 08:18:49.163
  I0902 08:18:49.195886      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:18:49.377542 18 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7124 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7124 @ 09/02/25 08:18:49.379
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7124 to expose endpoints map[pod1:[80]] @ 09/02/25 08:18:51.62
  I0902 08:18:51.633078      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:18:51.656710 18 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7124 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/02/25 08:18:51.657
  I0902 08:18:51.658028 18 resource.go:361] Creating new exec pod
  I0902 08:18:53.693799 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0902 08:18:54.190849 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.33.36) 80 port [tcp/http] succeeded!\n"
  I0902 08:18:54.190936 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:54.191886 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.33.36 80'
  I0902 08:18:54.504007 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.33.36 80\nConnection to 10.233.33.36 80 port [tcp/http] succeeded!\n"
  I0902 08:18:54.504078 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7124 @ 09/02/25 08:18:54.504
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7124 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/02/25 08:18:58.554
  I0902 08:18:58.605367      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:18:58.617168 18 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7124 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/02/25 08:18:58.617
  I0902 08:18:58.622525 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0902 08:18:58.915920 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.33.36) 80 port [tcp/http] succeeded!\n"
  I0902 08:18:58.916230 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:58.916831 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.33.36 80'
  I0902 08:18:59.174780 18 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.33.36 80\necho hostName\nConnection to 10.233.33.36 80 port [tcp/http] succeeded!\n"
  I0902 08:18:59.174883 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7124 @ 09/02/25 08:18:59.175
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7124 to expose endpoints map[pod2:[80]] @ 09/02/25 08:18:59.234
  I0902 08:18:59.292618      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:18:59.304682 18 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7124 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/02/25 08:18:59.304
  I0902 08:18:59.311211 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0902 08:18:59.674939 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.33.36) 80 port [tcp/http] succeeded!\n"
  I0902 08:18:59.675008 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:59.675402 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7124 exec execpod684fl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.33.36 80'
  I0902 08:19:00.065744 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.33.36 80\nConnection to 10.233.33.36 80 port [tcp/http] succeeded!\n"
  I0902 08:19:00.065821 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7124 @ 09/02/25 08:19:00.065
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7124 to expose endpoints map[] @ 09/02/25 08:19:00.125
  I0902 08:19:00.142503      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:19:01.183834      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:19:01.209112 18 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7124 exposes endpoints map[]
  I0902 08:19:01.373066 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7124" for this suite. @ 09/02/25 08:19:01.405
• [12.555 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/02/25 08:19:01.421
  I0902 08:19:01.421767 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:19:01.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:19:01.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:19:01.465
  STEP: creating a watch on configmaps @ 09/02/25 08:19:01.472
  STEP: creating a new configmap @ 09/02/25 08:19:01.475
  STEP: modifying the configmap once @ 09/02/25 08:19:01.491
  STEP: closing the watch once it receives two notifications @ 09/02/25 08:19:01.513
  I0902 08:19:01.514060 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5451  1b57f8a8-dfc9-4050-a0a6-4c6a64152463 20879 0 2025-09-02 08:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:19:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:19:01.514382 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5451  1b57f8a8-dfc9-4050-a0a6-4c6a64152463 20881 0 2025-09-02 08:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:19:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/02/25 08:19:01.514
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/02/25 08:19:01.533
  STEP: deleting the configmap @ 09/02/25 08:19:01.539
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/02/25 08:19:01.566
  I0902 08:19:01.568201 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5451  1b57f8a8-dfc9-4050-a0a6-4c6a64152463 20882 0 2025-09-02 08:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:19:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:19:01.568551 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5451  1b57f8a8-dfc9-4050-a0a6-4c6a64152463 20883 0 2025-09-02 08:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:19:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:19:01.568810 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5451" for this suite. @ 09/02/25 08:19:01.578
• [0.173 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/02/25 08:19:01.594
  I0902 08:19:01.595242 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:19:01.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:19:01.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:19:01.657
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-282fca65-75ff-4be8-b814-fd44ae0a4cd2 @ 09/02/25 08:19:01.679
  STEP: Creating the pod @ 09/02/25 08:19:01.695
  STEP: Updating configmap projected-configmap-test-upd-282fca65-75ff-4be8-b814-fd44ae0a4cd2 @ 09/02/25 08:19:03.768
  STEP: waiting to observe update in volume @ 09/02/25 08:19:03.804
  I0902 08:19:05.874448 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3156" for this suite. @ 09/02/25 08:19:05.92
• [4.338 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:19:05.935
  I0902 08:19:05.936019 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:19:05.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:19:05.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:19:05.979
  STEP: Creating secret with name secret-test-09280522-a132-436d-95fc-fd340275b6cd @ 09/02/25 08:19:05.987
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:19:06.043
  STEP: Saw pod success @ 09/02/25 08:19:10.122
  I0902 08:19:10.129545 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-a779b7c9-147a-405c-86c4-cb3c40fb29fe container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:19:10.143
  I0902 08:19:10.179083 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1564" for this suite. @ 09/02/25 08:19:10.189
• [4.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/02/25 08:19:10.205
  I0902 08:19:10.205164 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:19:10.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:19:10.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:19:10.242
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/25 08:19:10.247
  STEP: Saw pod success @ 09/02/25 08:19:14.428
  I0902 08:19:14.436551 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-b4cbf21e-ecfd-4aae-a2f1-49e5b20ca321 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:19:14.452
  I0902 08:19:14.483371 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7624" for this suite. @ 09/02/25 08:19:14.49
• [4.300 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/02/25 08:19:14.505
  I0902 08:19:14.506010 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:19:14.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:19:14.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:19:14.541
  STEP: create the rc1 @ 09/02/25 08:19:14.594
  STEP: create the rc2 @ 09/02/25 08:19:14.615
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/02/25 08:19:24.067
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/02/25 08:19:36.636
  STEP: wait for the rc to be deleted @ 09/02/25 08:19:36.662
  I0902 08:19:42.023183 18 garbage_collector.go:770] 76 pods remaining
  I0902 08:19:42.023289 18 garbage_collector.go:777] 68 pods has nil DeletionTimestamp
  I0902 08:19:42.023309 18 garbage_collector.go:778] 
  I0902 08:19:46.957307 18 garbage_collector.go:770] 50 pods remaining
  I0902 08:19:46.957400 18 garbage_collector.go:777] 50 pods has nil DeletionTimestamp
  I0902 08:19:46.957485 18 garbage_collector.go:778] 
  STEP: Gathering metrics @ 09/02/25 08:19:51.886
  I0902 08:19:52.403940 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:19:52.404352 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-274wm" in namespace "gc-5009"
  I0902 08:19:52.690167 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27g9r" in namespace "gc-5009"
  I0902 08:19:52.763503 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2f27n" in namespace "gc-5009"
  I0902 08:19:53.019026 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48h8d" in namespace "gc-5009"
  I0902 08:19:53.155847 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jlqr" in namespace "gc-5009"
  I0902 08:19:53.388888 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lztr" in namespace "gc-5009"
  I0902 08:19:53.462052 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5h9mf" in namespace "gc-5009"
  I0902 08:19:53.498845 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jgg6" in namespace "gc-5009"
  I0902 08:19:53.533139 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mc6t" in namespace "gc-5009"
  I0902 08:19:53.595725 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wf8d" in namespace "gc-5009"
  I0902 08:19:53.680162 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-688bl" in namespace "gc-5009"
  I0902 08:19:53.729387 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68f5n" in namespace "gc-5009"
  I0902 08:19:53.793934 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cmc5" in namespace "gc-5009"
  I0902 08:19:53.880478 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6h99d" in namespace "gc-5009"
  I0902 08:19:54.144555 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6l45s" in namespace "gc-5009"
  I0902 08:19:54.498762 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6m2lc" in namespace "gc-5009"
  I0902 08:19:54.683476 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qhn9" in namespace "gc-5009"
  I0902 08:19:55.213507 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7pcsh" in namespace "gc-5009"
  I0902 08:19:55.717295 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t6pn" in namespace "gc-5009"
  I0902 08:19:56.096947 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vl8v" in namespace "gc-5009"
  I0902 08:19:56.815166 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vplb" in namespace "gc-5009"
  I0902 08:19:56.853390 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7xlhd" in namespace "gc-5009"
  I0902 08:19:56.934166 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-825dj" in namespace "gc-5009"
  I0902 08:19:56.972991 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mnk2" in namespace "gc-5009"
  I0902 08:19:57.034893 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8s7hj" in namespace "gc-5009"
  I0902 08:19:57.083139 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94h6d" in namespace "gc-5009"
  I0902 08:19:57.158920 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95k9r" in namespace "gc-5009"
  I0902 08:19:57.392676 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b65zw" in namespace "gc-5009"
  I0902 08:19:57.500483 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b69g5" in namespace "gc-5009"
  I0902 08:19:57.551165 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b784f" in namespace "gc-5009"
  I0902 08:19:57.675510 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfqj9" in namespace "gc-5009"
  I0902 08:19:57.786591 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blxpw" in namespace "gc-5009"
  I0902 08:19:57.970680 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmjd4" in namespace "gc-5009"
  I0902 08:19:58.056648 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bn7vn" in namespace "gc-5009"
  I0902 08:19:58.162934 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bn8jq" in namespace "gc-5009"
  I0902 08:19:58.275958 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnfs2" in namespace "gc-5009"
  I0902 08:19:58.573808 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btt4s" in namespace "gc-5009"
  I0902 08:19:58.659398 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bxrmt" in namespace "gc-5009"
  I0902 08:19:58.725052 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6cjg" in namespace "gc-5009"
  I0902 08:19:58.975251 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c7dtf" in namespace "gc-5009"
  I0902 08:19:59.170755 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfxc5" in namespace "gc-5009"
  I0902 08:19:59.252515 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dp44j" in namespace "gc-5009"
  I0902 08:19:59.663405 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g7plh" in namespace "gc-5009"
  I0902 08:19:59.828182 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfx82" in namespace "gc-5009"
  I0902 08:19:59.930699 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpvf4" in namespace "gc-5009"
  I0902 08:20:00.106072 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h5jvr" in namespace "gc-5009"
  I0902 08:20:00.293245 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hhw4t" in namespace "gc-5009"
  I0902 08:20:00.562944 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hm6hc" in namespace "gc-5009"
  I0902 08:20:00.908380 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hp6cz" in namespace "gc-5009"
  I0902 08:20:01.053313 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hqnfk" in namespace "gc-5009"
  I0902 08:20:01.137073 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5009" for this suite. @ 09/02/25 08:20:01.197
• [46.861 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/02/25 08:20:01.371
  I0902 08:20:01.371541 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:20:01.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:20:01.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:20:01.634
  STEP: Deleting RuntimeClass runtimeclass-4316-delete-me @ 09/02/25 08:20:01.69
  STEP: Waiting for the RuntimeClass to disappear @ 09/02/25 08:20:01.709
  I0902 08:20:01.745840 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4316" for this suite. @ 09/02/25 08:20:01.762
• [0.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/02/25 08:20:01.792
  I0902 08:20:01.792226 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:20:01.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:20:01.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:20:01.826
  I0902 08:20:01.834427 18 deployment.go:1664] Creating simple deployment test-new-deployment
  I0902 08:20:01.932837 18 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  I0902 08:20:03.956826 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:05.966914 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:07.983235 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:09.975369 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:11.981166 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:13.977087 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:15.969759 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:17.992120 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:19.987854 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:22.269004 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:24.861980 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:26.263253 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:28.199372 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:30.032024 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:32.195545 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:34.003511 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 08:20:36.048727 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 20, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 20, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: getting scale subresource @ 09/02/25 08:20:38.016
  STEP: updating a scale subresource @ 09/02/25 08:20:38.023
  STEP: verifying the deployment Spec.Replicas was modified @ 09/02/25 08:20:38.067
  STEP: Patch a scale subresource @ 09/02/25 08:20:38.074
  I0902 08:20:38.174713 18 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-982",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb522acc-00e2-47f1-9cf4-fcf9127cf811",
      ResourceVersion: (string) (len=5) "22686",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:20:38.296605 18 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-982",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5c6fdd0-8eb4-4c7a-9d21-7a29706b08dc",
      ResourceVersion: (string) (len=5) "22689",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "cb522acc-00e2-47f1-9cf4-fcf9127cf811",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 35 32 32 61  63 63 2d 30 30 65 32 2d  |\"cb522acc-00e2-|
              00000120  34 37 66 31 2d 39 63 66  34 2d 66 63 66 39 31 32  |47f1-9cf4-fcf912|
              00000130  37 63 66 38 31 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7cf811\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:20:38.452505 18 deployment.go:68] Pod "test-new-deployment-685b768f58-m8wxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-m8wxv",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-982",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3044f10f-3c73-4857-9693-c9c26ca4e5e8",
      ResourceVersion: (string) (len=5) "22695",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "c5c6fdd0-8eb4-4c7a-9d21-7a29706b08dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 35  63 36 66 64 64 30 2d 38  |d\":\"c5c6fdd0-8|
              00000090  65 62 34 2d 34 63 37 61  2d 39 64 32 31 2d 37 61  |eb4-4c7a-9d21-7a|
              000000a0  32 39 37 30 36 62 30 38  64 63 5c 22 7d 22 3a 7b  |29706b08dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glhnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glhnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-glhnw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:20:38.458120 18 deployment.go:68] Pod "test-new-deployment-685b768f58-ssvzv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-ssvzv",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-982",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5baf9616-a8be-468c-b20b-db3fab973de7",
      ResourceVersion: (string) (len=5) "22677",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "c5c6fdd0-8eb4-4c7a-9d21-7a29706b08dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 35  63 36 66 64 64 30 2d 38  |d\":\"c5c6fdd0-8|
              00000090  65 62 34 2d 34 63 37 61  2d 39 64 32 31 2d 37 61  |eb4-4c7a-9d21-7a|
              000000a0  32 39 37 30 36 62 30 38  64 63 5c 22 7d 22 3a 7b  |29706b08dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 30 5c 22 7d 22 3a  |.233.64.140\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8lwg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8lwg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=13) "10.233.64.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892398034,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://cc7d7191c5624fcbe9484d5b80010f046c1b4624b105e0a1ceafaa54ca5e249d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j8lwg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:20:38.463060 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-982" for this suite. @ 09/02/25 08:20:38.49
• [36.803 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/02/25 08:20:38.613
  I0902 08:20:38.613876 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:20:39.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:20:39.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:20:39.169
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/02/25 08:20:39.178
  I0902 08:20:39.185970 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 08:20:42.785932 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 08:20:54.406046 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5625" for this suite. @ 09/02/25 08:20:54.454
• [15.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/02/25 08:20:54.465
  I0902 08:20:54.465864 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:20:54.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:20:54.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:20:54.502
  I0902 08:20:54.506971 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  I0902 08:20:57.245332      18 warnings.go:110] "Warning: unknown field \"alpha\""
  I0902 08:20:57.245404      18 warnings.go:110] "Warning: unknown field \"beta\""
  I0902 08:20:57.245421      18 warnings.go:110] "Warning: unknown field \"delta\""
  I0902 08:20:57.245436      18 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0902 08:20:57.245451      18 warnings.go:110] "Warning: unknown field \"gamma\""
  I0902 08:20:57.877218 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4029" for this suite. @ 09/02/25 08:20:57.908
• [3.469 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:20:57.935
  I0902 08:20:57.936010 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:20:57.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:20:57.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:20:57.995
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:20:58.001
  STEP: Saw pod success @ 09/02/25 08:21:02.054
  I0902 08:21:02.061531 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-52c05b49-edce-4190-94b9-bbbcac0af6fe container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:21:02.078
  I0902 08:21:02.113409 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3286" for this suite. @ 09/02/25 08:21:02.123
• [4.203 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/02/25 08:21:02.139
  I0902 08:21:02.139171 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:21:02.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:21:02.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:21:02.174
  STEP: Creating the pod @ 09/02/25 08:21:02.179
  I0902 08:21:04.765719 18 pod_client.go:173] Successfully updated pod "labelsupdate8d3d98d8-dab1-46ba-ba95-626f6ff51351"
  I0902 08:21:06.800429 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-777" for this suite. @ 09/02/25 08:21:06.811
• [4.690 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/02/25 08:21:06.829
  I0902 08:21:06.829947 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:21:06.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:21:06.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:21:06.867
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/02/25 08:21:06.893
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/02/25 08:21:27.405
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/02/25 08:21:27.416
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/02/25 08:21:27.428
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/02/25 08:21:27.429
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/02/25 08:21:27.542
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/02/25 08:21:30.59
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/02/25 08:21:31.632
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/02/25 08:21:31.661
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/02/25 08:21:31.662
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/02/25 08:21:31.749
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/02/25 08:21:32.779
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/02/25 08:21:34.875
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/02/25 08:21:34.889
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/02/25 08:21:34.889
  I0902 08:21:34.943174 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3910" for this suite. @ 09/02/25 08:21:34.952
• [28.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 09/02/25 08:21:34.974
  I0902 08:21:34.974459 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:21:34.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:21:35.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:21:35.01
  STEP: Creating a test externalName service @ 09/02/25 08:21:35.019
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:35.061
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:35.061
  STEP: creating a pod to probe DNS @ 09/02/25 08:21:35.061
  STEP: submitting the pod to kubernetes @ 09/02/25 08:21:35.061
  STEP: retrieving the pod @ 09/02/25 08:21:41.118
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:21:41.124
  I0902 08:21:41.154543 18 dns_common.go:571] DNS probes using dns-test-9cea94ed-77c5-4448-9f39-16de7569d733 succeeded

  STEP: changing the externalName to bar.example.com @ 09/02/25 08:21:41.154
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:41.204
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:41.204
  STEP: creating a second pod to probe DNS @ 09/02/25 08:21:41.204
  STEP: submitting the pod to kubernetes @ 09/02/25 08:21:41.204
  STEP: retrieving the pod @ 09/02/25 08:21:45.249
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:21:45.256
  I0902 08:21:45.274959 18 dns_common.go:571] DNS probes using dns-test-266503c0-f829-42c3-9143-63f1c51b30fc succeeded

  STEP: changing the service to type=ClusterIP @ 09/02/25 08:21:45.275
  I0902 08:21:45.367733      18 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:45.382
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2746.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2746.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:21:45.382
  STEP: creating a third pod to probe DNS @ 09/02/25 08:21:45.382
  STEP: submitting the pod to kubernetes @ 09/02/25 08:21:45.391
  STEP: retrieving the pod @ 09/02/25 08:21:47.487
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:21:47.497
  I0902 08:21:47.597978 18 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2746.svc.cluster.local from pod  dns-2746/dns-test-c90c1946-f1a5-4fd4-8083-b2821eacd402 contains '' instead of '10.233.32.124'
  I0902 08:21:47.598061 18 dns_common.go:506] Lookups using dns-2746/dns-test-c90c1946-f1a5-4fd4-8083-b2821eacd402 failed for: [jessie_udp@dns-test-service-3.dns-2746.svc.cluster.local]

  I0902 08:21:47.614011 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:21:47.631343 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:21:47.707895 18 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:21:52.514921 18 dns_common.go:571] DNS probes using dns-test-c90c1946-f1a5-4fd4-8083-b2821eacd402 succeeded

  STEP: deleting the pod @ 09/02/25 08:21:52.515
  STEP: deleting the pod @ 09/02/25 08:21:52.575
  STEP: deleting the pod @ 09/02/25 08:21:52.711
  STEP: deleting the test externalName service @ 09/02/25 08:21:52.837
  I0902 08:21:53.019909 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2746" for this suite. @ 09/02/25 08:21:53.031
• [18.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/02/25 08:21:53.05
  I0902 08:21:53.050456 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:21:53.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:21:53.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:21:53.125
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:21:53.13
  STEP: Saw pod success @ 09/02/25 08:21:57.211
  I0902 08:21:57.218522 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-15db24ef-4c63-47a6-808d-e3c6a5f46f89 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:21:57.266
  I0902 08:21:57.299974 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7546" for this suite. @ 09/02/25 08:21:57.311
• [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 09/02/25 08:21:57.346
  I0902 08:21:57.346731 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:21:57.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:21:57.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:21:57.385
  STEP: Setting up server cert @ 09/02/25 08:21:57.461
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:21:57.995
  STEP: Deploying the webhook pod @ 09/02/25 08:21:58.012
  STEP: Wait for the deployment to be ready @ 09/02/25 08:21:58.071
  I0902 08:21:58.261346 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 21, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 21, 58, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 21, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 21, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 08:22:00.285
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:22:00.37
  I0902 08:22:01.370990 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/02/25 08:22:01.382
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/02/25 08:22:01.456
  STEP: Creating a configMap that should not be mutated @ 09/02/25 08:22:01.471
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/02/25 08:22:01.491
  STEP: Creating a configMap that should be mutated @ 09/02/25 08:22:01.51
  I0902 08:22:01.874335 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1527" for this suite. @ 09/02/25 08:22:01.888
  STEP: Destroying namespace "webhook-markers-5995" for this suite. @ 09/02/25 08:22:01.899
• [4.574 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/02/25 08:22:01.921
  I0902 08:22:01.921409 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename events @ 09/02/25 08:22:01.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:01.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:01.96
  STEP: Create set of events @ 09/02/25 08:22:01.966
  STEP: get a list of Events with a label in the current namespace @ 09/02/25 08:22:02.031
  STEP: delete a list of events @ 09/02/25 08:22:02.048
  I0902 08:22:02.048334 18 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/25 08:22:02.088
  I0902 08:22:02.097311 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3893" for this suite. @ 09/02/25 08:22:02.107
• [0.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/02/25 08:22:02.157
  I0902 08:22:02.157897 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:22:02.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:02.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:02.189
  STEP: Creating secret with name secret-test-map-7a1bc839-6206-49be-a354-85be95a4047b @ 09/02/25 08:22:02.194
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:22:02.202
  STEP: Saw pod success @ 09/02/25 08:22:06.261
  I0902 08:22:06.270172 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-b92506dd-3821-4d2f-927f-3da7441ef7cd container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:22:06.287
  I0902 08:22:06.367122 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7427" for this suite. @ 09/02/25 08:22:06.382
• [4.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/02/25 08:22:06.441
  I0902 08:22:06.441138 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:22:06.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:06.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:06.517
  I0902 08:22:06.526283 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 08:22:10.526
  I0902 08:22:10.527086 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-8639 --namespace=crd-publish-openapi-8639 create -f -'
  I0902 08:22:10.934991 18 builder.go:146] stderr: ""
  I0902 08:22:10.935101 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7491-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0902 08:22:10.935820 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-8639 --namespace=crd-publish-openapi-8639 delete e2e-test-crd-publish-openapi-7491-crds test-cr'
  I0902 08:22:11.191365 18 builder.go:146] stderr: ""
  I0902 08:22:11.191596 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7491-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0902 08:22:11.192274 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-8639 --namespace=crd-publish-openapi-8639 apply -f -'
  I0902 08:22:11.433978 18 builder.go:146] stderr: ""
  I0902 08:22:11.434075 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7491-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0902 08:22:11.434819 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-8639 --namespace=crd-publish-openapi-8639 delete e2e-test-crd-publish-openapi-7491-crds test-cr'
  I0902 08:22:11.888046 18 builder.go:146] stderr: ""
  I0902 08:22:11.888821 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7491-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/25 08:22:11.889
  I0902 08:22:11.890624 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-8639 explain e2e-test-crd-publish-openapi-7491-crds'
  I0902 08:22:12.362201 18 builder.go:146] stderr: ""
  I0902 08:22:12.363564 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7491-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0902 08:22:14.968873 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8639" for this suite. @ 09/02/25 08:22:15.022
• [8.672 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 09/02/25 08:22:15.12
  I0902 08:22:15.120557 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:22:15.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:15.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:15.22
  STEP: Creating service test in namespace statefulset-5057 @ 09/02/25 08:22:15.226
  STEP: Creating statefulset ss in namespace statefulset-5057 @ 09/02/25 08:22:15.278
  I0902 08:22:15.378265 18 wait.go:44] Found 0 stateful pods, waiting for 1
  I0902 08:22:25.319406 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/02/25 08:22:25.374
  STEP: Getting /status @ 09/02/25 08:22:25.399
  I0902 08:22:25.409876 18 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/02/25 08:22:25.409
  I0902 08:22:25.434481 18 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/02/25 08:22:25.434
  I0902 08:22:25.442603 18 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0902 08:22:25.442991 18 statefulset.go:1126] Found Statefulset ss in namespace statefulset-5057 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 08:22:25.443186 18 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/02/25 08:22:25.444
  I0902 08:22:25.444398 18 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 08:22:25.503411 18 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/02/25 08:22:25.503
  I0902 08:22:25.511064 18 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0902 08:22:25.511268 18 statefulset.go:138] Deleting all statefulset in ns statefulset-5057
  I0902 08:22:25.522183 18 rest.go:153] Scaling statefulset ss to 0
  I0902 08:22:35.628486 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:22:35.640461 18 rest.go:91] Deleting statefulset ss
  I0902 08:22:35.672991 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5057" for this suite. @ 09/02/25 08:22:35.681
• [20.582 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/02/25 08:22:35.708
  I0902 08:22:35.708758 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 08:22:35.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:35.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:35.764
  STEP: creating a ReplicationController @ 09/02/25 08:22:35.799
  STEP: waiting for RC to be added @ 09/02/25 08:22:35.815
  STEP: waiting for available Replicas @ 09/02/25 08:22:35.815
  STEP: patching ReplicationController @ 09/02/25 08:22:37.888
  STEP: waiting for RC to be modified @ 09/02/25 08:22:37.922
  STEP: patching ReplicationController status @ 09/02/25 08:22:37.923
  STEP: waiting for RC to be modified @ 09/02/25 08:22:37.99
  STEP: waiting for available Replicas @ 09/02/25 08:22:37.99
  STEP: fetching ReplicationController status @ 09/02/25 08:22:38.027
  STEP: patching ReplicationController scale @ 09/02/25 08:22:38.05
  STEP: waiting for RC to be modified @ 09/02/25 08:22:38.112
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/02/25 08:22:38.122
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/02/25 08:22:40.551
  STEP: updating ReplicationController status @ 09/02/25 08:22:40.561
  STEP: waiting for RC to be modified @ 09/02/25 08:22:40.605
  STEP: listing all ReplicationControllers @ 09/02/25 08:22:40.608
  STEP: checking that ReplicationController has expected values @ 09/02/25 08:22:40.624
  STEP: deleting ReplicationControllers by collection @ 09/02/25 08:22:40.624
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/02/25 08:22:40.66
  I0902 08:22:40.857485 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:22:40.859514      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7020" for this suite. @ 09/02/25 08:22:40.869
• [5.184 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/02/25 08:22:40.89
  I0902 08:22:40.890878 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:22:40.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:40.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:40.972
  STEP: create the deployment @ 09/02/25 08:22:40.978
  I0902 08:22:41.000910      18 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/25 08:22:41.001
  STEP: delete the deployment @ 09/02/25 08:22:41.383
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/02/25 08:22:41.479
  E0902 08:22:41.883230      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 08:22:42.154
  I0902 08:22:42.541606 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:22:42.542443 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-573" for this suite. @ 09/02/25 08:22:42.568
• [1.715 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 09/02/25 08:22:42.615
  I0902 08:22:42.615361 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename proxy @ 09/02/25 08:22:42.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:42.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:42.682
  I0902 08:22:42.691500 18 proxy.go:336] Creating pod...
  E0902 08:22:42.901606      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:43.899858      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:22:44.747460 18 proxy.go:360] Creating service...
  I0902 08:22:44.792398 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/DELETE
  I0902 08:22:44.819536 18 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:22:44.819625 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/GET
  I0902 08:22:44.838024 18 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0902 08:22:44.838147 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/HEAD
  I0902 08:22:44.851899 18 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0902 08:22:44.853522 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/OPTIONS
  I0902 08:22:44.869473 18 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:22:44.869547 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/PATCH
  I0902 08:22:44.887517 18 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:22:44.887600 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/POST
  I0902 08:22:44.897067 18 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:22:44.897339 18 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/pods/agnhost/proxy/some/path/with/PUT
  E0902 08:22:44.898561      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:22:44.906174 18 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:22:44.906267 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/DELETE
  I0902 08:22:44.916838 18 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:22:44.917070 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/GET
  I0902 08:22:44.928397 18 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0902 08:22:44.928611 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/HEAD
  I0902 08:22:44.939272 18 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0902 08:22:44.939386 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/OPTIONS
  I0902 08:22:44.952593 18 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:22:44.952755 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/PATCH
  I0902 08:22:44.962618 18 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:22:44.963086 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/POST
  I0902 08:22:44.975599 18 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:22:44.975707 18 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2067/services/test-service/proxy/some/path/with/PUT
  I0902 08:22:44.987252 18 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:22:44.987919 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2067" for this suite. @ 09/02/25 08:22:44.997
• [2.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/02/25 08:22:45.019
  I0902 08:22:45.020891 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:22:45.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:45.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:45.082
  STEP: Create set of pod templates @ 09/02/25 08:22:45.088
  I0902 08:22:45.100797 18 podtemplates.go:143] created test-podtemplate-1
  I0902 08:22:45.111696 18 podtemplates.go:143] created test-podtemplate-2
  I0902 08:22:45.121976 18 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/02/25 08:22:45.122
  STEP: delete collection of pod templates @ 09/02/25 08:22:45.128
  I0902 08:22:45.128817 18 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/02/25 08:22:45.172
  I0902 08:22:45.172421 18 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0902 08:22:45.179076 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6725" for this suite. @ 09/02/25 08:22:45.189
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/02/25 08:22:45.216
  I0902 08:22:45.216477 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:22:45.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:22:45.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:22:45.263
  E0902 08:22:45.897398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:46.898279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:47.900490      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:48.900449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:49.901245      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:50.901477      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:51.954353      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:52.902878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:53.903304      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:54.903919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:55.904449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:56.904700      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:57.906143      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:58.907615      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:22:59.907778      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:00.908314      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:01.909122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:02.909487      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:03.909884      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:04.909949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:05.910519      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:06.911990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:07.934405      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:08.937693      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:09.937717      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:10.937589      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:11.938023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:12.938089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:13.939304      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:14.941112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:15.942863      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:16.943011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:17.945933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:18.946541      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:19.947032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:20.947448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:21.948585      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:22.949553      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:23.956482      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:24.956480      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:25.957490      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:26.958142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:27.959113      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:28.959826      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:29.960183      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:30.960335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:31.961327      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:32.962372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:33.962674      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:34.963022      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:35.963493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:36.965110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:37.965924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:38.966415      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:39.966555      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:40.967573      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:41.967669      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:42.976975      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:43.977761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:44.979599      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:45.307576 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3790" for this suite. @ 09/02/25 08:23:45.326
• [60.164 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/02/25 08:23:45.381
  I0902 08:23:45.381150 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:23:45.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:45.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:45.436
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:23:45.441
  E0902 08:23:45.979555      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:46.979899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:47.980018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:48.981031      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:23:49.538
  I0902 08:23:49.544767 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-56af1f05-7ad7-4695-ae76-07b40dfed033 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:23:49.56
  I0902 08:23:49.600139 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1567" for this suite. @ 09/02/25 08:23:49.609
• [4.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/02/25 08:23:49.635
  I0902 08:23:49.635510 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:23:49.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:49.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:49.731
  I0902 08:23:49.737180 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: creating the pod @ 09/02/25 08:23:49.74
  STEP: submitting the pod to kubernetes @ 09/02/25 08:23:49.741
  E0902 08:23:49.981683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:50.982817      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/02/25 08:23:51.966
  E0902 08:23:51.984116      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:52.048714 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1327" for this suite. @ 09/02/25 08:23:52.1
• [2.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 09/02/25 08:23:52.176
  I0902 08:23:52.176174 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:23:52.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:52.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:52.24
  STEP: creating a collection of services @ 09/02/25 08:23:52.248
  I0902 08:23:52.249046 18 service.go:3666] Creating e2e-svc-a-hlsdf
  I0902 08:23:52.365014 18 service.go:3666] Creating e2e-svc-b-578kk
  I0902 08:23:52.498046 18 service.go:3666] Creating e2e-svc-c-q58tg
  STEP: deleting service collection @ 09/02/25 08:23:52.549
  I0902 08:23:52.854159 18 service.go:3701] Collection of services has been deleted
  I0902 08:23:52.854547 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2526" for this suite. @ 09/02/25 08:23:52.935
  E0902 08:23:52.996126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.839 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 09/02/25 08:23:53.024
  I0902 08:23:53.024931 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:23:53.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:53.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:53.084
  STEP: creating all guestbook components @ 09/02/25 08:23:53.097
  I0902 08:23:53.099373 18 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0902 08:23:53.100558 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  I0902 08:23:53.857837 18 builder.go:146] stderr: ""
  I0902 08:23:53.858503 18 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0902 08:23:53.858921 18 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0902 08:23:53.859435 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  E0902 08:23:53.996984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:54.411807 18 builder.go:146] stderr: ""
  I0902 08:23:54.411890 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0902 08:23:54.412040 18 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0902 08:23:54.413041 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  E0902 08:23:54.997954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:55.160304 18 builder.go:146] stderr: ""
  I0902 08:23:55.160743 18 builder.go:147] stdout: "service/frontend created\n"
  I0902 08:23:55.161616 18 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0902 08:23:55.164187 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  E0902 08:23:55.998200      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:56.013545 18 builder.go:146] stderr: ""
  I0902 08:23:56.013911 18 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0902 08:23:56.015387 18 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0902 08:23:56.023144 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  I0902 08:23:56.851240 18 builder.go:146] stderr: ""
  I0902 08:23:56.851342 18 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0902 08:23:56.853092 18 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0902 08:23:56.856418 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 create -f -'
  E0902 08:23:56.998945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:23:57.999741      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:23:58.459928 18 builder.go:146] stderr: ""
  I0902 08:23:58.460025 18 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/02/25 08:23:58.46
  I0902 08:23:58.460140 18 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0902 08:23:59.068688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:00.074247      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:01.084286      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:02.085947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:03.087025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:03.710781 18 kubectl.go:2279] Waiting for frontend to serve content.
  I0902 08:24:03.746871 18 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0902 08:24:03.770883 18 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/02/25 08:24:03.808
  I0902 08:24:03.809158 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  E0902 08:24:04.087398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:04.206123 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:04.206588 18 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 08:24:04.206
  I0902 08:24:04.207130 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  I0902 08:24:04.639119 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:04.639944 18 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 08:24:04.643
  I0902 08:24:04.643861 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  I0902 08:24:05.069059 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:05.069230 18 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 08:24:05.069
  I0902 08:24:05.071494 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  E0902 08:24:05.088431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:05.378378 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:05.378468 18 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 08:24:05.384
  I0902 08:24:05.384416 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  I0902 08:24:05.731248 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:05.731518 18 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 08:24:05.732
  I0902 08:24:05.733620 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-8313 delete --grace-period=0 --force -f -'
  E0902 08:24:06.090271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:06.281490 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:24:06.281705 18 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0902 08:24:06.283612 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8313" for this suite. @ 09/02/25 08:24:06.403
• [13.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.498
  I0902 08:24:06.498311 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:24:06.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.786
  STEP: creating a Deployment @ 09/02/25 08:24:06.832
  I0902 08:24:06.833337 18 deployment.go:506] Creating simple deployment test-deployment-wch94
  I0902 08:24:07.045531 18 deployment.go:223] deployment "test-deployment-wch94" doesn't have the required revision set
  E0902 08:24:07.091239      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:08.091964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/25 08:24:09.076
  I0902 08:24:09.085984 18 deployment.go:531] Deployment test-deployment-wch94 has Conditions: [{Available True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wch94-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/02/25 08:24:09.086
  E0902 08:24:09.093573      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:09.107047 18 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 24, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 24, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 24, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 24, 6, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-wch94-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/02/25 08:24:09.107
  I0902 08:24:09.111426 18 deployment.go:578] Observed &Deployment event: ADDED
  I0902 08:24:09.112241 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:06 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wch94-6fb4c74686"}
  I0902 08:24:09.112666 18 deployment.go:578] Observed &Deployment event: MODIFIED
  I0902 08:24:09.112884 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:06 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wch94-6fb4c74686"}
  I0902 08:24:09.113099 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 08:24:09.113575 18 deployment.go:578] Observed &Deployment event: MODIFIED
  I0902 08:24:09.113776 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 08:24:09.114020 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wch94-6fb4c74686" is progressing.}
  I0902 08:24:09.114578 18 deployment.go:578] Observed &Deployment event: MODIFIED
  I0902 08:24:09.114724 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 08:24:09.114780 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wch94-6fb4c74686" has successfully progressed.}
  I0902 08:24:09.115045 18 deployment.go:578] Observed &Deployment event: MODIFIED
  I0902 08:24:09.115114 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 08:24:09.117486 18 deployment.go:574] Observed Deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wch94-6fb4c74686" has successfully progressed.}
  I0902 08:24:09.117915 18 deployment.go:571] Found Deployment test-deployment-wch94 in namespace deployment-334 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 08:24:09.118202 18 deployment.go:582] Deployment test-deployment-wch94 has an updated status
  STEP: patching the Statefulset Status @ 09/02/25 08:24:09.118
  I0902 08:24:09.118267 18 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 08:24:09.141840 18 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/02/25 08:24:09.142
  I0902 08:24:09.148157 18 deployment.go:615] Observed &Deployment event: ADDED
  I0902 08:24:09.161061 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:06 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wch94-6fb4c74686"}
  I0902 08:24:09.161442 18 deployment.go:615] Observed &Deployment event: MODIFIED
  I0902 08:24:09.161953 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:06 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wch94-6fb4c74686"}
  I0902 08:24:09.162004 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 08:24:09.162357 18 deployment.go:615] Observed &Deployment event: MODIFIED
  I0902 08:24:09.162424 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 08:24:09.162461 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:07 +0000 UTC 2025-09-02 08:24:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wch94-6fb4c74686" is progressing.}
  I0902 08:24:09.163069 18 deployment.go:615] Observed &Deployment event: MODIFIED
  I0902 08:24:09.163127 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 08:24:09.163274 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wch94-6fb4c74686" has successfully progressed.}
  I0902 08:24:09.164063 18 deployment.go:615] Observed &Deployment event: MODIFIED
  I0902 08:24:09.164293 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 08:24:09.164389 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 08:24:08 +0000 UTC 2025-09-02 08:24:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wch94-6fb4c74686" has successfully progressed.}
  I0902 08:24:09.164471 18 deployment.go:611] Observed deployment test-deployment-wch94 in namespace deployment-334 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 08:24:09.165048 18 deployment.go:615] Observed &Deployment event: MODIFIED
  I0902 08:24:09.165181 18 deployment.go:608] Found deployment test-deployment-wch94 in namespace deployment-334 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0902 08:24:09.165272 18 deployment.go:619] Deployment test-deployment-wch94 has a patched status
  I0902 08:24:09.207100 18 deployment.go:632] Deployment "test-deployment-wch94":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-wch94",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-334",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35680669-29c7-49a8-90a2-b7f150bfb4b4",
      ResourceVersion: (string) (len=5) "24233",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398246,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-wch94-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:24:09.225847 18 deployment.go:40] New ReplicaSet "test-deployment-wch94-6fb4c74686" of Deployment "test-deployment-wch94":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-wch94-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-334",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f26fefb-e6e9-42ef-a42a-5be4ad63a84b",
      ResourceVersion: (string) (len=5) "24227",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398246,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-wch94",
          UID: (types.UID) (len=36) "35680669-29c7-49a8-90a2-b7f150bfb4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 35 36  |k:{\"uid\":\"356|
              00000120  38 30 36 36 39 2d 32 39  63 37 2d 34 39 61 38 2d  |80669-29c7-49a8-|
              00000130  39 30 61 32 2d 62 37 66  31 35 30 62 66 62 34 62  |90a2-b7f150bfb4b|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:24:09.250150 18 deployment.go:68] Pod "test-deployment-wch94-6fb4c74686-nlcdg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-wch94-6fb4c74686-nlcdg",
      GenerateName: (string) (len=33) "test-deployment-wch94-6fb4c74686-",
      Namespace: (string) (len=14) "deployment-334",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59caaa06-d46a-4c3b-bcd3-9f71a8bd976f",
      ResourceVersion: (string) (len=5) "24226",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-wch94-6fb4c74686",
          UID: (types.UID) (len=36) "9f26fefb-e6e9-42ef-a42a-5be4ad63a84b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 66 32 36 66 65 66  62 2d 65 36 65 39 2d 34  |"9f26fefb-e6e9-4|
              000000a0  32 65 66 2d 61 34 32 61  2d 35 62 65 34 61 64 36  |2ef-a42a-5be4ad6|
              000000b0  33 61 38 34 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |3a84b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 30 35 5c 22 7d 22 3a  |.233.64.105\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4tsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4tsc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892398247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=13) "10.233.64.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892398247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892398248,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://09cd050c5bc5fb24106f86296ec4284fe050bd1d0bdf0cc88e37d40b43f5862a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z4tsc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:24:09.257330 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-334" for this suite. @ 09/02/25 08:24:09.314
• [2.830 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/02/25 08:24:09.332
  I0902 08:24:09.332113 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:24:09.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:09.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:09.37
  STEP: Setting up server cert @ 09/02/25 08:24:09.468
  E0902 08:24:10.094516      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:24:10.839
  STEP: Deploying the webhook pod @ 09/02/25 08:24:10.868
  STEP: Wait for the deployment to be ready @ 09/02/25 08:24:10.898
  I0902 08:24:10.930370 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:24:11.095407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:12.095949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:24:13.086
  E0902 08:24:13.096499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:24:13.239
  E0902 08:24:14.096623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:14.244820 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/02/25 08:24:14.256
  STEP: create a configmap that should be updated by the webhook @ 09/02/25 08:24:14.3
  E0902 08:24:15.106222      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:15.470008 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7894" for this suite. @ 09/02/25 08:24:15.502
  STEP: Destroying namespace "webhook-markers-3975" for this suite. @ 09/02/25 08:24:15.522
• [6.264 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/02/25 08:24:15.596
  I0902 08:24:15.597785 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/02/25 08:24:15.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:15.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:15.707
  STEP: Setting up the test @ 09/02/25 08:24:15.722
  STEP: Creating hostNetwork=false pod @ 09/02/25 08:24:15.723
  E0902 08:24:16.106363      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:17.106610      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:18.109198      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:19.109656      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/02/25 08:24:19.809
  E0902 08:24:20.110077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:21.110654      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/02/25 08:24:21.861
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/02/25 08:24:21.869
  I0902 08:24:21.870478 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:21.870875 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:21.871292 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0902 08:24:22.061703 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.062276 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.062326 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.062370 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.064435 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  E0902 08:24:22.111315      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:22.162873 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.162955 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.163039 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.163427 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.163724 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0902 08:24:22.271031 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.271122 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.271239 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.271262 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.271364 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0902 08:24:22.355017 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.355495 18 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/02/25 08:24:22.356
  I0902 08:24:22.356476 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.356723 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.356897 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0902 08:24:22.478060 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.478143 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.478484 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.478531 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.478732 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  E0902 08:24:22.503519      18 websocket.go:297] Unknown stream id 1, discarding message
  I0902 08:24:22.567763 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.567909 18 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/02/25 08:24:22.567
  I0902 08:24:22.568009 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.568030 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.568133 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0902 08:24:22.688190 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.688696 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.691795 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.692098 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.693941 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0902 08:24:22.794279 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.794369 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.794480 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.794502 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.794607 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0902 08:24:22.899798 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.899912 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.900026 18 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6573 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:24:22.900109 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:24:22.900406 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6573/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0902 08:24:22.993885 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:24:22.993968 18 exec_util.go:112] Exec stderr: ""
  I0902 08:24:22.994594 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6573" for this suite. @ 09/02/25 08:24:23.009
• [7.431 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:24:23.027
  I0902 08:24:23.027381 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:24:23.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:23.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:23.068
  I0902 08:24:23.093499 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4389" for this suite. @ 09/02/25 08:24:23.109
  E0902 08:24:23.112897      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 09/02/25 08:24:23.127
  I0902 08:24:23.127497 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:24:23.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:23.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:23.168
  I0902 08:24:23.173692 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5703 version'
  I0902 08:24:23.333920 18 builder.go:146] stderr: ""
  I0902 08:24:23.335116 18 builder.go:147] stdout: "Client Version: v1.33.4\nKustomize Version: v5.6.0\nServer Version: v1.33.4\n"
  I0902 08:24:23.337503 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5703" for this suite. @ 09/02/25 08:24:23.348
• [0.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/02/25 08:24:23.365
  I0902 08:24:23.365890 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:24:23.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:23.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:23.41
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:24:23.413
  E0902 08:24:24.114829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:25.114230      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:26.115187      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:27.115813      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:27.483
  I0902 08:24:27.498328 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downward-api-c15fe5be-eb9c-4657-bee8-2f389123a6e3 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:24:27.526
  I0902 08:24:27.566131 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4313" for this suite. @ 09/02/25 08:24:27.58
• [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/02/25 08:24:27.609
  I0902 08:24:27.610205 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:24:27.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:27.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:27.669
  STEP: Creating projection with secret that has name projected-secret-test-8f7f0d5b-f17f-4fb7-8448-9ce1a9750a76 @ 09/02/25 08:24:27.676
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:24:27.689
  E0902 08:24:28.115925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:29.145338      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:30.145910      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:31.147080      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:31.78
  I0902 08:24:31.787610 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod pod-projected-secrets-ecf519e8-4c8d-4eed-ad54-7e08ec614953 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:24:31.825
  I0902 08:24:31.858774 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2596" for this suite. @ 09/02/25 08:24:31.872
• [4.280 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/02/25 08:24:31.891
  I0902 08:24:31.891495 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:24:31.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:31.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:31.935
  STEP: Creating secret with name secret-test-f429bdc5-8559-49cb-a29c-a68997ec7c4c @ 09/02/25 08:24:31.941
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:24:31.953
  E0902 08:24:32.146737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:33.149015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:34.149057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:35.155906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:36.012
  I0902 08:24:36.033687 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-c59b4076-c764-4a11-bb31-a607b7dcbb44 container secret-env-test: <nil>
  STEP: delete the pod @ 09/02/25 08:24:36.127
  E0902 08:24:36.156071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:36.281954 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3269" for this suite. @ 09/02/25 08:24:36.467
• [4.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 09/02/25 08:24:36.571
  I0902 08:24:36.571456 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:24:36.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:36.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:36.734
  STEP: Discovering how many secrets are in namespace by default @ 09/02/25 08:24:36.743
  E0902 08:24:37.157565      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:38.157502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:39.157594      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:40.158267      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:41.158358      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/02/25 08:24:41.757
  E0902 08:24:42.158542      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:43.159468      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:44.160022      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:45.164390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:46.164704      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 08:24:46.777
  STEP: Ensuring resource quota status is calculated @ 09/02/25 08:24:46.798
  E0902 08:24:47.165426      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:48.166414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/02/25 08:24:48.807
  STEP: Ensuring resource quota status captures secret creation @ 09/02/25 08:24:48.83
  E0902 08:24:49.166376      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:50.176568      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/02/25 08:24:50.845
  STEP: Ensuring resource quota status released usage @ 09/02/25 08:24:50.892
  E0902 08:24:51.171010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:52.171331      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:52.905245 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4300" for this suite. @ 09/02/25 08:24:52.915
• [16.371 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/02/25 08:24:52.947
  I0902 08:24:52.947223 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context @ 09/02/25 08:24:52.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:52.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:52.987
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/25 08:24:53
  E0902 08:24:53.172301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:54.173609      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:55.173840      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:56.174863      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:57.156
  I0902 08:24:57.163173 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod security-context-7f1ff3c8-1dbf-4dcc-9670-1b3005cee74d container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:24:57.174
  E0902 08:24:57.175530      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:24:57.221373 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8660" for this suite. @ 09/02/25 08:24:57.234
• [4.304 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/02/25 08:24:57.251
  I0902 08:24:57.252235 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:24:57.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:57.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:57.324
  STEP: create the container @ 09/02/25 08:24:57.33
  I0902 08:24:57.349260      18 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/02/25 08:24:57.35
  E0902 08:24:58.182920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:24:59.182404      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:00.179148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/25 08:25:00.454
  STEP: the container should be terminated @ 09/02/25 08:25:00.462
  STEP: the termination message should be set @ 09/02/25 08:25:00.462
  I0902 08:25:00.462664 18 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/02/25 08:25:00.462
  I0902 08:25:00.511480 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6157" for this suite. @ 09/02/25 08:25:00.519
• [3.297 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/02/25 08:25:00.549
  I0902 08:25:00.549725 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:25:00.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:00.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:00.597
  STEP: Creating projection with secret that has name projected-secret-test-map-a7b69053-5569-4b48-a992-bd20853c67dc @ 09/02/25 08:25:00.604
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:25:00.614
  E0902 08:25:01.180122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:02.180278      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:03.180840      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:04.186452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:25:04.769
  I0902 08:25:04.774605 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-secrets-ae937c0d-f17e-4c68-8232-d83e47b78516 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:25:04.813
  I0902 08:25:04.882482 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2142" for this suite. @ 09/02/25 08:25:04.896
• [4.379 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/02/25 08:25:04.928
  I0902 08:25:04.928372 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:25:04.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:04.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:04.991
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:25:05
  E0902 08:25:05.182598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:06.186594      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:07.184409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:08.184407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:25:09.063
  I0902 08:25:09.083697 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-6460f704-6c52-4a88-bffd-0c4be83ffec9 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:25:09.098
  I0902 08:25:09.175400 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:25:09.187870      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-7189" for this suite. @ 09/02/25 08:25:09.212
• [4.305 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/02/25 08:25:09.234
  I0902 08:25:09.234979 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:25:09.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:09.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:09.278
  STEP: apply creating a deployment @ 09/02/25 08:25:09.29
  I0902 08:25:09.335258 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8381" for this suite. @ 09/02/25 08:25:09.366
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/02/25 08:25:09.384
  I0902 08:25:09.385021 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:25:09.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:09.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:09.44
  STEP: Creating secret with name projected-secret-test-be16fe64-05b1-4552-9d6a-92d704882fe9 @ 09/02/25 08:25:09.448
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:25:09.466
  E0902 08:25:10.189498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:11.191059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:12.191768      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:13.206103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:25:13.545
  I0902 08:25:13.554614 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-secrets-22579b23-bd84-43cf-b55a-f5ecd9dbbc1a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:25:13.572
  I0902 08:25:13.605994 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5972" for this suite. @ 09/02/25 08:25:13.622
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/02/25 08:25:13.676
  I0902 08:25:13.676241 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:25:13.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:13.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:13.734
  I0902 08:25:13.744317 18 replica_set.go:192] Creating ReplicaSet my-hostname-basic-9a284fbc-c33c-4928-80da-613b9bfc7210
  I0902 08:25:13.810566 18 resource.go:81] Pod name my-hostname-basic-9a284fbc-c33c-4928-80da-613b9bfc7210: Found 0 pods out of 1
  E0902 08:25:14.206557      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:15.207556      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:16.208020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:17.208205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:18.208326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:18.833326 18 resource.go:81] Pod name my-hostname-basic-9a284fbc-c33c-4928-80da-613b9bfc7210: Found 1 pods out of 1
  I0902 08:25:18.833409 18 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-9a284fbc-c33c-4928-80da-613b9bfc7210" is running
  I0902 08:25:18.867110 18 replica_set.go:221] Pod "my-hostname-basic-9a284fbc-c33c-4928-80da-613b9bfc7210-7dmkn" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 08:25:15 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 08:25:13 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 08:25:15 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 08:25:15 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 08:25:13 +0000 UTC Reason: Message:}])
  I0902 08:25:18.867200 18 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/25 08:25:18.867
  I0902 08:25:18.947475 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-133" for this suite. @ 09/02/25 08:25:18.958
• [5.301 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/02/25 08:25:18.978
  I0902 08:25:18.978199 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/25 08:25:18.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:19.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:19.032
  STEP: creating a target pod @ 09/02/25 08:25:19.037
  E0902 08:25:19.208593      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:20.208750      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/02/25 08:25:21.128
  E0902 08:25:21.209236      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:22.210462      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:23.210525      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/02/25 08:25:23.217
  STEP: checking pod container endpoints @ 09/02/25 08:25:23.242
  I0902 08:25:23.242768 18 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6924 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:25:23.242821 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:25:23.242901 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-6924/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0902 08:25:23.349831 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:25:23.349935 18 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/02/25 08:25:23.374
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/02/25 08:25:23.386
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/02/25 08:25:23.44
  I0902 08:25:23.452410 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6924" for this suite. @ 09/02/25 08:25:23.472
• [4.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/02/25 08:25:23.502
  I0902 08:25:23.502861 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:25:23.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:23.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:23.541
  STEP: Creating projection with secret that has name secret-emptykey-test-7f890361-da86-4939-9719-2a7713decab8 @ 09/02/25 08:25:23.55
  I0902 08:25:23.554173 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5808" for this suite. @ 09/02/25 08:25:23.566
• [0.083 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 09/02/25 08:25:23.585
  I0902 08:25:23.585861 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:25:23.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:23.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:23.637
  STEP: creating Agnhost RC @ 09/02/25 08:25:23.644
  I0902 08:25:23.644406 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-9911 create -f -'
  I0902 08:25:24.058906 18 builder.go:146] stderr: ""
  I0902 08:25:24.059012 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 08:25:24.059
  E0902 08:25:24.211841      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:25.082093 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:25:25.082160 18 framework.go:733] Found 0 / 1
  E0902 08:25:25.212351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:26.071766 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:25:26.071845 18 framework.go:733] Found 0 / 1
  E0902 08:25:26.215371      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:27.066999 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:25:27.067079 18 framework.go:733] Found 1 / 1
  I0902 08:25:27.067116 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/02/25 08:25:27.067
  I0902 08:25:27.072170 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:25:27.072233 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 08:25:27.072796 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-9911 patch pod agnhost-primary-5g4lb -p {"metadata":{"annotations":{"x":"y"}}}'
  E0902 08:25:27.215939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:27.424889 18 builder.go:146] stderr: ""
  I0902 08:25:27.425006 18 builder.go:147] stdout: "pod/agnhost-primary-5g4lb patched\n"
  STEP: checking annotations @ 09/02/25 08:25:27.425
  I0902 08:25:27.438326 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:25:27.438380 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 08:25:27.438557 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9911" for this suite. @ 09/02/25 08:25:27.456
• [3.909 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/02/25 08:25:27.496
  I0902 08:25:27.496206 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:25:27.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:27.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:27.568
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:25:27.575
  E0902 08:25:28.216082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:29.220562      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:30.219380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:31.219304      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:25:31.745
  I0902 08:25:31.760402 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-8d81f34d-35ff-4949-a3b5-f94a14f36964 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:25:31.777
  I0902 08:25:31.819887 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7574" for this suite. @ 09/02/25 08:25:31.834
• [4.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/02/25 08:25:31.912
  I0902 08:25:31.912555 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:25:31.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:31.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:31.966
  STEP: Creating the pod @ 09/02/25 08:25:31.973
  E0902 08:25:32.220410      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:33.221611      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:34.221932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:35.222392      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:36.223526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:36.667109 18 pod_client.go:173] Successfully updated pod "annotationupdate11ad3ab5-243b-4870-b5b7-1b250a195eb8"
  E0902 08:25:37.224234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:38.226141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:38.712433 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9243" for this suite. @ 09/02/25 08:25:38.726
• [6.829 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:25:38.742
  I0902 08:25:38.742719 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 08:25:38.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:38.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:38.836
  I0902 08:25:38.844121 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:25:39.225573      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:39.938250 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7722" for this suite. @ 09/02/25 08:25:39.96
• [1.241 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/02/25 08:25:39.984
  I0902 08:25:39.984793 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:25:39.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:40.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:40.022
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/02/25 08:25:40.03
  I0902 08:25:40.032800 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:25:40.238716      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:41.234866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:42.235871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:43.236214      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:44.238209      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:45.245019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:46.245531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:47.245749      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:48.246400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:49.266908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/02/25 08:25:49.717
  I0902 08:25:49.721144 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:25:50.267695      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:51.268577      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:52.273789      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:25:52.567898 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:25:53.269895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:54.270781      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:55.271262      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:56.271714      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:57.280711      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:58.282045      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:25:59.289323      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:00.291283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:01.292344      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:02.292663      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:02.755845 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6801" for this suite. @ 09/02/25 08:26:02.777
• [22.812 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/02/25 08:26:02.797
  I0902 08:26:02.797117 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:26:02.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:02.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:02.833
  STEP: creating the pod @ 09/02/25 08:26:02.838
  STEP: setting up watch @ 09/02/25 08:26:02.839
  STEP: submitting the pod to kubernetes @ 09/02/25 08:26:02.948
  STEP: verifying the pod is in kubernetes @ 09/02/25 08:26:02.973
  STEP: verifying pod creation was observed @ 09/02/25 08:26:02.979
  E0902 08:26:03.293601      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:04.294110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/02/25 08:26:05.01
  STEP: verifying pod deletion was observed @ 09/02/25 08:26:05.03
  E0902 08:26:05.294862      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:06.294418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:06.690684 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7819" for this suite. @ 09/02/25 08:26:06.71
• [3.944 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/02/25 08:26:06.743
  I0902 08:26:06.743705 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 08:26:06.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:06.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:06.786
  I0902 08:26:06.791991 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:26:07.294778      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:08.296317      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:09.296205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:10.297096      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:11.297513      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:12.303752      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:12.526729 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6441" for this suite. @ 09/02/25 08:26:12.558
• [5.834 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 09/02/25 08:26:12.581
  I0902 08:26:12.581882 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:26:12.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:12.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:12.655
  STEP: Creating a test headless service @ 09/02/25 08:26:12.665
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 207.21.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.21.207_udp@PTR;check="$$(dig +tcp +noall +answer +search 207.21.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.21.207_tcp@PTR;sleep 1; done
   @ 09/02/25 08:26:12.777
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 207.21.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.21.207_udp@PTR;check="$$(dig +tcp +noall +answer +search 207.21.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.21.207_tcp@PTR;sleep 1; done
   @ 09/02/25 08:26:12.777
  STEP: creating a pod to probe DNS @ 09/02/25 08:26:12.778
  STEP: submitting the pod to kubernetes @ 09/02/25 08:26:12.78
  E0902 08:26:13.304276      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:14.305537      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:26:14.897
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:26:14.906
  I0902 08:26:14.917414 18 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:14.926487 18 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:14.934138 18 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:14.941318 18 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:15.029568 18 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:15.036495 18 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:15.044988 18 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:15.056958 18 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local from pod dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248: the server could not find the requested resource (get pods dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248)
  I0902 08:26:15.099100 18 dns_common.go:506] Lookups using dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248 failed for: [agnhost_udp@dns-test-service.dns-7648.svc.cluster.local agnhost_tcp@dns-test-service.dns-7648.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local jessie_udp@dns-test-service.dns-7648.svc.cluster.local jessie_tcp@dns-test-service.dns-7648.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7648.svc.cluster.local]

  I0902 08:26:15.127369 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:26:15.140493 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:26:15.154360 18 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 08:26:15.305730      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:16.305981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:17.307393      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:18.307962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:19.308531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:20.308775      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:20.345438 18 dns_common.go:546] DNS probes using dns-7648/dns-test-4fee75f6-4c4e-44f8-ad28-c1dd89839248 succeeded

  STEP: deleting the pod @ 09/02/25 08:26:20.346
  STEP: deleting the test service @ 09/02/25 08:26:20.392
  STEP: deleting the test headless service @ 09/02/25 08:26:20.652
  I0902 08:26:20.693692 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7648" for this suite. @ 09/02/25 08:26:20.776
• [8.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/02/25 08:26:20.908
  I0902 08:26:20.908125 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:26:20.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:20.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:20.973
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/25 08:26:20.98
  E0902 08:26:21.309754      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:22.312033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:23.327411      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:24.325342      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:26:25.067
  I0902 08:26:25.072793 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-125473a7-bf66-4084-9fec-38c1a27471b9 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:26:25.092
  I0902 08:26:25.159015 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6558" for this suite. @ 09/02/25 08:26:25.166
• [4.277 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/02/25 08:26:25.185
  I0902 08:26:25.185596 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:26:25.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:25.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:25.232
  STEP: Setting up server cert @ 09/02/25 08:26:25.302
  E0902 08:26:25.325776      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:26.339115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:27.339319      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:26:27.714
  STEP: Deploying the webhook pod @ 09/02/25 08:26:27.736
  STEP: Wait for the deployment to be ready @ 09/02/25 08:26:27.829
  I0902 08:26:27.942521 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 26, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 26, 27, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 26, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 26, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  E0902 08:26:28.340015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:29.341089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:26:29.95
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:26:30.014
  E0902 08:26:30.341750      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:31.019239 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 08:26:31.034387 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:26:31.342569      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/02/25 08:26:31.599
  STEP: Creating a custom resource that should be denied by the webhook @ 09/02/25 08:26:31.679
  E0902 08:26:32.343616      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:33.343844      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/02/25 08:26:33.801
  STEP: Updating the custom resource with disallowed data should be denied @ 09/02/25 08:26:33.821
  STEP: Deleting the custom resource should be denied @ 09/02/25 08:26:33.842
  STEP: Remove the offending key and value from the custom resource data @ 09/02/25 08:26:33.863
  STEP: Deleting the updated custom resource should be successful @ 09/02/25 08:26:33.896
  E0902 08:26:34.344215      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:34.708891 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9282" for this suite. @ 09/02/25 08:26:34.722
  STEP: Destroying namespace "webhook-markers-2458" for this suite. @ 09/02/25 08:26:34.741
• [9.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/02/25 08:26:34.758
  I0902 08:26:34.758578 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:26:34.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:34.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:34.853
  STEP: set up a multi version CRD @ 09/02/25 08:26:34.86
  I0902 08:26:34.860711 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:26:35.355555      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:36.357888      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:37.359055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:38.359240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:39.359956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:40.368424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:41.369790      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/02/25 08:26:41.889
  STEP: check the new version name is served @ 09/02/25 08:26:41.924
  E0902 08:26:42.369732      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:43.370663      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/02/25 08:26:44.045
  E0902 08:26:44.371130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/02/25 08:26:45.047
  E0902 08:26:45.371477      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:46.372355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:47.372596      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:48.373448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:26:49.230713 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5977" for this suite. @ 09/02/25 08:26:49.293
• [14.574 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/02/25 08:26:49.333
  I0902 08:26:49.333993 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename ingress @ 09/02/25 08:26:49.341
  E0902 08:26:49.373524      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:49.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:49.382
  STEP: getting /apis @ 09/02/25 08:26:49.388
  STEP: getting /apis/networking.k8s.io @ 09/02/25 08:26:49.427
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/25 08:26:49.43
  STEP: creating @ 09/02/25 08:26:49.431
  STEP: getting @ 09/02/25 08:26:49.469
  STEP: listing @ 09/02/25 08:26:49.487
  STEP: watching @ 09/02/25 08:26:49.502
  I0902 08:26:49.502254 18 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:26:49.504
  STEP: cluster-wide watching @ 09/02/25 08:26:49.523
  I0902 08:26:49.531283 18 ingress.go:198] starting watch
  STEP: patching @ 09/02/25 08:26:49.538
  STEP: updating @ 09/02/25 08:26:49.575
  I0902 08:26:49.595284 18 ingress.go:221] waiting for watch events with expected annotations
  I0902 08:26:49.595349 18 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/02/25 08:26:49.595
  STEP: updating /status @ 09/02/25 08:26:49.606
  STEP: get /status @ 09/02/25 08:26:49.622
  STEP: deleting @ 09/02/25 08:26:49.627
  STEP: deleting a collection @ 09/02/25 08:26:49.664
  I0902 08:26:49.707536 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4026" for this suite. @ 09/02/25 08:26:49.72
• [0.404 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/02/25 08:26:49.738
  I0902 08:26:49.738182 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:26:49.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:49.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:49.775
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:26:49.78
  E0902 08:26:50.374299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:51.375072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:52.375734      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:53.376807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:26:53.835
  I0902 08:26:53.879326 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downward-api-3fcc7952-dca5-458b-b2da-35011b4f197e container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:26:53.92
  I0902 08:26:53.993209 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8677" for this suite. @ 09/02/25 08:26:54.002
• [4.278 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/02/25 08:26:54.016
  I0902 08:26:54.016379 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:26:54.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:54.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:54.05
  STEP: creating a watch on configmaps with label A @ 09/02/25 08:26:54.055
  STEP: creating a watch on configmaps with label B @ 09/02/25 08:26:54.057
  STEP: creating a watch on configmaps with label A or B @ 09/02/25 08:26:54.06
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/02/25 08:26:54.063
  I0902 08:26:54.073524 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25582 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:26:54.073994 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25582 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/02/25 08:26:54.074
  I0902 08:26:54.090353 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25583 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:26:54.090501 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25583 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/02/25 08:26:54.09
  I0902 08:26:54.103270 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25584 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:26:54.104900 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25584 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/02/25 08:26:54.105
  I0902 08:26:54.116191 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25585 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:26:54.116566 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5629  437a333a-00e5-4564-bed1-0ce0cc2e138f 25585 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/02/25 08:26:54.116
  I0902 08:26:54.125331 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5629  59519e2f-4e40-4263-a4be-f58d23486273 25586 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:26:54.125764 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5629  59519e2f-4e40-4263-a4be-f58d23486273 25586 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0902 08:26:54.379969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:55.379233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:56.380306      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:57.380616      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:58.381009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:26:59.391852      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:00.392784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:01.393901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:02.393929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:03.393996      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/02/25 08:27:04.126
  I0902 08:27:04.174910 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5629  59519e2f-4e40-4263-a4be-f58d23486273 25624 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:27:04.175013 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5629  59519e2f-4e40-4263-a4be-f58d23486273 25624 0 2025-09-02 08:26:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 08:26:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0902 08:27:04.394229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:05.394372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:06.394508      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:07.394718      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:08.394817      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:09.395181      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:10.395340      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:11.396153      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:12.396909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:13.398912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:27:14.176006 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5629" for this suite. @ 09/02/25 08:27:14.201
• [20.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/02/25 08:27:14.231
  I0902 08:27:14.234928 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:27:14.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:14.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:14.269
  STEP: Setting up data @ 09/02/25 08:27:14.277
  STEP: Creating pod pod-subpath-test-configmap-8gtg @ 09/02/25 08:27:14.337
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:27:14.337
  E0902 08:27:14.398933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:15.399758      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:16.399839      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:17.400067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:18.400473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:19.401156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:20.401426      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:21.401664      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:22.402699      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:23.402875      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:24.402900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:25.404879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:26.405168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:27.405604      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:28.406098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:29.406847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:30.407680      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:31.408112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:32.408029      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:33.410846      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:34.411978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:35.412493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:36.412321      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:37.414815      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:38.414945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:27:38.587
  I0902 08:27:38.594928 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-subpath-test-configmap-8gtg container test-container-subpath-configmap-8gtg: <nil>
  STEP: delete the pod @ 09/02/25 08:27:38.614
  STEP: Deleting pod pod-subpath-test-configmap-8gtg @ 09/02/25 08:27:38.642
  I0902 08:27:38.642133 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-8gtg" in namespace "subpath-6902"
  I0902 08:27:38.647414 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6902" for this suite. @ 09/02/25 08:27:38.657
• [24.437 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/02/25 08:27:38.669
  I0902 08:27:38.669296 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:27:38.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:38.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:38.73
  STEP: creating the pod @ 09/02/25 08:27:38.735
  STEP: submitting the pod to kubernetes @ 09/02/25 08:27:38.735
  I0902 08:27:38.759856      18 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0902 08:27:39.415169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:40.415908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/02/25 08:27:40.84
  STEP: updating the pod @ 09/02/25 08:27:40.848
  I0902 08:27:41.378795 18 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-8bbc45e0-c632-4e9a-b61b-2acafa9442e1"
  E0902 08:27:41.416762      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:42.417210      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:43.417876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:44.418088      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:27:45.401811 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4270" for this suite. @ 09/02/25 08:27:45.411
  E0902 08:27:45.418512      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [6.757 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/02/25 08:27:45.426
  I0902 08:27:45.426789 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:27:45.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:45.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:45.46
  STEP: create the container @ 09/02/25 08:27:45.465
  I0902 08:27:45.487154      18 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/02/25 08:27:45.487
  E0902 08:27:46.418991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:47.419358      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:48.422984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/25 08:27:48.53
  STEP: the container should be terminated @ 09/02/25 08:27:48.541
  STEP: the termination message should be set @ 09/02/25 08:27:48.541
  I0902 08:27:48.541380 18 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/02/25 08:27:48.541
  I0902 08:27:48.580424 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-425" for this suite. @ 09/02/25 08:27:48.595
• [3.195 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/02/25 08:27:48.635
  I0902 08:27:48.635957 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pv @ 09/02/25 08:27:48.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:48.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:48.687
  STEP: Creating initial PV and PVC @ 09/02/25 08:27:48.693
  I0902 08:27:48.693322 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9094" @ 09/02/25 08:27:48.723
  STEP: Listing PVCs in namespace "pv-9094" @ 09/02/25 08:27:48.739
  STEP: Patching the PV "pv-9094-6kfpb" @ 09/02/25 08:27:48.754
  STEP: Patching the PVC "pvc-4qzrn" @ 09/02/25 08:27:48.781
  STEP: Getting PV "pv-9094-6kfpb" @ 09/02/25 08:27:48.8
  STEP: Getting PVC "pvc-4qzrn" @ 09/02/25 08:27:48.809
  STEP: Deleting PVC "pvc-4qzrn" @ 09/02/25 08:27:48.823
  STEP: Confirm deletion of PVC "pvc-4qzrn" @ 09/02/25 08:27:48.839
  E0902 08:27:49.421822      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:50.421619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9094-6kfpb" @ 09/02/25 08:27:50.861
  STEP: Confirm deletion of PV "pv-9094-6kfpb" @ 09/02/25 08:27:50.893
  E0902 08:27:51.421969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:52.422168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/02/25 08:27:52.93
  I0902 08:27:52.930911 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9094-6w58z" @ 09/02/25 08:27:52.974
  STEP: Updating the PVC "pvc-jmm9j" @ 09/02/25 08:27:53.056
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-jmm9j=updated" @ 09/02/25 08:27:53.087
  STEP: Deleting PVC "pvc-jmm9j" via DeleteCollection @ 09/02/25 08:27:53.096
  STEP: Confirm deletion of PVC "pvc-jmm9j" @ 09/02/25 08:27:53.112
  E0902 08:27:53.422341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:54.422544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9094-6w58z" via DeleteCollection @ 09/02/25 08:27:55.129
  STEP: Confirm deletion of PV "pv-9094-6w58z" @ 09/02/25 08:27:55.178
  E0902 08:27:55.423847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:56.423384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:27:57.202526 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0902 08:27:57.205837 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-jmm9j"
  I0902 08:27:57.213767 18 pv.go:193] Deleting PersistentVolume "pv-9094-6w58z"
  I0902 08:27:57.219289 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9094" for this suite. @ 09/02/25 08:27:57.229
• [8.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/02/25 08:27:57.247
  I0902 08:27:57.247764 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/02/25 08:27:57.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:57.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:57.288
  STEP: mirroring a new custom Endpoint @ 09/02/25 08:27:57.391
  I0902 08:27:57.425370      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0902 08:27:57.439492      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:27:57.461790 18 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0902 08:27:58.439098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:27:59.439202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/02/25 08:27:59.472
  I0902 08:27:59.485951      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/02/25 08:27:59.507
  I0902 08:27:59.519705      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:27:59.549895 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4678" for this suite. @ 09/02/25 08:27:59.568
• [2.377 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/02/25 08:27:59.625
  I0902 08:27:59.625152 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 08:27:59.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:59.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:59.742
  STEP: getting /apis @ 09/02/25 08:27:59.838
  STEP: getting /apis/discovery.k8s.io @ 09/02/25 08:27:59.849
  STEP: getting /apis/discovery.k8s.iov1 @ 09/02/25 08:27:59.853
  STEP: creating @ 09/02/25 08:27:59.856
  STEP: getting @ 09/02/25 08:27:59.924
  STEP: listing @ 09/02/25 08:27:59.93
  STEP: watching @ 09/02/25 08:27:59.939
  I0902 08:27:59.940110 18 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:27:59.944
  STEP: cluster-wide watching @ 09/02/25 08:27:59.988
  I0902 08:27:59.988146 18 endpointslice.go:459] starting watch
  STEP: patching @ 09/02/25 08:27:59.991
  STEP: updating @ 09/02/25 08:28:00.008
  I0902 08:28:00.025603 18 endpointslice.go:482] waiting for watch events with expected annotations
  I0902 08:28:00.025694 18 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/02/25 08:28:00.026
  STEP: deleting a collection @ 09/02/25 08:28:00.089
  I0902 08:28:00.135199 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4367" for this suite. @ 09/02/25 08:28:00.148
• [0.552 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/02/25 08:28:00.176
  I0902 08:28:00.176518 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:28:00.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:00.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:00.247
  STEP: Creating pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083 @ 09/02/25 08:28:00.252
  E0902 08:28:00.439391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:01.439465      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:02.440861      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:03.441056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:28:04.335
  I0902 08:28:04.343775 18 container_probe.go:1748] Initial restart count of pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is 0
  I0902 08:28:04.349815 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:04.442203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:05.443576      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:06.371370 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:06.442620      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:07.443854      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:08.417358 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:08.443489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:09.443832      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:10.424468 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:10.444201      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:11.444379      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:12.435331 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:12.444819      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:13.445117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:14.445448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:14.446369 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:15.456026      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:16.456948      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:16.468485 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:17.457360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:18.457862      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:18.479256 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:19.457893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:20.458052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:20.495322 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:21.458212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:22.458513      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:22.510362 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  I0902 08:28:22.510466 18 container_probe.go:1762] Restart count of pod container-probe-2083/liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is now 1 (18.166501262s elapsed)
  E0902 08:28:23.462050      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:24.460078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:24.521249 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:25.460616      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:26.460822      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:26.530052 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:27.461938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:28.462733      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:28.575466 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:29.463134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:30.464113      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:30.584293 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:31.464939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:32.471945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:32.593070 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:33.472084      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:34.472297      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:34.601441 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:35.473351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:36.474034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:36.608562 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:37.474256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:38.474610      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:38.617215 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:39.476549      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:40.476194      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:40.639158 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:41.476272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:42.477545      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:42.692222 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  I0902 08:28:42.692438 18 container_probe.go:1762] Restart count of pod container-probe-2083/liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is now 2 (38.348472303s elapsed)
  E0902 08:28:43.477946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:44.480544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:44.704117 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:45.480095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:46.492117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:46.726399 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:47.495834      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:48.493274      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:48.735877 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:49.503990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:50.505059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:50.750217 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:51.504709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:52.504904      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:52.771169 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:53.505059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:54.505268      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:54.797955 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:55.506026      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:56.506716      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:56.806167 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:57.507374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:28:58.507915      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:28:58.814600 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:28:59.509845      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:00.511270      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:00.875864 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:01.509091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:02.510221      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:02.887086 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  I0902 08:29:02.887219 18 container_probe.go:1762] Restart count of pod container-probe-2083/liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is now 3 (58.543245471s elapsed)
  E0902 08:29:03.510787      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:04.511293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:04.895265 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:05.512017      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:06.513740      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:06.905153 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:07.514596      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:08.515229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:08.915450 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:09.516040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:10.516123      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:10.925523 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:11.517144      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:12.518709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:12.936393 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:13.519265      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:14.520023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:14.959395 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:15.521109      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:16.521976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:17.005348 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:17.522833      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:18.523357      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:19.014345 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:19.523419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:20.524043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:21.089989 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:21.524493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:22.524693      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:23.117189 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  I0902 08:29:23.117273 18 container_probe.go:1762] Restart count of pod container-probe-2083/liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is now 4 (1m18.773336326s elapsed)
  E0902 08:29:23.525981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:24.525944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:25.129501 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:25.527031      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:26.527391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:27.137946 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:27.528347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:28.528559      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:29.147479 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:29.528994      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:30.529131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:31.156898 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:31.529355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:32.529940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:33.168015 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:33.529956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:34.530419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:35.179545 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:35.530805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:36.532179      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:37.187766 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:37.532156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:38.532189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:39.221957 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:39.533044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:40.534048      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:41.232614 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:41.534927      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:42.537170      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:43.245208 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:43.537369      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:44.538039      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:45.311694 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:45.543261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:46.549142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:47.320603 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:47.549454      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:48.549969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:49.334498 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:49.559032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:50.553287      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:51.346812 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:51.553478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:52.553696      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:53.355736 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:53.555025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:54.555260      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:55.383339 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:55.556350      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:56.557272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:57.401330 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:57.557382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:29:58.557917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:29:59.416537 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:29:59.558201      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:00.560273      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:01.442356 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:01.563015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:02.563157      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:03.456212 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:03.564226      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:04.564468      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:05.465764 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:05.564937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:06.565320      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:07.482441 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:07.565483      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:08.569940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:09.527760 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:09.570951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:10.572033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:11.536393 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:11.573613      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:12.574032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:13.546808 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:13.574577      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:14.574996      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:15.567597 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:15.579264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:16.579901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:17.577210 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:17.580309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:18.581061      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:19.582089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:19.607584 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:20.582768      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:21.583843      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:21.614269 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  E0902 08:30:22.583183      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:23.583967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:23.637350 18 container_probe.go:1758] Get pod liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 in namespace container-probe-2083
  I0902 08:30:23.637419 18 container_probe.go:1762] Restart count of pod container-probe-2083/liveness-f387fcf2-7c4f-4730-9ab1-97ef55c77568 is now 5 (2m19.293482703s elapsed)
  STEP: deleting the pod @ 09/02/25 08:30:23.639
  I0902 08:30:23.671479 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2083" for this suite. @ 09/02/25 08:30:23.766
• [143.612 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/02/25 08:30:23.79
  I0902 08:30:23.791161 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:30:23.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:30:23.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:30:23.843
  I0902 08:30:23.866869 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:30:24.585028      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:25.585299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:26.585541      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:27.130530 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3642" for this suite. @ 09/02/25 08:30:27.139
• [3.361 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/02/25 08:30:27.151
  I0902 08:30:27.151300 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:30:27.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:30:27.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:30:27.184
  STEP: Creating service test in namespace statefulset-1170 @ 09/02/25 08:30:27.191
  STEP: Creating a new StatefulSet @ 09/02/25 08:30:27.232
  I0902 08:30:27.268917 18 wait.go:44] Found 0 stateful pods, waiting for 3
  E0902 08:30:27.586308      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:28.587106      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:29.586987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:30.588071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:31.596194      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:32.591932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:33.592190      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:34.592304      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:35.592515      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:36.593020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:37.259723 18 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:30:37.259824 18 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:30:37.259845 18 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:30:37.278805 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-1170 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0902 08:30:37.594166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:30:37.625834 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:30:37.625904 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:30:37.625937 18 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0902 08:30:38.618020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:39.615939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:40.622621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:41.619951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:42.621014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:43.622722      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:44.623011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:45.623164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:46.624433      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:47.624614      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/25 08:30:47.651
  I0902 08:30:47.695096 18 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/25 08:30:47.695
  E0902 08:30:48.625892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:49.625900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:50.626306      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:51.638091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:52.636936      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:53.637836      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:54.637939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:55.639437      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:56.639871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:57.640502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/02/25 08:30:57.711
  I0902 08:30:57.718908 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-1170 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:30:58.014314 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:30:58.014383 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:30:58.014404 18 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0902 08:30:58.664954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:30:59.649683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:00.649865      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:01.651455      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:02.651988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:03.652176      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:04.652368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:05.653390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:06.653256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:07.654120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/02/25 08:31:08.05
  I0902 08:31:08.051614 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-1170 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:31:08.372106 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:31:08.372861 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:31:08.376793 18 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0902 08:31:08.653810      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:09.654061      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:10.655489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:11.656412      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:12.658610      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:13.657898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:14.657746      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:15.657961      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:16.659069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:17.658360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:31:18.437479 18 statefulset.go:2542] Updating stateful set ss2
  E0902 08:31:18.659322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:19.661721      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:20.660963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:21.662131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:22.662502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:23.662989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:24.663098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:25.663331      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:26.664169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:27.664507      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/02/25 08:31:28.481
  I0902 08:31:28.510571 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-1170 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:31:28.665506      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:31:29.025266 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:31:29.025367 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:31:29.025401 18 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0902 08:31:29.666369      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:30.666855      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:31.667545      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:32.668424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:33.668531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:34.677498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:35.678096      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:36.709103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:37.685326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:38.686032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:31:39.066519 18 statefulset.go:138] Deleting all statefulset in ns statefulset-1170
  I0902 08:31:39.078330 18 rest.go:153] Scaling statefulset ss2 to 0
  E0902 08:31:39.686181      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:40.686383      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:41.687015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:42.688064      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:43.687541      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:44.688570      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:45.694119      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:46.689970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:47.690232      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:48.690779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:31:49.119293 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:31:49.130114 18 rest.go:91] Deleting statefulset ss2
  I0902 08:31:49.232024 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1170" for this suite. @ 09/02/25 08:31:49.241
• [82.107 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/02/25 08:31:49.26
  I0902 08:31:49.260820 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:31:49.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:31:49.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:31:49.329
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/02/25 08:31:49.337
  I0902 08:31:49.375359 18 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0902 08:31:49.692057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:50.691926      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:51.704113      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:52.705845      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:53.701039      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:31:54.390290 18 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:31:54.39
  STEP: getting scale subresource @ 09/02/25 08:31:54.392
  STEP: updating a scale subresource @ 09/02/25 08:31:54.398
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/02/25 08:31:54.453
  STEP: Patch a scale subresource @ 09/02/25 08:31:54.482
  I0902 08:31:54.641620 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7933" for this suite. @ 09/02/25 08:31:54.739
  E0902 08:31:54.739742      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [5.542 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/02/25 08:31:54.801
  I0902 08:31:54.803549 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:31:54.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:31:54.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:31:54.923
  STEP: creating a ConfigMap @ 09/02/25 08:31:54.931
  STEP: fetching the ConfigMap @ 09/02/25 08:31:54.969
  STEP: patching the ConfigMap @ 09/02/25 08:31:55.015
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/02/25 08:31:55.079
  STEP: deleting the ConfigMap by collection with a label selector @ 09/02/25 08:31:55.115
  STEP: listing all ConfigMaps in test namespace @ 09/02/25 08:31:55.364
  I0902 08:31:55.413969 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-847" for this suite. @ 09/02/25 08:31:55.539
• [0.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/02/25 08:31:55.595
  I0902 08:31:55.595579 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/02/25 08:31:55.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:31:55.717
  E0902 08:31:55.726229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:31:55.732
  STEP: Setting up server cert @ 09/02/25 08:31:55.748
  E0902 08:31:56.742543      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 08:31:57.738
  E0902 08:31:57.751366      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 08:31:57.759
  STEP: Wait for the deployment to be ready @ 09/02/25 08:31:57.782
  I0902 08:31:57.867572 18 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0902 08:31:58.751670      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:31:59.753871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:00.097129 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 31, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 31, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 31, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 31, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:32:00.753919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:01.768071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:32:02.125
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:32:02.171
  E0902 08:32:02.768598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:03.172257 18 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/02/25 08:32:03.197
  I0902 08:32:03.197902 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Creating a custom resource conversion webhook @ 09/02/25 08:32:03.738
  E0902 08:32:03.771238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:04.769890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:05.770186      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/02/25 08:32:06.094
  STEP: Registering informers with field selectors @ 09/02/25 08:32:06.106
  STEP: Creating custom resources @ 09/02/25 08:32:06.106
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/02/25 08:32:06.156
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/02/25 08:32:06.176
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/02/25 08:32:06.185
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/02/25 08:32:06.216
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/02/25 08:32:06.222
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/02/25 08:32:06.228
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/02/25 08:32:06.229
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/02/25 08:32:06.229
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/02/25 08:32:06.229
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/02/25 08:32:06.229
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/02/25 08:32:06.292
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/02/25 08:32:06.341
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/02/25 08:32:06.356
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/02/25 08:32:06.361
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/02/25 08:32:06.367
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/02/25 08:32:06.367
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/02/25 08:32:06.367
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/02/25 08:32:06.368
  E0902 08:32:06.771023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:07.117551 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-8100" for this suite. @ 09/02/25 08:32:07.135
• [11.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 09/02/25 08:32:07.179
  I0902 08:32:07.179895 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:32:07.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:07.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:07.23
  STEP: creating service nodeport-test with type=NodePort in namespace services-7883 @ 09/02/25 08:32:07.239
  I0902 08:32:07.407563 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 08:32:07.773761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:08.773976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:09.438992 18 resource.go:361] Creating new exec pod
  E0902 08:32:09.774728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:10.776346      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:11.500179 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7883 exec execpod5lnh2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0902 08:32:11.776326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:11.861010 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.10.47) 80 port [tcp/http] succeeded!\n"
  I0902 08:32:11.861094 18 builder.go:147] stdout: "nodeport-test-6f8d985b55-jff8c"
  I0902 08:32:11.861518 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7883 exec execpod5lnh2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.10.47 80'
  I0902 08:32:12.246406 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.10.47 80\nConnection to 10.233.10.47 80 port [tcp/http] succeeded!\n"
  I0902 08:32:12.246479 18 builder.go:147] stdout: "nodeport-test-6f8d985b55-cvkjc"
  I0902 08:32:12.266832 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7883 exec execpod5lnh2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 32501'
  I0902 08:32:12.684787 18 builder.go:146] stderr: "+ nc -v -t -w+ echo hostName\n 2 192.168.121.25 32501\nConnection to 192.168.121.25 32501 port [tcp/*] succeeded!\n"
  I0902 08:32:12.685384 18 builder.go:147] stdout: ""
  E0902 08:32:12.777444      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:13.261086 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7883 exec execpod5lnh2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 32501'
  I0902 08:32:13.637796 18 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 192.168.121.25 32501\nConnection to 192.168.121.25 32501 port [tcp/*] succeeded!\n"
  I0902 08:32:13.637868 18 builder.go:147] stdout: "nodeport-test-6f8d985b55-cvkjc"
  I0902 08:32:13.638461 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7883 exec execpod5lnh2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.238 32501'
  E0902 08:32:13.777464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:32:13.942699 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.238 32501\nConnection to 192.168.121.238 32501 port [tcp/*] succeeded!\n"
  I0902 08:32:13.942768 18 builder.go:147] stdout: "nodeport-test-6f8d985b55-cvkjc"
  I0902 08:32:13.943103 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7883" for this suite. @ 09/02/25 08:32:13.952
• [6.792 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/02/25 08:32:13.973
  I0902 08:32:13.973944 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename apf @ 09/02/25 08:32:13.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:14.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:14.025
  STEP: getting /apis @ 09/02/25 08:32:14.031
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/02/25 08:32:14.042
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/02/25 08:32:14.044
  STEP: creating @ 09/02/25 08:32:14.046
  STEP: getting @ 09/02/25 08:32:14.138
  STEP: listing @ 09/02/25 08:32:14.148
  STEP: watching @ 09/02/25 08:32:14.155
  I0902 08:32:14.155059 18 flowcontrol.go:620] starting watch
  STEP: patching @ 09/02/25 08:32:14.157
  STEP: updating @ 09/02/25 08:32:14.178
  I0902 08:32:14.198472 18 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/02/25 08:32:14.198
  STEP: patching /status @ 09/02/25 08:32:14.217
  STEP: updating /status @ 09/02/25 08:32:14.229
  STEP: deleting @ 09/02/25 08:32:14.255
  STEP: deleting a collection @ 09/02/25 08:32:14.283
  I0902 08:32:14.315278 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1175" for this suite. @ 09/02/25 08:32:14.324
• [0.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/02/25 08:32:14.339
  I0902 08:32:14.339321 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:32:14.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:14.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:14.411
  I0902 08:32:14.444460 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:32:14.778533      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:15.779003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:16.779911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:17.780902      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:18.785449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:19.783361      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:20.784698      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:21.785150      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:22.786148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:23.786271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:24.786972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:25.787310      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:26.787995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:27.788406      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:28.789056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:29.789291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:30.794062      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:31.794305      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:32.794595      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:33.794947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:34.795905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:35.796378      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:36.797305      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:37.797492      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:38.798549      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:39.798981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:40.799077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:41.799965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:42.799435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:43.799936      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:44.800104      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:45.800250      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:46.800915      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:47.801738      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:48.802381      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:49.802547      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:50.803582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:51.803776      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:52.803895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:53.804159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:54.804544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:55.805341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:56.806163      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:57.806458      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:58.806830      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:32:59.807421      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:00.808368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:01.808384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:02.809262      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:03.809617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:04.810125      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:05.810813      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:06.811021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:07.812720      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:08.813864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:09.815209      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:10.815920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:11.816777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:12.817005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:13.817419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:14.455115 18 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/25 08:33:14.462
  STEP: Adding a custom resource @ 09/02/25 08:33:14.462
  I0902 08:33:14.519922 18 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0902 08:33:14.565913 18 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 08:33:14.566
  I0902 08:33:14.723147 18 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0902 08:33:14.759366 18 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/25 08:33:14.759
  E0902 08:33:14.821329      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:15.819737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:16.822537      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/02/25 08:33:16.864
  E0902 08:33:17.829458      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:18.972726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:19.973402      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:20.974074      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/02/25 08:33:21.281
  STEP: Removing a custom resource @ 09/02/25 08:33:21.326
  I0902 08:33:21.358192 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8005" for this suite. @ 09/02/25 08:33:21.37
• [67.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/02/25 08:33:21.395
  I0902 08:33:21.395219 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:33:21.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:33:21.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:33:21.436
  STEP: Creating pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823 @ 09/02/25 08:33:21.442
  E0902 08:33:21.975517      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:22.975296      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:33:23.51
  I0902 08:33:23.578895 18 container_probe.go:1748] Initial restart count of pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 is 0
  I0902 08:33:23.586199 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:23.975976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:24.982085      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:25.613141 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:25.981876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:26.982456      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:27.702163 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:27.982989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:28.983003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:29.748996 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:29.985330      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:30.985383      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:31.782909 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:31.987065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:32.987444      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:33.798523 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:33.988469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:34.988988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:35.842500 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:35.989367      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:36.989276      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:37.857094 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:37.990891      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:38.992006      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:39.870804 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:39.991362      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:40.991435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:41.892253 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  E0902 08:33:41.991510      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:42.991863      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:33:43.900337 18 container_probe.go:1758] Get pod liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 in namespace container-probe-6823
  I0902 08:33:43.900432 18 container_probe.go:1762] Restart count of pod container-probe-6823/liveness-c013a956-ed48-442b-a9b1-12e55792c2e4 is now 1 (20.321451296s elapsed)
  STEP: deleting the pod @ 09/02/25 08:33:43.9
  I0902 08:33:43.943083 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6823" for this suite. @ 09/02/25 08:33:43.952
  E0902 08:33:43.992060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [22.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 09/02/25 08:33:44.016
  I0902 08:33:44.016533 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:33:44.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:33:44.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:33:44.136
  STEP: Creating a ResourceQuota with terminating scope @ 09/02/25 08:33:44.155
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 08:33:44.183
  E0902 08:33:44.992435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:45.995454      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/02/25 08:33:46.191
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 08:33:46.201
  E0902 08:33:46.996141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:47.996373      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/02/25 08:33:48.21
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/02/25 08:33:48.247
  E0902 08:33:48.997001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:49.998446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/02/25 08:33:50.257
  E0902 08:33:50.998802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:51.998855      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 08:33:52.275
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 08:33:52.306
  E0902 08:33:53.000043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:54.000480      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/02/25 08:33:54.324
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/02/25 08:33:54.385
  E0902 08:33:55.001226      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:56.001899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/02/25 08:33:56.394
  E0902 08:33:57.001984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:33:58.002787      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 08:33:58.403
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 08:33:58.431
  E0902 08:33:59.003895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:00.004316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:00.470625 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9571" for this suite. @ 09/02/25 08:34:00.483
• [16.486 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/02/25 08:34:00.503
  I0902 08:34:00.503214 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:34:00.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:34:00.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:34:00.594
  STEP: Creating configMap with name projected-configmap-test-volume-1f1eea06-fde9-42bb-b554-1544d3f0d82f @ 09/02/25 08:34:00.602
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:34:00.611
  E0902 08:34:01.005816      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:02.006153      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:03.006247      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:04.006425      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:34:04.748
  I0902 08:34:04.758983 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-0441b437-d3e9-4031-973b-772b6a3b610d container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:34:04.802
  I0902 08:34:04.892506 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9041" for this suite. @ 09/02/25 08:34:04.917
• [4.439 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/02/25 08:34:04.942
  I0902 08:34:04.942798 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename conformance-tests @ 09/02/25 08:34:04.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:34:04.991
  E0902 08:34:05.006977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:34:05.008
  STEP: Getting node addresses @ 09/02/25 08:34:05.016
  I0902 08:34:05.016589 18 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0902 08:34:05.043859 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-26" for this suite. @ 09/02/25 08:34:05.051
• [0.123 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/02/25 08:34:05.066
  I0902 08:34:05.066245 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:34:05.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:34:05.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:34:05.153
  E0902 08:34:06.007399      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:07.007866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:08.007917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:09.008889      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:10.009963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:11.009988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:12.010608      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:13.011387      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:14.011233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:15.011908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:16.012064      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:17.012363      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:18.012611      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:19.013947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:20.014787      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:21.015556      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:22.015708      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:23.018411      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:24.019246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:25.019554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:26.019568      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:27.019848      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:28.019984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:29.020375      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:29.331349 18 container_probe.go:91] Container started at 2025-09-02 08:34:06 +0000 UTC, pod became ready at 2025-09-02 08:34:27 +0000 UTC
  I0902 08:34:29.333834 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1795" for this suite. @ 09/02/25 08:34:29.347
• [24.300 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/02/25 08:34:29.366
  I0902 08:34:29.366447 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subjectreview @ 09/02/25 08:34:29.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:34:29.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:34:29.413
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-10" @ 09/02/25 08:34:29.418
  I0902 08:34:29.432078 18 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-10:e2e"
  I0902 08:34:29.433547 18 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-10"}
  I0902 08:34:29.433581 18 subjectreviews.go:71] saUID: "294bb332-5556-4f12-9f07-2f35caa43fcb"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-10:e2e" @ 09/02/25 08:34:29.433
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-10:e2e" @ 09/02/25 08:34:29.434
  I0902 08:34:29.441043 18 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-10:e2e" api 'list' configmaps in "subjectreview-10" namespace @ 09/02/25 08:34:29.441
  I0902 08:34:29.455264 18 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-10:e2e" @ 09/02/25 08:34:29.455
  I0902 08:34:29.464378 18 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0902 08:34:29.464965 18 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0902 08:34:29.466009 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-10" for this suite. @ 09/02/25 08:34:29.481
• [0.137 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/02/25 08:34:29.505
  I0902 08:34:29.505799 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:34:29.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:34:29.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:34:29.571
  STEP: Creating pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493 @ 09/02/25 08:34:29.6
  E0902 08:34:30.020520      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:31.021347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:34:31.658
  I0902 08:34:31.664612 18 container_probe.go:1748] Initial restart count of pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 is 0
  I0902 08:34:31.674123 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:32.022444      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:33.022596      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:33.683756 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:34.024964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:35.024117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:35.693226 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:36.024426      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:37.024920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:37.740068 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:38.028011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:39.029709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:39.754174 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:40.029999      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:41.030702      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:41.762826 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:42.032241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:43.032334      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:43.780246 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:44.033271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:45.033341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:45.790807 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:46.034284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:47.034417      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:47.799443 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:48.035352      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:49.035688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:49.808585 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:50.036221      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:51.036603      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:51.820534 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:52.038349      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:53.042315      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:53.835718 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:54.040347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:55.047431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:55.845465 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:56.048017      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:57.047907      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:57.877833 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:34:58.049011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:34:59.049915      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:34:59.897425 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:00.050832      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:01.051960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:01.913540 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:02.055015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:03.053891      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:03.935093 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:04.057834      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:05.058024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:05.955399 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:06.058455      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:07.057913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:07.969421 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:08.099908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:09.096837      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:10.028109 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:10.097853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:11.098180      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:12.085516 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:12.098531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:13.100711      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:14.101073      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:14.110311 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:15.101482      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:16.102421      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:16.148797 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:17.103107      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:18.107966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:18.158940 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:19.107946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:20.108025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:20.170438 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:21.109226      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:22.109937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:22.185378 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:23.110208      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:24.110506      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:24.240476 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:25.111279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:26.111730      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:26.266445 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:27.112989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:28.112470      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:28.310033 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:29.112452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:30.112991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:30.321740 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:31.113620      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:32.114165      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:32.359661 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:33.115170      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:34.114698      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:34.369198 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:35.115051      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:36.122374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:36.391483 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:37.123012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:38.123172      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:38.399832 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:39.123611      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:40.124142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:40.422997 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:41.125407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:42.125380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:42.432950 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:43.126733      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:44.125511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:44.479284 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  E0902 08:35:45.126535      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:46.126777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:46.487393 18 container_probe.go:1758] Get pod test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 in namespace container-probe-5493
  I0902 08:35:46.487549 18 container_probe.go:1762] Restart count of pod container-probe-5493/test-grpc-4ba0af76-4cb6-4db7-9ff8-d24179accb14 is now 1 (1m14.822083198s elapsed)
  STEP: deleting the pod @ 09/02/25 08:35:46.488
  I0902 08:35:46.546090 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5493" for this suite. @ 09/02/25 08:35:46.564
• [77.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/02/25 08:35:46.608
  I0902 08:35:46.608194 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename limitrange @ 09/02/25 08:35:46.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:35:46.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:35:46.708
  STEP: Creating a LimitRange @ 09/02/25 08:35:46.715
  STEP: Setting up watch @ 09/02/25 08:35:46.715
  STEP: Submitting a LimitRange @ 09/02/25 08:35:46.857
  STEP: Verifying LimitRange creation was observed @ 09/02/25 08:35:46.884
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/02/25 08:35:46.885
  I0902 08:35:46.911431 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0902 08:35:46.911769 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/02/25 08:35:46.911
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/02/25 08:35:46.93
  I0902 08:35:46.943832 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0902 08:35:46.943917 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/02/25 08:35:46.943
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/02/25 08:35:47.004
  I0902 08:35:47.033140 18 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0902 08:35:47.033519 18 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/02/25 08:35:47.033
  STEP: Failing to create a Pod with more than max resources @ 09/02/25 08:35:47.046
  STEP: Updating a LimitRange @ 09/02/25 08:35:47.052
  E0902 08:35:47.127412      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying LimitRange updating is effective @ 09/02/25 08:35:47.129
  E0902 08:35:48.127621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:49.128057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/02/25 08:35:49.155
  STEP: Failing to create a Pod with more than max resources @ 09/02/25 08:35:49.171
  STEP: Deleting a LimitRange @ 09/02/25 08:35:49.174
  STEP: Verifying the LimitRange was deleted @ 09/02/25 08:35:49.243
  E0902 08:35:50.128508      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:51.128733      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:52.129783      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:53.129678      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:54.130256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:35:54.257526 18 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/02/25 08:35:54.257
  I0902 08:35:54.291059 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2866" for this suite. @ 09/02/25 08:35:54.306
• [7.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/02/25 08:35:54.345
  I0902 08:35:54.345257 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename discovery @ 09/02/25 08:35:54.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:35:54.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:35:54.392
  STEP: Setting up server cert @ 09/02/25 08:35:54.406
  E0902 08:35:55.130923      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 09/02/25 08:35:55.575
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/02/25 08:35:55.58
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/02/25 08:35:55.583
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/02/25 08:35:55.585
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/02/25 08:35:55.587
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/02/25 08:35:55.591
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/02/25 08:35:55.593
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/02/25 08:35:55.595
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/02/25 08:35:55.597
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/02/25 08:35:55.598
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/02/25 08:35:55.601
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/02/25 08:35:55.603
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/02/25 08:35:55.605
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/02/25 08:35:55.606
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/02/25 08:35:55.608
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/02/25 08:35:55.612
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/02/25 08:35:55.615
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/02/25 08:35:55.618
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/02/25 08:35:55.62
  I0902 08:35:55.624517 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5915" for this suite. @ 09/02/25 08:35:55.651
• [1.321 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 09/02/25 08:35:55.666
  I0902 08:35:55.666443 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:35:55.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:35:55.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:35:55.713
  STEP: Creating service test in namespace statefulset-8569 @ 09/02/25 08:35:55.718
  STEP: Creating stateful set ss in namespace statefulset-8569 @ 09/02/25 08:35:55.726
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8569 @ 09/02/25 08:35:55.755
  I0902 08:35:55.766953 18 wait.go:44] Found 0 stateful pods, waiting for 1
  E0902 08:35:56.132015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:57.131952      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:58.132178      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:35:59.132314      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:00.132693      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:01.132652      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:02.144056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:03.144889      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:04.145210      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:05.146040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:05.763170 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/02/25 08:36:05.763
  I0902 08:36:05.769025 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:36:06.054232 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:36:06.054300 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:36:06.054329 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:36:06.062190 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0902 08:36:06.145857      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:07.146016      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:08.146151      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:09.146511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:10.148403      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:11.148545      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:12.149164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:13.149711      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:14.151001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:15.151455      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:16.068082 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:36:16.068184 18 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:36:16.122203 18 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0902 08:36:16.122390 18 resource.go:175] ss-0  ahkoog9eunoh-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:57 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC  }]
  I0902 08:36:16.122414 18 resource.go:178] 
  I0902 08:36:16.122440 18 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 1
  E0902 08:36:16.152821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:17.156909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:17.160712 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.982407195s
  E0902 08:36:18.156845      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:18.176477 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.944020095s
  E0902 08:36:19.157544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:19.190177 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.928322379s
  E0902 08:36:20.159759      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:20.219231 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.914223351s
  E0902 08:36:21.160230      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:21.267474 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.885342304s
  E0902 08:36:22.160141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:22.277582 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.837074291s
  E0902 08:36:23.177851      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:23.294584 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.826559946s
  E0902 08:36:24.166146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:24.308891 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.8096126s
  E0902 08:36:25.166835      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:25.321317 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 795.961305ms
  E0902 08:36:26.167600      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8569 @ 09/02/25 08:36:26.322
  I0902 08:36:26.392208 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:36:26.931330 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:36:26.931425 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:36:26.931469 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:36:26.932208 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:36:27.168003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:27.201732 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0902 08:36:27.201808 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:36:27.201995 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:36:27.202938 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:36:27.662996 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0902 08:36:27.663262 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:36:27.663484 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:36:27.723978 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:36:27.724084 18 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:36:27.724287 18 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/02/25 08:36:27.724
  I0902 08:36:27.737387 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:36:28.063131 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:36:28.063216 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:36:28.063238 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:36:28.063585 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0902 08:36:28.168498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:28.335115 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:36:28.335292 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:36:28.335317 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:36:28.335594 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-8569 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:36:28.679802 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:36:28.679870 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:36:28.679891 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:36:28.679951 18 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:36:28.690130 18 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0902 08:36:29.187174      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:30.181317      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:31.179368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:32.184871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:33.185285      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:34.185908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:35.186214      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:36.186499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:37.186827      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:38.187151      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:38.698948 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:36:38.699042 18 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:36:38.699279 18 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:36:38.761207 18 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0902 08:36:38.761481 18 resource.go:175] ss-0  ahkoog9eunoh-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:57 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC  }]
  I0902 08:36:38.761711 18 resource.go:175] ss-1  ahkoog9eunoh-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:17 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  }]
  I0902 08:36:38.761924 18 resource.go:175] ss-2  ahkoog9eunoh-1  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:17 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  }]
  I0902 08:36:38.761947 18 resource.go:178] 
  I0902 08:36:38.762006 18 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0902 08:36:39.187275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:39.779049 18 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0902 08:36:39.779328 18 resource.go:175] ss-0  ahkoog9eunoh-2  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:39 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:35:55 +0000 UTC  }]
  I0902 08:36:39.779369 18 resource.go:175] ss-1  ahkoog9eunoh-2  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:39 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  }]
  I0902 08:36:39.779409 18 resource.go:175] ss-2  ahkoog9eunoh-1  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:39 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:28 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:36:16 +0000 UTC  }]
  I0902 08:36:39.779423 18 resource.go:178] 
  I0902 08:36:39.779441 18 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0902 08:36:40.187736      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:40.817194 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.939198027s
  E0902 08:36:41.187860      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:41.856748 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.902882244s
  E0902 08:36:42.191873      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:42.868099 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.86373544s
  E0902 08:36:43.192926      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:43.877840 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.852658166s
  E0902 08:36:44.193264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:44.907619 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.841509339s
  E0902 08:36:45.193228      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:45.916053 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.812949692s
  E0902 08:36:46.194129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:46.936413 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.804554476s
  E0902 08:36:47.194974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:47.949271 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 784.116919ms
  E0902 08:36:48.195874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8569 @ 09/02/25 08:36:48.949
  I0902 08:36:48.959821 18 rest.go:153] Scaling statefulset ss to 0
  I0902 08:36:48.976011 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:36:48.984771 18 statefulset.go:138] Deleting all statefulset in ns statefulset-8569
  I0902 08:36:48.992102 18 rest.go:153] Scaling statefulset ss to 0
  I0902 08:36:49.004000 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:36:49.016018 18 rest.go:91] Deleting statefulset ss
  I0902 08:36:49.086422 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8569" for this suite. @ 09/02/25 08:36:49.118
• [53.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/02/25 08:36:49.149
  I0902 08:36:49.149927 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename csi-storageclass @ 09/02/25 08:36:49.156
  E0902 08:36:49.196773      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:49.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:49.265
  STEP: Creating a StorageClass @ 09/02/25 08:36:49.274
  STEP: Get StorageClass "e2e-csnv5" @ 09/02/25 08:36:49.31
  STEP: Patching the StorageClass "e2e-csnv5" @ 09/02/25 08:36:49.349
  STEP: Delete StorageClass "e2e-csnv5" @ 09/02/25 08:36:49.365
  STEP: Confirm deletion of StorageClass "e2e-csnv5" @ 09/02/25 08:36:49.381
  STEP: Create a replacement StorageClass @ 09/02/25 08:36:49.394
  STEP: Updating StorageClass "e2e-v2-jsxnr" @ 09/02/25 08:36:49.423
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-jsxnr=updated" @ 09/02/25 08:36:49.47
  STEP: Deleting StorageClass "e2e-v2-jsxnr" via DeleteCollection @ 09/02/25 08:36:49.476
  STEP: Confirm deletion of StorageClass "e2e-v2-jsxnr" @ 09/02/25 08:36:49.491
  I0902 08:36:49.517373 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8791" for this suite. @ 09/02/25 08:36:49.53
• [0.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/02/25 08:36:49.553
  I0902 08:36:49.553333 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 08:36:49.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:49.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:49.643
  STEP: Looking for a node to schedule job pod @ 09/02/25 08:36:49.651
  STEP: Creating a job @ 09/02/25 08:36:49.661
  STEP: Ensuring job fails @ 09/02/25 08:36:49.691
  E0902 08:36:50.197734      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:51.197781      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:52.199100      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:53.202141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:54.216526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:55.205407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:55.825361 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2142" for this suite. @ 09/02/25 08:36:55.856
• [6.330 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/02/25 08:36:55.883
  I0902 08:36:55.883965 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:36:55.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:56.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:56.022
  STEP: Creating configMap that has name configmap-test-emptyKey-edf75c8f-4e10-42fb-af1e-584ceb8d4bf4 @ 09/02/25 08:36:56.028
  I0902 08:36:56.035897 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5597" for this suite. @ 09/02/25 08:36:56.047
• [0.198 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/02/25 08:36:56.086
  I0902 08:36:56.086140 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:36:56.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:56.201
  E0902 08:36:56.205291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:56.212
  E0902 08:36:57.207111      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:36:58.208134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:36:58.293799 18 delete.go:62] Deleting pod "var-expansion-0cc3ff2d-0fb2-4e8d-b22d-ffefeba76731" in namespace "var-expansion-8736"
  I0902 08:36:58.340002 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-0cc3ff2d-0fb2-4e8d-b22d-ffefeba76731" to be fully deleted
  E0902 08:36:59.209971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:00.209348      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:00.401604 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8736" for this suite. @ 09/02/25 08:37:00.417
• [4.373 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/02/25 08:37:00.478
  I0902 08:37:00.478578 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:37:00.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:00.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:00.588
  STEP: Creating Pod @ 09/02/25 08:37:00.595
  E0902 08:37:01.212198      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:02.212955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:03.213554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:04.214929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/02/25 08:37:04.715
  I0902 08:37:04.715514 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-975 PodName:pod-sharedvolume-ead0018d-b236-4733-a130-ae6ac01b8cb3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:37:04.715562 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:37:04.718457 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/emptydir-975/pods/pod-sharedvolume-ead0018d-b236-4733-a130-ae6ac01b8cb3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0902 08:37:04.847926 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:37:04.848077 18 exec_util.go:112] Exec stderr: ""
  I0902 08:37:04.848299 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-975" for this suite. @ 09/02/25 08:37:04.866
• [4.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 09/02/25 08:37:04.886
  I0902 08:37:04.886428 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 08:37:04.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:04.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:04.922
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/02/25 08:37:04.93
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/02/25 08:37:04.977
  E0902 08:37:05.215954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:06.216156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:07.216906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:08.217053      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:09.235890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:10.222295      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/02/25 08:37:11.048
  STEP: Verifying that the only appropriately index succeeded @ 09/02/25 08:37:11.081
  I0902 08:37:11.085886 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4741" for this suite. @ 09/02/25 08:37:11.1
• [6.231 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/02/25 08:37:11.128
  I0902 08:37:11.128178 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:37:11.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:11.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:11.171
  I0902 08:37:11.176325 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:37:11.223195      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:12.239418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:13.228976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:14.231834      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:14.483046 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-663" for this suite. @ 09/02/25 08:37:14.49
• [3.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/02/25 08:37:14.506
  I0902 08:37:14.506977 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:37:14.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:14.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:14.542
  STEP: Setting up server cert @ 09/02/25 08:37:14.611
  E0902 08:37:15.231941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:16.232449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:17.233195      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:37:17.678
  STEP: Deploying the webhook pod @ 09/02/25 08:37:17.694
  STEP: Wait for the deployment to be ready @ 09/02/25 08:37:17.734
  I0902 08:37:17.752268 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:37:18.235525      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:19.235812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:37:19.8
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:37:19.856
  E0902 08:37:20.236123      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:20.857780 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 08:37:20.880826 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:37:21.236079      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7785-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 08:37:21.4
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/25 08:37:21.435
  E0902 08:37:22.236406      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:23.237062      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:24.243163      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:24.505174 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2918" for this suite. @ 09/02/25 08:37:24.524
  STEP: Destroying namespace "webhook-markers-1720" for this suite. @ 09/02/25 08:37:24.536
• [10.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:37:24.591
  I0902 08:37:24.591884 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename volumeattachment @ 09/02/25 08:37:24.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:24.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:24.658
  STEP: Create VolumeAttachment "va-e2e-fznwc" on node "ahkoog9eunoh-2" @ 09/02/25 08:37:24.671
  STEP: Get VolumeAttachment "va-e2e-fznwc" on node "ahkoog9eunoh-2" @ 09/02/25 08:37:24.682
  STEP: Patch VolumeAttachment "va-e2e-fznwc" on node "ahkoog9eunoh-2" @ 09/02/25 08:37:24.687
  STEP: List VolumeAttachments with "va-e2e-fznwc=patched" label @ 09/02/25 08:37:24.697
  STEP: Delete VolumeAttachment "va-e2e-fznwc" on node "ahkoog9eunoh-2" @ 09/02/25 08:37:24.702
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fznwc" on node "ahkoog9eunoh-2" @ 09/02/25 08:37:24.713
  STEP: Create VolumeAttachment "va-e2e-rp8p6" on node "ahkoog9eunoh-1" @ 09/02/25 08:37:24.772
  STEP: Update the VolumeAttachment "va-e2e-rp8p6" on node "ahkoog9eunoh-1" with label "va-e2e=updated" @ 09/02/25 08:37:24.791
  STEP: Create VolumeAttachment "va-e2e-9rbp7" on node "ahkoog9eunoh-1" @ 09/02/25 08:37:24.872
  STEP: Update the VolumeAttachment "va-e2e-9rbp7" on node "ahkoog9eunoh-1" with label "va-e2e=updated" @ 09/02/25 08:37:24.888
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/02/25 08:37:24.919
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/02/25 08:37:24.947
  I0902 08:37:24.954223 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4952" for this suite. @ 09/02/25 08:37:24.982
• [0.427 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/02/25 08:37:25.019
  I0902 08:37:25.019129 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 08:37:25.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:25.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:25.06
  STEP: Given a ReplicationController is created @ 09/02/25 08:37:25.067
  STEP: When the matched label of one of its pods change @ 09/02/25 08:37:25.113
  I0902 08:37:25.121523 18 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0902 08:37:25.243850      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:26.244790      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:27.245609      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:28.245704      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:29.246447      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:30.137494 18 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  E0902 08:37:30.252349      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Then the pod is released @ 09/02/25 08:37:30.35
  I0902 08:37:30.377888 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2337" for this suite. @ 09/02/25 08:37:30.436
• [5.438 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/02/25 08:37:30.485
  I0902 08:37:30.485837 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/25 08:37:30.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:37:30.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:37:30.561
  STEP: Creating 50 configmaps @ 09/02/25 08:37:30.566
  E0902 08:37:31.249435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:37:31.677
  I0902 08:37:31.798497 18 resource.go:81] Pod name wrapped-volume-race-fd80f143-9dc6-4948-a7d2-17c9d2864aba: Found 0 pods out of 5
  E0902 08:37:32.254242      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:33.255143      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:34.312432      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:35.449324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:36.449368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:36.958326 18 resource.go:81] Pod name wrapped-volume-race-fd80f143-9dc6-4948-a7d2-17c9d2864aba: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:37:36.958
  E0902 08:37:37.450558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:38.450984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:37:39.056
  I0902 08:37:39.089985 18 resource.go:81] Pod name wrapped-volume-race-c1797e48-4aa6-4bb0-b5cc-68b65436d6b2: Found 0 pods out of 5
  E0902 08:37:39.481236      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:40.527581      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:41.531162      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:42.532205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:43.531897      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:44.134645 18 resource.go:81] Pod name wrapped-volume-race-c1797e48-4aa6-4bb0-b5cc-68b65436d6b2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:37:44.134
  E0902 08:37:44.544256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:45.544818      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:37:46.272
  I0902 08:37:46.301094 18 resource.go:81] Pod name wrapped-volume-race-47843a1c-38e6-4c5e-a920-4daa0593d577: Found 0 pods out of 5
  E0902 08:37:46.545811      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:47.546082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:48.546507      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:49.552425      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:50.551403      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:51.331789 18 resource.go:81] Pod name wrapped-volume-race-47843a1c-38e6-4c5e-a920-4daa0593d577: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:37:51.331
  STEP: deleting ReplicationController wrapped-volume-race-47843a1c-38e6-4c5e-a920-4daa0593d577 in namespace emptydir-wrapper-6840, will wait for the garbage collector to delete the pods @ 09/02/25 08:37:51.389
  I0902 08:37:51.464081 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-47843a1c-38e6-4c5e-a920-4daa0593d577 took: 13.756836ms
  E0902 08:37:51.572052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:51.771004 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-47843a1c-38e6-4c5e-a920-4daa0593d577 pods took: 306.911279ms
  E0902 08:37:52.573018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-c1797e48-4aa6-4bb0-b5cc-68b65436d6b2 in namespace emptydir-wrapper-6840, will wait for the garbage collector to delete the pods @ 09/02/25 08:37:53.571
  E0902 08:37:53.573041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:37:53.677143 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-c1797e48-4aa6-4bb0-b5cc-68b65436d6b2 took: 34.38515ms
  I0902 08:37:53.889082 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-c1797e48-4aa6-4bb0-b5cc-68b65436d6b2 pods took: 211.896079ms
  E0902 08:37:54.574191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:55.574498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:56.586924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-fd80f143-9dc6-4948-a7d2-17c9d2864aba in namespace emptydir-wrapper-6840, will wait for the garbage collector to delete the pods @ 09/02/25 08:37:56.69
  I0902 08:37:56.785256 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-fd80f143-9dc6-4948-a7d2-17c9d2864aba took: 31.390312ms
  I0902 08:37:57.142461 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-fd80f143-9dc6-4948-a7d2-17c9d2864aba pods took: 357.200261ms
  E0902 08:37:58.206051      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:37:59.161461      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:00.162852      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/02/25 08:38:00.573
  E0902 08:38:01.162914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:01.310618 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6840" for this suite. @ 09/02/25 08:38:01.318
• [30.846 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/02/25 08:38:01.332
  I0902 08:38:01.332616 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename hostport @ 09/02/25 08:38:01.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:38:01.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:38:01.37
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/02/25 08:38:01.42
  E0902 08:38:02.227137      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:03.163010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:04.162888      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:05.164025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.25 on the node which pod1 resides and expect scheduled @ 09/02/25 08:38:05.493
  E0902 08:38:06.164720      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:07.170025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:08.168276      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:09.168737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.25 but use UDP protocol on the node which pod2 resides @ 09/02/25 08:38:09.533
  E0902 08:38:10.170924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:11.171747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:12.171991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:13.172244      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:14.173383      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:15.173553      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/02/25 08:38:15.635
  I0902 08:38:15.635598 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.25 http://127.0.0.1:54323/hostname] Namespace:hostport-8367 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:38:15.635717 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:38:15.636085 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-8367/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.25+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0902 08:38:15.840850 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.25, port: 54323 @ 09/02/25 08:38:15.841
  I0902 08:38:15.841319 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.25:54323/hostname] Namespace:hostport-8367 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:38:15.841396 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:38:15.841583 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-8367/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.25%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0902 08:38:15.965717 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.25, port: 54323 UDP @ 09/02/25 08:38:15.966
  I0902 08:38:15.966600 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.25 54323] Namespace:hostport-8367 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:38:15.966886 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:38:15.967268 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-8367/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.25+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0902 08:38:16.174200      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:17.174822      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:18.174960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:19.175152      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:20.175731      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:21.064544 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:38:21.064893 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8367" for this suite. @ 09/02/25 08:38:21.077
• [19.759 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/02/25 08:38:21.091
  I0902 08:38:21.091919 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:38:21.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:38:21.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:38:21.137
  STEP: creating a Deployment @ 09/02/25 08:38:21.155
  STEP: waiting for Deployment to be created @ 09/02/25 08:38:21.174
  E0902 08:38:21.175372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all Replicas to be Ready @ 09/02/25 08:38:21.18
  I0902 08:38:21.183799 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.183842 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.231170 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.231268 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.302606 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.302723 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.424984 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 08:38:21.426213 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0902 08:38:22.175862      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:22.776887 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0902 08:38:22.776960 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0902 08:38:23.104237 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/02/25 08:38:23.104
  E0902 08:38:23.176072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:23.176278 18 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/02/25 08:38:23.176
  I0902 08:38:23.195526 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.196601 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.197518 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.197561 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.197607 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.197704 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.200911 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.210532 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 0
  I0902 08:38:23.212522 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:23.212566 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:23.212599 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.212660 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.213132 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.213867 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.243623 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.243719 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.304567 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.304847 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:23.386122 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:23.386212 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:23.426719 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:23.426841 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  E0902 08:38:24.183620      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:24.723119 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:24.723196 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:24.846408 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  STEP: listing Deployments @ 09/02/25 08:38:24.847
  I0902 08:38:24.885946 18 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/02/25 08:38:24.886
  I0902 08:38:25.004891 18 deployment.go:360] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/02/25 08:38:25.007
  I0902 08:38:25.055717 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:25.055890 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:25.147907 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 08:38:25.197505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:25.309661 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:25.330222 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 08:38:26.198928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:26.887593 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:26.887762 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:26.965727 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 08:38:27.034089 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 08:38:27.199943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:27.550294 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 08:38:28.200285      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:29.200467      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:29.530526 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/02/25 08:38:29.784
  STEP: fetching the DeploymentStatus @ 09/02/25 08:38:29.82
  I0902 08:38:29.832319 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:29.835341 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:29.835461 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:29.835867 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:29.835922 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 1
  I0902 08:38:29.836136 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:29.836318 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:29.838097 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:29.838186 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:29.838208 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 2
  I0902 08:38:29.838429 18 deployment.go:448] observed Deployment test-deployment in namespace deployment-3787 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/02/25 08:38:29.838
  I0902 08:38:29.897693 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.901254 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.901666 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.915381 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.915428 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.915452 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.915814 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.916166 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.916679 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.916901 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.917383 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.917810 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.917839 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.918180 18 deployment.go:474] observed event type MODIFIED
  I0902 08:38:29.989014 18 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0902 08:38:30.009833 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3787" for this suite. @ 09/02/25 08:38:30.024
• [8.945 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 09/02/25 08:38:30.036
  I0902 08:38:30.036127 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:38:30.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:38:30.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:38:30.083
  STEP: Creating service test in namespace statefulset-9117 @ 09/02/25 08:38:30.087
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/02/25 08:38:30.105
  STEP: Creating stateful set ss in namespace statefulset-9117 @ 09/02/25 08:38:30.118
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9117 @ 09/02/25 08:38:30.136
  E0902 08:38:30.202931      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:30.217127 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0902 08:38:31.204847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:32.206167      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:33.206312      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:34.207098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:35.207187      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:36.209212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:37.209174      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:38.209341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:39.209453      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:40.172163 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/02/25 08:38:40.172
  I0902 08:38:40.181620 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0902 08:38:40.209545      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:40.579869 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:38:40.579985 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:38:40.580023 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:38:40.650116 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0902 08:38:41.209797      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:42.209849      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:43.210185      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:44.210799      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:45.210821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:46.211588      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:47.211899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:48.212831      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:49.212993      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:38:50.213826      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:50.592566 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:38:50.592673 18 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:38:50.691948 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999355s
  E0902 08:38:51.213769      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:51.759076 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.926842612s
  E0902 08:38:52.213830      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:52.778076 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.860372373s
  E0902 08:38:53.214762      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:53.797286 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.84112557s
  E0902 08:38:54.216361      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:54.809344 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.821394677s
  E0902 08:38:55.216623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:55.833849 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.809149794s
  E0902 08:38:56.216850      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:56.841384 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.78564075s
  E0902 08:38:57.217844      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:57.883393 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.777296982s
  E0902 08:38:58.218435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:58.924051 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.735525427s
  E0902 08:38:59.219878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:38:59.942671 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 695.045759ms
  E0902 08:39:00.220197      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9117 @ 09/02/25 08:39:00.944
  I0902 08:39:00.955879 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:39:01.231901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:01.379117 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:39:01.379219 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:39:01.379241 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:39:01.402124 18 wait.go:44] Found 1 stateful pods, waiting for 3
  E0902 08:39:02.233925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:03.236127      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:04.234587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:05.235166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:06.235272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:07.235409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:08.235905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:09.238945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:10.239265      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:11.239452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:11.409163 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:39:11.409552 18 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:39:11.409906 18 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/02/25 08:39:11.41
  STEP: Scale down will halt with unhealthy stateful pod @ 09/02/25 08:39:11.41
  I0902 08:39:11.424081 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:39:11.736105 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:39:11.736281 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:39:11.736312 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:39:11.736556 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:39:12.045110 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:39:12.045189 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:39:12.045218 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:39:12.045538 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0902 08:39:12.240311      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:12.469988 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:39:12.470137 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:39:12.470166 18 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:39:12.470186 18 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:39:12.477522 18 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0902 08:39:13.240430      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:14.240696      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:15.241082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:16.242340      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:17.242394      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:18.243179      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:19.243575      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:20.243901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:21.244088      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:22.244974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:22.518367 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:39:22.518464 18 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:39:22.518489 18 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:39:22.627395 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999335s
  E0902 08:39:23.245286      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:23.680030 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.922467549s
  E0902 08:39:24.246032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:24.688817 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.880717634s
  E0902 08:39:25.246180      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:25.705694 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.87115541s
  E0902 08:39:26.246354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:26.716752 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.854047405s
  E0902 08:39:27.246688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:27.745526 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.829992475s
  E0902 08:39:28.247505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:28.757234 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.814214984s
  E0902 08:39:29.249359      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:29.770047 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.803426119s
  E0902 08:39:30.248295      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:30.783291 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.789614435s
  E0902 08:39:31.249918      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:31.799279 18 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 776.597822ms
  E0902 08:39:32.249566      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9117 @ 09/02/25 08:39:32.8
  I0902 08:39:32.816736 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:39:33.111561 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:39:33.111747 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:39:33.111778 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:39:33.112404 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:39:33.259568      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:33.587752 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:39:33.587914 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:39:33.587944 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:39:33.588616 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:39:34.260195      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:34.299803 18 builder.go:135] rc: 1
  I0902 08:39:34.300029 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  E0902 08:39:35.261742      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:36.295133      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:37.273363      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:38.277784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:39.272997      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:40.274721      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:41.274033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:42.274261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:43.274538      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:44.274583      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:44.303074 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:39:44.601241 18 builder.go:135] rc: 1
  I0902 08:39:44.601743 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:39:45.276481      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:46.277531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:47.278158      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:48.278957      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:49.280937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:50.282142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:51.281754      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:52.298607      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:53.300000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:54.300191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:39:54.602529 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:39:54.840224 18 builder.go:135] rc: 1
  I0902 08:39:54.841469 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:39:55.301482      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:56.302241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:57.302958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:58.303047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:39:59.303093      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:00.303266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:01.303714      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:02.303988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:03.304336      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:04.304360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:04.842160 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:40:05.072446 18 builder.go:135] rc: 1
  I0902 08:40:05.072873 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:05.305009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:06.305205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:07.305345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:08.306033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:09.306109      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:10.308478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:11.308473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:12.308944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:13.309129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:14.309293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:15.073759 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:40:15.294508 18 builder.go:135] rc: 1
  I0902 08:40:15.294748 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:15.309900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:16.309987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:17.310692      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:18.310847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:19.311098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:20.356874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:21.315511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:22.315946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:23.318266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:24.316935      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:25.295942 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:40:25.317240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:25.503883 18 builder.go:135] rc: 1
  I0902 08:40:25.504582 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:26.318261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:27.318493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:28.319436      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:29.319694      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:30.319962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:31.320283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:32.320527      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:33.321896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:34.322183      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:35.323073      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:35.506191 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:40:35.722101 18 builder.go:135] rc: 1
  I0902 08:40:35.722226 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:36.323974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:37.325170      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:38.325241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:39.326289      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:40.327284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:41.327725      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:42.328530      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:43.328913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:44.329033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:45.329405      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:45.724826 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:40:45.978461 18 builder.go:135] rc: 1
  I0902 08:40:45.978579 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:46.338896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:47.339279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:48.339476      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:49.339669      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:50.340794      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:51.340485      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:52.340977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:53.342271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:54.343169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:55.343410      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:40:55.980120 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:40:56.194044 18 builder.go:135] rc: 1
  I0902 08:40:56.195107 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:40:56.343683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:57.373728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:58.363194      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:40:59.363548      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:00.368995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:01.366162      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:02.406853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:03.366614      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:04.366929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:05.367177      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:06.196814 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:41:06.369987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:06.457334 18 builder.go:135] rc: 1
  I0902 08:41:06.457579 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:07.370756      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:08.371175      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:09.373062      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:10.372047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:11.372297      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:12.373076      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:13.373237      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:14.373479      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:15.374011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:16.374969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:16.458548 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:41:16.736354 18 builder.go:135] rc: 1
  I0902 08:41:16.736518 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:17.377602      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:18.377195      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:19.377465      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:20.377972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:21.378104      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:22.378413      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:23.378607      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:24.379000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:25.379158      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:26.380344      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:26.738013 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:41:27.070476 18 builder.go:135] rc: 1
  I0902 08:41:27.070707 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:27.380954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:28.381919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:29.382555      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:30.382910      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:31.382969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:32.383242      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:33.383572      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:34.384336      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:35.384797      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:36.385730      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:37.072713 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:41:37.279373 18 builder.go:135] rc: 1
  I0902 08:41:37.279561 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:37.387140      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:38.392807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:39.392692      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:40.392784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:41.393122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:42.393619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:43.394268      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:44.393974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:45.394503      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:46.394465      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:47.280594 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:41:47.397846      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:47.467824 18 builder.go:135] rc: 1
  I0902 08:41:47.468001 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:48.396995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:49.397574      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:50.398392      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:51.398467      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:52.398941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:53.401930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:54.402355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:55.402967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:56.403292      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:57.403398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:41:57.468992 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:41:57.737934 18 builder.go:135] rc: 1
  I0902 08:41:57.738286 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:41:58.404374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:41:59.404901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:00.405256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:01.414424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:02.414733      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:03.414864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:04.415155      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:05.415234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:06.415705      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:07.415929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:07.739623 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:42:07.965138 18 builder.go:135] rc: 1
  I0902 08:42:07.965267 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:08.416427      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:09.416931      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:10.417163      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:11.418333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:12.419041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:13.419788      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:14.419951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:15.420079      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:16.420201      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:17.421333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:17.965984 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:42:18.186213 18 builder.go:135] rc: 1
  I0902 08:42:18.186539 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:18.421605      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:19.422969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:20.423131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:21.423674      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:22.424141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:23.425343      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:24.425728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:25.426443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:26.426979      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:27.428126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:28.188912 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:42:28.415266 18 builder.go:135] rc: 1
  I0902 08:42:28.415619 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:28.428694      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:29.428892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:30.430016      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:31.431047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:32.431329      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:33.431959      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:34.432156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:35.432249      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:36.433666      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:37.434044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:38.416951 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:42:38.434777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:38.718820 18 builder.go:135] rc: 1
  I0902 08:42:38.718979 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:39.440833      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:40.435970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:41.436219      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:42.436464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:43.437704      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:44.437959      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:45.438296      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:46.441811      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:47.442879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:48.443134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:48.719967 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:42:48.883951 18 builder.go:135] rc: 1
  I0902 08:42:48.884092 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:49.445835      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:50.445198      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:51.444778      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:52.445296      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:53.446065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:54.446622      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:55.446797      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:56.447138      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:57.447323      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:42:58.447430      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:42:58.885199 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:42:59.129857 18 builder.go:135] rc: 1
  I0902 08:42:59.130069 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:42:59.448450      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:00.450933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:01.448880      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:02.450002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:03.450388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:04.451000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:05.451148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:06.451342      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:07.451796      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:08.451746      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:09.131762 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:43:09.339504 18 builder.go:135] rc: 1
  I0902 08:43:09.339767 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:43:09.452871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:10.453522      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:11.453512      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:12.453989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:13.454978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:14.455829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:15.456090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:16.457319      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:17.457172      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:18.457684      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:19.340544 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:43:19.457955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:19.613441 18 builder.go:135] rc: 1
  I0902 08:43:19.613887 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:43:20.458275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:21.458337      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:22.458673      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:23.460890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:24.461198      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:25.461373      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:26.461609      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:27.462488      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:28.462971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:29.464301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:29.633819 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:43:29.873715 18 builder.go:135] rc: 1
  I0902 08:43:29.873856 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:43:30.464355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:31.465024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:32.465158      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:33.466263      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:34.467799      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:35.468146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:36.473205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:37.473216      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:38.473418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:39.473967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:39.876407 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:43:40.164626 18 builder.go:135] rc: 1
  I0902 08:43:40.164914 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:43:40.474457      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:41.475960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:42.475618      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:43.476443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:44.476735      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:45.476932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:46.478089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:47.479046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:48.480424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:49.481273      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:50.165818 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:43:50.483145      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:43:50.573056 18 builder.go:135] rc: 1
  I0902 08:43:50.573738 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:43:51.483728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:52.483934      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:53.487777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:54.486391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:55.487103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:56.488055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:57.488860      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:58.489965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:43:59.491504      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:00.490347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:00.575074 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:44:00.838606 18 builder.go:135] rc: 1
  I0902 08:44:00.838763 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:44:01.490984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:02.491379      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:03.491682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:04.492464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:05.497014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:06.495973      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:07.497191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:08.500124      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:09.497821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:10.498089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:10.839975 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:44:11.100098 18 builder.go:135] rc: 1
  I0902 08:44:11.100299 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:44:11.498906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:12.499449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:13.500141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:14.500362      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:15.500502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:16.501230      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:17.504484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:18.504965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:19.506594      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:20.507033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:21.101685 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:44:21.348897 18 builder.go:135] rc: 1
  I0902 08:44:21.349795 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:44:21.507533      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:22.507691      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:23.514742      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:24.509401      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:25.510107      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:26.510706      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:27.511538      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:28.511262      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:29.511464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:30.511929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:31.353211 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:44:31.508755 18 builder.go:135] rc: 1
  I0902 08:44:31.509015 18 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0902 08:44:31.512681      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:32.513168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:33.513440      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:34.513976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:35.514747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:36.514794      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:37.515565      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:38.520070      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:39.519228      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:40.520123      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:41.509466 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=statefulset-9117 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:44:41.520381      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:41.907004 18 builder.go:135] rc: 1
  I0902 08:44:41.907512 18 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
  I0902 08:44:41.908212 18 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/02/25 08:44:41.949
  I0902 08:44:41.951014 18 statefulset.go:138] Deleting all statefulset in ns statefulset-9117
  I0902 08:44:41.964289 18 rest.go:153] Scaling statefulset ss to 0
  I0902 08:44:41.980113 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:44:41.986829 18 rest.go:91] Deleting statefulset ss
  I0902 08:44:42.079874 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9117" for this suite. @ 09/02/25 08:44:42.117
• [372.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/02/25 08:44:42.205
  I0902 08:44:42.206024 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 08:44:42.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:44:42.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:44:42.256
  E0902 08:44:42.522080      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:43.521962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:44.427445 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5785" for this suite. @ 09/02/25 08:44:44.505
  E0902 08:44:44.523130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/02/25 08:44:44.55
  I0902 08:44:44.551082 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:44:44.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:44:44.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:44:44.678
  I0902 08:44:44.684058 18 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0902 08:44:44.751108 18 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0902 08:44:44.827752 18 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0902 08:44:45.524284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:46.524509      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:44:46.854613 18 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0902 08:44:46.862178 18 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0902 08:44:46.895055 18 deployment.go:314] Updating deployment test-recreate-deployment
  I0902 08:44:46.895141 18 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0902 08:44:47.189807 18 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94e52dcf-36ab-406c-835c-ce89706f8bee",
      ResourceVersion: (string) (len=5) "30777",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892399484,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399484,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:44:47.234340 18 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cc96b45-ea04-43c6-a89d-ca5ef5e96692",
      ResourceVersion: (string) (len=5) "30773",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892399487,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "94e52dcf-36ab-406c-835c-ce89706f8bee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 65 35 32 64  63 66 2d 33 36 61 62 2d  |\"94e52dcf-36ab-|
              00000120  34 30 36 63 2d 38 33 35  63 2d 63 65 38 39 37 30  |406c-835c-ce8970|
              00000130  36 66 38 62 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f8bee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:44:47.240099 18 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0902 08:44:47.240615 18 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca4cad45-27ce-4200-8d3f-194e96929598",
      ResourceVersion: (string) (len=5) "30765",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892399484,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "94e52dcf-36ab-406c-835c-ce89706f8bee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 65 35 32 64  63 66 2d 33 36 61 62 2d  |\"94e52dcf-36ab-|
              00000120  34 30 36 63 2d 38 33 35  63 2d 63 65 38 39 37 30  |406c-835c-ce8970|
              00000130  36 66 38 62 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f8bee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:44:47.322414 18 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-865fj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-865fj",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1840d7fd-0517-4452-a095-32c6650be8d0",
      ResourceVersion: (string) (len=5) "30775",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892399487,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "6cc96b45-ea04-43c6-a89d-ca5ef5e96692",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  63 39 36 62 34 35 2d 65  |d\":\"6cc96b45-e|
              00000090  61 30 34 2d 34 33 63 36  2d 61 38 39 64 2d 63 61  |a04-43c6-a89d-ca|
              000000a0  35 65 66 35 65 39 36 36  39 32 5c 22 7d 22 3a 7b  |5ef5e96692\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cpgkq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cpgkq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892399487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892399487,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cpgkq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:44:47.333564 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7141" for this suite. @ 09/02/25 08:44:47.347
• [2.845 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/02/25 08:44:47.401
  I0902 08:44:47.402678 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-watch @ 09/02/25 08:44:47.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:44:47.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:44:47.476
  I0902 08:44:47.485900 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:44:47.524598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:48.525835      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:49.525808      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/02/25 08:44:50.231
  I0902 08:44:50.258362 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:44:50Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:44:50Z]] name:name1 resourceVersion:30831 uid:eafced78-7d45-4c6f-b20a-299d2af42046] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:44:50.526390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:51.526473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:52.528472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:53.527868      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:54.528579      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:55.528989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:56.529260      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:57.529471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:58.529858      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:44:59.530008      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/02/25 08:45:00.259
  I0902 08:45:00.278123 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:45:00Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:45:00Z]] name:name2 resourceVersion:30875 uid:f811a70a-867e-40a5-afc0-efa01f838ee2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:45:00.531026      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:01.531272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:02.531339      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:03.531839      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:04.531892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:05.533278      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:06.534092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:07.534145      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:08.534333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:09.535102      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/02/25 08:45:10.278
  I0902 08:45:10.293973 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:44:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:45:10Z]] name:name1 resourceVersion:30897 uid:eafced78-7d45-4c6f-b20a-299d2af42046] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:45:10.535392      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:11.535589      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:12.535911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:13.536169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:14.537681      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:15.538393      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:16.538164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:17.538858      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:18.539453      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:19.540076      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/02/25 08:45:20.314
  I0902 08:45:20.347289 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:45:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:45:20Z]] name:name2 resourceVersion:30921 uid:f811a70a-867e-40a5-afc0-efa01f838ee2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:45:20.540962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:21.542339      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:22.542733      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:23.542945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:24.543520      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:25.543489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:26.543759      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:27.548599      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:28.550110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:29.550506      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/02/25 08:45:30.348
  I0902 08:45:30.368962 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:44:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:45:10Z]] name:name1 resourceVersion:30952 uid:eafced78-7d45-4c6f-b20a-299d2af42046] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:45:30.554913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:31.556524      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:32.556351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:33.577034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:34.577013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:35.577780      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:36.579847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:37.578583      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:38.578882      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:39.578937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/02/25 08:45:40.37
  I0902 08:45:40.461199 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:45:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:45:20Z]] name:name2 resourceVersion:30992 uid:f811a70a-867e-40a5-afc0-efa01f838ee2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:45:40.579895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:41.580158      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:42.581036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:43.581248      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:44.581515      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:45.582869      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:46.583171      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:47.583418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:48.583854      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:49.583867      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:45:50.584699      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:51.003577 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6592" for this suite. @ 09/02/25 08:45:51.02
• [63.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/02/25 08:45:51.041
  I0902 08:45:51.041812 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:45:51.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:45:51.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:45:51.086
  I0902 08:45:51.171611 18 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/02/25 08:45:51.195
  I0902 08:45:51.204086 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:51.205257 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/02/25 08:45:51.206
  E0902 08:45:51.980866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:51.910483 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:52.141065 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:45:52.503846 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:52.504362 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:52.898404      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:53.359200 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:53.359280 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:53.898748      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:54.327328 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:54.327445 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:54.912052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:55.329380 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:45:55.329471 18 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/02/25 08:45:55.334
  I0902 08:45:55.480730 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:55.480825 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/02/25 08:45:55.48
  I0902 08:45:55.532116 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:55.532179 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:56.358268      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:56.560439 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:56.566332 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:57.370131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:57.531435 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:57.531547 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:58.370885      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:58.552545 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:45:58.552886 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:45:59.371384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:45:59.525551 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:45:59.525667 18 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:45:59.538
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3552, will wait for the garbage collector to delete the pods @ 09/02/25 08:45:59.538
  I0902 08:45:59.627790 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 29.751885ms
  I0902 08:45:59.780431 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 152.641418ms
  E0902 08:46:00.371580      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:01.371779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:02.371829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:02.601204 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:46:02.601287 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:46:02.632226 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31104"},"items":null}

  I0902 08:46:02.675235 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31104"},"items":null}

  I0902 08:46:02.841148 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3552" for this suite. @ 09/02/25 08:46:02.9
• [11.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 09/02/25 08:46:02.956
  I0902 08:46:02.957010 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:46:02.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:03.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:03.047
  STEP: Creating service test in namespace statefulset-2897 @ 09/02/25 08:46:03.054
  STEP: Creating statefulset ss in namespace statefulset-2897 @ 09/02/25 08:46:03.158
  I0902 08:46:03.270484 18 wait.go:44] Found 0 stateful pods, waiting for 1
  E0902 08:46:03.373954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:04.386886      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:05.386375      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:06.386139      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:07.386386      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:08.392213      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:09.388812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:10.388958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:11.389126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:12.389234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:13.209525 18 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/02/25 08:46:13.227
  STEP: updating a scale subresource @ 09/02/25 08:46:13.234
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/25 08:46:13.249
  STEP: Patch a scale subresource @ 09/02/25 08:46:13.255
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/25 08:46:13.275
  I0902 08:46:13.307523 18 statefulset.go:138] Deleting all statefulset in ns statefulset-2897
  I0902 08:46:13.344050 18 rest.go:153] Scaling statefulset ss to 0
  E0902 08:46:13.393127      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:14.391155      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:15.395407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:16.396068      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:17.396269      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:18.397013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:19.398889      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:20.399309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:21.400114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:22.400710      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:23.371810 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:46:23.376981 18 rest.go:91] Deleting statefulset ss
  E0902 08:46:23.401326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:23.406123 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2897" for this suite. @ 09/02/25 08:46:23.423
• [20.485 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/02/25 08:46:23.443
  I0902 08:46:23.443056 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:46:23.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:23.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:23.509
  STEP: creating a secret @ 09/02/25 08:46:23.517
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/02/25 08:46:23.546
  STEP: patching the secret @ 09/02/25 08:46:23.556
  STEP: deleting the secret using a LabelSelector @ 09/02/25 08:46:23.602
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/02/25 08:46:23.643
  I0902 08:46:23.658192 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6832" for this suite. @ 09/02/25 08:46:23.709
• [0.326 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/02/25 08:46:23.777
  I0902 08:46:23.777355 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:46:23.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:23.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:23.909
  E0902 08:46:24.404342      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:25.405070      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:26.040597 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5927" for this suite. @ 09/02/25 08:46:26.054
• [2.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/02/25 08:46:26.073
  I0902 08:46:26.073434 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename controllerrevisions @ 09/02/25 08:46:26.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:26.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:26.128
  STEP: Creating DaemonSet "e2e-z8p48-daemon-set" @ 09/02/25 08:46:26.213
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:46:26.244
  I0902 08:46:26.391513 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-z8p48-daemon-set: 0
  I0902 08:46:26.391685 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:46:26.405998      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:27.289171 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-z8p48-daemon-set: 0
  I0902 08:46:27.289383 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:46:27.406858      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:28.262604 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-z8p48-daemon-set: 1
  I0902 08:46:28.262691 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:46:28.407864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:29.290526 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-z8p48-daemon-set: 2
  I0902 08:46:29.290700 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-z8p48-daemon-set
  STEP: Confirm DaemonSet "e2e-z8p48-daemon-set" successfully created with "daemonset-name=e2e-z8p48-daemon-set" label @ 09/02/25 08:46:29.305
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-z8p48-daemon-set" @ 09/02/25 08:46:29.341
  I0902 08:46:29.379984 18 controller_revision.go:162] Located ControllerRevision: "e2e-z8p48-daemon-set-54ddbbfd74"
  STEP: Patching ControllerRevision "e2e-z8p48-daemon-set-54ddbbfd74" @ 09/02/25 08:46:29.385
  I0902 08:46:29.404074 18 controller_revision.go:173] e2e-z8p48-daemon-set-54ddbbfd74 has been patched
  STEP: Create a new ControllerRevision @ 09/02/25 08:46:29.404
  E0902 08:46:29.409706      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:29.422272 18 controller_revision.go:191] Created ControllerRevision: e2e-z8p48-daemon-set-6c694b646d
  STEP: Confirm that there are two ControllerRevisions @ 09/02/25 08:46:29.424
  I0902 08:46:29.425218 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:46:29.479278 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-z8p48-daemon-set-54ddbbfd74" @ 09/02/25 08:46:29.479
  STEP: Confirm that there is only one ControllerRevision @ 09/02/25 08:46:29.51
  I0902 08:46:29.510357 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:46:29.522089 18 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-z8p48-daemon-set-6c694b646d" @ 09/02/25 08:46:29.527
  I0902 08:46:29.556407 18 controller_revision.go:220] e2e-z8p48-daemon-set-6c694b646d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/02/25 08:46:29.557
  I0902 08:46:29.579197      18 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/02/25 08:46:29.579
  I0902 08:46:29.579556 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0902 08:46:30.409758      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:30.579986 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:46:30.662217 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-z8p48-daemon-set-6c694b646d=updated" @ 09/02/25 08:46:30.662
  STEP: Confirm that there is only one ControllerRevision @ 09/02/25 08:46:30.68
  I0902 08:46:30.680854 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:46:30.687584 18 controller_revision.go:265] Found 1 ControllerRevisions
  I0902 08:46:30.694101 18 controller_revision.go:246] ControllerRevision "e2e-z8p48-daemon-set-7d76869449" has revision 3
  STEP: Deleting DaemonSet "e2e-z8p48-daemon-set" @ 09/02/25 08:46:30.706
  STEP: deleting DaemonSet.extensions e2e-z8p48-daemon-set in namespace controllerrevisions-939, will wait for the garbage collector to delete the pods @ 09/02/25 08:46:30.706
  I0902 08:46:30.787292 18 resources.go:139] Deleting DaemonSet.extensions e2e-z8p48-daemon-set took: 18.129614ms
  I0902 08:46:30.888117 18 resources.go:163] Terminating DaemonSet.extensions e2e-z8p48-daemon-set pods took: 100.820719ms
  E0902 08:46:31.410984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:32.301987 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-z8p48-daemon-set: 0
  I0902 08:46:32.302041 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-z8p48-daemon-set
  I0902 08:46:32.315383 18 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31345"},"items":null}

  I0902 08:46:32.321762 18 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31345"},"items":null}

  I0902 08:46:32.363360 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-939" for this suite. @ 09/02/25 08:46:32.371
  E0902 08:46:32.411894      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [6.348 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/02/25 08:46:32.421
  I0902 08:46:32.421710 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:46:32.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:32.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:32.49
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/02/25 08:46:32.495
  E0902 08:46:33.412824      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:34.413033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:35.413192      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:36.418021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:46:36.664
  I0902 08:46:36.719296 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-095c38e3-3735-47ea-9fa0-47761c397dc0 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:46:36.764
  I0902 08:46:36.838722 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4409" for this suite. @ 09/02/25 08:46:36.852
• [4.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/02/25 08:46:36.871
  I0902 08:46:36.871620 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:46:36.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:36.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:36.973
  STEP: create the container @ 09/02/25 08:46:36.981
  I0902 08:46:37.015058      18 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/02/25 08:46:37.015
  E0902 08:46:37.442299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:38.420475      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:39.421128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:40.421271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/25 08:46:41.175
  STEP: the container should be terminated @ 09/02/25 08:46:41.182
  STEP: the termination message should be set @ 09/02/25 08:46:41.182
  I0902 08:46:41.182692 18 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/25 08:46:41.182
  I0902 08:46:41.213193 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5568" for this suite. @ 09/02/25 08:46:41.221
• [4.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/02/25 08:46:41.24
  I0902 08:46:41.240563 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:46:41.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:41.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:41.302
  I0902 08:46:41.371824 18 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:46:41.381
  E0902 08:46:41.421436      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:41.439598 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:46:41.439726 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:46:42.424838      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:42.646516 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:46:42.646611 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 08:46:43.411999 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:46:43.412100 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:46:43.425769      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:44.408288 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:46:44.408356 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  E0902 08:46:44.425854      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Update daemon pods image. @ 09/02/25 08:46:44.474
  STEP: Check that daemon pods images are updated. @ 09/02/25 08:46:44.511
  I0902 08:46:44.544497 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bfqzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0902 08:46:45.426001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:45.555899 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bfqzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0902 08:46:46.428853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:46.524306 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bfqzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:46:46.524426 18 daemon_set.go:1198] Pod daemon-set-ngnlh is not available
  E0902 08:46:47.427063      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:47.659350 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bfqzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:46:47.682565 18 daemon_set.go:1198] Pod daemon-set-ngnlh is not available
  E0902 08:46:48.427423      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:48.523748 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bfqzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:46:48.523942 18 daemon_set.go:1198] Pod daemon-set-ngnlh is not available
  E0902 08:46:49.428477      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:49.522202 18 daemon_set.go:1198] Pod daemon-set-psd97 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/02/25 08:46:49.533
  I0902 08:46:49.645992 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:46:49.646106 18 fixtures.go:131] Node ahkoog9eunoh-2 is running 0 daemon pod, expected 1
  E0902 08:46:50.429428      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:50.601305 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:46:50.601368 18 fixtures.go:131] Node ahkoog9eunoh-2 is running 0 daemon pod, expected 1
  E0902 08:46:51.430609      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:51.558421 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:46:51.558569 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:46:51.67
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6858, will wait for the garbage collector to delete the pods @ 09/02/25 08:46:51.67
  I0902 08:46:51.751934 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.927985ms
  I0902 08:46:51.968730 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 216.794734ms
  E0902 08:46:52.430713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:53.436552      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:54.436686      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:54.480572 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:46:54.480964 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:46:54.488093 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31556"},"items":null}

  I0902 08:46:54.509207 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31556"},"items":null}

  I0902 08:46:54.538027 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6858" for this suite. @ 09/02/25 08:46:54.579
• [13.365 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/02/25 08:46:54.605
  I0902 08:46:54.605546 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 08:46:54.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:54.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:54.648
  I0902 08:46:54.654612 18 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/02/25 08:46:54.725
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/02/25 08:46:54.744
  E0902 08:46:55.475257      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/02/25 08:46:55.786
  I0902 08:46:55.816724 18 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/02/25 08:46:55.816
  E0902 08:46:56.445850      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:46:56.847563 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-991" for this suite. @ 09/02/25 08:46:56.86
• [2.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/02/25 08:46:56.912
  I0902 08:46:56.912850 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:46:56.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:56.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:56.993
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:46:56.998
  E0902 08:46:57.446666      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:58.446981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:46:59.450220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:00.452046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:47:01.075
  I0902 08:47:01.086252 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-11548fc9-556d-4c5b-90c7-8ce4525240cf container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:47:01.121
  I0902 08:47:01.192007 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5607" for this suite. @ 09/02/25 08:47:01.261
• [4.428 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/02/25 08:47:01.338
  I0902 08:47:01.338789 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:47:01.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:01.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:01.392
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:47:01.396
  E0902 08:47:01.452463      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:02.452691      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:03.453487      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:04.456423      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:05.456601      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:47:05.511
  I0902 08:47:05.519128 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-0a4bc48b-1061-4ec6-80d5-38246546b9bd container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:47:05.536
  I0902 08:47:05.594414 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7849" for this suite. @ 09/02/25 08:47:05.608
• [4.313 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/02/25 08:47:05.652
  I0902 08:47:05.652273 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:47:05.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:05.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:05.761
  I0902 08:47:05.775210 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-102" for this suite. @ 09/02/25 08:47:05.792
• [0.168 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/02/25 08:47:05.821
  I0902 08:47:05.821359 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:47:05.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:05.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:05.89
  STEP: Creating ServiceAccount "e2e-sa-2q4nw"  @ 09/02/25 08:47:05.895
  I0902 08:47:05.956998 18 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2q4nw"  @ 09/02/25 08:47:05.957
  I0902 08:47:06.005674 18 service_accounts.go:867] AutomountServiceAccountToken: true
  I0902 08:47:06.006353 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9404" for this suite. @ 09/02/25 08:47:06.048
• [0.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/02/25 08:47:06.159
  I0902 08:47:06.159834 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:47:06.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:06.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:06.236
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:47:06.243
  E0902 08:47:06.457755      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:07.459019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:08.459052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:09.459384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:47:10.343
  I0902 08:47:10.383575 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-8053e68c-4b0c-4632-9ec3-97e078868dcc container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:47:10.4
  I0902 08:47:10.443706 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:47:10.462967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-8840" for this suite. @ 09/02/25 08:47:10.468
• [4.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 09/02/25 08:47:10.69
  I0902 08:47:10.691425 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:47:10.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:10.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:10.8
  STEP: Creating a ResourceQuota @ 09/02/25 08:47:10.804
  STEP: Getting a ResourceQuota @ 09/02/25 08:47:10.816
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/02/25 08:47:10.836
  STEP: Patching the ResourceQuota @ 09/02/25 08:47:10.851
  STEP: Deleting a Collection of ResourceQuotas @ 09/02/25 08:47:10.872
  STEP: Verifying the deleted ResourceQuota @ 09/02/25 08:47:10.932
  I0902 08:47:10.965448 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8853" for this suite. @ 09/02/25 08:47:10.992
• [0.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/02/25 08:47:11.065
  I0902 08:47:11.065857 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:47:11.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:11.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:11.169
  I0902 08:47:11.211700 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:47:11.463240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:12.464298      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:13.464798      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:14.467556      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:14.586003 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6766" for this suite. @ 09/02/25 08:47:14.621
• [3.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/02/25 08:47:14.641
  I0902 08:47:14.641435 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 08:47:14.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:14.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:14.689
  STEP: creating the policy @ 09/02/25 08:47:14.733
  STEP: waiting until the marker is denied @ 09/02/25 08:47:14.8
  STEP: testing a replicated Deployment to be allowed @ 09/02/25 08:47:14.961
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/02/25 08:47:15.167
  E0902 08:47:15.468841      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:15.503805 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3591" for this suite. @ 09/02/25 08:47:15.58
• [1.052 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/02/25 08:47:15.709
  I0902 08:47:15.710026 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:47:15.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:15.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:15.891
  STEP: Creating secret with name s-test-opt-del-a100df3a-779a-4263-a068-176895c21f3b @ 09/02/25 08:47:15.948
  STEP: Creating secret with name s-test-opt-upd-3a8d8ce8-66fc-4d9e-bf92-1ba2cc35d886 @ 09/02/25 08:47:15.958
  STEP: Creating the pod @ 09/02/25 08:47:15.968
  E0902 08:47:16.473723      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:17.473995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:18.474965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:19.476005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:20.483380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:21.483420      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:22.483584      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:23.484713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a100df3a-779a-4263-a068-176895c21f3b @ 09/02/25 08:47:24.33
  E0902 08:47:24.484987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating secret s-test-opt-upd-3a8d8ce8-66fc-4d9e-bf92-1ba2cc35d886 @ 09/02/25 08:47:24.657
  STEP: Creating secret with name s-test-opt-create-03aa9515-b6e3-4b1f-8626-5ce06e4bf261 @ 09/02/25 08:47:24.777
  STEP: waiting to observe update in volume @ 09/02/25 08:47:24.874
  E0902 08:47:25.485987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:26.486197      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:27.049917 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1912" for this suite. @ 09/02/25 08:47:27.059
• [11.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/02/25 08:47:27.079
  I0902 08:47:27.079481 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:47:27.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:27.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:27.121
  I0902 08:47:27.130824 18 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:47:27.170845 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 08:47:27.177766 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-1 before test
  I0902 08:47:27.188607 18 predicates.go:958] cilium-jhvxm from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188696 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0902 08:47:27.188717 18 predicates.go:958] cilium-node-init-j6hbf from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188731 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:47:27.188744 18 predicates.go:958] cilium-operator-6f8d5c5f87-jdv7t from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188757 18 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0902 08:47:27.188770 18 predicates.go:958] coredns-674b8bbfcf-5z5tp from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188782 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:47:27.188795 18 predicates.go:958] coredns-674b8bbfcf-zrpl6 from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188807 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 08:47:27.188821 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188852 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:47:27.188866 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188886 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:47:27.188899 18 predicates.go:958] kube-proxy-6snpl from kube-system started at 2025-09-02 06:49:43 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188911 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:47:27.188924 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188949 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:47:27.188962 18 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-02 07:29:56 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.188975 18 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:47:27.189000 18 predicates.go:958] sonobuoy-e2e-job-898f82e033984cdd from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:47:27.189014 18 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0902 08:47:27.189025 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:47:27.189038 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:47:27.189050 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:47:27.189061 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0902 08:47:27.189085 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-2 before test
  I0902 08:47:27.198222 18 predicates.go:958] cilium-8mzx4 from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.198430 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 2
  I0902 08:47:27.198729 18 predicates.go:958] cilium-node-init-9ktxz from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.199253 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 08:47:27.200508 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.200554 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 08:47:27.200577 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.200603 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:47:27.200623 18 predicates.go:958] kube-proxy-mpdjr from kube-system started at 2025-09-02 06:56:43 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.200665 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 08:47:27.200698 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.200714 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 08:47:27.200729 18 predicates.go:958] pod-secrets-384b8abd-795a-4429-b15f-6500a023825c from secrets-1912 started at 2025-09-02 08:47:16 +0000 UTC (3 container statuses recorded)
  I0902 08:47:27.200757 18 predicates.go:960] 	Container creates-volume-test ready: true, restart count 0
  I0902 08:47:27.200769 18 predicates.go:960] 	Container dels-volume-test ready: true, restart count 0
  I0902 08:47:27.200789 18 predicates.go:960] 	Container upds-volume-test ready: true, restart count 0
  I0902 08:47:27.200802 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-swkx7 from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 08:47:27.200819 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:47:27.200840 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0902 08:47:27.200866 18 predicates.go:958] replicated-54c98b4f84-89zlz from validating-admission-policy-3591 started at 2025-09-02 08:47:15 +0000 UTC (1 container statuses recorded)
  I0902 08:47:27.200880 18 predicates.go:960] 	Container nginx ready: false, restart count 0
  STEP: verifying the node has the label node ahkoog9eunoh-1 @ 09/02/25 08:47:27.274
  STEP: verifying the node has the label node ahkoog9eunoh-2 @ 09/02/25 08:47:27.339
  I0902 08:47:27.503797 18 predicates.go:373] Pod cilium-8mzx4 requesting resource cpu=0m on Node ahkoog9eunoh-2
  I0902 08:47:27.503851 18 predicates.go:373] Pod cilium-jhvxm requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.503868 18 predicates.go:373] Pod cilium-node-init-9ktxz requesting resource cpu=100m on Node ahkoog9eunoh-2
  I0902 08:47:27.503882 18 predicates.go:373] Pod cilium-node-init-j6hbf requesting resource cpu=100m on Node ahkoog9eunoh-1
  I0902 08:47:27.503915 18 predicates.go:373] Pod cilium-operator-6f8d5c5f87-jdv7t requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.503939 18 predicates.go:373] Pod coredns-674b8bbfcf-5z5tp requesting resource cpu=100m on Node ahkoog9eunoh-1
  I0902 08:47:27.503952 18 predicates.go:373] Pod coredns-674b8bbfcf-zrpl6 requesting resource cpu=100m on Node ahkoog9eunoh-1
  I0902 08:47:27.503974 18 predicates.go:373] Pod kube-apiserver-ahkoog9eunoh-1 requesting resource cpu=250m on Node ahkoog9eunoh-1
  I0902 08:47:27.503990 18 predicates.go:373] Pod kube-apiserver-ahkoog9eunoh-2 requesting resource cpu=250m on Node ahkoog9eunoh-2
  I0902 08:47:27.504003 18 predicates.go:373] Pod kube-controller-manager-ahkoog9eunoh-1 requesting resource cpu=200m on Node ahkoog9eunoh-1
  I0902 08:47:27.504017 18 predicates.go:373] Pod kube-controller-manager-ahkoog9eunoh-2 requesting resource cpu=200m on Node ahkoog9eunoh-2
  I0902 08:47:27.504030 18 predicates.go:373] Pod kube-proxy-6snpl requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.504042 18 predicates.go:373] Pod kube-proxy-mpdjr requesting resource cpu=0m on Node ahkoog9eunoh-2
  I0902 08:47:27.504056 18 predicates.go:373] Pod kube-scheduler-ahkoog9eunoh-1 requesting resource cpu=100m on Node ahkoog9eunoh-1
  I0902 08:47:27.504069 18 predicates.go:373] Pod kube-scheduler-ahkoog9eunoh-2 requesting resource cpu=100m on Node ahkoog9eunoh-2
  I0902 08:47:27.504082 18 predicates.go:373] Pod pod-secrets-384b8abd-795a-4429-b15f-6500a023825c requesting resource cpu=0m on Node ahkoog9eunoh-2
  I0902 08:47:27.504096 18 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.504118 18 predicates.go:373] Pod sonobuoy-e2e-job-898f82e033984cdd requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.504131 18 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq requesting resource cpu=0m on Node ahkoog9eunoh-1
  I0902 08:47:27.504160 18 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-swkx7 requesting resource cpu=0m on Node ahkoog9eunoh-2
  I0902 08:47:27.504175 18 predicates.go:373] Pod replicated-54c98b4f84-89zlz requesting resource cpu=0m on Node ahkoog9eunoh-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/02/25 08:47:27.504
  I0902 08:47:27.504240 18 predicates.go:383] Creating a pod which consumes cpu=525m on Node ahkoog9eunoh-1
  E0902 08:47:27.507279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:27.566265 18 predicates.go:383] Creating a pod which consumes cpu=665m on Node ahkoog9eunoh-2
  E0902 08:47:28.533485      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:29.533621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:30.533909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:31.536961      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:32.537132      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:33.537795      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/02/25 08:47:33.912
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a.18616ae1ceeabcf2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5848/filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a to ahkoog9eunoh-1] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a.18616ae215229c75], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a.18616ae21f232e79], Reason = [Created], Message = [Created container: filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a.18616ae221be98bc], Reason = [Started], Message = [Started container filler-pod-768f70cd-09d3-4bae-8ab4-3a3c11db3b6a] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95.18616ae1d47d1232], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5848/filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95 to ahkoog9eunoh-2] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95.18616ae29ce3e8bb], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95.18616ae2a52db9dd], Reason = [Created], Message = [Created container: filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95.18616ae2a80e1467], Reason = [Started], Message = [Started container filler-pod-cfe4afa6-00c5-4d41-86ff-d007e2dd5d95] @ 09/02/25 08:47:33.929
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18616ae3411f1f38], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 09/02/25 08:47:33.956
  E0902 08:47:34.538033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ahkoog9eunoh-1 @ 09/02/25 08:47:34.962
  STEP: verifying the node doesn't have the label node @ 09/02/25 08:47:35.052
  STEP: removing the label node off the node ahkoog9eunoh-2 @ 09/02/25 08:47:35.063
  STEP: verifying the node doesn't have the label node @ 09/02/25 08:47:35.347
  I0902 08:47:35.522324 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:47:35.624078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-pred-5848" for this suite. @ 09/02/25 08:47:35.692
• [8.698 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 09/02/25 08:47:35.779
  I0902 08:47:35.779748 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:47:35.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:35.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:35.866
  STEP: creating service multi-endpoint-test in namespace services-2615 @ 09/02/25 08:47:35.875
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2615 to expose endpoints map[] @ 09/02/25 08:47:35.956
  I0902 08:47:36.024791      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:47:36.044348 18 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2615 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2615 @ 09/02/25 08:47:36.044
  E0902 08:47:36.624906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:37.625448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:38.625782      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:39.629407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2615 to expose endpoints map[pod1:[100]] @ 09/02/25 08:47:40.18
  I0902 08:47:40.191524      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:47:40.202939 18 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2615 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2615 @ 09/02/25 08:47:40.203
  E0902 08:47:40.629981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:41.630093      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:42.634757      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:43.631975      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2615 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/02/25 08:47:44.251
  I0902 08:47:44.293844      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:47:44.302691 18 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2615 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/02/25 08:47:44.302
  I0902 08:47:44.303132 18 resource.go:361] Creating new exec pod
  E0902 08:47:44.632667      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:45.633674      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:46.334396 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2615 exec execpodgkvmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0902 08:47:46.634321      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:46.718597 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.14.13) 80 port [tcp/http] succeeded!\n"
  I0902 08:47:46.718735 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:47:46.719062 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2615 exec execpodgkvmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.13 80'
  I0902 08:47:47.082167 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.13 80\nConnection to 10.233.14.13 80 port [tcp/http] succeeded!\n"
  I0902 08:47:47.082279 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:47:47.082677 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2615 exec execpodgkvmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0902 08:47:47.360018 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.14.13) 81 port [tcp/*] succeeded!\n"
  I0902 08:47:47.360092 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:47:47.360422 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-2615 exec execpodgkvmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.13 81'
  E0902 08:47:47.659032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:47.784313 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.13 81\nConnection to 10.233.14.13 81 port [tcp/*] succeeded!\n"
  I0902 08:47:47.784381 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2615 @ 09/02/25 08:47:47.784
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2615 to expose endpoints map[pod2:[101]] @ 09/02/25 08:47:47.863
  I0902 08:47:47.914814      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:47:47.966688 18 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2615 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2615 @ 09/02/25 08:47:47.966
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2615 to expose endpoints map[] @ 09/02/25 08:47:48.057
  I0902 08:47:48.131569      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0902 08:47:48.659282      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:49.180409      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 08:47:49.187869 18 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2615 exposes endpoints map[]
  I0902 08:47:49.253220 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2615" for this suite. @ 09/02/25 08:47:49.272
• [13.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/02/25 08:47:49.29
  I0902 08:47:49.290443 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/25 08:47:49.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:49.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:49.357
  E0902 08:47:49.660112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:50.660999      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/02/25 08:47:51.432
  STEP: Cleaning up the configmap @ 09/02/25 08:47:51.452
  STEP: Cleaning up the pod @ 09/02/25 08:47:51.467
  I0902 08:47:51.509526 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-148" for this suite. @ 09/02/25 08:47:51.537
  E0902 08:47:51.668962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.401 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/02/25 08:47:51.702
  I0902 08:47:51.703137 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:47:51.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:51.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:52.084
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 08:47:52.145
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:47:52.162
  I0902 08:47:52.358947 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:47:52.359039 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:47:52.669079      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:53.213703 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:47:53.213829 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:47:53.669511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:54.187209 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:47:54.187322 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 08:47:54.672586      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:47:55.206704 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:47:55.207034 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/02/25 08:47:55.222
  STEP: DeleteCollection of the DaemonSets @ 09/02/25 08:47:55.234
  STEP: Verify that ReplicaSets have been deleted @ 09/02/25 08:47:55.315
  I0902 08:47:55.365789 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32243"},"items":null}

  I0902 08:47:55.401616 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32243"},"items":[{"metadata":{"name":"daemon-set-m66zv","generateName":"daemon-set-","namespace":"daemonsets-1911","uid":"600d6588-78d7-40f7-839a-006d8b80de74","resourceVersion":"32242","generation":2,"creationTimestamp":"2025-09-02T08:47:52Z","deletionTimestamp":"2025-09-02T08:48:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"db5527f8-3468-4d97-b7ea-343e3e83b1fa","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"db5527f8-3468-4d97-b7ea-343e3e83b1fa\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:47:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.250\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k47hs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k47hs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ahkoog9eunoh-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ahkoog9eunoh-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:53Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:52Z"}],"hostIP":"192.168.121.238","hostIPs":[{"ip":"192.168.121.238"}],"podIP":"10.233.64.250","podIPs":[{"ip":"10.233.64.250"}],"startTime":"2025-09-02T08:47:52Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-02T08:47:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://21e076de668132a6e9f3cae40b80d4a8461a6fcb2979699174c46dccee6d54c2","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-k47hs","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ngk9s","generateName":"daemon-set-","namespace":"daemonsets-1911","uid":"74beb721-3227-4954-afe9-eb8833059892","resourceVersion":"32241","generation":2,"creationTimestamp":"2025-09-02T08:47:52Z","deletionTimestamp":"2025-09-02T08:48:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"db5527f8-3468-4d97-b7ea-343e3e83b1fa","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"db5527f8-3468-4d97-b7ea-343e3e83b1fa\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:47:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.133\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vnzc4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vnzc4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ahkoog9eunoh-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ahkoog9eunoh-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:47:52Z"}],"hostIP":"192.168.121.25","hostIPs":[{"ip":"192.168.121.25"}],"podIP":"10.233.65.133","podIPs":[{"ip":"10.233.65.133"}],"startTime":"2025-09-02T08:47:52Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-02T08:47:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://449ab877f01ea19d231e9d3d07cf9e6fff773a0f1ce195beb5f3fb184c99c750","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-vnzc4","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0902 08:47:55.458289 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1911" for this suite. @ 09/02/25 08:47:55.518
• [3.835 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 09/02/25 08:47:55.537
  I0902 08:47:55.537832 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 08:47:55.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:55.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:55.585
  STEP: Creating a suspended job @ 09/02/25 08:47:55.601
  STEP: Patching the Job @ 09/02/25 08:47:55.619
  E0902 08:47:55.671729      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching for Job to be patched @ 09/02/25 08:47:55.691
  I0902 08:47:55.696520 18 job.go:1369] Event ADDED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh] and annotations: map[]
  I0902 08:47:55.697775 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh] and annotations: map[]
  I0902 08:47:55.699005 18 job.go:1372] Event MODIFIED found for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[]
  STEP: Updating the job @ 09/02/25 08:47:55.699
  STEP: Watching for Job to be updated @ 09/02/25 08:47:55.723
  I0902 08:47:55.729740 18 job.go:1372] Event MODIFIED found for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:47:55.729818 18 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/02/25 08:47:55.729
  I0902 08:47:55.736316 18 job.go:1247] Job: e2e-pbzkh as labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched]
  STEP: Waiting for job to complete @ 09/02/25 08:47:55.737
  E0902 08:47:56.670067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:57.671112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:58.671832      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:47:59.672105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:00.672443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:01.673269      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:02.677702      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:03.674260      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:04.675090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:05.680871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/02/25 08:48:05.805
  STEP: Watching for Job to be deleted @ 09/02/25 08:48:05.85
  I0902 08:48:05.861594 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.861720 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.861756 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.862438 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.862476 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.862503 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.863557 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.863598 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.863656 18 job.go:1369] Event MODIFIED observed for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  I0902 08:48:05.863823 18 job.go:1372] Event DELETED found for Job e2e-pbzkh in namespace job-6088 with labels: map[e2e-job-label:e2e-pbzkh e2e-pbzkh:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/02/25 08:48:05.863
  I0902 08:48:05.902134 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6088" for this suite. @ 09/02/25 08:48:05.95
• [10.434 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 09/02/25 08:48:05.973
  I0902 08:48:05.973725 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:48:05.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:06.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:06.054
  STEP: fetching services @ 09/02/25 08:48:06.06
  I0902 08:48:06.068273 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2465" for this suite. @ 09/02/25 08:48:06.082
• [0.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/02/25 08:48:06.096
  I0902 08:48:06.096341 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:48:06.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:06.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:06.2
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/25 08:48:06.206
  E0902 08:48:06.679692      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:07.680529      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:08.681324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:09.680821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:48:10.266
  I0902 08:48:10.271497 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-0d1f4257-00b3-4f47-b166-0645b968d365 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:48:10.283
  I0902 08:48:10.316877 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9409" for this suite. @ 09/02/25 08:48:10.33
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/02/25 08:48:10.371
  I0902 08:48:10.371545 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:48:10.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:10.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:10.404
  STEP: Creating configMap with name configmap-test-volume-map-16ec33c7-3b4c-4459-ba10-282589cd2cd1 @ 09/02/25 08:48:10.41
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:48:10.422
  E0902 08:48:10.681090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:11.682206      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:12.686006      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:13.683369      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:48:14.574
  I0902 08:48:14.580370 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-a91d9b43-1297-4db3-b313-93f77008d2e5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:48:14.594
  I0902 08:48:14.647511 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:48:14.684396      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-893" for this suite. @ 09/02/25 08:48:14.717
• [4.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/02/25 08:48:14.734
  I0902 08:48:14.734814 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename containers @ 09/02/25 08:48:14.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:14.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:14.797
  E0902 08:48:15.688900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:16.689264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:16.951300 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6984" for this suite. @ 09/02/25 08:48:17.03
• [2.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/02/25 08:48:17.11
  I0902 08:48:17.110814 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:48:17.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:17.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:17.215
  I0902 08:48:17.234548 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:48:17.689430      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:18.689582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:19.663142      18 warnings.go:110] "Warning: unknown field \"alpha\""
  I0902 08:48:19.663196      18 warnings.go:110] "Warning: unknown field \"beta\""
  I0902 08:48:19.663215      18 warnings.go:110] "Warning: unknown field \"delta\""
  I0902 08:48:19.663241      18 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0902 08:48:19.663260      18 warnings.go:110] "Warning: unknown field \"gamma\""
  E0902 08:48:19.690355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:20.481237 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3410" for this suite. @ 09/02/25 08:48:20.494
• [3.421 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/02/25 08:48:20.535
  I0902 08:48:20.535360 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:48:20.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:20.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:20.668
  STEP: creating a watch on configmaps with a certain label @ 09/02/25 08:48:20.676
  STEP: creating a new configmap @ 09/02/25 08:48:20.678
  E0902 08:48:20.696156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: modifying the configmap once @ 09/02/25 08:48:20.697
  STEP: changing the label value of the configmap @ 09/02/25 08:48:20.731
  STEP: Expecting to observe a delete notification for the watched object @ 09/02/25 08:48:20.788
  I0902 08:48:20.789258 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32534 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:48:20.789713 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32535 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:48:20.789854 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32536 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/02/25 08:48:20.789
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/02/25 08:48:20.86
  E0902 08:48:21.695709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:22.696400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:23.694266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:24.695763      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:25.696530      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:26.697255      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:27.698260      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:28.698563      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:29.698882      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:30.700083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/02/25 08:48:30.86
  STEP: modifying the configmap a third time @ 09/02/25 08:48:30.876
  STEP: deleting the configmap @ 09/02/25 08:48:30.901
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/02/25 08:48:30.911
  I0902 08:48:30.912089 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32580 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:48:30.912337 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32581 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:48:30.912535 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7916  c4600b14-6275-4db5-ab5a-635786320838 32582 0 2025-09-02 08:48:20 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:48:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:48:30.912983 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7916" for this suite. @ 09/02/25 08:48:30.922
• [10.399 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/02/25 08:48:30.934
  I0902 08:48:30.934557 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename init-container @ 09/02/25 08:48:30.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:30.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:30.964
  STEP: creating the pod @ 09/02/25 08:48:30.969
  I0902 08:48:30.970021 18 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0902 08:48:31.705175      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:32.705608      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:33.705619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:34.708229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:34.956005 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7994" for this suite. @ 09/02/25 08:48:34.966
• [4.054 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 09/02/25 08:48:34.988
  I0902 08:48:34.988569 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:48:34.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:35.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:35.07
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7931 @ 09/02/25 08:48:35.075
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/25 08:48:35.181
  STEP: creating service externalsvc in namespace services-7931 @ 09/02/25 08:48:35.182
  I0902 08:48:35.267980 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 08:48:35.711292      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:36.710851      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/02/25 08:48:37.327
  I0902 08:48:37.380068 18 resource.go:361] Creating new exec pod
  E0902 08:48:37.711060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:38.711222      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:39.417597 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-7931 exec execpodpbfdg -- /bin/sh -x -c nslookup clusterip-service.services-7931.svc.cluster.local'
  E0902 08:48:39.733740      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:48:39.885089 18 builder.go:146] stderr: "+ nslookup clusterip-service.services-7931.svc.cluster.local\n"
  I0902 08:48:39.885220 18 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-7931.svc.cluster.local\tcanonical name = externalsvc.services-7931.svc.cluster.local.\nName:\texternalsvc.services-7931.svc.cluster.local\nAddress: 10.233.53.60\n\n"
  I0902 08:48:40.121486 18 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0902 08:48:40.201558 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7931" for this suite. @ 09/02/25 08:48:40.216
• [5.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/02/25 08:48:40.236
  I0902 08:48:40.236741 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 08:48:40.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:40.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:40.281
  STEP: Creating a ReplaceConcurrent cronjob @ 09/02/25 08:48:40.287
  STEP: Ensuring a job is scheduled @ 09/02/25 08:48:40.298
  E0902 08:48:40.712824      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:41.712431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:42.712932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:43.713342      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:44.713747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:45.713879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:46.714707      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:47.715005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:48.715805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:49.717077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:50.717417      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:51.717972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:52.719051      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:53.719077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:54.719805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:55.720226      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:56.721178      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:57.721234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:58.724743      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:48:59.725309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/02/25 08:49:00.317
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/25 08:49:00.33
  STEP: Ensuring the job is replaced with a new one @ 09/02/25 08:49:00.34
  E0902 08:49:00.727895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:01.728072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:02.728590      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:03.729956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:04.730621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:05.732431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:06.731104      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:07.731761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:08.732022      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:09.736326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:10.737525      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:11.737721      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:12.738166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:13.739043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:14.739994      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:15.740136      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:16.740766      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:17.741059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:18.741419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:19.742010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:20.742391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:21.743005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:22.745955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:23.746088      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:24.746779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:25.747031      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:26.749499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:27.750388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:28.750496      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:29.751163      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:30.752159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:31.753120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:32.754452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:33.755154      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:34.755487      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:35.755879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:36.756330      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:37.756511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:38.756601      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:39.756923      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:40.757897      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:41.758005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:42.758090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:43.758274      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:44.758598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:45.759352      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:46.760246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:47.761971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:48.762331      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:49.763774      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:50.776189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:51.771431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:52.772546      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:53.773523      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:54.773954      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:55.776159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:56.776254      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:57.777882      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:58.778580      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:49:59.777948      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/02/25 08:50:00.359
  I0902 08:50:00.426518 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7611" for this suite. @ 09/02/25 08:50:00.495
• [80.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:50:00.543
  I0902 08:50:00.543276 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:50:00.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:00.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:00.63
  I0902 08:50:00.774496 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:50:00.778838      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "podtemplate-1904" for this suite. @ 09/02/25 08:50:00.792
• [0.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/02/25 08:50:00.83
  I0902 08:50:00.830183 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 08:50:00.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:00.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:00.89
  STEP: creating a Namespace @ 09/02/25 08:50:00.899
  STEP: patching the Namespace @ 09/02/25 08:50:00.936
  STEP: get the Namespace and ensuring it has the label @ 09/02/25 08:50:00.953
  I0902 08:50:01.035674 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6892" for this suite. @ 09/02/25 08:50:01.066
  STEP: Destroying namespace "nspatchtest-8add0daa-61e9-42ba-87ab-26117ff28fcd-1474" for this suite. @ 09/02/25 08:50:01.085
• [0.279 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/02/25 08:50:01.113
  I0902 08:50:01.113383 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:50:01.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:01.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:01.199
  STEP: Setting up data @ 09/02/25 08:50:01.208
  STEP: Creating pod pod-subpath-test-downwardapi-5wgg @ 09/02/25 08:50:01.245
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:50:01.245
  E0902 08:50:01.779300      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:02.789611      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:03.787081      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:04.787050      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:05.789920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:06.790233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:07.790928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:08.793046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:09.794043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:10.794196      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:11.794449      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:12.795615      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:13.796161      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:14.796167      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:15.796774      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:16.797012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:17.797963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:18.798250      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:19.798404      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:20.798864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:21.798998      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:22.799261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:23.801140      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:24.799978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:50:25.471
  I0902 08:50:25.478335 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-subpath-test-downwardapi-5wgg container test-container-subpath-downwardapi-5wgg: <nil>
  STEP: delete the pod @ 09/02/25 08:50:25.521
  STEP: Deleting pod pod-subpath-test-downwardapi-5wgg @ 09/02/25 08:50:25.58
  I0902 08:50:25.580570 18 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-5wgg" in namespace "subpath-2356"
  I0902 08:50:25.590096 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2356" for this suite. @ 09/02/25 08:50:25.604
• [24.541 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/02/25 08:50:25.655
  I0902 08:50:25.655362 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption @ 09/02/25 08:50:25.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:25.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:25.71
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:50:25.767
  E0902 08:50:25.806593      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/02/25 08:50:25.898
  I0902 08:50:25.910036 18 disruption.go:691] running pods: 0 < 3
  E0902 08:50:26.805879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:27.804098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:27.930530 18 disruption.go:691] running pods: 0 < 3
  E0902 08:50:28.804153      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:29.804493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:29.952106 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4514" for this suite. @ 09/02/25 08:50:29.962
• [4.324 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 09/02/25 08:50:29.979
  I0902 08:50:29.979979 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 08:50:29.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:30.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:30.048
  STEP: creating service in namespace services-8980 @ 09/02/25 08:50:30.054
  STEP: creating service affinity-clusterip-transition in namespace services-8980 @ 09/02/25 08:50:30.054
  I0902 08:50:30.274963 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 08:50:30.804848      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:31.805080      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:32.365976 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 50, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 50, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 50, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 50, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:50:32.816820      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:33.810053      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:34.368746 18 resource.go:361] Creating new exec pod
  E0902 08:50:34.811018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:35.812018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:36.813128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:37.813829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:38.501104 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8980 exec execpod-affinity7k4vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0902 08:50:38.875953      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:39.175133 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.44.158) 80 port [tcp/http] succeeded!\n"
  I0902 08:50:39.175553 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:50:39.176053 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8980 exec execpod-affinity7k4vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.158 80'
  I0902 08:50:39.546111 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.158 80\nConnection to 10.233.44.158 80 port [tcp/http] succeeded!\n"
  I0902 08:50:39.546214 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:50:39.590606 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8980 exec execpod-affinity7k4vr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/ ; done'
  E0902 08:50:39.842235      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:40.401158 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n"
  I0902 08:50:40.401269 18 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-5cnfd\naffinity-clusterip-transition-5cffb65545-5cnfd\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-5cnfd\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-x4cht\naffinity-clusterip-transition-5cffb65545-5cnfd"
  I0902 08:50:40.401305 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401344 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5cnfd
  I0902 08:50:40.401359 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5cnfd
  I0902 08:50:40.401373 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:40.401387 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:40.401401 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5cnfd
  I0902 08:50:40.401429 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401444 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:40.401481 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401495 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401508 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401521 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:40.401534 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401547 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401560 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x4cht
  I0902 08:50:40.401572 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5cnfd
  I0902 08:50:40.516865 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-8980 exec execpod-affinity7k4vr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/ ; done'
  E0902 08:50:40.843052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:41.379906 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.44.158:80/\n"
  I0902 08:50:41.380542 18 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z\naffinity-clusterip-transition-5cffb65545-rdh8z"
  I0902 08:50:41.380794 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380822 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380838 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380853 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380869 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380883 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380897 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380911 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380926 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380939 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380953 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380966 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.380980 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.381031 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.381063 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.381078 18 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-rdh8z
  I0902 08:50:41.382081 18 service.go:4352] Cleaning up the exec pod
  I0902 08:50:41.762096 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8980" for this suite. @ 09/02/25 08:50:41.821
  E0902 08:50:41.848322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [11.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 09/02/25 08:50:41.873
  I0902 08:50:41.873416 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:50:41.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:50:41.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:50:41.987
  STEP: creating a replication controller @ 09/02/25 08:50:41.997
  I0902 08:50:41.998117 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 create -f -'
  I0902 08:50:42.508865 18 builder.go:146] stderr: ""
  I0902 08:50:42.509026 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 08:50:42.509
  I0902 08:50:42.509769 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0902 08:50:42.845196      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:42.847397 18 builder.go:146] stderr: ""
  I0902 08:50:42.847563 18 builder.go:147] stdout: "update-demo-nautilus-7xwdr update-demo-nautilus-gghrn "
  I0902 08:50:42.847955 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:43.136289 18 builder.go:146] stderr: ""
  I0902 08:50:43.136349 18 builder.go:147] stdout: ""
  I0902 08:50:43.136383 18 kubectl.go:2505] update-demo-nautilus-7xwdr is created but not running
  E0902 08:50:43.853319      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:44.851264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:45.852279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:46.852505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:47.860658      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:48.137725 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 08:50:48.322788 18 builder.go:146] stderr: ""
  I0902 08:50:48.322871 18 builder.go:147] stdout: "update-demo-nautilus-7xwdr update-demo-nautilus-gghrn "
  I0902 08:50:48.323367 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:48.497803 18 builder.go:146] stderr: ""
  I0902 08:50:48.499442 18 builder.go:147] stdout: "true"
  I0902 08:50:48.500882 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 08:50:48.672491 18 builder.go:146] stderr: ""
  I0902 08:50:48.672578 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 08:50:48.672608 18 kubectl.go:2396] validating pod update-demo-nautilus-7xwdr
  I0902 08:50:48.687745 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 08:50:48.687993 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 08:50:48.688023 18 kubectl.go:2523] update-demo-nautilus-7xwdr is verified up and running
  I0902 08:50:48.688321 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-gghrn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:48.857420 18 builder.go:146] stderr: ""
  I0902 08:50:48.857481 18 builder.go:147] stdout: "true"
  I0902 08:50:48.857837 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-gghrn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0902 08:50:48.861489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:49.065146 18 builder.go:146] stderr: ""
  I0902 08:50:49.065213 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 08:50:49.065263 18 kubectl.go:2396] validating pod update-demo-nautilus-gghrn
  I0902 08:50:49.088622 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 08:50:49.088832 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 08:50:49.088912 18 kubectl.go:2523] update-demo-nautilus-gghrn is verified up and running
  STEP: scaling down the replication controller @ 09/02/25 08:50:49.089
  I0902 08:50:49.114544 18 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0902 08:50:49.114801 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0902 08:50:49.862535      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:50.480990 18 builder.go:146] stderr: ""
  I0902 08:50:50.481083 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 08:50:50.481
  I0902 08:50:50.481422 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 08:50:50.791573 18 builder.go:146] stderr: ""
  I0902 08:50:50.791718 18 builder.go:147] stdout: "update-demo-nautilus-7xwdr "
  I0902 08:50:50.793334 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0902 08:50:50.862964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:51.050320 18 builder.go:146] stderr: ""
  I0902 08:50:51.050555 18 builder.go:147] stdout: "true"
  I0902 08:50:51.051083 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 08:50:51.202455 18 builder.go:146] stderr: ""
  I0902 08:50:51.202710 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 08:50:51.202866 18 kubectl.go:2396] validating pod update-demo-nautilus-7xwdr
  I0902 08:50:51.210834 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 08:50:51.211109 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 08:50:51.211154 18 kubectl.go:2523] update-demo-nautilus-7xwdr is verified up and running
  STEP: scaling up the replication controller @ 09/02/25 08:50:51.211
  I0902 08:50:51.229414 18 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0902 08:50:51.229712 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0902 08:50:51.863606      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:52.433310 18 builder.go:146] stderr: ""
  I0902 08:50:52.433373 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 08:50:52.433
  I0902 08:50:52.434422 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 08:50:52.695211 18 builder.go:146] stderr: ""
  I0902 08:50:52.695289 18 builder.go:147] stdout: "update-demo-nautilus-4xtj5 update-demo-nautilus-7xwdr "
  I0902 08:50:52.695578 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-4xtj5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:52.838481 18 builder.go:146] stderr: ""
  I0902 08:50:52.838616 18 builder.go:147] stdout: ""
  I0902 08:50:52.838797 18 kubectl.go:2505] update-demo-nautilus-4xtj5 is created but not running
  E0902 08:50:52.864555      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:53.864052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:54.864405      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:55.865279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:50:56.865698      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:57.854219 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0902 08:50:57.866538      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:58.167940 18 builder.go:146] stderr: ""
  I0902 08:50:58.168030 18 builder.go:147] stdout: "update-demo-nautilus-4xtj5 update-demo-nautilus-7xwdr "
  I0902 08:50:58.168225 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-4xtj5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:58.415607 18 builder.go:146] stderr: ""
  I0902 08:50:58.415726 18 builder.go:147] stdout: "true"
  I0902 08:50:58.416106 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-4xtj5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 08:50:58.567959 18 builder.go:146] stderr: ""
  I0902 08:50:58.568053 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 08:50:58.568118 18 kubectl.go:2396] validating pod update-demo-nautilus-4xtj5
  I0902 08:50:58.586105 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 08:50:58.586217 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 08:50:58.586259 18 kubectl.go:2523] update-demo-nautilus-4xtj5 is verified up and running
  I0902 08:50:58.586824 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 08:50:58.768880 18 builder.go:146] stderr: ""
  I0902 08:50:58.768944 18 builder.go:147] stdout: "true"
  I0902 08:50:58.769207 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods update-demo-nautilus-7xwdr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0902 08:50:58.866977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:50:58.927299 18 builder.go:146] stderr: ""
  I0902 08:50:58.927365 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 08:50:58.927416 18 kubectl.go:2396] validating pod update-demo-nautilus-7xwdr
  I0902 08:50:58.934309 18 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0902 08:50:58.934404 18 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 08:50:58.934473 18 kubectl.go:2523] update-demo-nautilus-7xwdr is verified up and running
  STEP: using delete to clean up resources @ 09/02/25 08:50:58.934
  I0902 08:50:58.934768 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 delete --grace-period=0 --force -f -'
  I0902 08:50:59.262317 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 08:50:59.262383 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0902 08:50:59.262606 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get rc,svc -l name=update-demo --no-headers'
  I0902 08:50:59.786284 18 builder.go:146] stderr: "No resources found in kubectl-6747 namespace.\n"
  I0902 08:50:59.786377 18 builder.go:147] stdout: ""
  I0902 08:50:59.786905 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6747 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0902 08:50:59.867737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:00.081612 18 builder.go:146] stderr: ""
  I0902 08:51:00.081705 18 builder.go:147] stdout: ""
  I0902 08:51:00.081916 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6747" for this suite. @ 09/02/25 08:51:00.116
• [18.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/02/25 08:51:00.127
  I0902 08:51:00.127979 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 08:51:00.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:51:00.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:51:00.165
  STEP: creating a policy with variables @ 09/02/25 08:51:00.19
  STEP: waiting until the marker is denied @ 09/02/25 08:51:00.268
  E0902 08:51:00.867906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/02/25 08:51:01.361
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/02/25 08:51:01.403
  I0902 08:51:01.793871 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2547" for this suite. @ 09/02/25 08:51:01.853
  E0902 08:51:01.868781      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [1.747 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/02/25 08:51:01.874
  I0902 08:51:01.875030 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:51:01.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:51:01.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:51:01.912
  STEP: create the rc @ 09/02/25 08:51:01.946
  I0902 08:51:01.971271      18 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0902 08:51:03.009864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:04.077345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:05.168811      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:07.870159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:07.870608      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:09.158495      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:10.262575      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/02/25 08:51:10.696
  E0902 08:51:12.090832      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/02/25 08:51:11.669
  E0902 08:51:13.266813      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:14.336502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:15.332005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:16.333738      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/02/25 08:51:17.211
  E0902 08:51:17.337105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:18.532962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:19.590084      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:20.604473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:21.605093      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:22.605189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:23.605484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:24.605724      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:25.605980      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:26.627818      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:27.628890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:28.628024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:29.628201      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:30.632269      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:31.632071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:32.638788      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:33.639876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:34.640034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:35.642502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:36.647710      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:37.647901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:38.659895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:39.648345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:40.649032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:41.651065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:42.652103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:43.652478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:44.655298      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:45.656077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:51:46.687254      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 08:51:47.304
  I0902 08:51:47.587082 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:51:47.587290 18 delete.go:95] Deleting pod "simpletest.rc-2hlzh" in namespace "gc-1444"
  I0902 08:51:47.632147 18 delete.go:95] Deleting pod "simpletest.rc-4cpwm" in namespace "gc-1444"
  I0902 08:51:47.698938 18 delete.go:95] Deleting pod "simpletest.rc-4fnqq" in namespace "gc-1444"
  E0902 08:51:47.706472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:47.756002 18 delete.go:95] Deleting pod "simpletest.rc-4xnrq" in namespace "gc-1444"
  I0902 08:51:47.803280 18 delete.go:95] Deleting pod "simpletest.rc-56vks" in namespace "gc-1444"
  I0902 08:51:47.892409 18 delete.go:95] Deleting pod "simpletest.rc-5gzcr" in namespace "gc-1444"
  I0902 08:51:47.977527 18 delete.go:95] Deleting pod "simpletest.rc-5l7qf" in namespace "gc-1444"
  I0902 08:51:48.044543 18 delete.go:95] Deleting pod "simpletest.rc-5tcmv" in namespace "gc-1444"
  I0902 08:51:48.227312 18 delete.go:95] Deleting pod "simpletest.rc-62w25" in namespace "gc-1444"
  I0902 08:51:48.485600 18 delete.go:95] Deleting pod "simpletest.rc-6bqvn" in namespace "gc-1444"
  E0902 08:51:48.707023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:48.931491 18 delete.go:95] Deleting pod "simpletest.rc-6nvgn" in namespace "gc-1444"
  I0902 08:51:49.018065 18 delete.go:95] Deleting pod "simpletest.rc-75xbq" in namespace "gc-1444"
  I0902 08:51:49.149287 18 delete.go:95] Deleting pod "simpletest.rc-78mdk" in namespace "gc-1444"
  I0902 08:51:49.311211 18 delete.go:95] Deleting pod "simpletest.rc-78qmc" in namespace "gc-1444"
  I0902 08:51:49.379219 18 delete.go:95] Deleting pod "simpletest.rc-7d4r9" in namespace "gc-1444"
  I0902 08:51:49.556845 18 delete.go:95] Deleting pod "simpletest.rc-7lfbf" in namespace "gc-1444"
  I0902 08:51:49.622510 18 delete.go:95] Deleting pod "simpletest.rc-7qm5c" in namespace "gc-1444"
  I0902 08:51:49.701047 18 delete.go:95] Deleting pod "simpletest.rc-8bb9b" in namespace "gc-1444"
  E0902 08:51:49.721382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:49.942986 18 delete.go:95] Deleting pod "simpletest.rc-8qg84" in namespace "gc-1444"
  I0902 08:51:50.062496 18 delete.go:95] Deleting pod "simpletest.rc-8xlt8" in namespace "gc-1444"
  I0902 08:51:50.243554 18 delete.go:95] Deleting pod "simpletest.rc-9knf6" in namespace "gc-1444"
  I0902 08:51:50.278479 18 delete.go:95] Deleting pod "simpletest.rc-9n7zv" in namespace "gc-1444"
  I0902 08:51:50.391504 18 delete.go:95] Deleting pod "simpletest.rc-9twn7" in namespace "gc-1444"
  I0902 08:51:50.455685 18 delete.go:95] Deleting pod "simpletest.rc-bts2q" in namespace "gc-1444"
  I0902 08:51:50.504836 18 delete.go:95] Deleting pod "simpletest.rc-c5tjk" in namespace "gc-1444"
  I0902 08:51:50.723274 18 delete.go:95] Deleting pod "simpletest.rc-cbt5t" in namespace "gc-1444"
  E0902 08:51:50.724006      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:50.771989 18 delete.go:95] Deleting pod "simpletest.rc-ccmf6" in namespace "gc-1444"
  I0902 08:51:50.858797 18 delete.go:95] Deleting pod "simpletest.rc-ccwkw" in namespace "gc-1444"
  I0902 08:51:50.936554 18 delete.go:95] Deleting pod "simpletest.rc-cdgqv" in namespace "gc-1444"
  I0902 08:51:51.226850 18 delete.go:95] Deleting pod "simpletest.rc-cpdcn" in namespace "gc-1444"
  I0902 08:51:51.434707 18 delete.go:95] Deleting pod "simpletest.rc-d5msm" in namespace "gc-1444"
  I0902 08:51:51.572344 18 delete.go:95] Deleting pod "simpletest.rc-f68pp" in namespace "gc-1444"
  I0902 08:51:51.713428 18 delete.go:95] Deleting pod "simpletest.rc-f8szz" in namespace "gc-1444"
  E0902 08:51:51.724268      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:51.749980 18 delete.go:95] Deleting pod "simpletest.rc-fwqkm" in namespace "gc-1444"
  I0902 08:51:51.868064 18 delete.go:95] Deleting pod "simpletest.rc-g8mzs" in namespace "gc-1444"
  I0902 08:51:52.186232 18 delete.go:95] Deleting pod "simpletest.rc-gmtv9" in namespace "gc-1444"
  I0902 08:51:52.287861 18 delete.go:95] Deleting pod "simpletest.rc-gphql" in namespace "gc-1444"
  I0902 08:51:52.415336 18 delete.go:95] Deleting pod "simpletest.rc-h5hvp" in namespace "gc-1444"
  I0902 08:51:52.808330 18 delete.go:95] Deleting pod "simpletest.rc-hmxm7" in namespace "gc-1444"
  E0902 08:51:52.932990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:53.217333 18 delete.go:95] Deleting pod "simpletest.rc-hq55k" in namespace "gc-1444"
  I0902 08:51:53.309483 18 delete.go:95] Deleting pod "simpletest.rc-j2qqg" in namespace "gc-1444"
  I0902 08:51:53.506269 18 delete.go:95] Deleting pod "simpletest.rc-j45ll" in namespace "gc-1444"
  I0902 08:51:53.762038 18 delete.go:95] Deleting pod "simpletest.rc-j8cw9" in namespace "gc-1444"
  I0902 08:51:53.848874 18 delete.go:95] Deleting pod "simpletest.rc-j8xmj" in namespace "gc-1444"
  I0902 08:51:53.905104 18 delete.go:95] Deleting pod "simpletest.rc-jkmgx" in namespace "gc-1444"
  E0902 08:51:53.934505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:54.192388 18 delete.go:95] Deleting pod "simpletest.rc-k2sr5" in namespace "gc-1444"
  I0902 08:51:54.340138 18 delete.go:95] Deleting pod "simpletest.rc-k8cs6" in namespace "gc-1444"
  I0902 08:51:54.527742 18 delete.go:95] Deleting pod "simpletest.rc-kfczf" in namespace "gc-1444"
  I0902 08:51:54.631987 18 delete.go:95] Deleting pod "simpletest.rc-kfqxd" in namespace "gc-1444"
  I0902 08:51:54.783923 18 delete.go:95] Deleting pod "simpletest.rc-krmj5" in namespace "gc-1444"
  E0902 08:51:54.984565      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:54.986571 18 delete.go:95] Deleting pod "simpletest.rc-l29vm" in namespace "gc-1444"
  I0902 08:51:55.089943 18 delete.go:95] Deleting pod "simpletest.rc-l68jl" in namespace "gc-1444"
  I0902 08:51:55.301552 18 delete.go:95] Deleting pod "simpletest.rc-l76mn" in namespace "gc-1444"
  I0902 08:51:55.600892 18 delete.go:95] Deleting pod "simpletest.rc-lqm8t" in namespace "gc-1444"
  E0902 08:51:56.027110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:56.047142 18 delete.go:95] Deleting pod "simpletest.rc-lr684" in namespace "gc-1444"
  I0902 08:51:56.620001 18 delete.go:95] Deleting pod "simpletest.rc-lwpn4" in namespace "gc-1444"
  I0902 08:51:56.722259 18 delete.go:95] Deleting pod "simpletest.rc-m475t" in namespace "gc-1444"
  I0902 08:51:56.764776 18 delete.go:95] Deleting pod "simpletest.rc-m5x46" in namespace "gc-1444"
  I0902 08:51:56.884220 18 delete.go:95] Deleting pod "simpletest.rc-mmzdm" in namespace "gc-1444"
  E0902 08:51:57.070196      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:57.070839 18 delete.go:95] Deleting pod "simpletest.rc-mpgdv" in namespace "gc-1444"
  I0902 08:51:57.211747 18 delete.go:95] Deleting pod "simpletest.rc-mq6tc" in namespace "gc-1444"
  I0902 08:51:57.536601 18 delete.go:95] Deleting pod "simpletest.rc-msjzb" in namespace "gc-1444"
  I0902 08:51:57.994865 18 delete.go:95] Deleting pod "simpletest.rc-n6z4t" in namespace "gc-1444"
  I0902 08:51:58.067949 18 delete.go:95] Deleting pod "simpletest.rc-ngkt9" in namespace "gc-1444"
  E0902 08:51:58.072174      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:58.184054 18 delete.go:95] Deleting pod "simpletest.rc-nskr7" in namespace "gc-1444"
  I0902 08:51:58.343768 18 delete.go:95] Deleting pod "simpletest.rc-p2nmp" in namespace "gc-1444"
  I0902 08:51:58.564542 18 delete.go:95] Deleting pod "simpletest.rc-p4cmx" in namespace "gc-1444"
  I0902 08:51:58.626124 18 delete.go:95] Deleting pod "simpletest.rc-p762h" in namespace "gc-1444"
  I0902 08:51:58.774306 18 delete.go:95] Deleting pod "simpletest.rc-psd5q" in namespace "gc-1444"
  I0902 08:51:58.884800 18 delete.go:95] Deleting pod "simpletest.rc-pzhhd" in namespace "gc-1444"
  I0902 08:51:59.053984 18 delete.go:95] Deleting pod "simpletest.rc-q4jg5" in namespace "gc-1444"
  E0902 08:51:59.075124      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:51:59.697986 18 delete.go:95] Deleting pod "simpletest.rc-q6kcs" in namespace "gc-1444"
  I0902 08:52:00.017463 18 delete.go:95] Deleting pod "simpletest.rc-ql9wk" in namespace "gc-1444"
  E0902 08:52:00.237568      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:00.694869 18 delete.go:95] Deleting pod "simpletest.rc-qpxxr" in namespace "gc-1444"
  I0902 08:52:00.788504 18 delete.go:95] Deleting pod "simpletest.rc-rb8sf" in namespace "gc-1444"
  I0902 08:52:00.940741 18 delete.go:95] Deleting pod "simpletest.rc-rf2fb" in namespace "gc-1444"
  I0902 08:52:01.057136 18 delete.go:95] Deleting pod "simpletest.rc-rgdst" in namespace "gc-1444"
  I0902 08:52:01.222434 18 delete.go:95] Deleting pod "simpletest.rc-rxcjp" in namespace "gc-1444"
  E0902 08:52:01.238401      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:01.443519 18 delete.go:95] Deleting pod "simpletest.rc-s8ccp" in namespace "gc-1444"
  I0902 08:52:01.606781 18 delete.go:95] Deleting pod "simpletest.rc-sbxms" in namespace "gc-1444"
  I0902 08:52:01.777406 18 delete.go:95] Deleting pod "simpletest.rc-sr72l" in namespace "gc-1444"
  I0902 08:52:01.966060 18 delete.go:95] Deleting pod "simpletest.rc-sxldj" in namespace "gc-1444"
  I0902 08:52:02.200554 18 delete.go:95] Deleting pod "simpletest.rc-sz8mg" in namespace "gc-1444"
  E0902 08:52:02.238191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:02.373008 18 delete.go:95] Deleting pod "simpletest.rc-t22sd" in namespace "gc-1444"
  I0902 08:52:02.514191 18 delete.go:95] Deleting pod "simpletest.rc-th7lj" in namespace "gc-1444"
  I0902 08:52:02.648667 18 delete.go:95] Deleting pod "simpletest.rc-v755t" in namespace "gc-1444"
  I0902 08:52:02.753506 18 delete.go:95] Deleting pod "simpletest.rc-v7cdc" in namespace "gc-1444"
  I0902 08:52:02.825430 18 delete.go:95] Deleting pod "simpletest.rc-vdfwv" in namespace "gc-1444"
  I0902 08:52:02.922012 18 delete.go:95] Deleting pod "simpletest.rc-vxdnm" in namespace "gc-1444"
  I0902 08:52:03.009242 18 delete.go:95] Deleting pod "simpletest.rc-w7hrb" in namespace "gc-1444"
  E0902 08:52:03.240969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:03.325735 18 delete.go:95] Deleting pod "simpletest.rc-w7jq6" in namespace "gc-1444"
  I0902 08:52:03.490902 18 delete.go:95] Deleting pod "simpletest.rc-whtbg" in namespace "gc-1444"
  I0902 08:52:03.857527 18 delete.go:95] Deleting pod "simpletest.rc-wllgw" in namespace "gc-1444"
  I0902 08:52:04.009948 18 delete.go:95] Deleting pod "simpletest.rc-wp4t5" in namespace "gc-1444"
  I0902 08:52:04.038935 18 delete.go:95] Deleting pod "simpletest.rc-wrwdc" in namespace "gc-1444"
  E0902 08:52:04.240921      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:04.264726 18 delete.go:95] Deleting pod "simpletest.rc-z4j7b" in namespace "gc-1444"
  I0902 08:52:04.364371 18 delete.go:95] Deleting pod "simpletest.rc-z9fl7" in namespace "gc-1444"
  I0902 08:52:04.569320 18 delete.go:95] Deleting pod "simpletest.rc-zsvms" in namespace "gc-1444"
  I0902 08:52:04.718053 18 delete.go:95] Deleting pod "simpletest.rc-zv55h" in namespace "gc-1444"
  I0902 08:52:04.854049 18 delete.go:95] Deleting pod "simpletest.rc-zx79h" in namespace "gc-1444"
  I0902 08:52:04.917693 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1444" for this suite. @ 09/02/25 08:52:04.943
• [63.198 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/02/25 08:52:05.079
  I0902 08:52:05.079261 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/25 08:52:05.139
  E0902 08:52:05.241388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:05.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:05.302
  STEP: Creating two CSIDrivers @ 09/02/25 08:52:05.31
  STEP: Getting "inline-driver-a39f4826-c289-4782-bc41-8281f003f726" & "inline-driver-508e09a4-f6c3-4d50-9719-a91ab414d2fc" @ 09/02/25 08:52:05.372
  STEP: Patching the CSIDriver "inline-driver-508e09a4-f6c3-4d50-9719-a91ab414d2fc" @ 09/02/25 08:52:05.432
  STEP: Updating the CSIDriver "inline-driver-508e09a4-f6c3-4d50-9719-a91ab414d2fc" @ 09/02/25 08:52:05.507
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-421" @ 09/02/25 08:52:05.576
  STEP: Deleting CSIDriver "inline-driver-a39f4826-c289-4782-bc41-8281f003f726" @ 09/02/25 08:52:05.584
  STEP: Confirm deletion of CSIDriver "inline-driver-a39f4826-c289-4782-bc41-8281f003f726" @ 09/02/25 08:52:05.786
  STEP: Deleting CSIDriver "inline-driver-508e09a4-f6c3-4d50-9719-a91ab414d2fc" via DeleteCollection @ 09/02/25 08:52:05.797
  STEP: Confirm deletion of CSIDriver "inline-driver-508e09a4-f6c3-4d50-9719-a91ab414d2fc" @ 09/02/25 08:52:05.816
  I0902 08:52:05.825233 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-421" for this suite. @ 09/02/25 08:52:05.837
• [0.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/02/25 08:52:05.856
  I0902 08:52:05.856829 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:52:05.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:05.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:05.943
  STEP: getting a starting resourceVersion @ 09/02/25 08:52:05.952
  STEP: starting a background goroutine to produce watch events @ 09/02/25 08:52:05.959
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/02/25 08:52:05.959
  E0902 08:52:06.241592      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:07.245250      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:08.247874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:09.247912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:10.254130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:10.575962 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2512" for this suite. @ 09/02/25 08:52:10.612
• [4.823 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/02/25 08:52:10.68
  I0902 08:52:10.681047 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 08:52:10.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:10.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:10.772
  STEP: Performing setup for networking test in namespace pod-network-test-7775 @ 09/02/25 08:52:10.778
  STEP: creating a selector @ 09/02/25 08:52:10.778
  STEP: Creating the service pods in kubernetes @ 09/02/25 08:52:10.778
  I0902 08:52:10.778723 18 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 08:52:11.330185      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:12.371662      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:13.365706      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:14.369485      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:15.507934      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:16.663877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:17.665189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:18.664955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:19.716602      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:20.716402      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:21.720564      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:22.728810      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:23.740779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:24.729041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:25.729939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:26.730234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:27.772457      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:28.773313      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:29.773544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:30.774463      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:31.774664      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:32.775044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:33.775968      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:34.777528      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:35.777231      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:36.777754      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:37.777943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:38.778692      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:39.779164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:40.778952      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:41.781944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/25 08:52:41.864
  E0902 08:52:42.781387      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:43.781986      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:43.935120 18 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0902 08:52:43.935199 18 utils.go:495] Going to poll 10.233.65.165 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0902 08:52:43.941615 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.165 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7775 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:52:43.941717 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:52:43.941944 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7775/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.165+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0902 08:52:44.782251      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:45.095088 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:52:45.095180 18 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0902 08:52:45.095220 18 utils.go:495] Going to poll 10.233.64.240 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0902 08:52:45.101991 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.240 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7775 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:52:45.102062 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:52:45.102163 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7775/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.240+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0902 08:52:45.797571      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:46.213058 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:52:46.213142 18 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0902 08:52:46.213747 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7775" for this suite. @ 09/02/25 08:52:46.222
• [35.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/02/25 08:52:46.238
  I0902 08:52:46.238824 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:52:46.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:46.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:46.299
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/25 08:52:46.305
  E0902 08:52:46.797801      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:47.797807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:48.797971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:49.798871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:52:50.355
  I0902 08:52:50.360614 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-455d42ae-655e-4ae3-915e-05ac61e726aa container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:52:50.372
  I0902 08:52:50.401845 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4419" for this suite. @ 09/02/25 08:52:50.408
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/02/25 08:52:50.423
  I0902 08:52:50.423154 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:52:50.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:50.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:50.459
  I0902 08:52:50.520744 18 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c0ec9c4b-ee38-4636-9599-be1fefb7da9f", Controller:(*bool)(0xc003f8b97e), BlockOwnerDeletion:(*bool)(0xc003f8b97f)}}
  I0902 08:52:50.533913 18 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"80a6b432-7678-499e-814d-5501d352b48e", Controller:(*bool)(0xc003f8bb46), BlockOwnerDeletion:(*bool)(0xc003f8bb47)}}
  I0902 08:52:50.555790 18 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"01d4ed6e-ed4b-404d-b39e-cdc042da268c", Controller:(*bool)(0xc00409bafa), BlockOwnerDeletion:(*bool)(0xc00409bafb)}}
  E0902 08:52:50.799605      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:51.800197      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:52.800949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:53.801856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:54.802125      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:52:55.576516 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4644" for this suite. @ 09/02/25 08:52:55.588
• [5.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/02/25 08:52:55.643
  I0902 08:52:55.643912 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:52:55.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:55.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:55.688
  I0902 08:52:55.733472 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8641" for this suite. @ 09/02/25 08:52:55.749
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/02/25 08:52:55.773
  I0902 08:52:55.773989 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename limitrange @ 09/02/25 08:52:55.776
  E0902 08:52:55.803151      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:55.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:55.807
  STEP: Creating LimitRange "e2e-limitrange-kgr8r" in namespace "limitrange-466" @ 09/02/25 08:52:55.814
  STEP: Creating another limitRange in another namespace @ 09/02/25 08:52:55.825
  I0902 08:52:55.845929 18 limit_range.go:299] Namespace "e2e-limitrange-kgr8r-824" created
  I0902 08:52:55.846013 18 limit_range.go:300] Creating LimitRange "e2e-limitrange-kgr8r" in namespace "e2e-limitrange-kgr8r-824"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-kgr8r" @ 09/02/25 08:52:55.859
  I0902 08:52:55.890299 18 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-kgr8r" in "limitrange-466" namespace @ 09/02/25 08:52:55.89
  I0902 08:52:55.909241 18 limit_range.go:335] LimitRange "e2e-limitrange-kgr8r" has been patched
  STEP: Delete LimitRange "e2e-limitrange-kgr8r" by Collection with labelSelector: "e2e-limitrange-kgr8r=patched" @ 09/02/25 08:52:55.909
  STEP: Confirm that the limitRange "e2e-limitrange-kgr8r" has been deleted @ 09/02/25 08:52:55.927
  I0902 08:52:55.927243 18 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0902 08:52:55.933277 18 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-kgr8r=patched"
  I0902 08:52:55.933455 18 limit_range.go:344] LimitRange "e2e-limitrange-kgr8r" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-kgr8r" @ 09/02/25 08:52:55.933
  I0902 08:52:55.939002 18 limit_range.go:350] Found 1 limitRange
  I0902 08:52:55.939432 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-466" for this suite. @ 09/02/25 08:52:55.948
  STEP: Destroying namespace "e2e-limitrange-kgr8r-824" for this suite. @ 09/02/25 08:52:55.968
• [0.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/02/25 08:52:56.012
  I0902 08:52:56.012953 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:52:56.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:52:56.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:52:56.054
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/25 08:52:56.062
  E0902 08:52:56.806310      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:57.806448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:58.806997      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:52:59.807066      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:53:00.121
  I0902 08:53:00.131321 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-5cb95b8e-9d9d-4d7a-bd08-48ead2f6a688 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:53:00.148
  I0902 08:53:00.183769 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-793" for this suite. @ 09/02/25 08:53:00.193
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/02/25 08:53:00.207
  I0902 08:53:00.207422 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 08:53:00.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:00.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:00.245
  I0902 08:53:00.255891 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:53:00.809321      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:01.811122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:02.811322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:03.812087      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:53:03.823190 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-154" for this suite. @ 09/02/25 08:53:03.855
• [3.726 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/02/25 08:53:03.937
  I0902 08:53:03.937861 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption @ 09/02/25 08:53:03.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:04.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:04.008
  STEP: creating the pdb @ 09/02/25 08:53:04.013
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:53:04.067
  E0902 08:53:04.812335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:05.814382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/02/25 08:53:06.078
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:53:06.117
  E0902 08:53:06.813983      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:07.814778      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/02/25 08:53:08.129
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:53:08.199
  E0902 08:53:08.817908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:09.845942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/02/25 08:53:10.221
  I0902 08:53:10.228364 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6885" for this suite. @ 09/02/25 08:53:10.238
• [6.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/02/25 08:53:10.256
  I0902 08:53:10.256539 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename containers @ 09/02/25 08:53:10.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:10.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:10.32
  STEP: Creating a pod to test override arguments @ 09/02/25 08:53:10.338
  E0902 08:53:10.844203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:11.845015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:12.850959      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:13.851388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:53:14.44
  I0902 08:53:14.448992 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod client-containers-3efae67b-c437-476d-9a8f-261cf3d718b7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:53:14.462
  I0902 08:53:14.563440 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7342" for this suite. @ 09/02/25 08:53:14.574
• [4.333 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/02/25 08:53:14.589
  I0902 08:53:14.589923 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/25 08:53:14.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:14.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:14.666
  STEP: Setting up server cert @ 09/02/25 08:53:14.674
  E0902 08:53:14.851718      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:15.852102      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 08:53:16.353
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 08:53:16.369
  STEP: Wait for the deployment to be ready @ 09/02/25 08:53:16.415
  I0902 08:53:16.490434 18 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0902 08:53:16.852281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:17.853131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:53:18.561824 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 53, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 53, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 53, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 53, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:53:18.853105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:19.855180      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:53:20.672
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:53:20.786
  E0902 08:53:20.853978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:53:21.787194 18 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0902 08:53:21.828858 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 08:53:21.857240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:22.856256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:23.857013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/02/25 08:53:24.746
  STEP: Create a v2 custom resource @ 09/02/25 08:53:24.808
  E0902 08:53:24.856800      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: List CRs in v1 @ 09/02/25 08:53:25.097
  STEP: List CRs in v2 @ 09/02/25 08:53:25.109
  E0902 08:53:25.858988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:53:25.890900 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6003" for this suite. @ 09/02/25 08:53:25.906
• [11.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/02/25 08:53:26
  I0902 08:53:26.000978 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:53:26.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:26.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:26.071
  E0902 08:53:26.859018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:27.859339      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:53:28.238120 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7073" for this suite. @ 09/02/25 08:53:28.247
• [2.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/02/25 08:53:28.266
  I0902 08:53:28.266919 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:53:28.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:28.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:28.308
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:53:28.319
  E0902 08:53:28.859564      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:29.860047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:30.861032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:31.860967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:53:32.399
  I0902 08:53:32.405406 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downward-api-802be035-4e2a-40a0-8c4e-37211f7e1889 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:53:32.431
  I0902 08:53:32.461065 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8161" for this suite. @ 09/02/25 08:53:32.48
• [4.261 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/02/25 08:53:32.528
  I0902 08:53:32.528191 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/02/25 08:53:32.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:32.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:32.598
  I0902 08:53:32.604192 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:53:32.861448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:33.861540      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:34.862318      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:35.862259      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:36.862939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:37.864078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:38.869221      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:39.864337      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:40.865072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:41.866316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:42.866464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:43.866891      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:44.867771      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:45.868341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:46.868523      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:47.869617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:48.869726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:49.870058      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:50.871560      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:51.872009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:52.872707      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:53.877203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:54.879577      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:55.879988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:56.880293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:57.880327      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:58.880686      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:53:59.880937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:00.882740      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:01.881884      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:02.884380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:03.884883      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:04.885975      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:05.887036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:06.888019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:07.888964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:08.889314      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:09.891303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:10.891439      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:11.891691      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:12.892679      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:13.892860      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:14.893752      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:15.894400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:16.894617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:17.895516      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:18.896459      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:19.896866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:20.897996      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:21.899558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:22.899713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:23.900969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:24.901761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:25.902515      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:26.903078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:27.903236      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:28.903898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:29.907587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:30.908599      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:31.909504      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:54:32.609539 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 08:54:32.631085 18 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/02/25 08:54:32.632
  I0902 08:54:32.878385 18 taints.go:463] Pod1 is running on ahkoog9eunoh-2. Tainting Node
  E0902 08:54:32.909977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:33.910780      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:34.910609      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:54:34.947954 18 taints.go:471] Pod2 is running on ahkoog9eunoh-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/25 08:54:34.948
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:54:35.002
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/02/25 08:54:35.015
  E0902 08:54:35.911822      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:36.912293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:37.913281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:38.913876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:39.914501      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:40.914785      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:54:41.434521 18 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0902 08:54:41.915350      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:42.916120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:43.921573      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:44.922120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:45.922768      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:46.924613      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:47.924912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:48.925499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:49.927189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:50.927313      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:51.928396      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:52.928723      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:53.928872      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:54.929142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:55.929625      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:56.929988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:57.931907      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:58.932313      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:54:59.932941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:00.933690      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:01.559026 18 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:55:01.596
  I0902 08:55:01.607724 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5899" for this suite. @ 09/02/25 08:55:01.657
• [89.150 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/02/25 08:55:01.679
  I0902 08:55:01.679153 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:55:01.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:01.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:01.737
  STEP: creating a Pod with a static label @ 09/02/25 08:55:01.77
  STEP: watching for Pod to be ready @ 09/02/25 08:55:01.795
  I0902 08:55:01.804692 18 pods.go:947] observed Pod pod-test in namespace pods-1088 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0902 08:55:01.804807 18 pods.go:947] observed Pod pod-test in namespace pods-1088 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  }]
  I0902 08:55:01.883919 18 pods.go:947] observed Pod pod-test in namespace pods-1088 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  }]
  E0902 08:55:01.933904      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:02.936832      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:03.475781 18 pods.go:950] Found Pod pod-test in namespace pods-1088 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:03 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:03 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:03 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:55:01 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/02/25 08:55:03.495
  STEP: getting the Pod and ensuring that it's patched @ 09/02/25 08:55:03.525
  STEP: replacing the Pod's status Ready condition to False @ 09/02/25 08:55:03.556
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/02/25 08:55:03.617
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/02/25 08:55:03.617
  STEP: watching for the Pod to be deleted @ 09/02/25 08:55:03.653
  I0902 08:55:03.660544 18 pods.go:1060] observed event type MODIFIED
  E0902 08:55:03.935868      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:04.936333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:05.646171 18 pods.go:1060] observed event type MODIFIED
  I0902 08:55:05.788927 18 pods.go:1060] observed event type MODIFIED
  E0902 08:55:05.937104      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:06.602482 18 pods.go:1060] observed event type MODIFIED
  I0902 08:55:06.627470 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1088" for this suite. @ 09/02/25 08:55:06.644
• [4.981 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 09/02/25 08:55:06.662
  I0902 08:55:06.662713 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:55:06.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:06.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:06.759
  STEP: Creating resourceQuota "e2e-rq-status-7gfsf" @ 09/02/25 08:55:06.804
  I0902 08:55:06.834952 18 resource_quota.go:1106] Resource quota "e2e-rq-status-7gfsf" reports spec: hard cpu limit of 500m
  I0902 08:55:06.835037 18 resource_quota.go:1108] Resource quota "e2e-rq-status-7gfsf" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7gfsf" /status @ 09/02/25 08:55:06.835
  STEP: Confirm /status for "e2e-rq-status-7gfsf" resourceQuota via watch @ 09/02/25 08:55:06.871
  I0902 08:55:06.875911 18 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-7gfsf" in namespace "resourcequota-801" with hard status: v1.ResourceList(nil)
  I0902 08:55:06.876352 18 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-7gfsf" in namespace "resourcequota-801" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0902 08:55:06.876413 18 resource_quota.go:1145] ResourceQuota "e2e-rq-status-7gfsf" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/02/25 08:55:06.883
  I0902 08:55:06.914884 18 resource_quota.go:1156] Resource quota "e2e-rq-status-7gfsf" reports spec: hard cpu limit of 1
  I0902 08:55:06.914953 18 resource_quota.go:1157] Resource quota "e2e-rq-status-7gfsf" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7gfsf" /status @ 09/02/25 08:55:06.914
  E0902 08:55:06.936806      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm /status for "e2e-rq-status-7gfsf" resourceQuota via watch @ 09/02/25 08:55:06.938
  I0902 08:55:06.944125 18 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-7gfsf" in namespace "resourcequota-801" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0902 08:55:06.944218 18 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-7gfsf" in namespace "resourcequota-801" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0902 08:55:06.944250 18 resource_quota.go:1189] ResourceQuota "e2e-rq-status-7gfsf" /status was patched
  STEP: Get "e2e-rq-status-7gfsf" /status @ 09/02/25 08:55:06.944
  I0902 08:55:06.956170 18 resource_quota.go:1200] Resourcequota "e2e-rq-status-7gfsf" reports status: hard cpu of 1
  I0902 08:55:06.957566 18 resource_quota.go:1202] Resourcequota "e2e-rq-status-7gfsf" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7gfsf" /status before checking Spec is unchanged @ 09/02/25 08:55:06.97
  I0902 08:55:06.984278 18 resource_quota.go:1222] Resourcequota "e2e-rq-status-7gfsf" reports status: hard cpu of 2
  I0902 08:55:06.984371 18 resource_quota.go:1224] Resourcequota "e2e-rq-status-7gfsf" reports status: hard memory of 2Gi
  I0902 08:55:06.987785 18 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-7gfsf" in namespace "resourcequota-801" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0902 08:55:06.998260 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088ed50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088ed80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088edb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:07.937978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:08.937424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:09.937775      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:10.938880      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:11.940492      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:11.996400 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088efa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088eff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:12.941289      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:13.941612      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:14.942540      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:15.943517      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:16.946186      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:16.996443 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d1a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d1e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:17.946610      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:18.946962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:19.948121      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:20.948774      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:21.949587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:21.993698 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:22.950277      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:23.951884      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:24.952604      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:25.952362      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:26.952497      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:27.020693 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f4a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:27.952830      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:28.953264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:29.954168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:30.954722      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:31.956909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:32.003642 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d4e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:32.955985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:33.956178      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:34.956220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:35.957796      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:36.957833      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:36.998690 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d6f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d728), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d758), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:37.957988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:38.958384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:39.959058      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:40.959533      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:41.960107      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:41.999965 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d8a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d8d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d908), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:42.960327      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:43.961784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:44.961284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:45.961864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:46.983241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:47.003274 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8daa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8dae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8db90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:47.984173      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:48.985083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:49.985294      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:50.985454      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:51.985531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:52.012533 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:52.986326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:53.986471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:54.986971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:55.987955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:56.987843      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:55:56.994421 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c1c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:55:57.988050      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:58.988287      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:55:59.988737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:00.989526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:01.997500      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:02.035866 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c3d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:02.997914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:03.998445      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:04.998401      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:05.998944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:06.996833 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c5a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:06.999765      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:07.999874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:09.000064      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:10.000358      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:11.004071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:11.999324 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:12.005384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:13.005424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:14.007792      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:15.008854      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:16.010306      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:16.995569 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088e840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:17.010318      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:18.012324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:19.011087      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:20.012010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:21.012341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:22.013167      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:22.025471 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c8d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8c948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:23.013942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:24.014073      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:25.015032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:26.022895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:26.995419 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088eae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088eb28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088eb58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:27.023443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:28.023612      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:29.024223      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:30.024469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:31.024374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:32.025900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:32.026335 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088ede0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088ee10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088ee88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:33.026958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:34.027471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:35.028378      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:36.029944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:36.995986 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088eff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:37.031203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:38.031421      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:39.031829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:40.031883      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:41.046318      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:42.013222 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8ccd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8cd20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8cd50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:42.044781      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:43.045484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:44.046019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:45.046119      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:46.052877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:47.018220 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f2d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:47.053497      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:48.053901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:49.054280      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:50.055178      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:51.055496      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:52.060270 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8d0c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:52.060931      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:53.060913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:54.061275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:55.062608      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:56.065708      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:56:57.027408 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:56:57.064700      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:58.064761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:56:59.064920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:00.065381      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:01.066261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:57:01.998548 18 resource_quota.go:1267] ResourceQuota "e2e-rq-status-7gfsf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7gfsf", GenerateName:"", Namespace:"resourcequota-801", SelfLink:"", UID:"fa38dafd-957a-44b2-b2bd-0f0ab7536f46", ResourceVersion:"36130", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7gfsf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f7a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f7e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 55, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00088f818), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:57:02.067090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:03.068883      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:04.069362      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:05.069509      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:06.070709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:57:07.003809 18 resource_quota.go:1264] ResourceQuota "e2e-rq-status-7gfsf" Spec was unchanged and /status reset
  I0902 08:57:07.004442 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-801" for this suite. @ 09/02/25 08:57:07.015
• [120.369 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/02/25 08:57:07.035
  I0902 08:57:07.035304 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:57:07.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:07.07
  E0902 08:57:07.071192      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:07.076
  STEP: creating a new configmap @ 09/02/25 08:57:07.082
  STEP: modifying the configmap once @ 09/02/25 08:57:07.094
  STEP: modifying the configmap a second time @ 09/02/25 08:57:07.148
  STEP: deleting the configmap @ 09/02/25 08:57:07.165
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/02/25 08:57:07.193
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/02/25 08:57:07.198
  I0902 08:57:07.199222 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3865  25d53607-7b1a-4ce1-a948-d41a0c1ff485 36413 0 2025-09-02 08:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-02 08:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:57:07.199863 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3865  25d53607-7b1a-4ce1-a948-d41a0c1ff485 36414 0 2025-09-02 08:57:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-02 08:57:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:57:07.200536 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3865" for this suite. @ 09/02/25 08:57:07.214
• [0.208 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:57:07.245
  I0902 08:57:07.245620 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:57:07.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:07.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:07.31
  STEP: Setting up data @ 09/02/25 08:57:07.316
  STEP: Creating pod pod-subpath-test-secret-g295 @ 09/02/25 08:57:07.362
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:57:07.362
  E0902 08:57:08.070968      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:09.071070      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:10.072223      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:11.072389      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:12.073556      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:13.073849      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:14.074228      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:15.074299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:16.075423      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:17.076614      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:18.076906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:19.077060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:20.078077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:21.078710      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:22.078877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:23.079095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:24.079234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:25.081675      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:26.080378      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:27.080618      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:28.083060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:29.082321      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:30.082095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:31.082747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:57:31.771
  I0902 08:57:31.778817 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-subpath-test-secret-g295 container test-container-subpath-secret-g295: <nil>
  STEP: delete the pod @ 09/02/25 08:57:31.816
  STEP: Deleting pod pod-subpath-test-secret-g295 @ 09/02/25 08:57:31.846
  I0902 08:57:31.847301 18 delete.go:62] Deleting pod "pod-subpath-test-secret-g295" in namespace "subpath-1511"
  I0902 08:57:31.858897 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1511" for this suite. @ 09/02/25 08:57:31.901
• [24.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/02/25 08:57:31.919
  I0902 08:57:31.919515 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:57:31.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:31.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:31.995
  I0902 08:57:32.099292 18 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0902 08:57:32.100939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:33.091456      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:34.092238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:35.092477      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:36.092587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:37.093517      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:57:37.114007 18 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:57:37.114
  STEP: Scaling up "test-rs" replicaset @ 09/02/25 08:57:37.116
  I0902 08:57:37.142990 18 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/02/25 08:57:37.143
  I0902 08:57:37.180683 18 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2936 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:57:37.296791 18 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2936 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:57:37.384156 18 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2936 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:57:37.434891 18 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2936 with ReadyReplicas 1, AvailableReplicas 1
  E0902 08:57:38.108545      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:57:38.740858 18 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2936 with ReadyReplicas 2, AvailableReplicas 2
  E0902 08:57:39.109422      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:57:39.360065 18 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-2936 with ReadyReplicas 3 found true
  I0902 08:57:39.360313 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2936" for this suite. @ 09/02/25 08:57:39.383
• [7.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/02/25 08:57:39.397
  I0902 08:57:39.397822 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:57:39.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:39.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:39.449
  STEP: create the rc @ 09/02/25 08:57:39.455
  I0902 08:57:39.473797      18 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0902 08:57:40.113293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:41.113444      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:42.113941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:43.114283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:44.115296      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/02/25 08:57:44.555
  STEP: wait for all pods to be garbage collected @ 09/02/25 08:57:44.729
  E0902 08:57:45.118283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:46.117972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:47.118125      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:48.118408      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:49.119055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 08:57:49.763
  I0902 08:57:49.987427 18 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:57:49.988017 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8749" for this suite. @ 09/02/25 08:57:49.998
• [10.620 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/02/25 08:57:50.019
  I0902 08:57:50.019215 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:57:50.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:50.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:50.098
  STEP: Creating a pod to test substitution in container's args @ 09/02/25 08:57:50.104
  E0902 08:57:50.120040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:51.121517      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:52.122901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:53.123242      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:54.123398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:57:54.165
  I0902 08:57:54.176915 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod var-expansion-771c0c2c-b1cc-451b-9a70-c361579fe814 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:57:54.202
  I0902 08:57:54.258346 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8823" for this suite. @ 09/02/25 08:57:54.268
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/02/25 08:57:54.29
  I0902 08:57:54.291281 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/02/25 08:57:54.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:54.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:54.337
  STEP: getting /apis @ 09/02/25 08:57:54.343
  STEP: getting /apis/storage.k8s.io @ 09/02/25 08:57:54.356
  STEP: getting /apis/storage.k8s.io/v1 @ 09/02/25 08:57:54.359
  STEP: creating @ 09/02/25 08:57:54.361
  STEP: watching @ 09/02/25 08:57:54.394
  I0902 08:57:54.394328 18 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/02/25 08:57:54.408
  STEP: listing in namespace @ 09/02/25 08:57:54.413
  STEP: listing across namespaces @ 09/02/25 08:57:54.421
  STEP: patching @ 09/02/25 08:57:54.428
  STEP: updating @ 09/02/25 08:57:54.441
  I0902 08:57:54.454463 18 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0902 08:57:54.454702 18 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/02/25 08:57:54.455
  STEP: deleting a collection @ 09/02/25 08:57:54.484
  I0902 08:57:54.521494 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4524" for this suite. @ 09/02/25 08:57:54.532
• [0.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 09/02/25 08:57:54.552
  I0902 08:57:54.552696 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:57:54.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:54.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:54.589
  STEP: validating api versions @ 09/02/25 08:57:54.595
  I0902 08:57:54.595993 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-5282 api-versions'
  I0902 08:57:54.849060 18 builder.go:146] stderr: ""
  I0902 08:57:54.850076 18 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0902 08:57:54.850716 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5282" for this suite. @ 09/02/25 08:57:54.864
• [0.330 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/02/25 08:57:54.884
  I0902 08:57:54.884541 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 08:57:54.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:54.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:54.928
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 08:57:54.975
  E0902 08:57:55.132251      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:56.132452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 08:57:57.08
  E0902 08:57:57.133089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:57:58.133135      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/02/25 08:57:59.129
  E0902 08:57:59.134797      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:00.134470      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:01.134595      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:02.135368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:03.136138      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/02/25 08:58:03.204
  I0902 08:58:03.218259 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-919" for this suite. @ 09/02/25 08:58:03.227
• [8.358 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 09/02/25 08:58:03.243
  I0902 08:58:03.243257 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:58:03.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:03.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:03.303
  STEP: Creating service test in namespace statefulset-9104 @ 09/02/25 08:58:03.313
  STEP: Looking for a node to schedule stateful set and pod @ 09/02/25 08:58:03.336
  STEP: Creating pod with conflicting port in namespace statefulset-9104 @ 09/02/25 08:58:03.364
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9104 @ 09/02/25 08:58:03.422
  E0902 08:58:04.144602      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:05.145139      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:06.146324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:07.146928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-9104 @ 09/02/25 08:58:07.526
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9104 @ 09/02/25 08:58:07.561
  I0902 08:58:07.599179 18 statefulset.go:884] Observed stateful pod in namespace: statefulset-9104, name: ss-0, uid: 46df63fc-980d-4f30-a247-7f54c8530cef, status phase: Pending. Waiting for statefulset controller to delete.
  I0902 08:58:07.727019 18 statefulset.go:884] Observed stateful pod in namespace: statefulset-9104, name: ss-0, uid: 46df63fc-980d-4f30-a247-7f54c8530cef, status phase: Failed. Waiting for statefulset controller to delete.
  I0902 08:58:07.769250 18 statefulset.go:884] Observed stateful pod in namespace: statefulset-9104, name: ss-0, uid: 46df63fc-980d-4f30-a247-7f54c8530cef, status phase: Failed. Waiting for statefulset controller to delete.
  I0902 08:58:07.769337 18 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-9104
  STEP: Removing pod with conflicting port in namespace statefulset-9104 @ 09/02/25 08:58:07.79
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9104 and will be in running state @ 09/02/25 08:58:07.9
  E0902 08:58:08.147386      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:09.262136      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:10.243732      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:11.241812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:12.123936 18 statefulset.go:138] Deleting all statefulset in ns statefulset-9104
  I0902 08:58:12.184714 18 rest.go:153] Scaling statefulset ss to 0
  E0902 08:58:12.259831      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:13.260376      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:14.261147      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:15.262982      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:16.262971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:17.263694      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:18.266943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:19.267380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:20.268044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:21.269679      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:22.270129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:22.305947 18 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0902 08:58:22.339354 18 rest.go:91] Deleting statefulset ss
  I0902 08:58:22.414291 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9104" for this suite. @ 09/02/25 08:58:22.428
• [19.203 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/02/25 08:58:22.447
  I0902 08:58:22.447388 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:58:22.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:22.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:22.549
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:58:22.564
  E0902 08:58:23.270385      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:24.270724      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:25.271013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:26.271002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:26.727
  I0902 08:58:26.735702 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downward-api-8bed510a-c082-47de-92aa-d17bcb63a3fa container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:58:26.758
  I0902 08:58:26.807457 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4533" for this suite. @ 09/02/25 08:58:26.82
• [4.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/02/25 08:58:26.836
  I0902 08:58:26.836297 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:58:26.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:26.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:26.911
  STEP: Creating configMap configmap-6985/configmap-test-bb512da0-a3b0-4b41-a3b8-1642cfcdd69e @ 09/02/25 08:58:26.915
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:58:26.929
  E0902 08:58:27.277225      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:28.277333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:29.278115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:30.278248      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:31.098
  I0902 08:58:31.117360 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-f0906264-d90e-4325-ab59-092a8d726ad2 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 08:58:31.132
  I0902 08:58:31.178724 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6985" for this suite. @ 09/02/25 08:58:31.204
• [4.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/02/25 08:58:31.231
  I0902 08:58:31.231808 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:58:31.236
  E0902 08:58:31.292451      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:31.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:31.306
  STEP: Creating configMap configmap-9279/configmap-test-164413d4-2be8-4492-8743-20d534811c69 @ 09/02/25 08:58:31.323
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:58:31.345
  E0902 08:58:32.283938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:33.286818      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:34.285202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:35.286033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:35.426
  I0902 08:58:35.432989 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-e3bbf4ba-0514-4540-b653-81b3b0b7dec2 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 08:58:35.45
  I0902 08:58:35.506612 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9279" for this suite. @ 09/02/25 08:58:35.517
• [4.302 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/02/25 08:58:35.533
  I0902 08:58:35.534313 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:58:35.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:35.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:35.579
  STEP: Creating projection with secret that has name projected-secret-test-map-f2afdb69-71f1-48c9-8a03-b6fbf7247013 @ 09/02/25 08:58:35.586
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:58:35.596
  E0902 08:58:36.286345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:37.286981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:38.286959      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:39.287562      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:39.766
  I0902 08:58:39.777263 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-secrets-e6531a82-eef9-4097-9d87-f8ac8ad82490 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:58:39.792
  I0902 08:58:39.844589 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2433" for this suite. @ 09/02/25 08:58:39.858
• [4.342 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 09/02/25 08:58:39.876
  I0902 08:58:39.876086 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:58:39.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:39.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:39.928
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/02/25 08:58:39.937
  I0902 08:58:40.001078 18 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6432  78d9edac-f938-44bb-9b2a-5bd195eca381 37075 1 2025-09-02 08:58:39 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-02 08:58:39 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5nz6q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5nz6q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0902 08:58:40.287660      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:41.287825      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/02/25 08:58:42.023
  I0902 08:58:42.024442 18 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6432 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:58:42.024610 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:58:42.024929 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-6432/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0902 08:58:42.259563 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 09/02/25 08:58:42.259
  I0902 08:58:42.259865 18 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6432 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:58:42.259885 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 08:58:42.259959 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-6432/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  E0902 08:58:42.288896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:42.405924 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 08:58:42.406112 18 dns.go:451] Deleting pod test-dns-nameservers...
  I0902 08:58:42.434542 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6432" for this suite. @ 09/02/25 08:58:42.447
• [2.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/02/25 08:58:42.503
  I0902 08:58:42.503942 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename init-container @ 09/02/25 08:58:42.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:42.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:42.543
  STEP: creating the pod @ 09/02/25 08:58:42.548
  I0902 08:58:42.548220 18 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0902 08:58:43.289582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:44.290532      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:45.291091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:46.072281 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8169" for this suite. @ 09/02/25 08:58:46.145
• [3.669 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 09/02/25 08:58:46.179
  I0902 08:58:46.179772 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:58:46.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:46.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:46.26
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1684.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-1684.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/02/25 08:58:46.266
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1684.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1684.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/02/25 08:58:46.266
  STEP: creating a pod to probe /etc/hosts @ 09/02/25 08:58:46.267
  STEP: submitting the pod to kubernetes @ 09/02/25 08:58:46.267
  E0902 08:58:46.293868      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:47.293925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:48.294582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:58:48.307
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:58:48.315
  I0902 08:58:48.369062 18 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-1684/dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a: the server could not find the requested resource (get pods dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a)
  I0902 08:58:48.372889 18 dns_common.go:506] Lookups using dns-1684/dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a failed for: [jessie_hosts@dns-querier-1]

  I0902 08:58:48.389380 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:58:48.403182 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:58:48.422545 18 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 08:58:49.295009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:50.297010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:51.297418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:52.297567      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:53.297798      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:53.361470 18 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-1684/dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a: the server could not find the requested resource (get pods dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a)
  I0902 08:58:53.361534 18 dns_common.go:506] Lookups using dns-1684/dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a failed for: [jessie_hosts@dns-querier-1]

  I0902 08:58:53.374909 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:58:53.390165 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:58:53.403924 18 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 08:58:54.297886      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:55.300932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:56.301003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:57.314856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:58:58.315036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:58:58.377848 18 dns_common.go:546] DNS probes using dns-1684/dns-test-00a84b4c-9398-4a13-8a65-9fc772494f1a succeeded

  STEP: deleting the pod @ 09/02/25 08:58:58.378
  I0902 08:58:58.410018 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1684" for this suite. @ 09/02/25 08:58:58.441
• [12.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/02/25 08:58:58.515
  I0902 08:58:58.515432 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:58:58.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:58.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:58.616
  I0902 08:58:58.686228 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:58:59.315935      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:00.316125      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:01.316238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:02.316333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:03.317602      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:04.318802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:05.318505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:06.319558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:07.319041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:08.321452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:09.321896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:10.322514      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:11.322937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:12.323075      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:13.323902      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:14.324352      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:15.325077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:16.324902      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:17.325929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:18.326078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:19.326298      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:20.326583      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:21.327086      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:22.326952      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:23.327466      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:24.327513      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:25.327592      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:26.328255      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:27.329078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:28.329289      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:29.329577      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:30.330283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:31.331026      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:32.331792      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:33.335955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:34.336274      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:35.336443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:36.336898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:37.336929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:38.337300      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:39.337463      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:40.337665      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:41.338089      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:42.339360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:43.340149      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:44.341021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:45.341680      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:46.342037      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:47.342220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:48.343407      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:49.343392      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:50.344211      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:51.345109      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:52.345726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:53.345852      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:54.346150      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:55.346326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:56.347892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:57.349041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 08:59:58.349245      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 08:59:58.696576 18 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/25 08:59:58.708
  I0902 08:59:58.708802 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/25 08:59:58.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:58.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:58.773
  I0902 08:59:58.898111 18 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0902 08:59:58.915373 18 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/02/25 08:59:59.211
  STEP: Removing a custom resource @ 09/02/25 08:59:59.259
  I0902 08:59:59.278830 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4676" for this suite. @ 09/02/25 08:59:59.289
  I0902 08:59:59.305468 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:59:59.351052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-2466" for this suite. @ 09/02/25 08:59:59.39
• [60.890 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/02/25 08:59:59.405
  I0902 08:59:59.405847 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:59:59.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:59.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:59.477
  STEP: Setting up server cert @ 09/02/25 08:59:59.533
  E0902 09:00:00.351396      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:00:00.469
  STEP: Deploying the webhook pod @ 09/02/25 09:00:00.481
  STEP: Wait for the deployment to be ready @ 09/02/25 09:00:00.507
  I0902 09:00:00.638222 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:00:01.351983      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:02.352918      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:00:02.659
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:00:02.697
  E0902 09:00:03.353090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:03.700778 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/02/25 09:00:03.727
  STEP: create a pod that should be updated by the webhook @ 09/02/25 09:00:03.756
  I0902 09:00:04.131137 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9266" for this suite. @ 09/02/25 09:00:04.151
  STEP: Destroying namespace "webhook-markers-5432" for this suite. @ 09/02/25 09:00:04.163
• [4.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 09/02/25 09:00:04.192
  I0902 09:00:04.192141 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:00:04.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:04.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:04.245
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 09:00:04.25
  I0902 09:00:04.250782 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-9376 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0902 09:00:04.353646      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:04.590310 18 builder.go:146] stderr: ""
  I0902 09:00:04.590373 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/25 09:00:04.59
  I0902 09:00:04.623600 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-9376 delete pods e2e-test-httpd-pod'
  E0902 09:00:05.358803      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:06.358876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:07.359992      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:07.614425 18 builder.go:146] stderr: ""
  I0902 09:00:07.614488 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 09:00:07.615006 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9376" for this suite. @ 09/02/25 09:00:07.678
• [3.507 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 09/02/25 09:00:07.7
  I0902 09:00:07.700290 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:00:07.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:07.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:07.79
  STEP: starting the proxy server @ 09/02/25 09:00:07.8
  I0902 09:00:07.801209 18 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-274 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/02/25 09:00:07.967
  I0902 09:00:07.989777 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0902 09:00:07.996151 18 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:39565

  I0902 09:00:07.996248 18 kubectl.go:2232] kubectl proxy stderr: W0902 09:00:07.965764    1183 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-274" for this suite. @ 09/02/25 09:00:07.997
• [0.310 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 09/02/25 09:00:08.011
  I0902 09:00:08.011260 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 09:00:08.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:08.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:08.056
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9230 @ 09/02/25 09:00:08.064
  STEP: changing the ExternalName service to type=ClusterIP @ 09/02/25 09:00:08.101
  I0902 09:00:08.196398 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 09:00:08.373807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:09.386097      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:10.255003 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 0, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 0, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 0, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 0, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-5468b4d46c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:00:10.377988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:11.379127      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:12.205069 18 resource.go:361] Creating new exec pod
  E0902 09:00:12.379387      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:13.379682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:14.259315 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9230 exec execpodtl2jv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0902 09:00:14.402394      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:14.747908 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.43.213) 80 port [tcp/http] succeeded!\n"
  I0902 09:00:14.747978 18 builder.go:147] stdout: "externalname-service-5468b4d46c-2q9wn"
  I0902 09:00:14.748401 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9230 exec execpodtl2jv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.43.213 80'
  I0902 09:00:15.254419 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.43.213 80\nConnection to 10.233.43.213 80 port [tcp/http] succeeded!\n"
  I0902 09:00:15.254926 18 builder.go:147] stdout: ""
  E0902 09:00:15.408594      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:15.749128 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9230 exec execpodtl2jv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.43.213 80'
  I0902 09:00:16.009413 18 builder.go:146] stderr: "E0902 09:00:15.942539    1200 websocket.go:297] Unknown stream id 1, discarding message\n+ echo hostName\n+ nc -v -t -w 2 10.233.43.213 80\nConnection to 10.233.43.213 80 port [tcp/http] succeeded!\n"
  I0902 09:00:16.009573 18 builder.go:147] stdout: "externalname-service-5468b4d46c-85nxd"
  I0902 09:00:16.010073 18 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0902 09:00:16.098283 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9230" for this suite. @ 09/02/25 09:00:16.112
• [8.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/02/25 09:00:16.125
  I0902 09:00:16.125377 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption @ 09/02/25 09:00:16.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:16.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:16.19
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/02/25 09:00:16.196
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:00:16.215
  E0902 09:00:16.405245      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:17.405316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/02/25 09:00:18.26
  STEP: Waiting for all pods to be running @ 09/02/25 09:00:18.262
  I0902 09:00:18.276145 18 disruption.go:680] pods: 0 < 3
  E0902 09:00:18.408701      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:19.407989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:20.283381 18 disruption.go:691] running pods: 2 < 3
  E0902 09:00:20.408165      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:21.408716      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/02/25 09:00:22.279
  STEP: Updating the pdb to allow a pod to be evicted @ 09/02/25 09:00:22.302
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:00:22.345
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/25 09:00:22.35
  STEP: Waiting for all pods to be running @ 09/02/25 09:00:22.35
  STEP: Waiting for the pdb to observed all healthy pods @ 09/02/25 09:00:22.385
  E0902 09:00:22.412063      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/02/25 09:00:22.471
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:00:22.527
  E0902 09:00:23.411335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:24.411941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/02/25 09:00:24.533
  STEP: locating a running pod @ 09/02/25 09:00:24.54
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/02/25 09:00:24.555
  STEP: Waiting for the pdb to be deleted @ 09/02/25 09:00:24.566
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/25 09:00:24.573
  STEP: Waiting for all pods to be running @ 09/02/25 09:00:24.573
  I0902 09:00:24.738523 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6492" for this suite. @ 09/02/25 09:00:24.802
• [8.785 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/02/25 09:00:24.911
  I0902 09:00:24.911660 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename tables @ 09/02/25 09:00:24.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:24.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:24.973
  I0902 09:00:24.982719 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7404" for this suite. @ 09/02/25 09:00:25.052
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/02/25 09:00:25.095
  I0902 09:00:25.095834 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename prestop @ 09/02/25 09:00:25.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:25.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:25.252
  STEP: Creating server pod server in namespace prestop-8085 @ 09/02/25 09:00:25.284
  STEP: Waiting for pods to come up. @ 09/02/25 09:00:25.305
  E0902 09:00:25.427041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:26.428340      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8085 @ 09/02/25 09:00:27.367
  E0902 09:00:27.428144      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:28.429037      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/02/25 09:00:29.415
  E0902 09:00:29.431335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:30.432110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:31.432341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:32.432741      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:33.432944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:34.433660      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:34.439251 18 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/02/25 09:00:34.44
  I0902 09:00:34.468766 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8085" for this suite. @ 09/02/25 09:00:34.48
• [9.416 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 09/02/25 09:00:34.512
  I0902 09:00:34.512066 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:00:34.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:34.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:34.599
  STEP: Setting up server cert @ 09/02/25 09:00:34.673
  E0902 09:00:35.434035      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:00:35.831
  STEP: Deploying the webhook pod @ 09/02/25 09:00:35.846
  STEP: Wait for the deployment to be ready @ 09/02/25 09:00:35.973
  I0902 09:00:36.134967 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 0, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 0, 35, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 0, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 0, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  E0902 09:00:36.434405      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:37.434430      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:00:38.142
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:00:38.196
  E0902 09:00:38.436921      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:39.198149 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/02/25 09:00:39.209
  STEP: verifying the validating webhook match conditions @ 09/02/25 09:00:39.23
  STEP: updating the validating webhook match conditions @ 09/02/25 09:00:39.236
  STEP: verifying the validating webhook match conditions @ 09/02/25 09:00:39.264
  E0902 09:00:39.437071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:39.607059 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4350" for this suite. @ 09/02/25 09:00:39.685
  STEP: Destroying namespace "webhook-markers-5835" for this suite. @ 09/02/25 09:00:39.847
• [5.428 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/02/25 09:00:39.94
  I0902 09:00:39.940199 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename chunking @ 09/02/25 09:00:39.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:40.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:40.036
  STEP: creating a large number of resources @ 09/02/25 09:00:40.061
  E0902 09:00:40.437170      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:41.439159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:42.439123      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:43.439271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:44.439910      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:45.447081      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:46.114765      18 request.go:752] "Waited before sending request" delay="1.013220686s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.233.0.1:443/api/v1/namespaces/chunking-7142/podtemplates"
  E0902 09:00:46.447038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:47.448761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:48.448415      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:49.449014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:50.449762      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:51.450728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:52.451212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:53.451255      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:54.451868      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:55.453272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:56.453615      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:00:57.454751      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/02/25 09:00:57.713
  I0902 09:00:57.735654 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0902 09:00:57.790566 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:00:57.843528 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:00:57.891145 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:00:57.944002 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:00:58.019274 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:00:58.046039 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0902 09:00:58.092251 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:00:58.158482 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:00:58.189208 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:00:58.268687 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0902 09:00:58.286800 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:00:58.341036 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0902 09:00:58.385277 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0902 09:00:58.456041      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:58.467934 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:00:58.485386 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0902 09:00:58.589445 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:00:58.597168 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:00:58.641988 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:00:58.686033 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:00:58.737523 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0902 09:00:58.801381 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:00:58.836341 18 chunking.go:98] Retrieved 17/17 results with rv 38515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:00:58.884952 18 chunking.go:98] Retrieved 9/17 results with rv 38515 and continue 
  I0902 09:00:58.964100 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0902 09:00:58.987244 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:00:59.042066 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:00:59.091057 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:00:59.138684 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:00:59.196678 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:00:59.238759 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0902 09:00:59.298687 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:00:59.344329 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:00:59.389434 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:00:59.450774 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  E0902 09:00:59.456582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:00:59.492409 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:00:59.554157 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0902 09:00:59.584963 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0902 09:00:59.673996 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:00:59.684691 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0902 09:00:59.736563 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:00:59.789295 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:00:59.839350 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:00:59.901358 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:00:59.935805 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0902 09:01:00.025775 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:01:00.093267 18 chunking.go:98] Retrieved 17/17 results with rv 38517 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:01:00.125734 18 chunking.go:98] Retrieved 9/17 results with rv 38517 and continue 
  I0902 09:01:00.142541 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0902 09:01:00.188338 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:01:00.245033 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:01:00.284281 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:01:00.358887 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:01:00.406275 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:01:00.439787 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0902 09:01:00.457879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:00.525147 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:01:00.537428 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:01:00.601528 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:01:00.639719 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0902 09:01:00.717423 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:01:00.740288 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0902 09:01:00.826142 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0902 09:01:00.872996 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:01:00.936460 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0902 09:01:01.082910 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:01:01.193674 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:01:01.350960 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:01:01.366833 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:01:01.394140 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0902 09:01:01.408239 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:01:01.420619 18 chunking.go:98] Retrieved 17/17 results with rv 38522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:01:01.444428 18 chunking.go:98] Retrieved 9/17 results with rv 38522 and continue 
  STEP: retrieving those results all at once @ 09/02/25 09:01:01.444
  E0902 09:01:01.457927      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:01.486535 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7142" for this suite. @ 09/02/25 09:01:01.497
• [21.592 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:01:01.534
  I0902 09:01:01.534505 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 09:01:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:01.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:01.577
  I0902 09:01:01.582088 18 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0902 09:01:01.613005 18 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0902 09:01:02.458928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:03.458187      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:04.458518      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:05.458910      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:06.460082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:06.634166 18 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 09:01:06.634
  I0902 09:01:06.634793 18 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0902 09:01:06.653816 18 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0902 09:01:06.672285 18 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0902 09:01:07.460246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:08.460982      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:08.722136 18 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0902 09:01:08.737837 18 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0902 09:01:08.868417 18 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8724",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "656dfd43-072f-4e63-afb9-23074c16f98c",
      ResourceVersion: (string) (len=5) "38693",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 09:01:08.926888 18 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8724",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de204e68-dbe7-459f-a9ac-6deb53fe6211",
      ResourceVersion: (string) (len=5) "38672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "656dfd43-072f-4e63-afb9-23074c16f98c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 36 64 66 64  34 33 2d 30 37 32 66 2d  |\"656dfd43-072f-|
              00000120  34 65 36 33 2d 61 66 62  39 2d 32 33 30 37 34 63  |4e63-afb9-23074c|
              00000130  31 36 66 39 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |16f98c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:01:08.933229 18 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0902 09:01:08.933893 18 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8724",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5dcc75d3-19ea-4251-b5f4-736f9c328aac",
      ResourceVersion: (string) (len=5) "38689",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "656dfd43-072f-4e63-afb9-23074c16f98c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 35 36 64 66 64 34  |"uid\":\"656dfd4|
              000000b0  33 2d 30 37 32 66 2d 34  65 36 33 2d 61 66 62 39  |3-072f-4e63-afb9|
              000000c0  2d 32 33 30 37 34 63 31  36 66 39 38 63 5c 22 7d  |-23074c16f98c\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:01:08.962180 18 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-zgcfq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-zgcfq",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8724",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c377eac-9e84-40f8-9f6e-56e81c488509",
      ResourceVersion: (string) (len=5) "38669",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "de204e68-dbe7-459f-a9ac-6deb53fe6211",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  32 30 34 65 36 38 2d 64  |d\":\"de204e68-d|
              00000090  62 65 37 2d 34 35 39 66  2d 61 39 61 63 2d 36 64  |be7-459f-a9ac-6d|
              000000a0  65 62 35 33 66 65 36 32  31 31 5c 22 7d 22 3a 7b  |eb53fe6211\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  36 38 5c 22 7d 22 3a 7b  |.233.64.68\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nz45v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nz45v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=12) "10.233.64.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892400467,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://c3ed389f6179ab787fc85cedb875f9d58d48871ef74287aadf0ef20e62db5eb5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nz45v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 09:01:08.978979 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8724" for this suite. @ 09/02/25 09:01:09.009
• [7.527 seconds]
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/02/25 09:01:09.062
  I0902 09:01:09.062710 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:01:09.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:09.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:09.164
  STEP: Creating Indexed job @ 09/02/25 09:01:09.17
  STEP: Ensuring job reaches completions @ 09/02/25 09:01:09.189
  E0902 09:01:09.461213      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:10.462160      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:11.463040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:12.463038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:13.465023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:14.466518      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:15.466238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:16.466570      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:17.466587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:18.466987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/02/25 09:01:19.285
  I0902 09:01:19.299658 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6934" for this suite. @ 09/02/25 09:01:19.31
• [10.266 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/02/25 09:01:19.329
  I0902 09:01:19.329657 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:01:19.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:19.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:19.373
  STEP: creating the pod @ 09/02/25 09:01:19.38
  STEP: submitting the pod to kubernetes @ 09/02/25 09:01:19.381
  E0902 09:01:19.472480      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:20.472020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:21.474132      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/02/25 09:01:21.489
  STEP: updating the pod @ 09/02/25 09:01:21.497
  I0902 09:01:22.028972 18 pod_client.go:173] Successfully updated pod "pod-update-b7a85f10-2027-4ae6-ab05-25ab6aefe796"
  STEP: verifying the updated pod is in kubernetes @ 09/02/25 09:01:22.037
  I0902 09:01:22.048165 18 pods.go:391] Pod update OK
  I0902 09:01:22.048754 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3210" for this suite. @ 09/02/25 09:01:22.063
• [2.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/02/25 09:01:22.111
  I0902 09:01:22.111107 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:01:22.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:22.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:22.156
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:01:22.179
  E0902 09:01:22.474980      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:23.475047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:24.481758      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:25.482316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:01:26.247
  I0902 09:01:26.255713 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-38065e80-d59c-4639-9653-3d8fa98ca353 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:01:26.301
  I0902 09:01:26.346086 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5302" for this suite. @ 09/02/25 09:01:26.36
• [4.264 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/02/25 09:01:26.375
  I0902 09:01:26.375672 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename discovery @ 09/02/25 09:01:26.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:26.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:26.42
  STEP: Setting up server cert @ 09/02/25 09:01:26.435
  E0902 09:01:26.482869      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:27.483875      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:28.483928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:29.497312      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:29.676873 18 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0902 09:01:29.680119 18 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0902 09:01:29.680212 18 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0902 09:01:29.680232 18 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0902 09:01:29.680250 18 discovery.go:139] Checking APIGroup: apps
  I0902 09:01:29.681704 18 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0902 09:01:29.681819 18 discovery.go:148] Versions found [{apps/v1 v1}]
  I0902 09:01:29.681893 18 discovery.go:154] apps/v1 matches apps/v1
  I0902 09:01:29.681910 18 discovery.go:139] Checking APIGroup: events.k8s.io
  I0902 09:01:29.683360 18 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0902 09:01:29.683413 18 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0902 09:01:29.683432 18 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0902 09:01:29.683448 18 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0902 09:01:29.685190 18 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0902 09:01:29.685999 18 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0902 09:01:29.686055 18 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0902 09:01:29.686077 18 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0902 09:01:29.687931 18 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0902 09:01:29.687987 18 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0902 09:01:29.688006 18 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0902 09:01:29.688022 18 discovery.go:139] Checking APIGroup: autoscaling
  I0902 09:01:29.689792 18 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0902 09:01:29.689914 18 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0902 09:01:29.689973 18 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0902 09:01:29.689992 18 discovery.go:139] Checking APIGroup: batch
  I0902 09:01:29.691712 18 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0902 09:01:29.691768 18 discovery.go:148] Versions found [{batch/v1 v1}]
  I0902 09:01:29.691789 18 discovery.go:154] batch/v1 matches batch/v1
  I0902 09:01:29.691805 18 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0902 09:01:29.696798 18 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0902 09:01:29.697120 18 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0902 09:01:29.697201 18 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0902 09:01:29.697220 18 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0902 09:01:29.704143 18 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0902 09:01:29.704447 18 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0902 09:01:29.711956 18 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0902 09:01:29.711986 18 discovery.go:139] Checking APIGroup: policy
  I0902 09:01:29.727372 18 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0902 09:01:29.727550 18 discovery.go:148] Versions found [{policy/v1 v1}]
  I0902 09:01:29.727778 18 discovery.go:154] policy/v1 matches policy/v1
  I0902 09:01:29.727807 18 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0902 09:01:29.729933 18 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0902 09:01:29.730164 18 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0902 09:01:29.730193 18 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0902 09:01:29.730211 18 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0902 09:01:29.732491 18 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0902 09:01:29.732541 18 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0902 09:01:29.732561 18 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0902 09:01:29.732762 18 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0902 09:01:29.735322 18 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0902 09:01:29.735449 18 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0902 09:01:29.735817 18 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0902 09:01:29.735848 18 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0902 09:01:29.740341 18 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0902 09:01:29.740480 18 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0902 09:01:29.740505 18 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0902 09:01:29.740522 18 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0902 09:01:29.742461 18 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0902 09:01:29.742500 18 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0902 09:01:29.742518 18 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0902 09:01:29.742534 18 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0902 09:01:29.744493 18 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0902 09:01:29.744547 18 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0902 09:01:29.744565 18 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0902 09:01:29.744742 18 discovery.go:139] Checking APIGroup: node.k8s.io
  I0902 09:01:29.749831 18 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0902 09:01:29.749931 18 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0902 09:01:29.749951 18 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0902 09:01:29.749985 18 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0902 09:01:29.753335 18 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0902 09:01:29.754364 18 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0902 09:01:29.754398 18 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0902 09:01:29.754416 18 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0902 09:01:29.756707 18 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0902 09:01:29.756754 18 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0902 09:01:29.757038 18 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0902 09:01:29.757271 18 discovery.go:139] Checking APIGroup: cilium.io
  I0902 09:01:29.760194 18 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0902 09:01:29.760271 18 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0902 09:01:29.760294 18 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0902 09:01:29.760501 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5189" for this suite. @ 09/02/25 09:01:29.782
• [3.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 09/02/25 09:01:29.808
  I0902 09:01:29.809115 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:01:29.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:29.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:29.911
  STEP: Creating a ResourceQuota @ 09/02/25 09:01:29.918
  STEP: Getting a ResourceQuota @ 09/02/25 09:01:29.94
  STEP: Updating a ResourceQuota @ 09/02/25 09:01:29.953
  STEP: Verifying a ResourceQuota was modified @ 09/02/25 09:01:29.973
  STEP: Deleting a ResourceQuota @ 09/02/25 09:01:29.986
  STEP: Verifying the deleted ResourceQuota @ 09/02/25 09:01:30.072
  I0902 09:01:30.114836 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9623" for this suite. @ 09/02/25 09:01:30.242
• [0.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/02/25 09:01:30.325
  I0902 09:01:30.325213 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 09:01:30.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:30.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:30.404
  STEP: getting /apis @ 09/02/25 09:01:30.435
  STEP: getting /apis/admissionregistration.k8s.io @ 09/02/25 09:01:30.473
  E0902 09:01:30.502097      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/02/25 09:01:30.502
  STEP: creating @ 09/02/25 09:01:30.554
  STEP: getting @ 09/02/25 09:01:30.828
  STEP: listing @ 09/02/25 09:01:30.854
  STEP: watching @ 09/02/25 09:01:30.86
  I0902 09:01:30.861007 18 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/02/25 09:01:30.863
  STEP: updating @ 09/02/25 09:01:30.886
  I0902 09:01:30.966780 18 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/02/25 09:01:30.968
  STEP: patching /status @ 09/02/25 09:01:31.048
  STEP: updating /status @ 09/02/25 09:01:31.132
  STEP: deleting @ 09/02/25 09:01:31.191
  STEP: deleting a collection @ 09/02/25 09:01:31.297
  I0902 09:01:31.377006 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4146" for this suite. @ 09/02/25 09:01:31.397
• [1.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/02/25 09:01:31.426
  I0902 09:01:31.426295 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename proxy @ 09/02/25 09:01:31.443
  E0902 09:01:31.502402      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:31.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:31.547
  STEP: starting an echo server on multiple ports @ 09/02/25 09:01:31.653
  I0902 09:01:31.919454 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 09:01:32.504856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:33.509100      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:33.941286 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 1, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 1, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 1, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 1, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-d8p6p-5688cccc4f\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:01:34.511897      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:35.513389      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:36.078554      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 09:01:36.078848 18 proxy.go:273] setup took 4.522993777s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/02/25 09:01:36.079
  I0902 09:01:36.207940 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 125.395076ms)
  I0902 09:01:36.220548 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 140.055586ms)
  I0902 09:01:36.221404 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 135.034424ms)
  I0902 09:01:36.222117 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 135.601175ms)
  I0902 09:01:36.222237 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 135.838183ms)
  I0902 09:01:36.222342 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 135.63244ms)
  I0902 09:01:36.222523 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 140.380059ms)
  I0902 09:01:36.222934 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 142.419856ms)
  I0902 09:01:36.223764 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 140.929588ms)
  I0902 09:01:36.224025 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 137.97243ms)
  I0902 09:01:36.224115 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 141.063541ms)
  I0902 09:01:36.224224 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 142.786132ms)
  I0902 09:01:36.224909 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 143.691245ms)
  I0902 09:01:36.225580 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 139.245029ms)
  I0902 09:01:36.226313 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 145.231623ms)
  I0902 09:01:36.227293 18 proxy.go:601] (0) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 147.305124ms)
  I0902 09:01:36.263320 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 33.997054ms)
  I0902 09:01:36.278844 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 43.758237ms)
  I0902 09:01:36.285741 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 46.88603ms)
  I0902 09:01:36.289747 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 49.810147ms)
  I0902 09:01:36.292772 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 53.418672ms)
  I0902 09:01:36.297100 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 58.15245ms)
  I0902 09:01:36.297192 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 57.784311ms)
  I0902 09:01:36.297263 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 57.992843ms)
  I0902 09:01:36.297302 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 57.771422ms)
  I0902 09:01:36.309098 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 69.409985ms)
  I0902 09:01:36.309118 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 69.324395ms)
  I0902 09:01:36.309191 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 70.196817ms)
  I0902 09:01:36.309222 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 81.786243ms)
  I0902 09:01:36.309254 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 69.414665ms)
  I0902 09:01:36.318719 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 79.64408ms)
  I0902 09:01:36.320206 18 proxy.go:601] (1) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 81.026248ms)
  I0902 09:01:36.343857 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 23.165154ms)
  I0902 09:01:36.343969 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 23.63964ms)
  I0902 09:01:36.344017 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 23.23969ms)
  I0902 09:01:36.362337 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 41.299713ms)
  I0902 09:01:36.364280 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 43.111302ms)
  I0902 09:01:36.376601 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 55.683152ms)
  I0902 09:01:36.383904 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 62.510311ms)
  I0902 09:01:36.383988 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 62.401211ms)
  I0902 09:01:36.403453 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 82.014463ms)
  I0902 09:01:36.403564 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 82.473521ms)
  I0902 09:01:36.403619 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 82.299205ms)
  I0902 09:01:36.403768 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 82.253386ms)
  I0902 09:01:36.404318 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 83.351162ms)
  I0902 09:01:36.404386 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 82.616445ms)
  I0902 09:01:36.404438 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 83.171083ms)
  I0902 09:01:36.404496 18 proxy.go:601] (2) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 82.094495ms)
  I0902 09:01:36.485216 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 80.531887ms)
  I0902 09:01:36.496380 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 91.088663ms)
  E0902 09:01:36.513853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:36.518593 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 113.515072ms)
  I0902 09:01:36.551094 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 145.502304ms)
  I0902 09:01:36.551185 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 145.757559ms)
  I0902 09:01:36.551264 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 146.136707ms)
  I0902 09:01:36.551285 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 146.055341ms)
  I0902 09:01:36.551313 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 145.829569ms)
  I0902 09:01:36.551376 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 146.459183ms)
  I0902 09:01:36.551440 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 146.878217ms)
  I0902 09:01:36.551513 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 146.34725ms)
  I0902 09:01:36.570955 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 165.612395ms)
  I0902 09:01:36.570855 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 165.860486ms)
  I0902 09:01:36.572440 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 167.426047ms)
  I0902 09:01:36.572510 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 167.119624ms)
  I0902 09:01:36.573293 18 proxy.go:601] (3) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 167.763157ms)
  I0902 09:01:36.600720 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 22.472528ms)
  I0902 09:01:36.607112 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 29.94482ms)
  I0902 09:01:36.607344 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 29.660793ms)
  I0902 09:01:36.608683 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 29.859504ms)
  I0902 09:01:36.628027 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 51.020336ms)
  I0902 09:01:36.628044 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 49.643987ms)
  I0902 09:01:36.628088 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 49.383735ms)
  I0902 09:01:36.628141 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 50.637253ms)
  I0902 09:01:36.628185 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 49.291189ms)
  I0902 09:01:36.643162 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 64.088242ms)
  I0902 09:01:36.643721 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 66.9784ms)
  I0902 09:01:36.650439 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 72.410011ms)
  I0902 09:01:36.650466 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 71.900622ms)
  I0902 09:01:36.658155 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 81.368947ms)
  I0902 09:01:36.659734 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 81.882899ms)
  I0902 09:01:36.661608 18 proxy.go:601] (4) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 82.381466ms)
  I0902 09:01:36.719565 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 56.448255ms)
  I0902 09:01:36.719835 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 55.789968ms)
  I0902 09:01:36.720066 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 56.450691ms)
  I0902 09:01:36.720185 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 56.801278ms)
  I0902 09:01:36.720425 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 57.175951ms)
  I0902 09:01:36.721205 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 57.004684ms)
  I0902 09:01:36.721305 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 56.950169ms)
  I0902 09:01:36.721349 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 56.854413ms)
  I0902 09:01:36.721363 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 57.627971ms)
  I0902 09:01:36.721380 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 58.986286ms)
  I0902 09:01:36.721451 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 58.919984ms)
  I0902 09:01:36.783474 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 121.58263ms)
  I0902 09:01:36.785353 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 122.395268ms)
  I0902 09:01:36.785443 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 122.678451ms)
  I0902 09:01:36.785494 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 123.221159ms)
  I0902 09:01:36.785595 18 proxy.go:601] (5) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 121.700958ms)
  I0902 09:01:36.826906 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 37.23083ms)
  I0902 09:01:36.828390 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 41.927377ms)
  I0902 09:01:36.828438 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 41.173879ms)
  I0902 09:01:36.844017 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 38.041191ms)
  I0902 09:01:36.865520 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 75.155822ms)
  I0902 09:01:36.881378 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 91.771966ms)
  I0902 09:01:36.886027 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 95.064494ms)
  I0902 09:01:36.886973 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 97.216947ms)
  I0902 09:01:36.887126 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 96.986455ms)
  I0902 09:01:36.887183 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 96.873676ms)
  I0902 09:01:36.887230 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 96.842733ms)
  I0902 09:01:36.887264 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 96.81478ms)
  I0902 09:01:36.887292 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 96.760826ms)
  I0902 09:01:36.887338 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 96.757433ms)
  I0902 09:01:36.887367 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 97.153938ms)
  I0902 09:01:36.887393 18 proxy.go:601] (6) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 97.127693ms)
  I0902 09:01:36.899322 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 11.796805ms)
  I0902 09:01:36.926020 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 29.190632ms)
  I0902 09:01:36.932592 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 38.805065ms)
  I0902 09:01:36.939058 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 39.862226ms)
  I0902 09:01:36.940103 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 42.483133ms)
  I0902 09:01:36.954365 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 55.235188ms)
  I0902 09:01:36.954514 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 57.137497ms)
  I0902 09:01:36.954746 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 58.296446ms)
  I0902 09:01:36.964035 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 65.234192ms)
  I0902 09:01:36.964278 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 70.375597ms)
  I0902 09:01:36.964614 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 67.524206ms)
  I0902 09:01:36.972951 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 75.461237ms)
  I0902 09:01:36.973058 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 74.20829ms)
  I0902 09:01:37.011030 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 112.046852ms)
  I0902 09:01:37.011131 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 113.584456ms)
  I0902 09:01:37.011472 18 proxy.go:601] (7) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 112.33209ms)
  I0902 09:01:37.050060 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 35.782433ms)
  I0902 09:01:37.050189 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 33.903927ms)
  I0902 09:01:37.050242 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 38.264836ms)
  I0902 09:01:37.050290 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 33.685395ms)
  I0902 09:01:37.050341 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 38.239093ms)
  I0902 09:01:37.050341 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 34.41845ms)
  I0902 09:01:37.050391 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 36.56183ms)
  I0902 09:01:37.050402 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 38.641469ms)
  I0902 09:01:37.050458 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 38.141984ms)
  I0902 09:01:37.056180 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 40.893082ms)
  I0902 09:01:37.056262 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 44.532667ms)
  I0902 09:01:37.056305 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 41.35462ms)
  I0902 09:01:37.056370 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 41.788795ms)
  I0902 09:01:37.056405 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 43.80858ms)
  I0902 09:01:37.056472 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 44.027115ms)
  I0902 09:01:37.056520 18 proxy.go:601] (8) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 40.933488ms)
  I0902 09:01:37.092053 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 35.086301ms)
  I0902 09:01:37.094257 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 37.66082ms)
  I0902 09:01:37.094905 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 37.623197ms)
  I0902 09:01:37.095176 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 38.484853ms)
  I0902 09:01:37.095215 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 34.888769ms)
  I0902 09:01:37.095360 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 38.244565ms)
  I0902 09:01:37.098981 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 38.496704ms)
  I0902 09:01:37.117535 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 55.652904ms)
  I0902 09:01:37.137895 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 75.236475ms)
  I0902 09:01:37.138009 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 75.678442ms)
  I0902 09:01:37.139264 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 77.319762ms)
  I0902 09:01:37.142985 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 80.460028ms)
  I0902 09:01:37.143071 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 80.939435ms)
  I0902 09:01:37.145698 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 83.203985ms)
  I0902 09:01:37.146726 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 84.882689ms)
  I0902 09:01:37.149623 18 proxy.go:601] (9) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 87.833087ms)
  I0902 09:01:37.186583 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 36.79097ms)
  I0902 09:01:37.216188 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 63.981729ms)
  I0902 09:01:37.216397 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 63.82065ms)
  I0902 09:01:37.216460 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 64.054006ms)
  I0902 09:01:37.216610 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 62.754035ms)
  I0902 09:01:37.216735 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 63.154827ms)
  I0902 09:01:37.219507 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 63.879405ms)
  I0902 09:01:37.223600 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 69.899398ms)
  I0902 09:01:37.223663 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 69.689964ms)
  I0902 09:01:37.223723 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 70.727235ms)
  I0902 09:01:37.227219 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 77.280476ms)
  I0902 09:01:37.251125 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 97.941334ms)
  I0902 09:01:37.251474 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 101.703616ms)
  I0902 09:01:37.251550 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 97.837078ms)
  I0902 09:01:37.251609 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 98.308539ms)
  I0902 09:01:37.251693 18 proxy.go:601] (10) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 98.233063ms)
  I0902 09:01:37.295454 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 43.677946ms)
  I0902 09:01:37.295958 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 43.103546ms)
  I0902 09:01:37.296168 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 43.392465ms)
  I0902 09:01:37.296375 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 43.380331ms)
  I0902 09:01:37.311513 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 58.390637ms)
  I0902 09:01:37.311957 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 51.422186ms)
  I0902 09:01:37.312001 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 58.855216ms)
  I0902 09:01:37.312082 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 53.048606ms)
  I0902 09:01:37.312536 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 52.478372ms)
  I0902 09:01:37.312690 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 59.638242ms)
  I0902 09:01:37.312763 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 52.801224ms)
  I0902 09:01:37.312828 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 60.34458ms)
  I0902 09:01:37.312898 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 60.19472ms)
  I0902 09:01:37.312950 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 52.520644ms)
  I0902 09:01:37.312993 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 60.392935ms)
  I0902 09:01:37.359079 18 proxy.go:601] (11) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 106.10622ms)
  I0902 09:01:37.468742 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 109.268928ms)
  I0902 09:01:37.471624 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 107.782095ms)
  I0902 09:01:37.480448 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 116.482514ms)
  I0902 09:01:37.480443 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 116.252384ms)
  I0902 09:01:37.480500 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 116.252378ms)
  I0902 09:01:37.480552 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 116.428292ms)
  I0902 09:01:37.481060 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 117.020504ms)
  I0902 09:01:37.489513 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 124.971469ms)
  I0902 09:01:37.489586 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 125.283345ms)
  I0902 09:01:37.560301 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 195.793333ms)
  I0902 09:01:37.560404 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 195.811553ms)
  I0902 09:01:37.560542 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 178.435155ms)
  I0902 09:01:37.560583 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 196.169282ms)
  I0902 09:01:37.561080 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 178.04756ms)
  I0902 09:01:37.561968 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 197.597764ms)
  I0902 09:01:37.563226 18 proxy.go:601] (12) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 180.728164ms)
  E0902 09:01:37.592767      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:01:37.656345 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 75.781667ms)
  I0902 09:01:37.656457 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 75.13929ms)
  I0902 09:01:37.656534 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 88.321059ms)
  I0902 09:01:37.656779 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 89.042215ms)
  I0902 09:01:37.656958 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 86.156404ms)
  I0902 09:01:37.657335 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 74.060333ms)
  I0902 09:01:37.657429 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 90.633952ms)
  I0902 09:01:37.661672 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 92.162446ms)
  I0902 09:01:37.661773 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 76.692404ms)
  I0902 09:01:37.668916 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 98.408555ms)
  I0902 09:01:37.677345 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 107.319803ms)
  I0902 09:01:37.677670 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 92.192211ms)
  I0902 09:01:37.677750 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 112.959901ms)
  I0902 09:01:37.677795 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 95.316177ms)
  I0902 09:01:37.677841 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 94.022995ms)
  I0902 09:01:37.678012 18 proxy.go:601] (13) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 93.348685ms)
  I0902 09:01:37.708854 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 30.686151ms)
  I0902 09:01:37.735295 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 53.872749ms)
  I0902 09:01:37.743027 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 61.078131ms)
  I0902 09:01:37.744119 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 61.966873ms)
  I0902 09:01:37.745897 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 64.115952ms)
  I0902 09:01:37.745944 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 64.623134ms)
  I0902 09:01:37.746008 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 64.523944ms)
  I0902 09:01:37.763832 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 81.984401ms)
  I0902 09:01:37.763951 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 82.23517ms)
  I0902 09:01:37.763992 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 81.947369ms)
  I0902 09:01:37.803351 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 121.677223ms)
  I0902 09:01:37.824728 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 142.614123ms)
  I0902 09:01:37.824816 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 143.23978ms)
  I0902 09:01:37.835215 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 153.622484ms)
  I0902 09:01:37.836605 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 154.769959ms)
  I0902 09:01:37.844921 18 proxy.go:601] (14) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 162.832892ms)
  I0902 09:01:37.865829 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 20.428242ms)
  I0902 09:01:37.871278 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 26.263252ms)
  I0902 09:01:37.874267 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 28.795597ms)
  I0902 09:01:37.884309 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 31.360302ms)
  I0902 09:01:37.886833 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 35.369028ms)
  I0902 09:01:37.886530 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 34.104028ms)
  I0902 09:01:37.887353 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 35.254467ms)
  I0902 09:01:37.900019 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 47.319655ms)
  I0902 09:01:37.905952 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 54.319469ms)
  I0902 09:01:37.916904 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 64.542941ms)
  I0902 09:01:37.918201 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 72.954376ms)
  I0902 09:01:37.932478 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 79.990456ms)
  I0902 09:01:37.932573 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 86.98114ms)
  I0902 09:01:37.932693 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 81.508394ms)
  I0902 09:01:37.932848 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 82.980758ms)
  I0902 09:01:37.936389 18 proxy.go:601] (15) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 84.155065ms)
  I0902 09:01:37.975341 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 37.182236ms)
  I0902 09:01:38.008946 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 69.674366ms)
  I0902 09:01:38.009044 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 72.317813ms)
  I0902 09:01:38.009090 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 70.528306ms)
  I0902 09:01:38.009139 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 70.381708ms)
  I0902 09:01:38.009192 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 70.02721ms)
  I0902 09:01:38.015591 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 79.075547ms)
  I0902 09:01:38.015824 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 76.469176ms)
  I0902 09:01:38.016240 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 77.139476ms)
  I0902 09:01:38.016460 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 77.381483ms)
  I0902 09:01:38.033685 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 96.382606ms)
  I0902 09:01:38.043253 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 103.970893ms)
  I0902 09:01:38.043854 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 105.90689ms)
  I0902 09:01:38.054516 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 116.983743ms)
  I0902 09:01:38.061818 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 123.464036ms)
  I0902 09:01:38.063369 18 proxy.go:601] (16) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 123.989721ms)
  I0902 09:01:38.084957 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 21.485112ms)
  I0902 09:01:38.122574 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 57.943692ms)
  I0902 09:01:38.167227 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 103.265247ms)
  I0902 09:01:38.167423 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 101.373685ms)
  I0902 09:01:38.167472 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 103.188159ms)
  I0902 09:01:38.167530 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 102.274088ms)
  I0902 09:01:38.167599 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 99.58617ms)
  I0902 09:01:38.167785 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 100.692631ms)
  I0902 09:01:38.167850 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 102.89014ms)
  I0902 09:01:38.167925 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 101.237368ms)
  I0902 09:01:38.170230 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 102.684522ms)
  I0902 09:01:38.177824 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 113.868752ms)
  I0902 09:01:38.180192 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 108.839392ms)
  I0902 09:01:38.180313 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 112.480296ms)
  I0902 09:01:38.180370 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 114.02634ms)
  I0902 09:01:38.180427 18 proxy.go:601] (17) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 112.818824ms)
  I0902 09:01:38.211403 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 29.483882ms)
  I0902 09:01:38.211670 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 28.22728ms)
  I0902 09:01:38.222610 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 32.180929ms)
  I0902 09:01:38.258489 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 75.786132ms)
  I0902 09:01:38.280288 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 89.456721ms)
  I0902 09:01:38.281817 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 92.204879ms)
  I0902 09:01:38.293801 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 91.972454ms)
  I0902 09:01:38.298499 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 90.960486ms)
  I0902 09:01:38.298581 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 107.821885ms)
  I0902 09:01:38.298716 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 108.226694ms)
  I0902 09:01:38.298835 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 110.154988ms)
  I0902 09:01:38.299227 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 91.75291ms)
  I0902 09:01:38.299362 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 113.815893ms)
  I0902 09:01:38.299663 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 98.126502ms)
  I0902 09:01:38.299729 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 117.558531ms)
  I0902 09:01:38.300847 18 proxy.go:601] (18) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 111.627545ms)
  I0902 09:01:38.374671 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 72.785475ms)
  I0902 09:01:38.382385 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x/proxy/rewriteme"... (200; 79.876804ms)
  I0902 09:01:38.391370 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:162/proxy/: bar (200; 88.732607ms)
  I0902 09:01:38.391763 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/rewri... (200; 88.995579ms)
  I0902 09:01:38.391822 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:1080/proxy/... (200; 90.592191ms)
  I0902 09:01:38.394296 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:462/proxy/: tls qux (200; 91.271398ms)
  I0902 09:01:38.395121 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 92.031191ms)
  I0902 09:01:38.395168 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/http:proxy-service-d8p6p-5688cccc4f-m5w5x:160/proxy/: foo (200; 93.536668ms)
  I0902 09:01:38.395284 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname1/proxy/: foo (200; 92.618836ms)
  I0902 09:01:38.395356 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:460/proxy/: tls baz (200; 92.404546ms)
  I0902 09:01:38.395392 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/: <a href="/api/v1/namespaces/proxy-9198/pods/https:proxy-service-d8p6p-5688cccc4f-m5w5x:443/proxy/... (200; 93.418258ms)
  I0902 09:01:38.395436 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/http:proxy-service-d8p6p:portname2/proxy/: bar (200; 93.099779ms)
  I0902 09:01:38.397801 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname2/proxy/: tls qux (200; 94.749264ms)
  I0902 09:01:38.399165 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/https:proxy-service-d8p6p:tlsportname1/proxy/: tls baz (200; 96.009475ms)
  I0902 09:01:38.402053 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname1/proxy/: foo (200; 99.827854ms)
  I0902 09:01:38.405029 18 proxy.go:601] (19) /api/v1/namespaces/proxy-9198/services/proxy-service-d8p6p:portname2/proxy/: bar (200; 102.176166ms)
  I0902 09:01:38.426431 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9198" for this suite. @ 09/02/25 09:01:38.495
• [7.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/02/25 09:01:38.549
  I0902 09:01:38.549997 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename events @ 09/02/25 09:01:38.557
  E0902 09:01:38.562933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:38.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:38.709
  STEP: creating a test event @ 09/02/25 09:01:38.757
  STEP: listing all events in all namespaces @ 09/02/25 09:01:38.784
  STEP: patching the test event @ 09/02/25 09:01:38.844
  STEP: fetching the test event @ 09/02/25 09:01:38.877
  STEP: updating the test event @ 09/02/25 09:01:38.89
  STEP: getting the test event @ 09/02/25 09:01:38.965
  STEP: deleting the test event @ 09/02/25 09:01:38.98
  STEP: listing all events in all namespaces @ 09/02/25 09:01:39.033
  I0902 09:01:39.047662 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6635" for this suite. @ 09/02/25 09:01:39.058
• [0.632 seconds]
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/02/25 09:01:39.182
  I0902 09:01:39.182141 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:01:39.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:01:39.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:01:39.282
  STEP: Looking for a node to schedule job pods @ 09/02/25 09:01:39.287
  STEP: Creating a job @ 09/02/25 09:01:39.38
  STEP: Waiting for all the pods to be ready @ 09/02/25 09:01:39.418
  E0902 09:01:39.589616      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:40.566683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:41.566746      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:42.566931      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:43.569239      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:44.567930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/02/25 09:01:45.542
  STEP: Evict all the Pods @ 09/02/25 09:01:45.564
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-rhv5r/job-862 @ 09/02/25 09:01:45.564
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-26s7l/job-862 @ 09/02/25 09:01:45.564
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-xdvzj/job-862 @ 09/02/25 09:01:45.566
  E0902 09:01:45.573000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-26s7l/job-862 to be deleted @ 09/02/25 09:01:45.633
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-rhv5r/job-862 to be deleted @ 09/02/25 09:01:45.804
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-xdvzj/job-862 to be deleted @ 09/02/25 09:01:45.812
  E0902 09:01:46.569291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:47.569451      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:48.569947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:49.569856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/02/25 09:01:49.873
  E0902 09:01:50.570223      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:51.570980      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:52.571363      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:53.571828      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:54.572234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:55.572414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:56.572951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:57.573981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:58.574040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:01:59.574247      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:00.574877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:01.575120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:02.576025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:03.576500      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:04.576461      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:05.577139      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:06.577823      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:07.583307      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:08.584990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:09.585160      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:10.586621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:11.586970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:12.589095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:13.593500      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:14.593720      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:15.594002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:16.594969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:17.596899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:18.596779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:19.596996      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:20.597593      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:21.598267      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:22.598386      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:23.600481      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:24.601004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:25.601271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:26.601542      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:27.601984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:28.603032      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:29.606036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:30.605878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:31.606301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:32.606982      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:33.607150      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:34.476613 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-862" for this suite. @ 09/02/25 09:02:34.513
• [55.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 09/02/25 09:02:34.53
  I0902 09:02:34.531463 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:02:34.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:34.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:34.602
  E0902 09:02:34.607120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/02/25 09:02:34.663
  E0902 09:02:35.607920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:02:36.56
  STEP: Deploying the webhook pod @ 09/02/25 09:02:36.569
  STEP: Wait for the deployment to be ready @ 09/02/25 09:02:36.601
  E0902 09:02:36.620979      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:36.639075 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:02:37.614865      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:38.616539      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:38.697968 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 2, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 2, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 2, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 2, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:02:39.641879      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:40.620702      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:02:40.716
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:02:40.772
  E0902 09:02:41.620038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:41.773597 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/02/25 09:02:41.943
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 09:02:42.074
  STEP: Deleting the collection of validation webhooks @ 09/02/25 09:02:42.131
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 09:02:42.283
  I0902 09:02:42.508277 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7438" for this suite. @ 09/02/25 09:02:42.61
  E0902 09:02:42.626267      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-8743" for this suite. @ 09/02/25 09:02:42.674
• [8.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 09/02/25 09:02:42.757
  I0902 09:02:42.758007 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:02:42.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:42.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:42.793
  STEP: Setting up server cert @ 09/02/25 09:02:42.942
  E0902 09:02:43.627612      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:44.631892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:02:45.196
  STEP: Deploying the webhook pod @ 09/02/25 09:02:45.216
  STEP: Wait for the deployment to be ready @ 09/02/25 09:02:45.248
  I0902 09:02:45.289435 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:02:45.632969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:46.634164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:02:47.306
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:02:47.394
  E0902 09:02:47.634898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:48.394319 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0902 09:02:48.637193      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/02/25 09:02:48.684
  STEP: Creating a configMap that should be mutated @ 09/02/25 09:02:48.75
  STEP: Deleting the collection of validation webhooks @ 09/02/25 09:02:48.851
  STEP: Creating a configMap that should not be mutated @ 09/02/25 09:02:48.991
  I0902 09:02:49.233209 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5664" for this suite. @ 09/02/25 09:02:49.241
  STEP: Destroying namespace "webhook-markers-242" for this suite. @ 09/02/25 09:02:49.283
• [6.541 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/02/25 09:02:49.299
  I0902 09:02:49.299186 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:02:49.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:49.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:49.33
  STEP: creating secret secrets-1225/secret-test-5d79ea0f-784f-407d-a024-d15935868852 @ 09/02/25 09:02:49.335
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:02:49.358
  E0902 09:02:49.637333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:50.640069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:51.638422      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:52.651244      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:02:53.407
  I0902 09:02:53.418792 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-e5bb3fba-74e2-4b01-ae1a-ff15c2de9081 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 09:02:53.456
  I0902 09:02:53.500185 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1225" for this suite. @ 09/02/25 09:02:53.512
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/02/25 09:02:53.532
  I0902 09:02:53.532909 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:02:53.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:53.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:53.58
  STEP: creating a ServiceAccount @ 09/02/25 09:02:53.585
  STEP: watching for the ServiceAccount to be added @ 09/02/25 09:02:53.599
  STEP: patching the ServiceAccount @ 09/02/25 09:02:53.602
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/02/25 09:02:53.619
  STEP: deleting the ServiceAccount @ 09/02/25 09:02:53.629
  E0902 09:02:53.657328      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:53.661986 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8633" for this suite. @ 09/02/25 09:02:53.673
• [0.155 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/02/25 09:02:53.689
  I0902 09:02:53.689877 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 09:02:53.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:53.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:53.73
  I0902 09:02:53.791709 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2602" for this suite. @ 09/02/25 09:02:53.808
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/02/25 09:02:53.827
  I0902 09:02:53.827563 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 09:02:53.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:53.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:53.879
  I0902 09:02:53.897193 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  W0902 09:02:53.915070      18 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005f26460 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0902 09:02:54.664759      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:55.660157      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:02:56.661131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:56.671330      18 warnings.go:110] "Warning: unknown field \"alpha\""
  I0902 09:02:56.671412      18 warnings.go:110] "Warning: unknown field \"beta\""
  I0902 09:02:56.671464      18 warnings.go:110] "Warning: unknown field \"delta\""
  I0902 09:02:56.671499      18 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0902 09:02:56.671551      18 warnings.go:110] "Warning: unknown field \"gamma\""
  I0902 09:02:57.374605 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8997" for this suite. @ 09/02/25 09:02:57.39
• [3.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 09/02/25 09:02:57.444
  I0902 09:02:57.444482 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:02:57.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:57.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:57.479
  STEP: create deployment with httpd image @ 09/02/25 09:02:57.486
  I0902 09:02:57.487344 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7049 create -f -'
  E0902 09:02:57.661741      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:02:57.799626 18 builder.go:146] stderr: ""
  I0902 09:02:57.800275 18 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/02/25 09:02:57.8
  I0902 09:02:57.801935 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7049 diff -f -'
  I0902 09:02:58.351426 18 builder.go:135] rc: 1
  I0902 09:02:58.352136 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-7049 delete -f -'
  I0902 09:02:58.595174 18 builder.go:146] stderr: ""
  I0902 09:02:58.595696 18 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0902 09:02:58.595946 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7049" for this suite. @ 09/02/25 09:02:58.615
• [1.193 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/02/25 09:02:58.637
  I0902 09:02:58.638112 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 09:02:58.641
  E0902 09:02:58.663821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:02:58.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:02:58.674
  E0902 09:02:59.665078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:00.665301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:00.758660 18 delete.go:62] Deleting pod "var-expansion-e3bf7777-01ba-4d7a-bae8-dd5a3505e433" in namespace "var-expansion-1335"
  I0902 09:03:00.776767 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-e3bf7777-01ba-4d7a-bae8-dd5a3505e433" to be fully deleted
  E0902 09:03:01.665528      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:02.666926      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:02.793299 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1335" for this suite. @ 09/02/25 09:03:02.806
• [4.192 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/02/25 09:03:02.83
  I0902 09:03:02.830953 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 09:03:02.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:02.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:02.876
  I0902 09:03:02.882766 18 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 09:03:02.912219 18 util.go:390] Waiting for terminating namespaces to be deleted...
  I0902 09:03:02.922413 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-1 before test
  I0902 09:03:02.938993 18 predicates.go:958] cilium-jhvxm from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.939197 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0902 09:03:02.940882 18 predicates.go:958] cilium-node-init-j6hbf from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.940912 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 09:03:02.940932 18 predicates.go:958] cilium-operator-6f8d5c5f87-jdv7t from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.940948 18 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0902 09:03:02.940970 18 predicates.go:958] coredns-674b8bbfcf-5z5tp from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941009 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 09:03:02.941029 18 predicates.go:958] coredns-674b8bbfcf-zrpl6 from kube-system started at 2025-09-02 08:00:19 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941044 18 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0902 09:03:02.941061 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941076 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 09:03:02.941105 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941121 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 09:03:02.941138 18 predicates.go:958] kube-proxy-6snpl from kube-system started at 2025-09-02 06:49:43 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941156 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 09:03:02.941172 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-1 from kube-system started at 2025-09-02 07:20:44 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941187 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 09:03:02.941204 18 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-02 07:29:56 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.941219 18 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 09:03:02.941235 18 predicates.go:958] sonobuoy-e2e-job-898f82e033984cdd from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 09:03:02.941249 18 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0902 09:03:02.941264 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:03:02.941280 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-65fxq from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 09:03:02.941295 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:03:02.941310 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0902 09:03:02.941325 18 predicates.go:120] 
  Logging pods the apiserver thinks is on node ahkoog9eunoh-2 before test
  I0902 09:03:02.959460 18 predicates.go:958] cilium-8mzx4 from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.959513 18 predicates.go:960] 	Container cilium-agent ready: true, restart count 2
  I0902 09:03:02.959556 18 predicates.go:958] cilium-node-init-9ktxz from kube-system started at 2025-09-02 06:57:30 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.959576 18 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0902 09:03:02.959598 18 predicates.go:958] kube-apiserver-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.959614 18 predicates.go:960] 	Container kube-apiserver ready: true, restart count 4
  I0902 09:03:02.960305 18 predicates.go:958] kube-controller-manager-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.960337 18 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0902 09:03:02.960414 18 predicates.go:958] kube-proxy-mpdjr from kube-system started at 2025-09-02 06:56:43 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.960704 18 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0902 09:03:02.960731 18 predicates.go:958] kube-scheduler-ahkoog9eunoh-2 from kube-system started at 2025-09-02 07:22:06 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.960745 18 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0902 09:03:02.960762 18 predicates.go:958] httpd-deployment-54b8855bf5-jlv8h from kubectl-7049 started at 2025-09-02 09:02:57 +0000 UTC (1 container statuses recorded)
  I0902 09:03:02.960776 18 predicates.go:960] 	Container httpd ready: true, restart count 0
  I0902 09:03:02.960855 18 predicates.go:958] sonobuoy-systemd-logs-daemon-set-2e6cab2fba6c453d-swkx7 from sonobuoy started at 2025-09-02 07:30:05 +0000 UTC (2 container statuses recorded)
  I0902 09:03:02.960948 18 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:03:02.960969 18 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/02/25 09:03:02.963
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18616bbb94a1fdfb], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 09/02/25 09:03:03.075
  E0902 09:03:03.666058      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:04.104041 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2354" for this suite. @ 09/02/25 09:03:04.131
• [1.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/02/25 09:03:04.162
  I0902 09:03:04.163005 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context @ 09/02/25 09:03:04.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:04.229
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/25 09:03:04.235
  E0902 09:03:04.666446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:05.666822      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:06.667302      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:07.679432      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:03:08.301
  I0902 09:03:08.314488 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod security-context-f15a41bf-e929-472e-b506-6768d657d530 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:03:08.341
  I0902 09:03:08.530914 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3535" for this suite. @ 09/02/25 09:03:08.56
• [4.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/02/25 09:03:08.607
  I0902 09:03:08.607413 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:03:08.638
  E0902 09:03:08.678464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:08.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:08.705
  E0902 09:03:09.681021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:10.679487      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:11.680328      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:12.680770      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/02/25 09:03:12.872
  I0902 09:03:12.873211 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2064 pod-service-account-7e48f258-eb2f-4e83-9413-bbd6cc55c02b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/02/25 09:03:13.328
  I0902 09:03:13.329245 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2064 pod-service-account-7e48f258-eb2f-4e83-9413-bbd6cc55c02b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/02/25 09:03:13.6
  I0902 09:03:13.600547 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2064 pod-service-account-7e48f258-eb2f-4e83-9413-bbd6cc55c02b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0902 09:03:13.681693      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:14.072706 18 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-2064"
  I0902 09:03:14.080846 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2064" for this suite. @ 09/02/25 09:03:14.1
• [5.508 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/02/25 09:03:14.12
  I0902 09:03:14.120837 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:03:14.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:14.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:14.173
  STEP: Creating a Serviceaccount "e2e-sa-wrbvq" in namespace "svcaccounts-6715" @ 09/02/25 09:03:14.18
  STEP: Creating a ServiceaccountToken "e2e-sa-wrbvq" in namespace "svcaccounts-6715" @ 09/02/25 09:03:14.187
  STEP: Creating a TokenReview for "e2e-sa-wrbvq" in namespace "svcaccounts-6715" @ 09/02/25 09:03:14.199
  I0902 09:03:14.203351 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6715" for this suite. @ 09/02/25 09:03:14.213
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/02/25 09:03:14.238
  I0902 09:03:14.238926 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 09:03:14.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:14.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:14.304
  STEP: getting /apis @ 09/02/25 09:03:14.328
  STEP: getting /apis/admissionregistration.k8s.io @ 09/02/25 09:03:14.339
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/02/25 09:03:14.341
  STEP: creating @ 09/02/25 09:03:14.345
  STEP: getting @ 09/02/25 09:03:14.475
  STEP: listing @ 09/02/25 09:03:14.487
  STEP: watching @ 09/02/25 09:03:14.494
  I0902 09:03:14.495068 18 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/02/25 09:03:14.52
  STEP: updating @ 09/02/25 09:03:14.54
  I0902 09:03:14.561186 18 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/02/25 09:03:14.563
  STEP: deleting a collection @ 09/02/25 09:03:14.629
  E0902 09:03:14.682472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:14.731693 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3554" for this suite. @ 09/02/25 09:03:14.747
• [0.523 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/02/25 09:03:14.761
  I0902 09:03:14.761816 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:03:14.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:03:14.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:03:14.799
  STEP: Creating pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841 @ 09/02/25 09:03:14.836
  E0902 09:03:15.683016      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:16.683329      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:03:16.905
  I0902 09:03:16.910332 18 container_probe.go:1748] Initial restart count of pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 is 0
  I0902 09:03:16.916789 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:17.684779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:18.685034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:18.965734 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:19.686138      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:20.687194      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:21.001737 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:21.688242      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:22.688956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:23.059454 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:23.689417      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:24.689863      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:25.073325 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:25.690243      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:26.691147      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:27.083302 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:27.693463      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:28.692004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:29.109922 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:29.700777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:30.693204      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:31.149814 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:31.714232      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:32.697111      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:33.160248 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:33.697092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:34.698246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:35.217286 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:35.699142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:36.710718      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:37.232184 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:37.711136      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:38.711309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:39.243549 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:39.720471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:40.712440      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:41.320000 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:41.712459      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:42.712999      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:43.327595 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:43.713885      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:44.714345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:45.356813 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:45.714265      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:46.714375      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:47.368449 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:47.714881      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:48.714956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:49.451877 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:49.725453      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:50.725720      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:51.459764 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:51.726779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:52.726595      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:53.467485 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:53.729261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:54.730286      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:55.488016 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:55.731057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:56.731160      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:57.498280 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:57.731931      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:03:58.734470      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:03:59.540832 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:03:59.736846      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:00.736966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:01.549772 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:01.737557      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:02.738254      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:03.572806 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:03.742748      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:04.740057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:05.601769 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:05.740990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:06.743021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:07.612033 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:07.742489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:08.742917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:09.677703 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:09.743972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:10.745142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:11.686665 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:11.745719      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:12.745993      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:13.695296 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:13.750082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:14.748265      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:15.751382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:15.756857 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:16.751007      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:17.752128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:17.764726 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:18.753452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:19.753959      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:19.786872 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:20.754618      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:21.755072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:21.829205 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:22.755471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:23.755917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:23.841551 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:24.756078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:25.756583      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:25.859552 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:26.756672      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:27.757019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:27.869231 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:28.757084      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:29.759723      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:29.887623 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:30.758316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:31.758924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:31.905433 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:32.759004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:33.759788      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:33.916578 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:34.759785      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:35.762232      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:35.925949 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:36.761061      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:37.763488      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:37.934730 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:38.763011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:39.764410      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:39.963898 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:40.764898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:41.765508      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:41.976327 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:42.765777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:43.766134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:43.985893 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:44.767024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:45.768331      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:45.994583 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:46.768893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:47.769069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:48.081380 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:48.769303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:49.770895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:50.095707 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:50.791473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:51.787886      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:52.139554 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:52.789324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:53.790544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:54.166152 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:54.790900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:55.791478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:56.176578 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:56.795023      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:57.793688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:04:58.188445 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:04:58.794275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:04:59.798756      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:00.197876 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:00.798853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:01.800331      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:02.205912 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:02.800516      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:03.800955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:04.219686 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:04.801797      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:05.802768      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:06.227944 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:06.803414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:07.803893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:08.235737 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:08.804943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:09.807371      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:10.243609 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:10.808136      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:11.808313      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:12.256580 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:12.808906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:13.809317      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:14.278088 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:14.810215      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:15.811168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:16.288878 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:16.812204      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:17.812655      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:18.327678 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:18.812960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:19.814541      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:20.339931 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:20.814370      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:21.815393      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:22.349487 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:22.815867      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:23.816911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:24.422135 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:24.818893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:25.819360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:26.454942 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:26.819288      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:27.819462      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:28.463841 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:28.820255      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:29.823142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:30.495693 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:30.823818      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:31.823876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:32.515389 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:32.825094      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:33.824961      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:34.532432 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:34.825889      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:35.826052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:36.539073 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:36.826827      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:37.826936      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:38.547116 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:38.827333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:39.827922      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:40.605785 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:40.828044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:41.829590      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:42.647747 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:42.830142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:43.830260      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:44.696044 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:44.830883      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:45.831671      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:46.735913 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:46.832248      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:47.834212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:48.766892 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:48.834901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:49.835940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:50.774779 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:50.838684      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:51.836987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:52.837719 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:52.837830      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:53.838372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:54.839281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:54.851597 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:55.839129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:56.839290      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:56.864274 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:57.840008      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:05:58.840094      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:05:58.875155 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:05:59.850342      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:00.844299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:00.900233 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:01.845069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:02.845165      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:02.947465 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:03.845669      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:04.845988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:04.958939 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:05.849129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:06.849233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:06.971524 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:07.850505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:08.852536      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:08.979288 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:09.853011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:10.853421      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:10.991288 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:11.854171      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:12.856805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:13.046199 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:13.856975      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:14.857447      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:15.069189 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:15.858257      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:16.857953      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:17.085240 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:17.858323      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:18.859334      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:19.095120 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:19.860760      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:20.860557      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:21.118109 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:21.861355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:22.861605      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:23.131847 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:23.862722      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:24.862909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:25.143988 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:25.863499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:26.863968      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:27.158737 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:27.864862      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:28.865184      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:29.173768 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:29.865486      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:30.866381      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:31.187128 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:31.866671      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:32.866936      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:33.196851 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:33.867087      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:34.867406      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:35.206901 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:35.868396      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:36.868761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:37.229032 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:37.868806      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:38.869077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:39.243769 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:39.893888      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:40.894721      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:41.257583 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:41.895028      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:42.895977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:43.274683 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:43.897056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:44.898009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:45.283177 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:45.899111      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:46.900894      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:47.299553 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:47.902109      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:48.902463      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:49.310699 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:49.903115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:50.903303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:51.334783 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:51.927694      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:52.903966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:53.351435 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:53.904091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:54.904244      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:55.362295 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:55.905316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:56.905557      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:57.374196 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:57.906598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:06:58.907478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:06:59.407397 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:06:59.907709      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:00.913616      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:01.433171 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:01.909771      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:02.910763      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:03.475793 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:03.911909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:04.912255      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:05.485148 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:05.912786      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:06.913229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:07.532814 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:07.913165      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:08.913391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:09.552352 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:09.913586      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:10.914749      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:11.576347 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:11.920035      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:12.916720      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:13.584345 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:13.916953      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:14.917972      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:15.591427 18 container_probe.go:1758] Get pod test-grpc-e9f00179-be48-4d22-87a7-9f0f84cabf54 in namespace container-probe-4841
  E0902 09:07:15.918938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:16.919403      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/02/25 09:07:17.592
  I0902 09:07:17.666827 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4841" for this suite. @ 09/02/25 09:07:17.688
• [242.958 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/02/25 09:07:17.722
  I0902 09:07:17.728563 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename events @ 09/02/25 09:07:17.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:17.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:17.815
  STEP: creating a test event @ 09/02/25 09:07:17.824
  E0902 09:07:17.921599      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing events in all namespaces @ 09/02/25 09:07:17.929
  STEP: listing events in test namespace @ 09/02/25 09:07:17.968
  STEP: listing events with field selection filtering on source @ 09/02/25 09:07:17.975
  STEP: listing events with field selection filtering on reportingController @ 09/02/25 09:07:17.984
  STEP: getting the test event @ 09/02/25 09:07:17.991
  STEP: patching the test event @ 09/02/25 09:07:18.008
  STEP: getting the test event @ 09/02/25 09:07:18.069
  STEP: updating the test event @ 09/02/25 09:07:18.079
  STEP: getting the test event @ 09/02/25 09:07:18.091
  STEP: deleting the test event @ 09/02/25 09:07:18.096
  STEP: listing events in all namespaces @ 09/02/25 09:07:18.113
  STEP: listing events in test namespace @ 09/02/25 09:07:18.12
  I0902 09:07:18.127818 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9374" for this suite. @ 09/02/25 09:07:18.139
• [0.435 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/02/25 09:07:18.158
  I0902 09:07:18.158272 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pv @ 09/02/25 09:07:18.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:18.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:18.227
  STEP: Creating initial PV and PVC @ 09/02/25 09:07:18.232
  I0902 09:07:18.232738 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5154" @ 09/02/25 09:07:18.27
  STEP: Listing PVCs in namespace "pv-5154" @ 09/02/25 09:07:18.291
  STEP: Reading "pvc-7spfd" Status @ 09/02/25 09:07:18.297
  STEP: Reading "pv-5154-mwkq6" Status @ 09/02/25 09:07:18.349
  STEP: Patching "pvc-7spfd" Status @ 09/02/25 09:07:18.372
  STEP: Patching "pv-5154-mwkq6" Status @ 09/02/25 09:07:18.385
  STEP: Updating "pvc-7spfd" Status @ 09/02/25 09:07:18.401
  STEP: Updating "pv-5154-mwkq6" Status @ 09/02/25 09:07:18.417
  I0902 09:07:18.434499 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0902 09:07:18.434568 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-7spfd"
  I0902 09:07:18.469190 18 pv.go:193] Deleting PersistentVolume "pv-5154-mwkq6"
  I0902 09:07:18.513553 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5154" for this suite. @ 09/02/25 09:07:18.525
• [0.395 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/02/25 09:07:18.554
  I0902 09:07:18.555007 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 09:07:18.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:18.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:18.642
  E0902 09:07:18.924962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:19.924786      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:20.925351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:21.925934      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:22.746909 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6557" for this suite. @ 09/02/25 09:07:22.758
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 09/02/25 09:07:22.775
  I0902 09:07:22.775407 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:07:22.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:22.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:22.818
  STEP: Creating a job @ 09/02/25 09:07:22.829
  STEP: Ensuring job reaches completions @ 09/02/25 09:07:22.844
  E0902 09:07:22.927617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:23.934802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:24.934542      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:25.930558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:26.931286      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:27.933046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:28.932833      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:29.932812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:30.933245      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:31.934819      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:32.934924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:33.935918      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:34.935181      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:35.021491 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1841" for this suite. @ 09/02/25 09:07:35.035
• [12.279 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/02/25 09:07:35.055
  I0902 09:07:35.055129 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 09:07:35.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:35.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:35.084
  I0902 09:07:35.088269 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:07:35.936308      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:36.937447      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:37.937621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 09:07:38.257
  I0902 09:07:38.257888 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-6031 --namespace=crd-publish-openapi-6031 create -f -'
  I0902 09:07:38.691171 18 builder.go:146] stderr: ""
  I0902 09:07:38.691411 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6928-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0902 09:07:38.692018 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-6031 --namespace=crd-publish-openapi-6031 delete e2e-test-crd-publish-openapi-6928-crds test-cr'
  E0902 09:07:38.939013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:39.073940 18 builder.go:146] stderr: ""
  I0902 09:07:39.074006 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6928-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0902 09:07:39.074195 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-6031 --namespace=crd-publish-openapi-6031 apply -f -'
  I0902 09:07:39.284195 18 builder.go:146] stderr: ""
  I0902 09:07:39.284275 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6928-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0902 09:07:39.284483 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-6031 --namespace=crd-publish-openapi-6031 delete e2e-test-crd-publish-openapi-6928-crds test-cr'
  I0902 09:07:39.450016 18 builder.go:146] stderr: ""
  I0902 09:07:39.450529 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6928-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/02/25 09:07:39.45
  I0902 09:07:39.451340 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-6031 explain e2e-test-crd-publish-openapi-6928-crds'
  I0902 09:07:39.616547 18 builder.go:146] stderr: ""
  I0902 09:07:39.617045 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6928-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0902 09:07:39.939081      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:40.939932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:41.940621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:07:42.146725 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6031" for this suite. @ 09/02/25 09:07:42.163
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/02/25 09:07:42.179
  I0902 09:07:42.179690 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 09:07:42.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:42.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:42.232
  STEP: Creating a test namespace @ 09/02/25 09:07:42.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:42.263
  STEP: Creating a service in the namespace @ 09/02/25 09:07:42.269
  STEP: Deleting the namespace @ 09/02/25 09:07:42.309
  STEP: Waiting for the namespace to be removed. @ 09/02/25 09:07:42.338
  E0902 09:07:42.941469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:43.941446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:44.941542      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:45.952172      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:46.946052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:47.957552      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:48.950912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/02/25 09:07:49.35
  STEP: Verifying there is no service in the namespace @ 09/02/25 09:07:49.392
  I0902 09:07:49.429279 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6565" for this suite. @ 09/02/25 09:07:49.464
  STEP: Destroying namespace "nsdeletetest-4232" for this suite. @ 09/02/25 09:07:49.482
  I0902 09:07:49.494828 18 framework.go:370] Namespace nsdeletetest-4232 was already deleted
  STEP: Destroying namespace "nsdeletetest-1575" for this suite. @ 09/02/25 09:07:49.495
• [7.337 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 09/02/25 09:07:49.518
  I0902 09:07:49.518426 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:07:49.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:49.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:49.609
  STEP: Counting existing ResourceQuota @ 09/02/25 09:07:49.615
  E0902 09:07:49.951057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:50.951713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:51.952090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:52.952558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:53.953964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:07:54.645
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:07:54.681
  E0902 09:07:54.955354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:55.956435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/02/25 09:07:56.704
  STEP: Creating a NodePort Service @ 09/02/25 09:07:56.758
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/02/25 09:07:56.815
  STEP: Ensuring resource quota status captures service creation @ 09/02/25 09:07:56.882
  E0902 09:07:56.957028      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:07:57.957319      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/02/25 09:07:58.895
  E0902 09:07:58.957836      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 09/02/25 09:07:59.036
  E0902 09:07:59.957600      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:00.958538      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:01.048476 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5662" for this suite. @ 09/02/25 09:08:01.058
• [11.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:08:01.078
  I0902 09:08:01.078564 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 09:08:01.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:01.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:01.118
  I0902 09:08:01.184498      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 09:08:01.260046      18 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0902 09:08:01.267078 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4782" for this suite. @ 09/02/25 09:08:01.279
• [0.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/02/25 09:08:01.303
  I0902 09:08:01.303565 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl-logs @ 09/02/25 09:08:01.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:01.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:01.341
  STEP: creating a pod @ 09/02/25 09:08:01.347
  I0902 09:08:01.347566 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0902 09:08:01.534838 18 builder.go:146] stderr: ""
  I0902 09:08:01.535217 18 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/02/25 09:08:01.535
  I0902 09:08:01.535562 18 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0902 09:08:01.959002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:02.959250      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:03.550019 18 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/02/25 09:08:03.55
  I0902 09:08:03.550553 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator'
  I0902 09:08:03.739981 18 builder.go:146] stderr: ""
  I0902 09:08:03.740154 18 builder.go:147] stdout: "I0902 09:08:02.628720       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/cz4 575\nI0902 09:08:02.829121       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/svx 225\nI0902 09:08:03.029624       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/4nk 295\nI0902 09:08:03.229233       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/7ln 253\nI0902 09:08:03.429575       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/dxs 435\nI0902 09:08:03.629005       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/dqx 460\n"
  STEP: limiting log lines @ 09/02/25 09:08:03.74
  I0902 09:08:03.741222 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator --tail=1'
  I0902 09:08:03.921615 18 builder.go:146] stderr: ""
  I0902 09:08:03.921773 18 builder.go:147] stdout: "I0902 09:08:03.829576       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/775 329\n"
  I0902 09:08:03.921804 18 logs.go:180] got output "I0902 09:08:03.829576       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/775 329\n"
  STEP: limiting log bytes @ 09/02/25 09:08:03.922
  I0902 09:08:03.922452 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator --limit-bytes=1'
  E0902 09:08:03.960291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:04.119307 18 builder.go:146] stderr: ""
  I0902 09:08:04.119389 18 builder.go:147] stdout: "I"
  I0902 09:08:04.119408 18 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/02/25 09:08:04.119
  I0902 09:08:04.119875 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator --tail=1 --timestamps'
  I0902 09:08:04.296887 18 builder.go:146] stderr: ""
  I0902 09:08:04.297005 18 builder.go:147] stdout: "2025-09-02T09:08:04.229324719Z I0902 09:08:04.229251       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/84xh 588\n"
  I0902 09:08:04.297277 18 logs.go:192] got output "2025-09-02T09:08:04.229324719Z I0902 09:08:04.229251       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/84xh 588\n"
  STEP: restricting to a time range @ 09/02/25 09:08:04.297
  E0902 09:08:04.960939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:05.961984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:06.805945 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator --since=1s'
  E0902 09:08:06.964655      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:07.319866 18 builder.go:146] stderr: ""
  I0902 09:08:07.319956 18 builder.go:147] stdout: "I0902 09:08:06.429082       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/4ps 222\nI0902 09:08:06.629484       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/2wwf 341\nI0902 09:08:06.830289       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/2dvp 339\nI0902 09:08:07.029479       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/98s 258\nI0902 09:08:07.228893       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/rqn 556\n"
  I0902 09:08:07.320454 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 logs logs-generator logs-generator --since=24h'
  I0902 09:08:07.776913 18 builder.go:146] stderr: ""
  I0902 09:08:07.777096 18 builder.go:147] stdout: "I0902 09:08:02.628720       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/cz4 575\nI0902 09:08:02.829121       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/svx 225\nI0902 09:08:03.029624       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/4nk 295\nI0902 09:08:03.229233       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/7ln 253\nI0902 09:08:03.429575       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/dxs 435\nI0902 09:08:03.629005       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/dqx 460\nI0902 09:08:03.829576       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/775 329\nI0902 09:08:04.028761       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/lpjx 224\nI0902 09:08:04.229251       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/84xh 588\nI0902 09:08:04.429638       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/cl7 393\nI0902 09:08:04.628959       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/thmt 278\nI0902 09:08:04.829495       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/5f64 229\nI0902 09:08:05.028771       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/blg 278\nI0902 09:08:05.229711       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/7tgz 290\nI0902 09:08:05.429122       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/tbk 503\nI0902 09:08:05.629617       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/xvb 503\nI0902 09:08:05.828843       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/7lgc 359\nI0902 09:08:06.029263       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/pgh9 272\nI0902 09:08:06.229706       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/62mc 232\nI0902 09:08:06.429082       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/4ps 222\nI0902 09:08:06.629484       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/2wwf 341\nI0902 09:08:06.830289       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/2dvp 339\nI0902 09:08:07.029479       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/98s 258\nI0902 09:08:07.228893       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/rqn 556\nI0902 09:08:07.429267       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/ns/pods/pwtk 541\nI0902 09:08:07.628735       1 logs_generator.go:76] 25 GET /api/v1/namespaces/default/pods/pj8g 590\n"
  I0902 09:08:07.777607 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-logs-1075 delete pod logs-generator'
  E0902 09:08:07.965935      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:08.966357      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:09.105360 18 builder.go:146] stderr: ""
  I0902 09:08:09.105437 18 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0902 09:08:09.105678 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1075" for this suite. @ 09/02/25 09:08:09.163
• [7.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/02/25 09:08:09.194
  I0902 09:08:09.194905 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:08:09.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:09.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:09.236
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:08:09.269
  E0902 09:08:09.967765      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:10.967509      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:11.967963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:12.969036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:08:13.361
  I0902 09:08:13.376968 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-f3247490-764f-4f03-9c67-8ea5eac96ba0 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:08:13.393
  I0902 09:08:13.427917 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7550" for this suite. @ 09/02/25 09:08:13.483
• [4.309 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/02/25 09:08:13.509
  I0902 09:08:13.510051 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:08:13.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:13.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:13.559
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:08:13.564
  E0902 09:08:13.970129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:14.970398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:15.971274      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:16.971773      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:08:17.667
  I0902 09:08:17.674160 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-398e30ef-b734-445e-ae0a-63b5a3fa6d24 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:08:17.735
  I0902 09:08:17.779498 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8527" for this suite. @ 09/02/25 09:08:17.795
• [4.419 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/02/25 09:08:17.931
  I0902 09:08:17.931220 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 09:08:17.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:17.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:17.968
  E0902 09:08:17.971914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:08:18.050261 18 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 09:08:18.972912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:19.972315      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:20.988248      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:21.988829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:22.989579      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:23.989911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:24.991014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:25.991703      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:26.991934      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:27.992892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:28.993047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:29.993446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:30.994454      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:31.997511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:32.997949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:33.998082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:34.998236      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:35.998467      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:36.998999      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:37.999166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:38.999985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:40.000583      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:41.001554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:42.001911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:43.002067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:44.003864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:45.003987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:46.004765      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:47.005516      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:48.004919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:49.005770      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:50.007018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:51.009928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:52.010019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:53.010159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:54.018805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:55.019060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:56.019527      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:57.019973      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:58.020130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:08:59.020970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:00.022613      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:01.023812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:02.025301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:03.026794      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:04.027431      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:05.035801      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:06.035287      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:07.035698      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:08.035894      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:09.043290      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:10.041124      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:11.041828      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:12.048012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:13.047914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:14.048127      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:15.048258      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:16.048472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:17.048947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:18.051710      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:18.074659 18 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/25 09:09:18.14
  I0902 09:09:18.141036 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/25 09:09:18.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:18.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:18.228
  STEP: Finding an available node @ 09/02/25 09:09:18.239
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 09:09:18.239
  E0902 09:09:19.052554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:20.052922      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 09:09:20.352
  I0902 09:09:20.372526 18 preemption.go:717] found a healthy node: ahkoog9eunoh-2
  STEP: Adding a custom resource @ 09/02/25 09:09:20.405
  E0902 09:09:21.053554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:22.054191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:23.054839      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:24.056261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:25.056891      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:26.057531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:26.667454 18 preemption.go:836] pods created so far: [1 1 1]
  I0902 09:09:26.667561 18 preemption.go:837] length of pods created so far: 3
  E0902 09:09:27.060825      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:28.061185      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:28.726862 18 preemption.go:854] pods created so far: [2 2 1]
  E0902 09:09:29.062512      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:30.062916      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:31.062958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:32.065063      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:33.065002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:34.065807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:35.065402      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/02/25 09:09:35.728
  STEP: Removing a custom resource @ 09/02/25 09:09:35.916
  STEP: Removing a custom resource @ 09/02/25 09:09:35.946
  I0902 09:09:35.971477 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4867" for this suite. @ 09/02/25 09:09:35.981
  I0902 09:09:35.996236 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 09:09:36.066798      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-6542" for this suite. @ 09/02/25 09:09:36.083
• [78.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/02/25 09:09:36.103
  I0902 09:09:36.104262 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:09:36.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:36.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:36.153
  STEP: Creating configMap with name projected-configmap-test-volume-map-a7a76910-79a6-4f5e-97cf-1199fa6039c3 @ 09/02/25 09:09:36.161
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:09:36.173
  E0902 09:09:37.076871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:38.076990      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:39.077511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:40.077762      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:09:40.237
  I0902 09:09:40.245228 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-be4c3a0a-ff66-4f44-911d-ae1fdaaabd6d container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 09:09:40.261
  I0902 09:09:40.305789 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5569" for this suite. @ 09/02/25 09:09:40.319
• [4.234 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/02/25 09:09:40.339
  I0902 09:09:40.339901 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:09:40.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:40.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:40.662
  STEP: Creating the pod @ 09/02/25 09:09:40.674
  E0902 09:09:41.081020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:42.081474      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:43.082328      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:43.270512 18 pod_client.go:173] Successfully updated pod "annotationupdate260eaa61-c527-425d-bbaa-4209ba1866e5"
  E0902 09:09:44.091097      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:45.091303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:45.305769 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9345" for this suite. @ 09/02/25 09:09:45.327
• [5.018 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/02/25 09:09:45.358
  I0902 09:09:45.358138 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:09:45.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:45.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:45.479
  STEP: Creating a pod to test service account token:  @ 09/02/25 09:09:45.484
  E0902 09:09:46.095802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:47.093276      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:48.094035      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:49.095121      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:09:49.607
  I0902 09:09:49.654713 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod test-pod-bc26467e-c7ec-4641-9554-aface4da9895 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 09:09:49.684
  I0902 09:09:49.765111 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-74" for this suite. @ 09/02/25 09:09:49.785
• [4.475 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/02/25 09:09:49.834
  I0902 09:09:49.834539 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:09:49.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:49.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:49.954
  STEP: Creating configMap with name configmap-test-volume-ae4c00eb-ee8d-48a9-9b21-d0e4ab2854c7 @ 09/02/25 09:09:49.959
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:09:49.995
  E0902 09:09:50.095291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:51.096166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:52.096918      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:53.097469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:09:54.045
  I0902 09:09:54.057996 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-6fc799ad-1768-4e38-9f29-e9f85d8fbd85 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 09:09:54.075
  E0902 09:09:54.098413      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:54.166899 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-795" for this suite. @ 09/02/25 09:09:54.178
• [4.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/02/25 09:09:54.255
  I0902 09:09:54.255224 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sysctl @ 09/02/25 09:09:54.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:54.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:54.363
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/02/25 09:09:54.374
  I0902 09:09:54.389745 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3450" for this suite. @ 09/02/25 09:09:54.399
• [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/02/25 09:09:54.439
  I0902 09:09:54.439716 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename disruption @ 09/02/25 09:09:54.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:09:54.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:09:54.531
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:09:54.553
  E0902 09:09:55.098567      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:56.099591      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/02/25 09:09:56.606
  STEP: Waiting for all pods to be running @ 09/02/25 09:09:56.631
  I0902 09:09:56.658903 18 disruption.go:691] running pods: 0 < 1
  E0902 09:09:57.104572      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:09:58.104675      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:09:58.641266 18 disruption.go:691] running pods: 0 < 1
  E0902 09:09:59.105182      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:00.106039      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/02/25 09:10:00.655
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:10:00.714
  STEP: Patching PodDisruptionBudget status @ 09/02/25 09:10:00.755
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:10:00.773
  I0902 09:10:00.794087 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1264" for this suite. @ 09/02/25 09:10:00.811
• [6.450 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 09/02/25 09:10:00.889
  I0902 09:10:00.889442 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 09:10:00.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:00.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:00.952
  E0902 09:10:01.105856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:02.107970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:03.108718      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:04.108881      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:05.009159 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5091" for this suite. @ 09/02/25 09:10:05.023
• [4.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/02/25 09:10:05.043
  I0902 09:10:05.043215 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 09:10:05.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:05.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:05.076
  STEP: set up a multi version CRD @ 09/02/25 09:10:05.107
  I0902 09:10:05.109381 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:10:05.109851      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:06.110505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:07.110719      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:08.111006      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:09.111769      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:10.137159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:11.163696      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/02/25 09:10:11.989
  STEP: check the unserved version gets removed @ 09/02/25 09:10:12.047
  E0902 09:10:12.138249      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:13.143042      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:14.144087      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/02/25 09:10:14.265
  E0902 09:10:15.144233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:16.145038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:17.187472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:18.187469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:19.188352      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:19.390332 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8565" for this suite. @ 09/02/25 09:10:19.431
• [14.413 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 09/02/25 09:10:19.456
  I0902 09:10:19.456151 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:10:19.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:19.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:19.495
  STEP: Setting up server cert @ 09/02/25 09:10:19.563
  E0902 09:10:20.189281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:10:20.845
  STEP: Deploying the webhook pod @ 09/02/25 09:10:20.874
  STEP: Wait for the deployment to be ready @ 09/02/25 09:10:20.947
  I0902 09:10:20.969170 18 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0902 09:10:21.189962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:22.190024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:10:22.987
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:10:23.023
  E0902 09:10:23.190706      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:24.024237 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 09:10:24.036
  E0902 09:10:24.191409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:24.205507 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2702" for this suite. @ 09/02/25 09:10:24.23
  STEP: Destroying namespace "webhook-markers-5393" for this suite. @ 09/02/25 09:10:24.252
• [4.822 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/02/25 09:10:24.278
  I0902 09:10:24.278384 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:10:24.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:24.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:24.331
  STEP: Creating configMap with name projected-configmap-test-volume-729ba2a3-10f7-4535-9953-b50c2e7ec49d @ 09/02/25 09:10:24.334
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:10:24.34
  E0902 09:10:25.192117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:26.192083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:27.192565      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:28.192790      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:10:28.418
  I0902 09:10:28.422158 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-configmaps-acadbc25-c25a-43b1-978f-d593a15bb3dc container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:10:28.455
  I0902 09:10:28.482910 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2115" for this suite. @ 09/02/25 09:10:28.492
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/02/25 09:10:28.503
  I0902 09:10:28.503791 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:10:28.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:28.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:28.569
  I0902 09:10:28.573614 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: creating the pod @ 09/02/25 09:10:28.576
  STEP: submitting the pod to kubernetes @ 09/02/25 09:10:28.576
  E0902 09:10:29.193838      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:30.194485      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:31.195140      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:32.195374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:32.763086 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-616" for this suite. @ 09/02/25 09:10:32.773
• [4.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/02/25 09:10:32.794
  I0902 09:10:32.795202 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 09:10:32.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:32.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:32.839
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/02/25 09:10:32.903
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 09:10:32.913
  I0902 09:10:33.060025 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:10:33.060110 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:10:33.196528      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:33.956060 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:10:33.956141 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:10:34.197209      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:34.957823 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 09:10:34.958507 18 fixtures.go:131] Node ahkoog9eunoh-2 is running 0 daemon pod, expected 1
  E0902 09:10:35.199264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:35.948288 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 09:10:35.948364 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/02/25 09:10:35.953
  I0902 09:10:36.114333 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 09:10:36.114745 18 fixtures.go:131] Node ahkoog9eunoh-2 is running 0 daemon pod, expected 1
  E0902 09:10:36.199942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:37.079172 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 09:10:37.079281 18 fixtures.go:131] Node ahkoog9eunoh-2 is running 0 daemon pod, expected 1
  E0902 09:10:37.200322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:38.073212 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 09:10:38.073325 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/02/25 09:10:38.073
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 09:10:38.083
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7052, will wait for the garbage collector to delete the pods @ 09/02/25 09:10:38.084
  I0902 09:10:38.153527 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.991945ms
  E0902 09:10:38.200772      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:38.254877 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.334808ms
  E0902 09:10:39.201529      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:40.065102 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:10:40.065187 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 09:10:40.076047 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42067"},"items":null}

  I0902 09:10:40.126164 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42067"},"items":null}

  I0902 09:10:40.156552 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 09:10:40.204662      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "daemonsets-7052" for this suite. @ 09/02/25 09:10:40.209
• [7.445 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/02/25 09:10:40.24
  I0902 09:10:40.240949 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename lease-test @ 09/02/25 09:10:40.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:40.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:40.315
  I0902 09:10:40.795235 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2892" for this suite. @ 09/02/25 09:10:40.824
• [0.610 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/02/25 09:10:40.852
  I0902 09:10:40.852457 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 09:10:40.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:40.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:40.93
  STEP: Performing setup for networking test in namespace pod-network-test-9244 @ 09/02/25 09:10:40.975
  STEP: creating a selector @ 09/02/25 09:10:40.975
  STEP: Creating the service pods in kubernetes @ 09/02/25 09:10:40.975
  I0902 09:10:40.975866 18 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 09:10:41.203757      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:42.205992      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:43.206856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:44.207799      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:45.212018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:46.212986      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:47.283656      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:48.284325      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:49.285049      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:50.285834      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:51.285869      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:52.285983      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:53.286146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:54.286969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:55.287995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/25 09:10:55.37
  E0902 09:10:56.288523      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:10:57.288896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:57.566293 18 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0902 09:10:57.566676 18 utils.go:495] Going to poll 10.233.65.3 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0902 09:10:57.571718 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.3:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9244 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:10:57.572045 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 09:10:57.572400 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9244/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.3%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 09:10:57.769928 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 09:10:57.770029 18 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0902 09:10:57.770062 18 utils.go:495] Going to poll 10.233.64.173 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0902 09:10:57.785151 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.173:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9244 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:10:57.785210 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 09:10:57.785308 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9244/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.173%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 09:10:57.953354 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0902 09:10:57.953452 18 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0902 09:10:57.955938 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9244" for this suite. @ 09/02/25 09:10:57.975
• [17.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/02/25 09:10:58.005
  I0902 09:10:58.005840 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:10:58.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:58.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:58.083
  STEP: Setting up server cert @ 09/02/25 09:10:58.151
  E0902 09:10:58.289148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:10:59.215
  STEP: Deploying the webhook pod @ 09/02/25 09:10:59.227
  STEP: Wait for the deployment to be ready @ 09/02/25 09:10:59.264
  E0902 09:10:59.290012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:10:59.342556 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:11:00.290217      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:01.291927      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:11:01.367
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:11:01.447
  E0902 09:11:02.290818      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:02.449756 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/25 09:11:02.459
  STEP: create a pod that should be denied by the webhook @ 09/02/25 09:11:02.53
  STEP: create a pod that causes the webhook to hang @ 09/02/25 09:11:02.58
  E0902 09:11:03.293143      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:04.294544      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:05.300287      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:06.295043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:07.295446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:08.295985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:09.297450      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:10.296933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:11.297764      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:12.298290      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/02/25 09:11:12.624
  STEP: create a configmap that should be admitted by the webhook @ 09/02/25 09:11:12.71
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/25 09:11:12.733
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/25 09:11:12.748
  STEP: create a namespace that bypass the webhook @ 09/02/25 09:11:12.758
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/02/25 09:11:12.825
  I0902 09:11:13.048213 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6408" for this suite. @ 09/02/25 09:11:13.098
  STEP: Destroying namespace "webhook-markers-8667" for this suite. @ 09/02/25 09:11:13.112
  STEP: Destroying namespace "exempted-namespace-5499" for this suite. @ 09/02/25 09:11:13.127
• [15.135 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/02/25 09:11:13.142
  I0902 09:11:13.142681 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:11:13.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:13.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:13.176
  STEP: Setting up server cert @ 09/02/25 09:11:13.243
  E0902 09:11:13.300777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:14.301157      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:11:15.289
  E0902 09:11:15.301892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 09/02/25 09:11:15.348
  STEP: Wait for the deployment to be ready @ 09/02/25 09:11:15.385
  I0902 09:11:15.652482 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 11, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 11, 15, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 11, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 11, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  E0902 09:11:16.303090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:17.303757      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:11:17.663
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:11:17.714
  E0902 09:11:18.303803      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:18.719996 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/02/25 09:11:18.751
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/02/25 09:11:18.761
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/25 09:11:18.761
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/02/25 09:11:18.762
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/02/25 09:11:18.764
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/25 09:11:18.764
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/25 09:11:18.766
  I0902 09:11:18.985071 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9054" for this suite. @ 09/02/25 09:11:19.005
  STEP: Destroying namespace "webhook-markers-7902" for this suite. @ 09/02/25 09:11:19.043
• [5.918 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/02/25 09:11:19.061
  I0902 09:11:19.061246 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:11:19.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:19.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:19.167
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/25 09:11:19.176
  E0902 09:11:19.304530      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:20.305134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:21.305624      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:22.305762      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:23.27
  I0902 09:11:23.276577 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-8d88ce1f-bd04-40da-b4d0-d08124ef02b1 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:11:23.292
  E0902 09:11:23.307626      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:23.325348 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6785" for this suite. @ 09/02/25 09:11:23.334
• [4.287 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/02/25 09:11:23.351
  I0902 09:11:23.352460 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:11:23.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:23.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:23.392
  STEP: Setting up server cert @ 09/02/25 09:11:23.445
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:11:23.939
  STEP: Deploying the webhook pod @ 09/02/25 09:11:23.961
  STEP: Wait for the deployment to be ready @ 09/02/25 09:11:23.999
  I0902 09:11:24.058172 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:11:24.309943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:25.311168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:26.079585 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 11, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 11, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:11:26.311508      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:27.311548      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:11:28.091
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:11:28.173
  E0902 09:11:28.312586      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:29.174761 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 09:11:29.193803 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:11:29.314076      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7743-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 09:11:29.738
  STEP: Creating a custom resource while v1 is storage version @ 09/02/25 09:11:29.798
  E0902 09:11:30.314365      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:31.315240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/02/25 09:11:32.178
  STEP: Patching the custom resource while v2 is storage version @ 09/02/25 09:11:32.246
  E0902 09:11:32.316724      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:33.264936 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 09:11:33.317806      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2046" for this suite. @ 09/02/25 09:11:33.322
  STEP: Destroying namespace "webhook-markers-8264" for this suite. @ 09/02/25 09:11:33.357
• [10.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/02/25 09:11:33.397
  I0902 09:11:33.397438 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:11:33.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:33.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:33.49
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:11:33.493
  E0902 09:11:34.316558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:35.316994      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:36.317758      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:37.317961      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:37.579
  I0902 09:11:37.584751 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-105b468a-a851-4856-8dba-31ed4ff60c72 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:11:37.597
  I0902 09:11:37.633309 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3279" for this suite. @ 09/02/25 09:11:37.641
• [4.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/02/25 09:11:37.654
  I0902 09:11:37.654787 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:11:37.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:37.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:37.725
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:11:37.73
  E0902 09:11:38.318232      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:39.318291      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:40.318562      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:41.318708      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:41.828
  I0902 09:11:41.834534 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod downwardapi-volume-6203ce0c-e5b8-4194-9c25-4da832a0c5c6 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:11:41.845
  I0902 09:11:41.877661 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2479" for this suite. @ 09/02/25 09:11:41.922
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/02/25 09:11:41.945
  I0902 09:11:41.945416 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 09:11:41.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:42.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:42.024
  I0902 09:11:42.029888 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:11:42.319095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:43.319928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:44.320263      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/02/25 09:11:44.573
  I0902 09:11:44.573772 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 create -f -'
  I0902 09:11:44.892975 18 builder.go:146] stderr: ""
  I0902 09:11:44.893049 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2905-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0902 09:11:44.893192 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 delete e2e-test-crd-publish-openapi-2905-crds test-foo'
  I0902 09:11:45.206945 18 builder.go:146] stderr: ""
  I0902 09:11:45.207121 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2905-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0902 09:11:45.208021 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 apply -f -'
  E0902 09:11:45.320933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:45.416168 18 builder.go:146] stderr: ""
  I0902 09:11:45.416362 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2905-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0902 09:11:45.416830 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 delete e2e-test-crd-publish-openapi-2905-crds test-foo'
  I0902 09:11:45.628560 18 builder.go:146] stderr: ""
  I0902 09:11:45.634726 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2905-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/02/25 09:11:45.634
  I0902 09:11:45.639394 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 create -f -'
  I0902 09:11:45.860731 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/02/25 09:11:45.861
  I0902 09:11:45.861449 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 create -f -'
  I0902 09:11:46.091406 18 builder.go:135] rc: 1
  I0902 09:11:46.092214 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 apply -f -'
  E0902 09:11:46.321235      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:46.336672 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/02/25 09:11:46.336
  I0902 09:11:46.337167 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 create -f -'
  I0902 09:11:46.506930 18 builder.go:135] rc: 1
  I0902 09:11:46.507432 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 --namespace=crd-publish-openapi-9424 apply -f -'
  I0902 09:11:46.722724 18 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/02/25 09:11:46.723
  I0902 09:11:46.723371 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 explain e2e-test-crd-publish-openapi-2905-crds'
  I0902 09:11:46.885119 18 builder.go:146] stderr: ""
  I0902 09:11:46.885301 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2905-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/02/25 09:11:46.886
  I0902 09:11:46.886612 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 explain e2e-test-crd-publish-openapi-2905-crds.metadata'
  I0902 09:11:47.105007 18 builder.go:146] stderr: ""
  I0902 09:11:47.105313 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2905-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0902 09:11:47.106025 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 explain e2e-test-crd-publish-openapi-2905-crds.spec'
  E0902 09:11:47.322980      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:47.395771 18 builder.go:146] stderr: ""
  I0902 09:11:47.396285 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2905-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0902 09:11:47.396929 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 explain e2e-test-crd-publish-openapi-2905-crds.spec.bars'
  I0902 09:11:47.725728 18 builder.go:146] stderr: ""
  I0902 09:11:47.725822 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2905-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/02/25 09:11:47.726
  I0902 09:11:47.743329 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=crd-publish-openapi-9424 explain e2e-test-crd-publish-openapi-2905-crds.spec.bars2'
  I0902 09:11:48.071045 18 builder.go:135] rc: 1
  E0902 09:11:48.323796      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:49.324071      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:50.328108      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:50.971059 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9424" for this suite. @ 09/02/25 09:11:50.992
• [9.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/02/25 09:11:51.007
  I0902 09:11:51.007069 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:11:51.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:51.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:51.067
  STEP: Creating secret with name secret-test-ef2e85db-9b30-4e31-b1ca-fea35d86bba3 @ 09/02/25 09:11:51.072
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:11:51.082
  E0902 09:11:51.327047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:52.328033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:53.329009      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:54.329786      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:55.155
  I0902 09:11:55.161502 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-167b19af-6956-4d58-ba18-c7506caf7f23 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:11:55.187
  I0902 09:11:55.211305 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8244" for this suite. @ 09/02/25 09:11:55.22
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/02/25 09:11:55.235
  I0902 09:11:55.235193 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename chunking @ 09/02/25 09:11:55.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:55.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:55.285
  STEP: creating a large number of resources @ 09/02/25 09:11:55.291
  E0902 09:11:55.330826      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:56.331177      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:57.332288      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:11:58.066754      18 request.go:752] "Waited before sending request" delay="1.015417776s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.233.0.1:443/api/v1/namespaces/chunking-5216/podtemplates"
  E0902 09:11:58.333430      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:11:59.346966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:00.347829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:01.348262      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:02.348286      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:03.348526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:04.349919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:05.349560      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:06.350261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:07.351991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:08.352913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:09.354114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:10.354271      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:12:10.524364      18 request.go:752] "Waited before sending request" delay="1.018379472s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.233.0.1:443/api/v1/namespaces/chunking-5216/podtemplates"
  E0902 09:12:11.355345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:12.355493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/02/25 09:12:12.95
  I0902 09:12:13.019720 18 chunking.go:163] Retrieved 40/40 results with rv 43152 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/02/25 09:12:13.019
  E0902 09:12:13.356710      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:14.357524      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:15.357950      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:16.358701      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:17.362587      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:18.359688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:19.360092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:20.361146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:21.361329      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:22.361617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:23.362547      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:24.363078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:25.363305      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:26.363495      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:27.489773      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:28.391126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:29.411284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:30.393956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:31.396055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:32.396181      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:12:33.036043 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:12:33.397460      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:34.397805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:35.398248      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:36.398171      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:37.398239      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:38.398434      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:39.399621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:40.399946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:41.400992      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:42.403968      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:43.404205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:44.405156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:45.405428      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:46.405998      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:47.407068      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:48.408125      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:49.408438      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:50.409027      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:51.409807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:52.411987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:12:53.037245 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:12:53.410748      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:54.411526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:55.412042      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:56.412208      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:57.412511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:58.412737      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:12:59.413108      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:00.415340      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:01.415128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:02.415729      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:03.416425      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:04.418176      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:05.417290      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:06.417528      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:07.418195      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:08.422002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:09.422176      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:10.422252      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:11.422557      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:12.423058      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:13:13.036011 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:13:13.423146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:14.424435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:15.424978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:16.426002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:17.427114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:18.427316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:19.427806      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:20.428001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:21.428736      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:22.428974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:23.429073      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:24.429374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:25.429923      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:26.430037      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:27.433944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:28.436938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:29.437348      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:30.437878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:31.438024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:32.439188      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:13:33.037875 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:13:33.439279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:34.439985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:35.440949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:36.441406      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:37.441543      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:38.442134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:39.443523      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:40.443970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:41.444202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:42.444416      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:43.444667      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:44.444979      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:45.447168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:46.448169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:47.449193      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:48.452476      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:49.452414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:50.453330      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:51.458026      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:52.453883      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:13:53.057675 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:13:53.455108      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:54.455436      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:55.455175      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:56.456241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:57.455947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:58.456112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:13:59.456203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:00.456899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:01.457582      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:02.458094      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:03.458912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:04.459083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:05.460914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:06.461087      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:07.461361      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:08.462177      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:09.462623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:10.463604      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:11.463908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:12.464682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:14:13.093123 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:14:13.464986      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:14.471416      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:15.468991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:16.488941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:17.492864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:18.482243      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:19.483097      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:20.483955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:21.485046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:22.485192      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:23.486033      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:24.486418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:25.486356      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:26.486496      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:27.489314      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:28.486892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:29.487177      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:30.487289      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:31.487466      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:32.487716      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:14:33.063817 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:14:33.488815      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:34.492949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:35.493166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:36.493678      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:37.494004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:38.494519      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:39.494963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:40.495002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:41.495234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:42.495489      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:43.496000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:44.496361      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:45.497838      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:46.498112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:47.498320      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:48.499502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:49.499443      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:50.500189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:51.500988      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:52.501127      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:14:53.044702 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:14:53.502148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:54.501837      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:55.506219      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:56.506996      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:57.507471      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:58.507570      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:14:59.507775      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:00.507957      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:01.508077      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:02.508465      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:03.508851      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:04.530896      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:05.531774      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:06.532044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:07.532258      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:08.532779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:09.533090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:10.533505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:11.533825      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:12.534007      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:15:13.059973 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:15:13.535911      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:14.536385      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:15.536238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:16.540809      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:17.537264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:18.538093      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:19.538115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:20.539392      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:21.540059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:22.540229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:23.540484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:24.541705      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:25.542175      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:26.543409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:27.543973      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:28.544498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:29.546821      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:30.546447      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:31.547335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:32.547882      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:15:33.043130 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:15:33.548411      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:34.548684      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:35.549046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:36.553312      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:37.549985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:38.550180      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:39.551020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:40.552106      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:41.552281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:42.552837      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:43.553672      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:44.553900      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:45.554083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:46.554992      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:47.555599      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:48.556517      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:49.557272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:50.575765      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:51.565368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:52.565570      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:15:53.057158 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:15:53.581062      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:54.574066      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:55.574506      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:56.575128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:57.576196      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:58.577467      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:15:59.577946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:00.579003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:01.579585      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:02.581464      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:03.583046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:04.583019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:05.583809      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:06.583853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:07.584963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:08.584957      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:09.588012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:10.596905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:11.597208      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:12.599816      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:16:13.066782 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:16:13.598946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:14.598940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:15.601103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:16.599427      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:17.599928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:18.599907      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:19.601004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:20.601514      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:21.601914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:22.602270      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:23.602316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:24.602623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:25.603038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:26.603484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:27.603837      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:28.604713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:29.606345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:30.606309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:31.607024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:32.608141      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:16:33.042715 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:16:33.609203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:34.631251      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:35.610275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:36.611231      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:37.612591      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:38.655668      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:39.664825      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:40.653124      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:41.703000      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:42.663899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:43.663235      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:44.664042      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:45.664493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:46.664531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:47.664978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:48.666067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:49.666474      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:50.668112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:51.668474      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:52.668964      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:16:53.069504 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:16:53.674269      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:54.674253      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:55.674942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:56.690957      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:57.691297      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:58.692027      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:16:59.692207      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:00.692390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:01.693222      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:02.694943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:03.706938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:04.707871      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:05.708055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:06.709374      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:07.709747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:08.711198      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:09.711309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:10.712105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:11.713034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:12.713268      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:17:13.043112 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:17:13.717095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:14.716925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:15.718279      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:16.747814      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:17.723861      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:18.724072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:19.724967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:20.725375      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:21.726055      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:22.726120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:23.727063      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:24.727359      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:25.728091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:26.729021      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:27.729191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:28.730179      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:29.730841      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:30.735283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:31.736004      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:32.736142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:17:33.036872 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:17:33.736890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:34.737121      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:35.737907      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:36.738092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:37.738478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:38.738590      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:39.738951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:40.739254      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:41.745876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:42.746856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:43.748743      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:44.749013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:45.749998      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:46.750191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:47.751305      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:48.752115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:49.752746      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:50.752865      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:51.753771      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:52.754114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:17:53.034315 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:17:53.754958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:54.755771      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:55.756895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:56.772225      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:57.765953      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:58.766067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:17:59.766874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:00.767002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:01.767424      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:02.767623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:03.768283      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:04.768876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:05.769349      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:06.769788      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:07.770515      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:08.770878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:09.772001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:10.772393      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:11.773117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:12.773493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:18:13.077564 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:18:13.773711      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:14.774299      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:15.774382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:16.774487      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:17.775341      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:18.777447      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:19.778103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:20.778339      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:21.781410      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:22.782186      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:23.782792      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:24.795397      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:25.795717      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:26.797185      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:27.797209      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:28.797400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:29.799220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:30.799051      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:31.799499      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:32.800259      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:18:33.036608 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:18:33.800944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:34.801122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:35.801404      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:36.815866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:37.816189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:38.818088      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:39.817991      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:40.819066      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:41.820263      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:42.819970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:43.820164      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:44.820435      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:45.821295      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:46.820723      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:47.821007      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:48.821436      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:49.823034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:50.823318      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:51.823682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:52.824687      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:18:53.041466 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:18:53.825372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:54.825912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:55.826942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:56.826739      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:57.827598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:58.830064      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:18:59.829347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:00.829880      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:01.830702      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:02.830859      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:03.834688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:04.835877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:05.836280      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:06.836456      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:07.836760      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:08.844970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:09.839034      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:10.839326      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:11.840010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:12.842595      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:19:13.060434 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:19:13.842170      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:14.842921      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:15.843065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:16.844098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:17.844693      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:18.854206      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:19.855445      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:20.855683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:21.855940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:22.856199      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:23.856971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:24.857115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:25.857322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:26.857688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:27.857965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:28.858105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:29.858316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:30.858682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:31.860069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:32.860050      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:19:33.053323 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:19:33.860589      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:34.861043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:35.861317      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:36.862372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:37.862930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:38.863307      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:39.863767      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:40.864278      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:41.864613      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:42.864891      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:43.866049      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:44.868924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:45.869591      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:46.870114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:47.870842      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:48.871505      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:49.871995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:50.872962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:51.876015      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:52.876225      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:19:53.054506 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:19:53.877046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:54.877593      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:55.879301      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:56.878563      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:57.883288      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:58.880400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:19:59.880290      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:00.881185      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:01.881378      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:02.881440      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:03.882045      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:04.882864      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:05.886239      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:06.887308      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:07.887819      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:08.887949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:09.888494      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:10.888422      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:11.889316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:12.891108      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:20:13.068441 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:20:13.891850      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:14.891861      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:15.893619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:16.892802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:17.892892      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:18.893215      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:19.893938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:20.894683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:21.896100      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:22.896847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:23.896994      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:24.897511      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:25.899951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:26.900243      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:27.900327      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:28.900806      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:29.907949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:30.903933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:31.903090      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:32.903995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:20:33.088591 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:20:33.904083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:34.908985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:35.908621      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:36.909890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:37.910244      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:38.910536      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:39.910895      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:40.911769      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:41.912083      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:42.912565      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:43.913521      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:44.914448      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:45.914876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:46.914805      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:47.926451      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:48.926713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:49.927214      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:50.928028      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:51.932202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:52.932600      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:20:53.045206 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:20:53.934067      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:54.932909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:55.933843      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:56.934042      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:57.934112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:58.934688      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:20:59.934908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:00.936019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:01.937943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:02.938524      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:03.939133      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:04.939160      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:05.939474      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:06.939937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:07.940757      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:08.941047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:09.941390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:10.941395      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:11.942880      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:12.942862      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:21:13.034721 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:21:13.943059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:14.944147      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:15.944534      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:16.945108      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:17.945412      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:18.946416      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:19.946915      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:20.947438      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:21.947986      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:22.949056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:23.949001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:24.949245      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:25.949521      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:26.949801      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:27.950938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:28.951162      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:29.951441      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:30.952445      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:31.952585      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:32.953189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:21:33.104525 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:21:33.953387      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:34.953908      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:35.954446      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:36.955917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:37.955217      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:38.956550      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:39.957056      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:40.957617      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:41.957905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:42.963860      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:43.964082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:44.964212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:45.966761      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:46.966425      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:47.965122      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:48.965256      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:49.965899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:50.966537      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:51.966901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:52.967134      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:21:53.107129 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMxNTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0902 09:21:53.971325      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:54.971529      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:55.972810      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:56.973293      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:57.974531      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:58.976527      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:21:59.975182      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:00.975563      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:01.976216      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:02.976373      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:03.976598      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:04.976894      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:05.977263      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:06.977457      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:07.978427      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:08.977874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:09.978103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:10.978390      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:11.978376      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:12.979131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:13.087559 18 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0902 09:22:13.087725 18 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/02/25 09:22:13.088
  STEP: retrieving all remaining pages @ 09/02/25 09:22:13.099
  I0902 09:22:13.119776 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0902 09:22:13.132100 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0902 09:22:13.156220 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0902 09:22:13.167928 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0902 09:22:13.179928 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0902 09:22:13.189950 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0902 09:22:13.243583 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ0NDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0902 09:22:13.254514 18 chunking.go:221] Retrieved 40/40 results with rv 44444 and continue 
  I0902 09:22:13.255356 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5216" for this suite. @ 09/02/25 09:22:13.267
• [618.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/02/25 09:22:13.282
  I0902 09:22:13.282580 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:22:13.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:13.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:13.371
  STEP: Creating ReplicationController "e2e-rc-hhdmq" @ 09/02/25 09:22:13.381
  I0902 09:22:13.407573 18 rc.go:795] Get Replication Controller "e2e-rc-hhdmq" to confirm replicas
  E0902 09:22:13.979190      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:14.407928 18 rc.go:795] Get Replication Controller "e2e-rc-hhdmq" to confirm replicas
  I0902 09:22:14.419375 18 rc.go:804] Found 1 replicas for "e2e-rc-hhdmq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hhdmq" @ 09/02/25 09:22:14.419
  STEP: Updating a scale subresource @ 09/02/25 09:22:14.432
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hhdmq" @ 09/02/25 09:22:14.479
  I0902 09:22:14.480189 18 rc.go:795] Get Replication Controller "e2e-rc-hhdmq" to confirm replicas
  E0902 09:22:14.979387      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:15.501523 18 rc.go:795] Get Replication Controller "e2e-rc-hhdmq" to confirm replicas
  I0902 09:22:15.666016 18 rc.go:804] Found 2 replicas for "e2e-rc-hhdmq" replication controller
  I0902 09:22:15.666348 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2382" for this suite. @ 09/02/25 09:22:15.78
• [2.550 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/02/25 09:22:15.834
  I0902 09:22:15.834379 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:22:15.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:15.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:15.934
  STEP: Creating configMap with name configmap-test-volume-d5c81610-6918-4880-a995-900edc889bfb @ 09/02/25 09:22:15.97
  E0902 09:22:15.980829      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:22:15.989
  E0902 09:22:16.981939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:17.982372      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:18.985553      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:19.983074      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:22:20.156
  I0902 09:22:20.169873 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-d8bacc2e-60a6-4307-b47a-abe43b90b3c1 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:22:20.225
  I0902 09:22:20.326284 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3914" for this suite. @ 09/02/25 09:22:20.367
• [4.599 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 09/02/25 09:22:20.433
  I0902 09:22:20.433539 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 09:22:20.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:20.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:20.532
  E0902 09:22:20.984013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:21.996856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:22.988168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:23.987877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:24.677237 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5439" for this suite. @ 09/02/25 09:22:24.689
• [4.300 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/02/25 09:22:24.752
  I0902 09:22:24.752361 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:22:24.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:24.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:24.866
  STEP: Creating secret with name secret-test-88184434-cbd9-43b5-bd6e-2913ea8d0bf6 @ 09/02/25 09:22:24.873
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:22:24.901
  E0902 09:22:24.988909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:25.989337      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:26.989560      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:27.990320      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:28.990977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:22:29.075
  I0902 09:22:29.109734 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-3067c736-49e0-4d91-9fec-e15aca966b8f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:22:29.131
  I0902 09:22:29.211334 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8859" for this suite. @ 09/02/25 09:22:29.22
• [4.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/02/25 09:22:29.244
  I0902 09:22:29.244307 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:22:29.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:29.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:29.321
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/02/25 09:22:29.332
  E0902 09:22:29.992526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:30.992420      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:31.992943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:32.993277      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:22:33.377
  I0902 09:22:33.392376 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-72acceef-c7a7-44af-bd2d-9b5880b6cd08 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:22:33.417
  I0902 09:22:33.490965 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5707" for this suite. @ 09/02/25 09:22:33.499
• [4.272 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/02/25 09:22:33.516
  I0902 09:22:33.516977 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename deployment @ 09/02/25 09:22:33.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:33.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:33.566
  I0902 09:22:33.640318 18 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0902 09:22:33.994073      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:34.995236      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:35.995246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:37.011777      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:37.996025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:38.666893 18 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 09:22:38.667
  I0902 09:22:38.667186 18 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/02/25 09:22:38.706
  E0902 09:22:38.997903      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:39.998060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:40.764108 18 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c4cac59-2a68-4eb8-bc64-ac301110486f",
      ResourceVersion: (string) (len=5) "45116",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401758,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 09:22:40.778526 18 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85f2aecd-3234-4292-a32a-090fb1a9f431",
      ResourceVersion: (string) (len=5) "45106",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401758,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3c4cac59-2a68-4eb8-bc64-ac301110486f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 63 34 63 61 63  35 39 2d 32 61 36 38 2d  |\"3c4cac59-2a68-|
              00000120  34 65 62 38 2d 62 63 36  34 2d 61 63 33 30 31 31  |4eb8-bc64-ac3011|
              00000130  31 30 34 38 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |10486f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:22:40.828249 18 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-x5wvx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-x5wvx",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-9075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "681031fd-dd93-40f1-991f-2de15c12a14c",
      ResourceVersion: (string) (len=5) "45104",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401758,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "85f2aecd-3234-4292-a32a-090fb1a9f431",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 32 61 65 63 64 2d 33  |d\":\"85f2aecd-3|
              00000090  32 33 34 2d 34 32 39 32  2d 61 33 32 61 2d 30 39  |234-4292-a32a-09|
              000000a0  30 66 62 31 61 39 66 34  33 31 5c 22 7d 22 3a 7b  |0fb1a9f431\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 35 34 5c 22 7d 22 3a  |.233.64.254\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6ffm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6ffm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ahkoog9eunoh-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401760,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.238",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.238"
        }
      },
      PodIP: (string) (len=13) "10.233.64.254",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.254"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401758,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892401759,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://a64de71506eed65ff99b9842735a4fee4a3d1dfa30625b919f2f599ab4594c9e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x6ffm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 09:22:40.834002 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9075" for this suite. @ 09/02/25 09:22:40.843
• [7.340 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 09/02/25 09:22:40.862
  I0902 09:22:40.862440 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:22:40.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:40.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:40.909
  STEP: Setting up server cert @ 09/02/25 09:22:40.959
  E0902 09:22:40.998093      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:41.998685      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:22:42.021
  STEP: Deploying the webhook pod @ 09/02/25 09:22:42.035
  STEP: Wait for the deployment to be ready @ 09/02/25 09:22:42.064
  I0902 09:22:42.108701 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:22:42.998841      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:43.999150      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:44.260301 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 22, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 22, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 22, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 22, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:22:45.001272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:46.009914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:22:46.297
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:22:46.537
  E0902 09:22:47.010453      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:47.537319 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 09:22:47.551
  STEP: create the configmap with a random name @ 09/02/25 09:22:47.657
  STEP: verify the configmap is mutated @ 09/02/25 09:22:47.693
  STEP: create the configmap with 'skip-me' name @ 09/02/25 09:22:47.697
  E0902 09:22:48.328423      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:48.582756 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5879" for this suite. @ 09/02/25 09:22:48.611
  STEP: Destroying namespace "webhook-markers-7066" for this suite. @ 09/02/25 09:22:48.679
• [7.850 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 09/02/25 09:22:48.715
  I0902 09:22:48.715571 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 09:22:48.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:48.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:48.81
  STEP: creating a Service @ 09/02/25 09:22:48.825
  STEP: watching for the Service to be added @ 09/02/25 09:22:48.878
  I0902 09:22:48.882922 18 service.go:3456] Found Service test-service-d5z9v in namespace services-5579 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30366}]
  I0902 09:22:48.883089 18 service.go:3463] Service test-service-d5z9v created
  STEP: Getting /status @ 09/02/25 09:22:48.883
  I0902 09:22:48.913238 18 service.go:3474] Service test-service-d5z9v has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/02/25 09:22:48.913
  STEP: watching for the Service to be patched @ 09/02/25 09:22:48.949
  I0902 09:22:48.953268 18 service.go:3497] observed Service test-service-d5z9v in namespace services-5579 with annotations: map[] & LoadBalancer: {[]}
  I0902 09:22:48.953384 18 service.go:3500] Found Service test-service-d5z9v in namespace services-5579 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00112e920 []}]}
  I0902 09:22:48.953423 18 service.go:3507] Service test-service-d5z9v has service status patched
  STEP: updating the ServiceStatus @ 09/02/25 09:22:48.953
  I0902 09:22:48.980915 18 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/02/25 09:22:48.981
  I0902 09:22:48.984096 18 service.go:3538] Observed Service test-service-d5z9v in namespace services-5579 with annotations: map[] & Conditions: []
  I0902 09:22:48.984157 18 service.go:3549] Observed Service test-service-d5z9v in namespace services-5579 with annotations: map[patchedstatus:true] & Conditions: []
  I0902 09:22:48.984816 18 service.go:3545] Found Service test-service-d5z9v in namespace services-5579 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 09:22:48.984910 18 service.go:3556] Service test-service-d5z9v has service status updated
  STEP: patching the service @ 09/02/25 09:22:48.985
  STEP: watching for the Service to be patched @ 09/02/25 09:22:49.098
  I0902 09:22:49.102661 18 service.go:3579] observed Service test-service-d5z9v in namespace services-5579 with labels: map[test-service-static:true]
  I0902 09:22:49.102744 18 service.go:3579] observed Service test-service-d5z9v in namespace services-5579 with labels: map[test-service-static:true]
  I0902 09:22:49.102776 18 service.go:3579] observed Service test-service-d5z9v in namespace services-5579 with labels: map[test-service-static:true]
  I0902 09:22:49.102879 18 service.go:3582] Found Service test-service-d5z9v in namespace services-5579 with labels: map[test-service:patched test-service-static:true]
  I0902 09:22:49.102940 18 service.go:3589] Service test-service-d5z9v patched
  STEP: deleting the service @ 09/02/25 09:22:49.102
  STEP: watching for the Service to be deleted @ 09/02/25 09:22:49.161
  I0902 09:22:49.169528 18 service.go:3613] Observed event: ADDED
  I0902 09:22:49.170456 18 service.go:3613] Observed event: MODIFIED
  I0902 09:22:49.170703 18 service.go:3613] Observed event: MODIFIED
  I0902 09:22:49.170736 18 service.go:3613] Observed event: MODIFIED
  I0902 09:22:49.170947 18 service.go:3609] Found Service test-service-d5z9v in namespace services-5579 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0902 09:22:49.170982 18 service.go:3618] Service test-service-d5z9v deleted
  I0902 09:22:49.172475 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5579" for this suite. @ 09/02/25 09:22:49.212
• [0.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/02/25 09:22:49.262
  I0902 09:22:49.262669 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 09:22:49.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:49.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:49.305
  STEP: creating the pod @ 09/02/25 09:22:49.314
  E0902 09:22:49.331906      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for pod running @ 09/02/25 09:22:49.377
  E0902 09:22:50.332713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:51.338675      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/02/25 09:22:51.406
  I0902 09:22:51.414666 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2779 PodName:var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:22:51.414796 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 09:22:51.415560 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-2779/pods/var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  E0902 09:22:51.452404      18 websocket.go:297] Unknown stream id 1, discarding message
  I0902 09:22:51.553830 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 09/02/25 09:22:51.553
  I0902 09:22:51.562258 18 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2779 PodName:var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:22:51.562322 18 exec_util.go:68] ExecWithOptions: Clientset creation
  I0902 09:22:51.562509 18 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-2779/pods/var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0902 09:22:51.658125 18 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 09/02/25 09:22:51.658
  I0902 09:22:52.254919 18 pod_client.go:173] Successfully updated pod "var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c"
  STEP: waiting for annotated pod running @ 09/02/25 09:22:52.255
  STEP: deleting the pod gracefully @ 09/02/25 09:22:52.318
  I0902 09:22:52.318178 18 delete.go:62] Deleting pod "var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c" in namespace "var-expansion-2779"
  E0902 09:22:52.338742      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:22:52.359820 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-b2a453ce-4ef4-4c87-ac0f-2cb00095186c" to be fully deleted
  E0902 09:22:53.339335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:54.339920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:55.343800      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:56.341917      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:57.342014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:58.343042      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:22:59.343840      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:00.344388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:01.350019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:02.348351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:03.348220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:04.349962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:05.349518      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:06.350128      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:07.351593      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:08.352010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:09.353072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:10.353264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:11.354080      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:12.354119      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:13.354394      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:14.355726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:15.355772      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:16.355963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:17.356793      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:18.357288      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:19.357481      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:20.357802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:21.357919      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:22.358079      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:23.358152      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:24.358420      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:23:24.795726 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2779" for this suite. @ 09/02/25 09:23:24.809
• [35.566 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/02/25 09:23:24.832
  I0902 09:23:24.833024 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:23:24.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:24.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:24.911
  I0902 09:23:25.107817 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2552" for this suite. @ 09/02/25 09:23:25.157
• [0.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/02/25 09:23:25.176
  I0902 09:23:25.176548 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:23:25.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:25.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:25.263
  STEP: Creating configMap with name configmap-projected-all-test-volume-1272705a-32d6-404a-b55d-367d46ee1869 @ 09/02/25 09:23:25.27
  STEP: Creating secret with name secret-projected-all-test-volume-45fe812f-f672-426c-98d4-c5acece7f183 @ 09/02/25 09:23:25.285
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/02/25 09:23:25.297
  I0902 09:23:25.348442      18 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0902 09:23:25.358747      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:26.360206      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:27.361359      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:28.361554      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:29.363841      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:23:29.417
  I0902 09:23:29.427256 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod projected-volume-29e31e2a-f1cb-4574-8998-4926087006b8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:23:29.444
  I0902 09:23:29.572031 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1888" for this suite. @ 09/02/25 09:23:29.582
• [4.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/02/25 09:23:29.605
  I0902 09:23:29.605445 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:23:29.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:29.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:29.697
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/25 09:23:29.708
  E0902 09:23:30.383861      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:31.367142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:32.366115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:33.366365      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:23:33.816
  I0902 09:23:33.825308 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-7fde76ec-0638-4b0a-ac78-b673781a2821 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:23:33.84
  I0902 09:23:33.905410 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-723" for this suite. @ 09/02/25 09:23:33.938
• [4.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/02/25 09:23:33.964
  I0902 09:23:33.964121 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subpath @ 09/02/25 09:23:33.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:34.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:34.032
  STEP: Setting up data @ 09/02/25 09:23:34.044
  STEP: Creating pod pod-subpath-test-configmap-mg2z @ 09/02/25 09:23:34.077
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 09:23:34.077
  E0902 09:23:34.367379      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:35.383909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:36.384229      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:37.384785      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:38.385117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:39.386001      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:40.386270      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:41.386804      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:42.387788      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:43.388205      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:44.388905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:45.389350      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:46.390193      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:47.391008      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:48.394984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:49.392169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:50.392962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:51.393115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:52.394397      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:53.395300      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:54.395492      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:55.395944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:56.397070      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:23:57.398874      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:23:58.277
  I0902 09:23:58.291718 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-subpath-test-configmap-mg2z container test-container-subpath-configmap-mg2z: <nil>
  STEP: delete the pod @ 09/02/25 09:23:58.309
  STEP: Deleting pod pod-subpath-test-configmap-mg2z @ 09/02/25 09:23:58.359
  I0902 09:23:58.359881 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-mg2z" in namespace "subpath-3136"
  I0902 09:23:58.365980 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3136" for this suite. @ 09/02/25 09:23:58.378
• [24.434 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 09/02/25 09:23:58.398
  I0902 09:23:58.398916 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:23:58.399138      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 09:23:58.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:58.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:58.478
  STEP: Creating service test in namespace statefulset-985 @ 09/02/25 09:23:58.487
  I0902 09:23:58.585933 18 wait.go:44] Found 0 stateful pods, waiting for 1
  E0902 09:23:59.401566      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:00.400978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:01.401189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:02.400938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:03.402036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:04.402683      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:05.403243      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:06.404380      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:07.404976      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:08.405294      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:08.604710 18 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/02/25 09:24:08.632
  I0902 09:24:08.694500 18 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 09:24:08.694582 18 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0902 09:24:09.405847      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:10.405978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:11.406323      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:12.407126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:13.407728      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:14.408048      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:15.412960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:16.413418      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:17.413690      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:18.432213      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:18.688533 18 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 09:24:18.688776 18 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/02/25 09:24:18.744
  STEP: Delete all of the StatefulSets @ 09/02/25 09:24:18.754
  STEP: Verify that StatefulSets have been deleted @ 09/02/25 09:24:18.779
  I0902 09:24:18.798229 18 statefulset.go:138] Deleting all statefulset in ns statefulset-985
  I0902 09:24:19.009341 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-985" for this suite. @ 09/02/25 09:24:19.069
• [20.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/02/25 09:24:19.125
  I0902 09:24:19.130709 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:24:19.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:19.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:19.221
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/02/25 09:24:19.235
  E0902 09:24:19.417956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:20.418239      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/02/25 09:24:21.379
  STEP: Then the orphan pod is adopted @ 09/02/25 09:24:21.398
  E0902 09:24:21.418903      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:22.421944      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:22.434668 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9456" for this suite. @ 09/02/25 09:24:22.454
• [3.348 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/02/25 09:24:22.477
  I0902 09:24:22.477192 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 09:24:22.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:22.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:22.53
  E0902 09:24:23.429674      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:24.423473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:24.781791 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9053" for this suite. @ 09/02/25 09:24:24.794
• [2.331 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 09/02/25 09:24:24.808
  I0902 09:24:24.808568 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:24:24.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:24.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:24.893
  STEP: Creating a ResourceQuota with best effort scope @ 09/02/25 09:24:24.899
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 09:24:24.957
  E0902 09:24:25.430790      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:26.431148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/02/25 09:24:26.992
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 09:24:27.005
  E0902 09:24:27.431419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:28.432225      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/02/25 09:24:29.013
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/02/25 09:24:29.054
  E0902 09:24:29.434809      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:30.432324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/02/25 09:24:31.071
  E0902 09:24:31.432498      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:32.432923      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 09:24:33.11
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 09:24:33.203
  E0902 09:24:33.433660      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:34.433814      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/02/25 09:24:35.245
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/02/25 09:24:35.278
  E0902 09:24:35.437149      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:36.437971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/02/25 09:24:37.284
  E0902 09:24:37.439053      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:38.439230      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 09:24:39.291
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 09:24:39.318
  E0902 09:24:39.439359      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:40.439495      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:41.328255 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2986" for this suite. @ 09/02/25 09:24:41.339
• [16.549 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/02/25 09:24:41.364
  I0902 09:24:41.364428 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:24:41.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:41.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:41.417
  STEP: Creating pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944 @ 09/02/25 09:24:41.427
  E0902 09:24:41.439800      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:42.440394      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:43.440768      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:24:43.477
  I0902 09:24:43.483051 18 container_probe.go:1748] Initial restart count of pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 is 0
  I0902 09:24:43.491803 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:44.442307      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:45.442400      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:45.501435 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:46.457434      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:47.444502      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:47.512845 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:48.444878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:49.445298      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:49.524709 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:50.446717      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:51.446949      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:51.554123 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:52.447105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:53.447726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:53.590931 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:54.448534      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:55.449147      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:55.607088 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:56.449770      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:57.451307      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:57.618113 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:24:58.450526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:24:59.451149      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:24:59.634873 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:00.451018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:01.452930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:01.646336 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:02.452126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:03.452436      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:03.657309 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:04.453789      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:05.454129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:05.697401 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:06.454491      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:07.464002      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:07.742298 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:08.465997      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:09.467103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:09.750935 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:10.467319      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:11.467939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:11.760142 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:12.470013      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:13.471924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:13.768028 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:14.472040      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:15.472601      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:15.776196 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:16.472977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:17.474508      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:17.782769 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:18.475873      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:19.476484      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:19.792919 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:20.476181      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:21.477174      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:21.800968 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:22.477441      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:23.477963      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:23.832415 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:24.478129      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:25.478962      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:25.843985 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:26.479059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:27.479932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:27.853468 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:28.479890      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:29.481785      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:29.865218 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:30.481905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:31.484309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:31.873091 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:32.483619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:33.484082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:33.881858 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:34.485142      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:35.485375      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:35.899889 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:36.485998      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:37.486930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:37.908187 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:38.487395      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:39.487726      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:39.919525 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:40.488117      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:41.488382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:41.942589 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:42.488828      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:43.488937      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:43.950117 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:44.489135      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:45.491045      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:45.968894 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:46.491249      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:47.492074      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:47.976616 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:48.492989      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:49.493272      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:50.016864 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:50.494814      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:51.495152      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:52.050191 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:52.496473      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:53.496863      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:54.060469 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:54.497212      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:55.497941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:56.117071 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:56.499901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:57.500158      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:25:58.174526 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:25:58.502220      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:25:59.509038      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:00.184922 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:00.508206      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:01.506752      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:02.207899 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:02.506987      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:03.507850      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:04.250415 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:04.510235      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:05.509877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:06.258752 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:06.510905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:07.511877      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:08.270069 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:08.512044      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:09.512138      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:10.279690 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:10.512886      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:11.513860      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:12.287731 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:12.514597      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:13.514846      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:14.325689 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:14.515921      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:15.516208      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:16.339675 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:16.516420      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:17.516966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:18.348084 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:18.517261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:19.517807      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:20.356752 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:20.517925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:21.518315      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:22.366296 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:22.518417      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:23.518881      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:24.376326 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:24.520029      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:25.521662      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:26.385069 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:26.521984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:27.522855      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:28.393578 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:28.522801      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:29.524131      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:30.406365 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:30.523520      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:31.524202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:32.416959 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:32.524592      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:33.524914      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:34.435188 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:34.526036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:35.527901      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:36.510000 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:36.527867      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:37.527909      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:38.528266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:38.593502 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:39.528596      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:40.528980      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:40.602822 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:41.534030      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:42.534865      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:42.611576 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:43.535045      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:44.536012      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:44.624432 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:45.536227      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:46.536984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:46.645436 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:47.538152      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:48.538423      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:48.659495 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:49.539303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:50.539851      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:50.677822 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:51.540159      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:52.540309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:52.696569 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:53.540922      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:54.541005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:54.918140 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:55.541388      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:56.541384      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:56.928173 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:57.542006      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:26:58.542612      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:26:58.939548 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:26:59.546904      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:00.543928      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:00.955092 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:01.544343      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:02.544869      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:02.963597 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:03.573478      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:04.545576      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:04.982833 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:05.546098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:06.547104      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:06.996094 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:07.547857      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:08.548409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:09.006703 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:09.548354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:10.549269      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:11.024978 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:11.549016      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:12.551526      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:13.041595 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:13.550675      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:14.550946      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:15.048747 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:15.551322      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:16.551266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:17.071573 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:17.551872      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:18.552422      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:19.084704 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:19.554174      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:20.554625      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:21.098860 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:21.555296      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:22.556373      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:23.107179 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:23.556929      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:24.557196      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:25.143247 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:25.558828      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:26.558966      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:27.157344 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:27.559812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:28.559971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:29.168500 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:29.561022      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:30.561202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:31.177871 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:31.561604      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:32.561912      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:33.214767 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:33.562784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:34.564275      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:35.224352 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:35.563868      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:36.564791      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:37.235232 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:37.565682      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:38.565092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:39.273690 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:39.566078      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:40.566355      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:41.282436 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:41.566354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:42.568753      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:43.291001 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:43.567529      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:44.567930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:45.303098 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:45.568082      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:46.568284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:47.333182 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:47.569116      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:48.569018      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:49.344858 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:49.569197      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:50.569354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:51.376193 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:51.570169      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:52.570521      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:53.385686 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:53.570876      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:54.571155      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:55.395958 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:55.572569      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:56.573360      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:57.406229 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:57.576472      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:27:58.576391      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:27:59.443164 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:27:59.576936      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:00.580899      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:01.454176 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:01.582028      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:02.582493      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:03.464358 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:03.583335      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:04.583925      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:05.476527 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:05.584707      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:06.585025      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:07.487485 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:07.585264      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:08.588201      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:09.499248 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:09.586148      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:10.586351      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:11.527753 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:11.597812      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:12.588393      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:13.564124 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:13.588336      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:14.588698      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:15.575676 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:15.588940      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:16.589182      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:17.584061 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:17.589690      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:18.590105      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:19.590793      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:19.599813 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:20.591027      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:21.591252      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:21.611747 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:22.591501      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:23.591951      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:23.630209 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:24.592130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:25.592717      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:25.640582 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:26.597043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:27.593238      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:27.657489 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:28.593943      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:29.594209      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:29.734337 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:30.594958      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:31.595855      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:31.747816 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:32.595945      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:33.596126      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:33.786169 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:34.596368      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:35.597149      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:35.796028 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:36.597292      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:37.598397      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:37.806078 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:38.598590      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:39.605856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:39.824801 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:40.599261      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:41.600137      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:41.858906 18 container_probe.go:1758] Get pod test-webserver-e6584dcf-babf-4ce5-8553-39d62eab5f86 in namespace container-probe-2944
  E0902 09:28:42.601020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:43.601136      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/02/25 09:28:43.86
  I0902 09:28:43.914284 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2944" for this suite. @ 09/02/25 09:28:43.95
• [242.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/02/25 09:28:44.108
  I0902 09:28:44.114950 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 09:28:44.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:28:44.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:28:44.22
  I0902 09:28:44.426682 18 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0902 09:28:44.517443 18 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0902 09:28:44.565388 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:28:44.565600 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:28:44.603429      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:45.604191      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:45.659835 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:28:45.660104 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  I0902 09:28:46.534883 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 09:28:46.535227 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0902 09:28:46.535765 18 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0902 09:28:46.563228 18 daemon_set.go:102] Updating DaemonSet daemon-set
  E0902 09:28:46.614109      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:47.614240      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:48.614898      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:48.795143 18 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0902 09:28:48.867371 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0902 09:28:48.867508 18 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0902 09:28:48.896542 18 daemon_set.go:1193] Wrong image for pod: daemon-set-gthcc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0902 09:28:48.904049 18 daemon_set.go:1198] Pod daemon-set-gthcc is not available
  E0902 09:28:49.616092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:50.617371      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:51.619363      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:52.620047      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:53.623462      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:54.622804      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:55.625233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:56.626915      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:57.627562      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:28:57.891768 18 daemon_set.go:1198] Pod daemon-set-btd8n is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 09:28:57.956
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6227, will wait for the garbage collector to delete the pods @ 09/02/25 09:28:57.957
  I0902 09:28:58.194747 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 159.695699ms
  I0902 09:28:58.398723 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 203.97463ms
  E0902 09:28:58.628573      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:28:59.639567      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:00.640686      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:00.752200 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:29:00.752297 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 09:29:00.762330 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46489"},"items":null}

  I0902 09:29:00.801066 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46489"},"items":null}

  I0902 09:29:00.827821 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6227" for this suite. @ 09/02/25 09:29:00.835
• [16.746 seconds]
------------------------------
SS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/02/25 09:29:00.855
  I0902 09:29:00.855922 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename volumeattachment @ 09/02/25 09:29:00.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:00.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:00.917
  STEP: Create VolumeAttachment "va-e2e-8zjlb" on node "ahkoog9eunoh-2" @ 09/02/25 09:29:00.945
  STEP: Patch VolumeAttachment "va-e2e-8zjlb" on node "ahkoog9eunoh-2" @ 09/02/25 09:29:00.957
  STEP: Reading "va-e2e-8zjlb" Status @ 09/02/25 09:29:00.977
  STEP: Patching "va-e2e-8zjlb" Status @ 09/02/25 09:29:00.992
  I0902 09:29:01.015695 18 volume_attachment.go:224] "va-e2e-8zjlb" Status.Attached: true
  STEP: Updating "va-e2e-8zjlb" Status @ 09/02/25 09:29:01.015
  I0902 09:29:01.045441 18 volume_attachment.go:240] "va-e2e-8zjlb" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-8zjlb" on node "ahkoog9eunoh-2" @ 09/02/25 09:29:01.045
  STEP: Confirm deletion of VolumeAttachment "va-e2e-8zjlb" on node "ahkoog9eunoh-2" @ 09/02/25 09:29:01.06
  I0902 09:29:01.069378 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5327" for this suite. @ 09/02/25 09:29:01.081
• [0.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 09/02/25 09:29:01.136
  I0902 09:29:01.137034 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename services @ 09/02/25 09:29:01.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:01.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:01.178
  STEP: creating service in namespace services-9257 @ 09/02/25 09:29:01.185
  STEP: creating service affinity-nodeport-transition in namespace services-9257 @ 09/02/25 09:29:01.185
  I0902 09:29:01.335109 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0902 09:29:01.663887      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:02.664837      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:03.385401 18 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 29, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 29, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 29, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 29, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:29:03.667767      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:04.668065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:05.428367 18 resource.go:361] Creating new exec pod
  E0902 09:29:05.668177      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:06.668903      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:07.595440 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0902 09:29:07.670085      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:08.314015 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.22.252) 80 port [tcp/http] succeeded!\n"
  I0902 09:29:08.314153 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:29:08.315306 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.22.252 80'
  E0902 09:29:08.672253      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:08.933107 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.22.252 80\nConnection to 10.233.22.252 80 port [tcp/http] succeeded!\n"
  I0902 09:29:08.933238 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:29:08.934049 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.25 31115'
  I0902 09:29:09.391763 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.25 31115\nConnection to 192.168.121.25 31115 port [tcp/*] succeeded!\n"
  I0902 09:29:09.391918 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:29:09.392519 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.238 31115'
  E0902 09:29:09.672717      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:09.763834 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.238 31115\nConnection to 192.168.121.238 31115 port [tcp/*] succeeded!\n"
  I0902 09:29:09.763935 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:29:09.787243 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/ ; done'
  I0902 09:29:10.664301 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n"
  I0902 09:29:10.664450 18 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-66pm9\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-jlwbq\naffinity-nodeport-transition-7d57658b6c-66pm9\naffinity-nodeport-transition-7d57658b6c-jlwbq"
  I0902 09:29:10.665080 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.665159 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:10.665181 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.665199 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:10.665217 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-66pm9
  I0902 09:29:10.665234 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.665275 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.665296 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667127 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667159 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667176 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667193 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667211 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667227 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  I0902 09:29:10.667244 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-66pm9
  I0902 09:29:10.667260 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jlwbq
  E0902 09:29:10.673903      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:10.733184 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=services-9257 exec execpod-affinitypwgft -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/ ; done'
  I0902 09:29:11.479993 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.25:31115/\n"
  I0902 09:29:11.480137 18 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9\naffinity-nodeport-transition-7d57658b6c-mh9s9"
  I0902 09:29:11.480217 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480243 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480262 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480279 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480317 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480339 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480383 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480415 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480435 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480453 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480469 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480486 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480511 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480574 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.480608 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.481113 18 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mh9s9
  I0902 09:29:11.481582 18 service.go:4352] Cleaning up the exec pod
  E0902 09:29:11.720942      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:11.853801 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9257" for this suite. @ 09/02/25 09:29:11.918
• [10.803 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 09/02/25 09:29:11.939
  I0902 09:29:11.940029 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:29:11.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:12.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:12.497
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 09:29:12.505
  I0902 09:29:12.508903 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-2665 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0902 09:29:12.680103      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:12.984448 18 builder.go:146] stderr: ""
  I0902 09:29:12.984745 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/02/25 09:29:12.984
  I0902 09:29:12.985517 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-2665 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0902 09:29:13.204272 18 builder.go:146] stderr: ""
  I0902 09:29:13.204447 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 09:29:13.205
  I0902 09:29:13.237761 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-2665 delete pods e2e-test-httpd-pod'
  E0902 09:29:13.681540      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:14.655083 18 builder.go:146] stderr: ""
  I0902 09:29:14.655253 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 09:29:14.655791 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2665" for this suite. @ 09/02/25 09:29:14.667
  E0902 09:29:14.681771      18 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.745 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/02/25 09:29:14.685
  I0902 09:29:14.685376 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:29:14.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:14.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:14.78
  STEP: Create set of pods @ 09/02/25 09:29:14.794
  I0902 09:29:14.819326 18 pods.go:874] created test-pod-1
  I0902 09:29:14.864784 18 pods.go:874] created test-pod-2
  I0902 09:29:14.967517 18 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/02/25 09:29:14.967
  E0902 09:29:15.681971      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:16.682218      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:17.682270      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:18.683120      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/02/25 09:29:19.168
  I0902 09:29:19.194894 18 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0902 09:29:19.685043      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:20.177928 18 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0902 09:29:20.685619      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:21.197696 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6230" for this suite. @ 09/02/25 09:29:21.213
• [6.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/02/25 09:29:21.229
  I0902 09:29:21.229112 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 09:29:21.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:21.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:21.27
  I0902 09:29:21.275845 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  E0902 09:29:21.685760      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:22.686856      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:23.687535      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:24.106262      18 warnings.go:110] "Warning: unknown field \"alpha\""
  I0902 09:29:24.106511      18 warnings.go:110] "Warning: unknown field \"beta\""
  I0902 09:29:24.106550      18 warnings.go:110] "Warning: unknown field \"delta\""
  I0902 09:29:24.106568      18 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0902 09:29:24.106582      18 warnings.go:110] "Warning: unknown field \"gamma\""
  E0902 09:29:24.687810      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:24.841690 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9299" for this suite. @ 09/02/25 09:29:24.849
• [3.637 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/02/25 09:29:24.864
  I0902 09:29:24.864719 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:29:24.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:24.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:24.916
  STEP: creating pod @ 09/02/25 09:29:24.92
  E0902 09:29:25.687960      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:26.688249      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:27.051951 18 pods.go:83] Pod pod-hostip-d2db69e7-6f72-4e1a-a171-f785bb5ee8f1 has hostIP: 192.168.121.238
  I0902 09:29:27.052682 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3480" for this suite. @ 09/02/25 09:29:27.109
• [2.275 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/02/25 09:29:27.142
  I0902 09:29:27.142800 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename sysctl @ 09/02/25 09:29:27.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:27.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:27.201
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/02/25 09:29:27.21
  STEP: Watching for error events or started pod @ 09/02/25 09:29:27.25
  E0902 09:29:27.689037      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:28.688763      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/02/25 09:29:29.261
  E0902 09:29:29.691897      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:30.692088      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/02/25 09:29:31.373
  STEP: Getting logs from the pod @ 09/02/25 09:29:31.373
  STEP: Checking that the sysctl is actually updated @ 09/02/25 09:29:31.41
  I0902 09:29:31.413058 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5223" for this suite. @ 09/02/25 09:29:31.448
• [4.326 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/02/25 09:29:31.47
  I0902 09:29:31.470546 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:29:31.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:31.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:31.545
  E0902 09:29:31.692779      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:32.699347      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:33.695046      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:34.706678      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:35.713416      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:36.707439      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:37.761585      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:38.760325      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:39.761024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:29:39.825
  I0902 09:29:39.841336 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod client-envvars-23bd1549-caf4-4d34-85cb-db3158fd27e9 container env3cont: <nil>
  STEP: delete the pod @ 09/02/25 09:29:39.893
  I0902 09:29:39.962693 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9134" for this suite. @ 09/02/25 09:29:39.984
• [8.535 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 09/02/25 09:29:40.003
  I0902 09:29:40.003688 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:29:40.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:40.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:40.065
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/02/25 09:29:40.073
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/02/25 09:29:40.091
  E0902 09:29:40.761482      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:41.761678      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:42.763054      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:43.763072      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:44.763913      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:45.764485      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/02/25 09:29:46.156
  I0902 09:29:46.167397 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3413" for this suite. @ 09/02/25 09:29:46.18
• [6.198 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/02/25 09:29:46.203
  I0902 09:29:46.203170 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:29:46.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:46.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:46.247
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/25 09:29:46.255
  E0902 09:29:46.765817      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:47.766385      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:48.766825      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:49.767305      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:29:50.317
  I0902 09:29:50.325110 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-a5c16494-e332-4d14-aa4c-adef93415299 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:29:50.348
  I0902 09:29:50.399977 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6894" for this suite. @ 09/02/25 09:29:50.415
• [4.234 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/02/25 09:29:50.438
  I0902 09:29:50.438450 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 09:29:50.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:50.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:50.503
  STEP: Create a Replicaset @ 09/02/25 09:29:50.523
  STEP: Verify that the required pods have come up. @ 09/02/25 09:29:50.54
  I0902 09:29:50.591125 18 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 09:29:50.591
  E0902 09:29:50.767337      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:51.768036      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/25 09:29:52.639
  I0902 09:29:52.646293 18 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/02/25 09:29:52.646
  I0902 09:29:52.666457 18 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/02/25 09:29:52.666
  I0902 09:29:52.678402 18 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0902 09:29:52.679485 18 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.680073 18 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.680841 18 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.681084 18 replica_set.go:688] Found replicaset test-rs in namespace replicaset-5479 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 09:29:52.681296 18 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/02/25 09:29:52.681
  I0902 09:29:52.681718 18 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 09:29:52.726299 18 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/02/25 09:29:52.726
  I0902 09:29:52.734564 18 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0902 09:29:52.735371 18 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.735933 18 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.740213 18 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.740337 18 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-5479 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:29:52.741117 18 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0902 09:29:52.741206 18 replica_set.go:724] Found replicaset test-rs in namespace replicaset-5479 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0902 09:29:52.741251 18 replica_set.go:735] Replicaset test-rs has a patched status
  I0902 09:29:52.741440 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 09:29:52.769460      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-5479" for this suite. @ 09/02/25 09:29:52.845
• [2.424 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 09/02/25 09:29:52.864
  I0902 09:29:52.864127 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:29:52.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:52.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:52.968
  STEP: Creating a job @ 09/02/25 09:29:52.976
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/02/25 09:29:52.998
  E0902 09:29:53.770092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:54.769757      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/02/25 09:29:55.095
  STEP: updating /status @ 09/02/25 09:29:55.11
  STEP: get /status @ 09/02/25 09:29:55.143
  I0902 09:29:55.152329 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1450" for this suite. @ 09/02/25 09:29:55.163
• [2.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/02/25 09:29:55.183
  I0902 09:29:55.183772 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:29:55.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:55.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:55.234
  STEP: Creating pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649 @ 09/02/25 09:29:55.242
  E0902 09:29:55.779216      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:56.775916      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:29:57.327
  I0902 09:29:57.339107 18 container_probe.go:1748] Initial restart count of pod busybox-18907378-a857-49d4-8455-abef07c48056 is 0
  I0902 09:29:57.348106 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:29:57.774859      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:29:58.774984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:29:59.401138 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:29:59.779905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:00.782060      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:01.431175 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:01.785984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:02.783421      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:03.439019 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:03.784133      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:04.784234      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:05.458911 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:05.789938      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:06.785394      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:07.472266 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:07.785981      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:08.786202      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:09.491338 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:09.786528      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:10.786746      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:11.499390 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:11.787414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:12.789941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:13.506983 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:13.788273      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:14.789019      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:15.551528 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:15.790020      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:16.791065      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:17.567996 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:17.792139      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:18.793052      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:19.604799 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:19.793975      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:20.795243      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:21.612891 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:21.795124      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:22.795935      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:23.636848 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:23.795893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:24.796432      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:25.646030 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:25.797309      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:26.797469      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:27.682147 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:27.797839      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:28.797916      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:29.722877 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:29.798786      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:30.799101      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:31.732687 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:31.799828      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:32.800225      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:33.747335 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:33.800750      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:34.801307      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:35.757392 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:35.801480      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:36.802306      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:37.767737 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:37.802168      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:38.803956      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:39.797538 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:39.804199      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:40.806115      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:41.805854      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:41.832101 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:42.805916      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:43.806194      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:43.846335 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:44.807233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:45.807354      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:45.870874 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  E0902 09:30:46.808095      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:47.814702      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:47.887178 18 container_probe.go:1758] Get pod busybox-18907378-a857-49d4-8455-abef07c48056 in namespace container-probe-4649
  I0902 09:30:47.887290 18 container_probe.go:1762] Restart count of pod container-probe-4649/busybox-18907378-a857-49d4-8455-abef07c48056 is now 1 (50.547978777s elapsed)
  STEP: deleting the pod @ 09/02/25 09:30:47.889
  I0902 09:30:47.927204 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4649" for this suite. @ 09/02/25 09:30:47.946
• [52.821 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 09/02/25 09:30:48.012
  I0902 09:30:48.013277 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:30:48.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:30:48.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:30:48.11
  STEP: Starting the proxy @ 09/02/25 09:30:48.118
  I0902 09:30:48.121345 18 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1511567564 --namespace=kubectl-6429 proxy --unix-socket=/tmp/kubectl-proxy-unix1516304171/test'
  STEP: retrieving proxy /api/ output @ 09/02/25 09:30:48.542
  I0902 09:30:48.557448 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6429" for this suite. @ 09/02/25 09:30:48.585
• [0.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/02/25 09:30:48.66
  I0902 09:30:48.660173 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:30:48.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:30:48.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:30:48.797
  E0902 09:30:48.812708      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:30:48.882179 18 service_accounts.go:646] created pod
  E0902 09:30:49.813048      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:50.813546      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:51.813792      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:52.814024      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:30:52.921
  E0902 09:30:53.815941      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:54.816157      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:55.833817      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:56.834099      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:57.834600      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:58.835189      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:30:59.837320      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:00.838092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:01.838172      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:02.838401      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:03.838979      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:04.840795      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:05.840156      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:06.840607      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:07.840887      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:08.841091      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:09.841969      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:10.842496      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:11.844905      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:12.843974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:13.845606      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:14.846970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:15.846867      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:16.848281      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:17.847808      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:18.848057      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:19.848059      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:20.849452      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:21.850519      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:22.850592      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:22.922267 18 service_accounts.go:652] polling logs
  I0902 09:31:22.957200 18 service_accounts.go:662] Pod logs: 
  I0902 09:30:50.643251       1 log.go:245] OK: Got token
  I0902 09:30:50.649374       1 log.go:245] validating with in-cluster discovery
  I0902 09:30:50.659114       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0902 09:30:50.659200       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8033:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002cb2e0), NotBefore:(*jwt.NumericDate)(0xc0002cb3d0), IssuedAt:(*jwt.NumericDate)(0xc0002cb2f0), ID:"6371536a-2bc5-4917-9522-af848dd0a337"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8033", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6ad3049f-563e-4579-ad4f-8464d543eb89"}}}
  I0902 09:30:50.696611       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0902 09:30:50.742501       1 log.go:245] OK: Validated signature on JWT
  I0902 09:30:50.745155       1 log.go:245] OK: Got valid claims from token!
  I0902 09:30:50.745866       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8033:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012e38), NotBefore:(*jwt.NumericDate)(0xc000012e60), IssuedAt:(*jwt.NumericDate)(0xc000012e40), ID:"6371536a-2bc5-4917-9522-af848dd0a337"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8033", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6ad3049f-563e-4579-ad4f-8464d543eb89"}}}

  I0902 09:31:22.957444 18 service_accounts.go:666] completed pod
  I0902 09:31:22.971771 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8033" for this suite. @ 09/02/25 09:31:22.981
• [34.344 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/02/25 09:31:23.005
  I0902 09:31:23.005483 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:31:23.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:31:23.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:31:23.042
  STEP: Creating projection with secret that has name projected-secret-test-c686ff63-d8b9-4978-bf27-89c971501c4b @ 09/02/25 09:31:23.051
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:31:23.072
  E0902 09:31:23.853098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:24.851075      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:25.851955      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:26.851948      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:31:27.133
  I0902 09:31:27.147249 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-projected-secrets-8bb25446-d5b1-4a73-a4a5-3fcfb189475b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:31:27.167
  I0902 09:31:27.204614 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4787" for this suite. @ 09/02/25 09:31:27.217
• [4.229 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/02/25 09:31:27.235
  I0902 09:31:27.235991 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 09:31:27.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:31:27.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:31:27.286
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 09:31:27.345
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 09:31:27.356
  I0902 09:31:27.472956 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:31:27.473065 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:31:27.852933      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:28.536061 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:31:28.536140 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:31:28.853053      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:29.386933 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 09:31:29.387046 18 fixtures.go:131] Node ahkoog9eunoh-1 is running 0 daemon pod, expected 1
  E0902 09:31:29.857592      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:30.386546 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 09:31:30.386967 18 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/02/25 09:31:30.394
  I0902 09:31:30.406539 18 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/02/25 09:31:30.406
  I0902 09:31:30.432846 18 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/02/25 09:31:30.433
  I0902 09:31:30.440906 18 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0902 09:31:30.442130 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.443437 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.444992 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.445492 18 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-743 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 09:31:30.445812 18 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/02/25 09:31:30.446
  STEP: watching for the daemon set status to be patched @ 09/02/25 09:31:30.475
  I0902 09:31:30.487691 18 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0902 09:31:30.488964 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.489971 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.490776 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.490856 18 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-743 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 09:31:30.492266 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 09:31:30.492509 18 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-743 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0902 09:31:30.492775 18 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 09:31:30.504
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-743, will wait for the garbage collector to delete the pods @ 09/02/25 09:31:30.504
  I0902 09:31:30.588252 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.71465ms
  I0902 09:31:30.689927 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.375902ms
  E0902 09:31:30.854742      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:31.803513 18 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 09:31:31.803612 18 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 09:31:31.813999 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47612"},"items":null}

  I0902 09:31:31.822930 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47612"},"items":null}

  E0902 09:31:31.855266      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:31:31.868525 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-743" for this suite. @ 09/02/25 09:31:31.877
• [4.660 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/02/25 09:31:31.896
  I0902 09:31:31.896602 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:31:31.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:31:31.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:31:31.931
  STEP: Creating secret with name secret-test-2b28fc83-d43f-45fc-a900-9435ee649b2a @ 09/02/25 09:31:31.936
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:31:31.947
  E0902 09:31:32.860457      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:33.860316      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:34.860716      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:35.860414      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:31:36.013
  I0902 09:31:36.089134 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-secrets-f52693e6-6a86-4eab-ba6d-1c59b3c73c1a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:31:36.117
  I0902 09:31:36.185182 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-906" for this suite. @ 09/02/25 09:31:36.196
• [4.314 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:31:36.211
  I0902 09:31:36.212088 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename subpath @ 09/02/25 09:31:36.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:31:36.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:31:36.265
  STEP: Setting up data @ 09/02/25 09:31:36.278
  STEP: Creating pod pod-subpath-test-projected-qq5k @ 09/02/25 09:31:36.304
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 09:31:36.304
  E0902 09:31:36.861193      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:37.861250      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:38.864532      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:39.863904      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:40.863920      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:41.864334      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:42.865014      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:43.867228      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:44.867030      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:45.867453      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:46.867974      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:47.868102      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:48.868222      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:49.868413      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:50.869364      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:51.869692      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:52.869713      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:53.872270      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:54.881784      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:55.881686      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:56.881840      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:57.891382      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:58.884588      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:31:59.884907      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:32:00.555
  I0902 09:32:00.568392 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-subpath-test-projected-qq5k container test-container-subpath-projected-qq5k: <nil>
  STEP: delete the pod @ 09/02/25 09:32:00.588
  STEP: Deleting pod pod-subpath-test-projected-qq5k @ 09/02/25 09:32:00.634
  I0902 09:32:00.634444 18 delete.go:62] Deleting pod "pod-subpath-test-projected-qq5k" in namespace "subpath-2681"
  I0902 09:32:00.640935 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2681" for this suite. @ 09/02/25 09:32:00.652
• [24.457 seconds]
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 09/02/25 09:32:00.669
  I0902 09:32:00.669622 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:32:00.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:00.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:00.728
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/02/25 09:32:00.761
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/02/25 09:32:00.784
  E0902 09:32:00.887074      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:01.890284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:02.891075      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:03.891965      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:04.892760      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:05.894303      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:06.896848      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/02/25 09:32:06.914
  I0902 09:32:06.919810 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8588" for this suite. @ 09/02/25 09:32:06.929
• [6.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/02/25 09:32:06.944
  I0902 09:32:06.944173 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:32:06.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:06.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:06.991
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/25 09:32:06.999
  E0902 09:32:07.897967      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:08.898050      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:09.898745      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:10.899306      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:32:11.104
  I0902 09:32:11.114559 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-56e6526a-601e-4b7d-b542-46e4a3d43a16 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:32:11.142
  I0902 09:32:11.198112 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8550" for this suite. @ 09/02/25 09:32:11.208
• [4.292 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/02/25 09:32:11.238
  I0902 09:32:11.238254 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 09:32:11.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:11.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:11.301
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 09:32:11.321
  E0902 09:32:11.901893      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:12.946333      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:13.947069      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:14.947145      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 09:32:15.465
  E0902 09:32:15.947324      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:16.981932      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/25 09:32:17.58
  STEP: delete the pod with lifecycle hook @ 09/02/25 09:32:17.63
  E0902 09:32:17.983280      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:18.983092      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:32:19.689898 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3597" for this suite. @ 09/02/25 09:32:19.727
• [8.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/02/25 09:32:19.743
  I0902 09:32:19.744007 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:32:19.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:19.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:19.776
  STEP: Creating configMap with name configmap-test-volume-map-ae4173cf-9d60-4564-bb56-e1176bbbe1c7 @ 09/02/25 09:32:19.786
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:32:19.796
  E0902 09:32:19.983977      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:20.984523      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:21.985570      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:22.986049      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:32:23.876
  I0902 09:32:23.886774 18 output.go:207] Trying to get logs from node ahkoog9eunoh-2 pod pod-configmaps-52e3f730-b536-4088-8ca9-d0194a05c459 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 09:32:23.901
  I0902 09:32:23.932618 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7987" for this suite. @ 09/02/25 09:32:23.964
• [4.237 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/02/25 09:32:23.98
  I0902 09:32:23.980678 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 09:32:23.985
  E0902 09:32:23.986130      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:24.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:24.024
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 09:32:24.107
  E0902 09:32:24.987494      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:25.987725      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:26.987939      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:27.988233      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 09:32:28.282
  E0902 09:32:28.988590      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:29.988924      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/25 09:32:30.353
  STEP: delete the pod with lifecycle hook @ 09/02/25 09:32:30.38
  E0902 09:32:30.989833      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:31.990302      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:32:32.418038 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-836" for this suite. @ 09/02/25 09:32:32.427
• [8.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 09/02/25 09:32:32.441
  I0902 09:32:32.441545 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename job @ 09/02/25 09:32:32.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:32.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:32.509
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/02/25 09:32:32.517
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/02/25 09:32:32.538
  E0902 09:32:32.990999      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:33.994345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:34.995076      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:35.995479      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:36.995859      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:37.997112      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:38.999310      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:39.998221      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:40.999887      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:41.999010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:42.999770      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:44.000011      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:45.001509      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:46.001146      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:47.005284      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:48.015697      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:49.014606      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:50.015241      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:51.015608      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:52.016110      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:53.017163      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:54.017930      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/02/25 09:32:54.706
  I0902 09:32:54.714773 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8291" for this suite. @ 09/02/25 09:32:54.729
• [22.304 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/02/25 09:32:54.746
  I0902 09:32:54.746184 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 09:32:54.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:54.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:54.799
  I0902 09:32:54.880081 18 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0902 09:32:54.880172 18 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0902 09:32:54.890484 18 service_accounts.go:281] created pod pod-service-account-mountsa
  I0902 09:32:54.890574 18 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0902 09:32:54.917058 18 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0902 09:32:54.917152 18 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  E0902 09:32:55.025098      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:32:55.026893 18 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0902 09:32:55.026991 18 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0902 09:32:55.085824 18 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0902 09:32:55.085945 18 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0902 09:32:55.177606 18 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0902 09:32:55.177747 18 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0902 09:32:55.277131 18 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0902 09:32:55.277204 18 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0902 09:32:55.477517 18 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0902 09:32:55.477588 18 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0902 09:32:55.563486 18 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0902 09:32:55.563560 18 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0902 09:32:55.630908 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3183" for this suite. @ 09/02/25 09:32:55.792
• [1.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/02/25 09:32:55.875
  I0902 09:32:55.875982 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:32:55.908
  E0902 09:32:56.025970      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:32:56.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:32:56.449
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/25 09:32:56.518
  E0902 09:32:57.110533      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:58.130214      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:32:59.130494      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:00.130836      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:33:00.877
  I0902 09:33:00.886515 18 output.go:207] Trying to get logs from node ahkoog9eunoh-1 pod pod-31561885-d605-463b-a130-bfa716b0b1c6 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:33:00.905
  I0902 09:33:00.970752 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-776" for this suite. @ 09/02/25 09:33:01.008
• [5.152 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 09/02/25 09:33:01.028
  I0902 09:33:01.029143 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:33:01.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:33:01.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:33:01.115
  E0902 09:33:01.130978      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:02.131166      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:03.131916      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:04.133249      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:05.133144      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:06.133947      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:07.140398      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:08.135419      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:09.136289      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:10.136830      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:11.200780      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:12.139995      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:13.140623      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:14.145386      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:15.142984      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:16.142853      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:17.144005      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:18.145310      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/02/25 09:33:18.156
  E0902 09:33:19.145786      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:20.145922      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:21.147188      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:22.147031      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:23.157100      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:33:23.174
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:33:23.225
  E0902 09:33:24.158203      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:25.158697      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/02/25 09:33:25.234
  STEP: Ensuring resource quota status captures configMap creation @ 09/02/25 09:33:25.26
  E0902 09:33:26.159492      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:27.160107      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/02/25 09:33:27.271
  STEP: Ensuring resource quota status released usage @ 09/02/25 09:33:27.294
  E0902 09:33:28.160878      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:29.161246      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:33:29.302967 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8432" for this suite. @ 09/02/25 09:33:29.311
• [28.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/02/25 09:33:29.337
  I0902 09:33:29.337880 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:33:29.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:33:29.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:33:29.376
  STEP: Create a pod @ 09/02/25 09:33:29.385
  E0902 09:33:30.161802      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:31.162918      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/02/25 09:33:31.444
  I0902 09:33:31.462139 18 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0902 09:33:31.463087 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8588" for this suite. @ 09/02/25 09:33:31.473
• [2.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 09/02/25 09:33:31.493
  I0902 09:33:31.493654 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename dns @ 09/02/25 09:33:31.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:33:31.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:33:31.529
  STEP: Creating a test headless service @ 09/02/25 09:33:31.534
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6742.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-6742.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/02/25 09:33:31.552
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6742.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6742.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/02/25 09:33:31.552
  STEP: creating a pod to probe DNS @ 09/02/25 09:33:31.552
  STEP: submitting the pod to kubernetes @ 09/02/25 09:33:31.552
  E0902 09:33:32.163795      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:33.164183      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:34.165345      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:35.166010      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 09:33:35.621
  STEP: looking for the results for each expected name from probers @ 09/02/25 09:33:35.631
  I0902 09:33:35.667029 18 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-6742/dns-test-c2b4c060-aa24-41e5-9b9f-83c0733cfaa4: the server could not find the requested resource (get pods dns-test-c2b4c060-aa24-41e5-9b9f-83c0733cfaa4)
  I0902 09:33:35.667110 18 dns_common.go:506] Lookups using dns-6742/dns-test-c2b4c060-aa24-41e5-9b9f-83c0733cfaa4 failed for: [jessie_hosts@dns-querier-2]

  I0902 09:33:35.681818 18 dns_common.go:514] Pod client logs for webserver: 
  I0902 09:33:35.731487 18 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 09:33:35.767071 18 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 09:33:36.167003      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:37.171985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:38.168114      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:39.168409      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:40.168985      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:33:40.664772 18 dns_common.go:546] DNS probes using dns-6742/dns-test-c2b4c060-aa24-41e5-9b9f-83c0733cfaa4 succeeded

  STEP: deleting the pod @ 09/02/25 09:33:40.665
  STEP: deleting the test headless service @ 09/02/25 09:33:40.767
  I0902 09:33:40.916418 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6742" for this suite. @ 09/02/25 09:33:40.966
• [9.486 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/02/25 09:33:40.981
  I0902 09:33:40.981448 18 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1511567564
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:33:40.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:33:41.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:33:41.054
  E0902 09:33:41.169359      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/02/25 09:33:41.223
  E0902 09:33:42.170458      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:33:42.369
  STEP: Deploying the webhook pod @ 09/02/25 09:33:42.41
  STEP: Wait for the deployment to be ready @ 09/02/25 09:33:42.467
  I0902 09:33:42.505850 18 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:33:43.170866      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0902 09:33:44.175086      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:33:44.557
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:33:44.599
  E0902 09:33:45.175558      18 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0902 09:33:45.600848 18 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/02/25 09:33:45.61
  STEP: create a namespace for the webhook @ 09/02/25 09:33:45.641
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/02/25 09:33:45.7
  I0902 09:33:45.882701 18 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9852" for this suite. @ 09/02/25 09:33:45.892
  STEP: Destroying namespace "webhook-markers-9479" for this suite. @ 09/02/25 09:33:45.907
  STEP: Destroying namespace "fail-closed-namespace-8543" for this suite. @ 09/02/25 09:33:45.917
• [4.950 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0902 09:33:45.931998 18 suites.go:34] Running AfterSuite actions on node 1
  I0902 09:33:45.932078 18 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.186 seconds]
------------------------------

Ran 419 of 6730 Specs in 7354.619 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6311 Skipped
PASS

Ginkgo ran 1 suite in 2h2m38.878086931s
Test Suite Passed
