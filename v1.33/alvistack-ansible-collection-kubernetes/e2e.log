  I0901 11:09:18.982261      16 e2e.go:109] Starting e2e run "10ad96ef-022b-4393-8852-e8e7d8ffe2e4" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756724957 - will randomize all specs

Will run 419 of 6730 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0901 11:09:19.406282 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 11:09:19.416481 16 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0901 11:09:19.506945 16 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0901 11:09:19.523075 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0901 11:09:19.524067 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  I0901 11:09:19.524807 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0901 11:09:19.525211 16 e2e.go:245] e2e test version: v1.33.4
  I0901 11:09:19.531238 16 e2e.go:254] kube-apiserver version: v1.33.4
  I0901 11:09:19.531742 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 11:09:19.541777 16 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.136 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 09/01/25 11:09:19.803
  I0901 11:09:19.803816 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:09:19.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:19.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:19.838
  STEP: creating service in namespace services-5336 @ 09/01/25 11:09:19.845
  STEP: creating service affinity-clusterip-transition in namespace services-5336 @ 09/01/25 11:09:19.845
  I0901 11:09:19.930606 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:09:21.946645 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:23.945656 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:25.940696 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:27.940335 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:29.941251 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:31.940490 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:33.943175 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:35.945765 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:37.942403 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:39.949446 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:41.942862 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:43.940347 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 9, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 9, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:09:46.008785 16 resource.go:361] Creating new exec pod
  I0901 11:09:48.062483 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-5336 exec execpod-affinityjscg2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0901 11:09:48.569780 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.18.11) 80 port [tcp/http] succeeded!\n"
  I0901 11:09:48.569902 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:09:48.570381 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-5336 exec execpod-affinityjscg2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.18.11 80'
  I0901 11:09:48.928574 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.18.11 80\nConnection to 10.233.18.11 80 port [tcp/http] succeeded!\n"
  I0901 11:09:48.928775 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:09:48.971677 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-5336 exec execpod-affinityjscg2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/ ; done'
  I0901 11:09:49.564183 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n"
  I0901 11:09:49.564490 16 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-8dhqd\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-8dhqd\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-8dhqd\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-tlt8c\naffinity-clusterip-transition-5cffb65545-8dhqd\naffinity-clusterip-transition-5cffb65545-8dhqd"
  I0901 11:09:49.564575 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.564641 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8dhqd
  I0901 11:09:49.564732 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.564766 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:49.564820 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8dhqd
  I0901 11:09:49.564840 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:49.564856 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.564907 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.564927 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:49.565101 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:49.565201 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.565218 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8dhqd
  I0901 11:09:49.565396 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.565416 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tlt8c
  I0901 11:09:49.565434 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8dhqd
  I0901 11:09:49.565483 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8dhqd
  I0901 11:09:49.608471 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-5336 exec execpod-affinityjscg2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/ ; done'
  I0901 11:09:50.201659 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.11:80/\n"
  I0901 11:09:50.201787 16 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx\naffinity-clusterip-transition-5cffb65545-6xzvx"
  I0901 11:09:50.201821 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201842 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201860 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201877 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201894 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201910 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201926 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201967 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.201984 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202015 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202033 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202050 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202066 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202082 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202221 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202245 16 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-6xzvx
  I0901 11:09:50.202987 16 service.go:4352] Cleaning up the exec pod
  I0901 11:09:50.330941 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5336" for this suite. @ 09/01/25 11:09:50.376
• [30.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/01/25 11:09:50.445
  I0901 11:09:50.445789 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:09:50.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:50.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:50.492
  STEP: Setting up server cert @ 09/01/25 11:09:50.537
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:09:53.23
  STEP: Deploying the webhook pod @ 09/01/25 11:09:53.244
  STEP: Wait for the deployment to be ready @ 09/01/25 11:09:53.284
  I0901 11:09:53.331518 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:09:55.364
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:09:55.413
  I0901 11:09:56.414180 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/01/25 11:09:56.439
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 11:09:56.439
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/01/25 11:09:56.487
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/01/25 11:09:57.514
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 11:09:57.515
  STEP: Having no error when timeout is longer than webhook latency @ 09/01/25 11:09:58.618
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 11:09:58.618
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/01/25 11:10:03.754
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 11:10:03.754
  I0901 11:10:09.057241 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9605" for this suite. @ 09/01/25 11:10:09.078
  STEP: Destroying namespace "webhook-markers-9658" for this suite. @ 09/01/25 11:10:09.098
• [18.676 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 09/01/25 11:10:09.121
  I0901 11:10:09.121773 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:10:09.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:09.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:09.163
  STEP: creating service in namespace services-879 @ 09/01/25 11:10:09.169
  STEP: creating service affinity-clusterip in namespace services-879 @ 09/01/25 11:10:09.17
  I0901 11:10:09.240406 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:10:11.253574 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 10, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 10, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 10, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 10, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-6dd57cf8dc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:10:13.294093 16 resource.go:361] Creating new exec pod
  I0901 11:10:15.349778 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-879 exec execpod-affinity5lmtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0901 11:10:15.748909 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.18.154) 80 port [tcp/http] succeeded!\n"
  I0901 11:10:15.748993 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:10:15.749929 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-879 exec execpod-affinity5lmtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.18.154 80'
  I0901 11:10:16.023497 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.18.154 80\nConnection to 10.233.18.154 80 port [tcp/http] succeeded!\n"
  I0901 11:10:16.023582 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:10:16.024233 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-879 exec execpod-affinity5lmtq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/ ; done'
  I0901 11:10:16.554988 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.18.154:80/\n"
  I0901 11:10:16.555332 16 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb\naffinity-clusterip-6dd57cf8dc-4n4zb"
  I0901 11:10:16.555376 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555400 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555418 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555435 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555452 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555469 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555485 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555502 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555522 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555538 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555554 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555570 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555588 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555605 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555621 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555638 16 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-4n4zb
  I0901 11:10:16.555758 16 service.go:4352] Cleaning up the exec pod
  I0901 11:10:16.719414 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-879" for this suite. @ 09/01/25 11:10:16.739
• [7.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/01/25 11:10:16.814
  I0901 11:10:16.815511 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 11:10:16.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:16.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:16.898
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 11:10:16.954
  STEP: create the pod with lifecycle hook @ 09/01/25 11:10:19.039
  STEP: check poststart hook @ 09/01/25 11:10:21.123
  STEP: delete the pod with lifecycle hook @ 09/01/25 11:10:21.184
  I0901 11:10:25.251889 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9255" for this suite. @ 09/01/25 11:10:25.266
• [8.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 09/01/25 11:10:25.291
  I0901 11:10:25.292226 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 11:10:25.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:25.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:25.357
  I0901 11:10:31.445048 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-631" for this suite. @ 09/01/25 11:10:31.455
• [6.188 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/01/25 11:10:31.479
  I0901 11:10:31.479988 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:10:31.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:31.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:31.523
  STEP: Creating a pod to test env composition @ 09/01/25 11:10:31.534
  STEP: Saw pod success @ 09/01/25 11:10:35.613
  I0901 11:10:35.632079 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod var-expansion-19a59e70-a92d-4f1f-b291-aea50e7d1d0f container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:10:35.699
  I0901 11:10:35.750921 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8970" for this suite. @ 09/01/25 11:10:35.759
• [4.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/01/25 11:10:35.778
  I0901 11:10:35.779207 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 11:10:35.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:35.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:35.818
  I0901 11:10:35.843200 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6581" for this suite. @ 09/01/25 11:10:35.86
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/01/25 11:10:35.879
  I0901 11:10:35.879461 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:10:35.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:35.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:35.924
  STEP: Creating pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515 @ 09/01/25 11:10:35.929
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:10:37.972
  I0901 11:10:37.985305 16 container_probe.go:1748] Initial restart count of pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc is 0
  I0901 11:10:37.996010 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:40.009822 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:42.024732 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:44.040789 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:46.049938 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:48.062190 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:50.075375 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:52.087881 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:54.100964 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:56.115721 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:10:58.132534 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:00.153391 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:02.167399 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:04.180080 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:06.195726 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:08.207683 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:10.223668 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:12.237018 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:14.251815 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:16.266408 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:18.280551 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:20.301442 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:22.312724 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:24.326234 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:26.341990 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:28.367627 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:30.381504 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:32.394895 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:34.407712 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:36.420438 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:38.436942 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:40.447270 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:42.458557 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:44.469265 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:46.483411 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:48.493734 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:50.509257 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:52.524200 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:54.539635 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:56.554459 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:11:58.564666 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:00.584311 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:02.592828 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:04.605859 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:06.634275 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:08.657681 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:10.672314 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:12.691391 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:14.709527 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:16.723350 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:18.739976 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:20.753581 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:22.765696 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:24.777795 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:26.796502 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:28.811718 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:30.826639 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:32.839458 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:34.847838 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:36.862860 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:38.879550 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:40.894707 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:42.907562 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:44.920806 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:46.935629 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:48.984179 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:50.998842 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:53.012807 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:55.050073 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:57.071662 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:12:59.090693 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:01.106070 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:03.122007 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:05.142357 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:07.154684 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:09.168228 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:11.181691 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:13.192927 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:15.208703 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:17.224795 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:19.240477 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:21.261839 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:23.280026 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:25.292913 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:27.323375 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:29.337659 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:31.348018 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:33.361054 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:35.374490 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:37.388202 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:39.401551 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:41.413029 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:43.423653 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:45.437865 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:47.454095 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:49.467502 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:51.480211 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:53.494792 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:55.505896 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:57.516526 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:13:59.532854 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:01.545538 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:03.559705 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:05.576283 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:07.591703 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:09.603663 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:11.632332 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:13.647832 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:15.657326 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:17.671408 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:19.685047 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:21.698079 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:23.710995 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:25.724750 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:27.739058 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:29.781271 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:31.795951 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:33.809687 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:35.824457 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  I0901 11:14:37.839627 16 container_probe.go:1758] Get pod busybox-16d18ea2-b4b8-4195-a7b6-4121d3f35bfc in namespace container-probe-9515
  STEP: deleting the pod @ 09/01/25 11:14:39.843
  I0901 11:14:39.885699 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9515" for this suite. @ 09/01/25 11:14:39.912
• [244.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/01/25 11:14:39.934
  I0901 11:14:39.934574 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:14:39.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:39.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:39.988
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 11:14:39.996
  STEP: Saw pod success @ 09/01/25 11:14:44.075
  I0901 11:14:44.085279 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-091a4d5b-996c-4d18-9946-74d921ba93ae container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:14:44.145
  I0901 11:14:44.198184 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8342" for this suite. @ 09/01/25 11:14:44.215
• [4.308 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 09/01/25 11:14:44.248
  I0901 11:14:44.249028 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:14:44.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:44.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:44.297
  STEP: Creating a ResourceQuota with terminating scope @ 09/01/25 11:14:44.305
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 11:14:44.319
  STEP: Creating a ResourceQuota with not terminating scope @ 09/01/25 11:14:46.338
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 11:14:46.356
  STEP: Creating a long running pod @ 09/01/25 11:14:48.372
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/01/25 11:14:48.424
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/01/25 11:14:50.436
  STEP: Deleting the pod @ 09/01/25 11:14:52.454
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:14:52.499
  STEP: Creating a terminating pod @ 09/01/25 11:14:54.511
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/01/25 11:14:54.555
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/01/25 11:14:56.564
  STEP: Deleting the pod @ 09/01/25 11:14:58.574
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:14:58.624
  I0901 11:15:00.639025 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-959" for this suite. @ 09/01/25 11:15:00.656
• [16.430 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/01/25 11:15:00.677
  I0901 11:15:00.677188 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:15:00.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:00.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:00.725
  STEP: create the deployment @ 09/01/25 11:15:00.732
  I0901 11:15:00.748099      16 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 11:15:00.748
  STEP: delete the deployment @ 09/01/25 11:15:01.259
  STEP: wait for all rs to be garbage collected @ 09/01/25 11:15:01.271
  STEP: expected 0 pods, got 2 pods @ 09/01/25 11:15:01.312
  STEP: Gathering metrics @ 09/01/25 11:15:01.795
  I0901 11:15:02.069271 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:15:02.070664 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-931" for this suite. @ 09/01/25 11:15:02.083
• [1.423 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/01/25 11:15:02.1
  I0901 11:15:02.100723 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:15:02.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:02.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:02.138
  STEP: Creating pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968 @ 09/01/25 11:15:02.145
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:15:04.186
  I0901 11:15:04.193487 16 container_probe.go:1748] Initial restart count of pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 is 0
  I0901 11:15:04.201005 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:06.213835 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:08.226209 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:10.235822 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:12.248018 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:14.262655 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:16.272472 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:18.283831 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:20.295392 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:22.305690 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:24.314898 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:26.329588 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:28.338524 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:30.349800 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:32.359989 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:34.369964 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:36.385273 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:38.397999 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:40.405865 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:42.415469 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:44.425584 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:46.437910 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:48.448621 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:50.458356 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:52.468051 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:54.479304 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:56.488725 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:15:58.504343 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:00.515540 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:02.526514 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:04.536890 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:06.550971 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:08.561320 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:10.572926 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:12.581534 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:14.593559 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:16.605390 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:18.618534 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:20.633885 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:22.649338 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:24.660567 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:26.670936 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:28.680633 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:30.690831 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:32.702008 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:34.712211 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:36.720938 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:38.731361 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:40.745864 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:42.756716 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:44.768601 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:46.781931 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:48.798893 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:50.808976 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:52.818510 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:54.828021 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:56.836619 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:16:58.849339 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:00.858341 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:02.871728 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:04.880585 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:06.893530 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:08.901874 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:10.930022 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:12.938861 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:14.951898 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:16.966779 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:18.978971 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:20.989676 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:22.998214 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:25.010361 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:27.022274 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:29.033054 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:31.047334 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:33.058190 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:35.066914 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:37.076730 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:39.086218 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:41.098661 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:43.108004 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:45.119498 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:47.129986 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:49.140828 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:51.152279 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:53.161300 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:55.177022 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:57.185870 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:17:59.200392 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:01.211585 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:03.221794 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:05.234293 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:07.243808 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:09.254326 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:11.267006 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:13.278327 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:15.287687 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:17.302756 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:19.310969 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:21.321812 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:23.332880 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:25.398059 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:27.409832 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:29.420037 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:31.429600 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:33.440283 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:35.455534 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:37.468259 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:39.478625 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:41.489018 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:43.497925 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:45.511009 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:47.524627 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:49.534913 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:51.546002 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:53.556275 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:55.565907 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:57.592962 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:18:59.606421 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:19:01.621372 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  I0901 11:19:03.634881 16 container_probe.go:1758] Get pod liveness-4f972dfe-fb0c-4222-b752-c7a74d73fd52 in namespace container-probe-968
  STEP: deleting the pod @ 09/01/25 11:19:05.637
  I0901 11:19:05.707835 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-968" for this suite. @ 09/01/25 11:19:05.749
• [243.676 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 09/01/25 11:19:05.776
  I0901 11:19:05.776996 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:19:05.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:05.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:05.831
  STEP: Creating a test headless service @ 09/01/25 11:19:05.839
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9976.svc.cluster.local;sleep 1; done
   @ 09/01/25 11:19:05.847
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9976.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9976.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9976.svc.cluster.local;sleep 1; done
   @ 09/01/25 11:19:05.847
  STEP: creating a pod to probe DNS @ 09/01/25 11:19:05.848
  STEP: submitting the pod to kubernetes @ 09/01/25 11:19:05.848
  STEP: retrieving the pod @ 09/01/25 11:19:30.087
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:19:30.095
  I0901 11:19:30.109420 16 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.115992 16 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.122998 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.131135 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.137917 16 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.148190 16 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.154997 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.161395 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9976.svc.cluster.local from pod dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8: the server could not find the requested resource (get pods dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8)
  I0901 11:19:30.161535 16 dns_common.go:506] Lookups using dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9976.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9976.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9976.svc.cluster.local jessie_udp@dns-test-service-2.dns-9976.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9976.svc.cluster.local]

  I0901 11:19:30.197816 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 11:19:30.213732 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 11:19:30.228245 16 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 11:19:35.185664 16 dns_common.go:546] DNS probes using dns-9976/dns-test-8c8d5213-49bd-4f82-b6da-6b4900ee33d8 succeeded

  STEP: deleting the pod @ 09/01/25 11:19:35.186
  STEP: deleting the test headless service @ 09/01/25 11:19:35.22
  I0901 11:19:35.279834 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9976" for this suite. @ 09/01/25 11:19:35.299
• [29.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:19:35.32
  I0901 11:19:35.321035 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename csinodes @ 09/01/25 11:19:35.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:35.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:35.415
  STEP: Creating initial csiNode "e2e-csinode-qj76m" @ 09/01/25 11:19:35.422
  STEP: Getting initial csiNode "e2e-csinode-qj76m" @ 09/01/25 11:19:35.435
  STEP: Patching initial csiNode: "e2e-csinode-qj76m" @ 09/01/25 11:19:35.447
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-qj76m=patched" @ 09/01/25 11:19:35.46
  STEP: Delete initial csiNode: "e2e-csinode-qj76m" @ 09/01/25 11:19:35.467
  STEP: Confirm deletion of csiNode "e2e-csinode-qj76m" @ 09/01/25 11:19:35.477
  STEP: Creating replacement csiNode "e2e-csinode-b2qtg" @ 09/01/25 11:19:35.482
  STEP: Getting replacement csiNode "e2e-csinode-b2qtg" @ 09/01/25 11:19:35.489
  STEP: Updating replacement csiNode "e2e-csinode-b2qtg" @ 09/01/25 11:19:35.497
  STEP: DeleteCollection of CSINodes with "e2e-csinode-b2qtg=updated" label @ 09/01/25 11:19:35.513
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-b2qtg=updated" @ 09/01/25 11:19:35.531
  I0901 11:19:35.539283 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-5285" for this suite. @ 09/01/25 11:19:35.549
• [0.249 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/01/25 11:19:35.57
  I0901 11:19:35.570613 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename containers @ 09/01/25 11:19:35.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:35.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:35.601
  STEP: Creating a pod to test override command @ 09/01/25 11:19:35.607
  STEP: Saw pod success @ 09/01/25 11:19:39.658
  I0901 11:19:39.665773 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod client-containers-96c07063-78dd-425a-aaad-c8b43e2cc2e8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:19:39.679
  I0901 11:19:39.714925 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3168" for this suite. @ 09/01/25 11:19:39.723
• [4.167 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/01/25 11:19:39.739
  I0901 11:19:39.739084 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 11:19:39.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:39.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:39.772
  STEP: apply creating a deployment @ 09/01/25 11:19:39.777
  I0901 11:19:39.826758 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3868" for this suite. @ 09/01/25 11:19:39.834
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/01/25 11:19:39.851
  I0901 11:19:39.851216 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:19:39.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:39.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:39.877
  STEP: Creating projection with secret that has name projected-secret-test-map-44a20819-de26-447c-b7b6-5de8480dad9d @ 09/01/25 11:19:39.883
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:19:39.894
  STEP: Saw pod success @ 09/01/25 11:19:43.962
  I0901 11:19:43.976759 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-secrets-06e4c581-d95d-4d52-b673-71e0b02f3635 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:19:44.004
  I0901 11:19:44.056633 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4808" for this suite. @ 09/01/25 11:19:44.069
• [4.235 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/01/25 11:19:44.085
  I0901 11:19:44.086039 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 11:19:44.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:44.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:44.125
  I0901 11:19:44.132646 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 11:19:47.555283 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9445" for this suite. @ 09/01/25 11:19:47.571
• [3.507 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/01/25 11:19:47.593
  I0901 11:19:47.593995 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 11:19:47.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:47.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:47.654
  STEP: Creating LimitRange "e2e-limitrange-j855g" in namespace "limitrange-4114" @ 09/01/25 11:19:47.66
  STEP: Creating another limitRange in another namespace @ 09/01/25 11:19:47.675
  I0901 11:19:47.697801 16 limit_range.go:299] Namespace "e2e-limitrange-j855g-5347" created
  I0901 11:19:47.698342 16 limit_range.go:300] Creating LimitRange "e2e-limitrange-j855g" in namespace "e2e-limitrange-j855g-5347"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-j855g" @ 09/01/25 11:19:47.708
  I0901 11:19:47.714927 16 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-j855g" in "limitrange-4114" namespace @ 09/01/25 11:19:47.714
  I0901 11:19:47.729876 16 limit_range.go:335] LimitRange "e2e-limitrange-j855g" has been patched
  STEP: Delete LimitRange "e2e-limitrange-j855g" by Collection with labelSelector: "e2e-limitrange-j855g=patched" @ 09/01/25 11:19:47.729
  STEP: Confirm that the limitRange "e2e-limitrange-j855g" has been deleted @ 09/01/25 11:19:47.748
  I0901 11:19:47.748832 16 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0901 11:19:47.754739 16 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-j855g=patched"
  I0901 11:19:47.754795 16 limit_range.go:344] LimitRange "e2e-limitrange-j855g" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-j855g" @ 09/01/25 11:19:47.754
  I0901 11:19:47.760670 16 limit_range.go:350] Found 1 limitRange
  I0901 11:19:47.760889 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4114" for this suite. @ 09/01/25 11:19:47.77
  STEP: Destroying namespace "e2e-limitrange-j855g-5347" for this suite. @ 09/01/25 11:19:47.789
• [0.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/01/25 11:19:47.808
  I0901 11:19:47.808482 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:19:47.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:47.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:47.843
  STEP: Given a ReplicationController is created @ 09/01/25 11:19:47.853
  STEP: When the matched label of one of its pods change @ 09/01/25 11:19:47.866
  I0901 11:19:47.876909 16 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0901 11:19:52.889679 16 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 11:19:52.927
  I0901 11:19:53.951709 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9495" for this suite. @ 09/01/25 11:19:53.966
• [6.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 09/01/25 11:19:54.016
  I0901 11:19:54.016843 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 11:19:54.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:54.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:54.058
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/01/25 11:19:54.069
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/01/25 11:19:54.09
  STEP: Ensure that the job reaches completions @ 09/01/25 11:20:00.148
  STEP: Verifying that the job status to ensure correct final state @ 09/01/25 11:20:10.207
  I0901 11:20:10.218793 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2553" for this suite. @ 09/01/25 11:20:10.232
• [16.235 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/01/25 11:20:10.25
  I0901 11:20:10.250867 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:20:10.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:10.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:10.287
  STEP: creating the pod @ 09/01/25 11:20:10.294
  STEP: submitting the pod to kubernetes @ 09/01/25 11:20:10.294
  I0901 11:20:10.316854      16 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 09/01/25 11:20:12.349
  STEP: updating the pod @ 09/01/25 11:20:12.357
  I0901 11:20:12.899198 16 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-3e74c0b0-d310-4665-b30f-745928ab8718"
  I0901 11:20:16.943649 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-648" for this suite. @ 09/01/25 11:20:16.951
• [6.729 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 09/01/25 11:20:16.98
  I0901 11:20:16.980091 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:20:16.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:17.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:17.012
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7283 @ 09/01/25 11:20:17.018
  STEP: changing the ExternalName service to type=NodePort @ 09/01/25 11:20:17.03
  I0901 11:20:17.167410 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:20:19.194324 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 20, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 20, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 20, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 20, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7787976d47\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:20:21.180436 16 resource.go:361] Creating new exec pod
  I0901 11:20:23.246615 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-7283 exec execpodnkrrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 11:20:23.560685 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.21.43) 80 port [tcp/http] succeeded!\n"
  I0901 11:20:23.560776 16 builder.go:147] stdout: "externalname-service-7787976d47-6bxbk"
  I0901 11:20:23.561194 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-7283 exec execpodnkrrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.43 80'
  I0901 11:20:23.843043 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.43 80\nConnection to 10.233.21.43 80 port [tcp/http] succeeded!\n"
  I0901 11:20:23.843162 16 builder.go:147] stdout: "externalname-service-7787976d47-6bxbk"
  I0901 11:20:23.843412 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-7283 exec execpodnkrrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 32261'
  I0901 11:20:24.105067 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 32261\nConnection to 192.168.121.188 32261 port [tcp/*] succeeded!\n"
  I0901 11:20:24.105635 16 builder.go:147] stdout: "externalname-service-7787976d47-7cpmt"
  I0901 11:20:24.106360 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-7283 exec execpodnkrrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.88 32261'
  I0901 11:20:24.374221 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.88 32261\nConnection to 192.168.121.88 32261 port [tcp/*] succeeded!\n"
  I0901 11:20:24.375215 16 builder.go:147] stdout: "externalname-service-7787976d47-6bxbk"
  I0901 11:20:24.375571 16 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0901 11:20:24.453205 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7283" for this suite. @ 09/01/25 11:20:24.469
• [7.507 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/01/25 11:20:24.489
  I0901 11:20:24.489190 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svc-latency @ 09/01/25 11:20:24.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:24.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:24.528
  I0901 11:20:24.535962 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 11:20:24.555364 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:20:26.570733      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:20:26.573340      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:20:26.706363 16 service_latency.go:351] Created: latency-svc-wqrzp
  I0901 11:20:26.729313 16 service_latency.go:358] Got endpoints: latency-svc-wqrzp [61.493855ms]
  I0901 11:20:26.769579 16 service_latency.go:351] Created: latency-svc-t5bn6
  I0901 11:20:26.781850 16 service_latency.go:358] Got endpoints: latency-svc-t5bn6 [51.61608ms]
  I0901 11:20:27.028975 16 service_latency.go:351] Created: latency-svc-vsj7v
  I0901 11:20:27.032680 16 service_latency.go:351] Created: latency-svc-5jdxv
  I0901 11:20:27.032660 16 service_latency.go:351] Created: latency-svc-j79l2
  I0901 11:20:27.034422 16 service_latency.go:351] Created: latency-svc-pbwqb
  I0901 11:20:27.035545 16 service_latency.go:351] Created: latency-svc-pg9jl
  I0901 11:20:27.035690 16 service_latency.go:351] Created: latency-svc-5m4gp
  I0901 11:20:27.039462 16 service_latency.go:351] Created: latency-svc-hmpb7
  I0901 11:20:27.040875 16 service_latency.go:351] Created: latency-svc-t48px
  I0901 11:20:27.041097 16 service_latency.go:351] Created: latency-svc-hjgwf
  I0901 11:20:27.041253 16 service_latency.go:351] Created: latency-svc-zgjpx
  I0901 11:20:27.043417 16 service_latency.go:351] Created: latency-svc-lswjs
  I0901 11:20:27.064596 16 service_latency.go:351] Created: latency-svc-n8fjf
  I0901 11:20:27.064734 16 service_latency.go:351] Created: latency-svc-b67k2
  I0901 11:20:27.064790 16 service_latency.go:351] Created: latency-svc-jsbtc
  I0901 11:20:27.064817 16 service_latency.go:351] Created: latency-svc-6zrx8
  I0901 11:20:27.065132 16 service_latency.go:358] Got endpoints: latency-svc-jsbtc [331.787126ms]
  I0901 11:20:27.148559 16 service_latency.go:358] Got endpoints: latency-svc-pg9jl [412.684976ms]
  I0901 11:20:27.148801 16 service_latency.go:358] Got endpoints: latency-svc-hmpb7 [416.507023ms]
  I0901 11:20:27.149992 16 service_latency.go:358] Got endpoints: latency-svc-hjgwf [415.982551ms]
  I0901 11:20:27.153741 16 service_latency.go:358] Got endpoints: latency-svc-5m4gp [419.87246ms]
  I0901 11:20:27.153780 16 service_latency.go:358] Got endpoints: latency-svc-j79l2 [422.499773ms]
  I0901 11:20:27.174140 16 service_latency.go:358] Got endpoints: latency-svc-zgjpx [439.14391ms]
  I0901 11:20:27.209958 16 service_latency.go:351] Created: latency-svc-g7hpd
  I0901 11:20:27.249822 16 service_latency.go:358] Got endpoints: latency-svc-6zrx8 [514.090383ms]
  I0901 11:20:27.250000 16 service_latency.go:358] Got endpoints: latency-svc-t48px [515.394793ms]
  I0901 11:20:27.250057 16 service_latency.go:358] Got endpoints: latency-svc-n8fjf [518.104125ms]
  I0901 11:20:27.250086 16 service_latency.go:358] Got endpoints: latency-svc-b67k2 [468.118462ms]
  I0901 11:20:27.283219 16 service_latency.go:358] Got endpoints: latency-svc-vsj7v [550.427857ms]
  I0901 11:20:27.285561 16 service_latency.go:351] Created: latency-svc-rvq4l
  I0901 11:20:27.384653 16 service_latency.go:358] Got endpoints: latency-svc-pbwqb [653.727053ms]
  I0901 11:20:27.395855 16 service_latency.go:351] Created: latency-svc-wgtbm
  I0901 11:20:27.414739 16 service_latency.go:358] Got endpoints: latency-svc-lswjs [679.442084ms]
  I0901 11:20:27.414782 16 service_latency.go:358] Got endpoints: latency-svc-rvq4l [265.928271ms]
  I0901 11:20:27.415301 16 service_latency.go:358] Got endpoints: latency-svc-5jdxv [679.808972ms]
  I0901 11:20:27.450414 16 service_latency.go:358] Got endpoints: latency-svc-g7hpd [384.759497ms]
  I0901 11:20:27.487040 16 service_latency.go:358] Got endpoints: latency-svc-wgtbm [336.797343ms]
  I0901 11:20:27.487078 16 service_latency.go:351] Created: latency-svc-7szt9
  I0901 11:20:27.488977 16 service_latency.go:351] Created: latency-svc-cp54g
  I0901 11:20:27.536958 16 service_latency.go:351] Created: latency-svc-z2khs
  I0901 11:20:27.545665 16 service_latency.go:358] Got endpoints: latency-svc-cp54g [391.83203ms]
  I0901 11:20:27.545961 16 service_latency.go:358] Got endpoints: latency-svc-7szt9 [397.050365ms]
  I0901 11:20:27.604449 16 service_latency.go:351] Created: latency-svc-lhhns
  I0901 11:20:27.645691 16 service_latency.go:358] Got endpoints: latency-svc-z2khs [491.844266ms]
  I0901 11:20:27.668867 16 service_latency.go:358] Got endpoints: latency-svc-lhhns [253.439809ms]
  I0901 11:20:27.678495 16 service_latency.go:351] Created: latency-svc-vkvwh
  I0901 11:20:27.707839 16 service_latency.go:358] Got endpoints: latency-svc-vkvwh [257.307104ms]
  I0901 11:20:27.734386 16 service_latency.go:351] Created: latency-svc-fd4hg
  I0901 11:20:27.750480 16 service_latency.go:358] Got endpoints: latency-svc-fd4hg [500.170604ms]
  I0901 11:20:27.764985 16 service_latency.go:351] Created: latency-svc-qv78b
  I0901 11:20:27.771826 16 service_latency.go:351] Created: latency-svc-2rmlx
  I0901 11:20:27.826944 16 service_latency.go:358] Got endpoints: latency-svc-qv78b [576.188909ms]
  I0901 11:20:27.837416 16 service_latency.go:351] Created: latency-svc-6hvjt
  I0901 11:20:27.848327 16 service_latency.go:358] Got endpoints: latency-svc-2rmlx [597.746308ms]
  I0901 11:20:27.863881 16 service_latency.go:358] Got endpoints: latency-svc-6hvjt [613.4799ms]
  I0901 11:20:27.885455 16 service_latency.go:351] Created: latency-svc-4zzwp
  I0901 11:20:27.926635 16 service_latency.go:351] Created: latency-svc-plb9j
  I0901 11:20:27.963237 16 service_latency.go:358] Got endpoints: latency-svc-4zzwp [679.938298ms]
  I0901 11:20:27.970686 16 service_latency.go:351] Created: latency-svc-ftc8n
  I0901 11:20:27.994653 16 service_latency.go:358] Got endpoints: latency-svc-ftc8n [579.824705ms]
  I0901 11:20:27.994765 16 service_latency.go:358] Got endpoints: latency-svc-plb9j [609.961143ms]
  I0901 11:20:28.071485 16 service_latency.go:351] Created: latency-svc-jq7cl
  I0901 11:20:28.071544 16 service_latency.go:351] Created: latency-svc-n72jm
  I0901 11:20:28.121686 16 service_latency.go:358] Got endpoints: latency-svc-n72jm [947.406254ms]
  I0901 11:20:28.122183 16 service_latency.go:358] Got endpoints: latency-svc-jq7cl [707.217875ms]
  I0901 11:20:28.128410 16 service_latency.go:351] Created: latency-svc-8vc74
  I0901 11:20:28.176573 16 service_latency.go:358] Got endpoints: latency-svc-8vc74 [689.36207ms]
  I0901 11:20:28.180476 16 service_latency.go:351] Created: latency-svc-9ggxp
  I0901 11:20:28.199492 16 service_latency.go:351] Created: latency-svc-rtppk
  I0901 11:20:28.255807 16 service_latency.go:351] Created: latency-svc-l69fg
  I0901 11:20:28.269019 16 service_latency.go:358] Got endpoints: latency-svc-rtppk [722.958761ms]
  I0901 11:20:28.269029 16 service_latency.go:358] Got endpoints: latency-svc-9ggxp [723.252493ms]
  I0901 11:20:28.275947 16 service_latency.go:351] Created: latency-svc-ddmmb
  I0901 11:20:28.289371 16 service_latency.go:358] Got endpoints: latency-svc-l69fg [643.55651ms]
  I0901 11:20:28.303097 16 service_latency.go:351] Created: latency-svc-9qf9b
  I0901 11:20:28.348416 16 service_latency.go:358] Got endpoints: latency-svc-9qf9b [640.495638ms]
  I0901 11:20:28.349042 16 service_latency.go:358] Got endpoints: latency-svc-ddmmb [679.997967ms]
  I0901 11:20:28.366969 16 service_latency.go:351] Created: latency-svc-cpzb4
  I0901 11:20:28.366906 16 service_latency.go:351] Created: latency-svc-lpc4z
  I0901 11:20:28.379261 16 service_latency.go:358] Got endpoints: latency-svc-lpc4z [628.674522ms]
  I0901 11:20:28.388037 16 service_latency.go:358] Got endpoints: latency-svc-cpzb4 [561.010205ms]
  I0901 11:20:28.399240 16 service_latency.go:351] Created: latency-svc-9kcgp
  I0901 11:20:28.414041 16 service_latency.go:358] Got endpoints: latency-svc-9kcgp [565.623117ms]
  I0901 11:20:28.612940 16 service_latency.go:351] Created: latency-svc-9kl8z
  I0901 11:20:28.620361 16 service_latency.go:351] Created: latency-svc-qd2vh
  I0901 11:20:28.626582 16 service_latency.go:351] Created: latency-svc-92wqr
  I0901 11:20:28.635887 16 service_latency.go:351] Created: latency-svc-hjpqj
  I0901 11:20:28.678489 16 service_latency.go:358] Got endpoints: latency-svc-9kl8z [683.747605ms]
  I0901 11:20:28.681554 16 service_latency.go:351] Created: latency-svc-6s25r
  I0901 11:20:28.681782 16 service_latency.go:351] Created: latency-svc-g7h45
  I0901 11:20:28.698487 16 service_latency.go:351] Created: latency-svc-58mbh
  I0901 11:20:28.698635 16 service_latency.go:351] Created: latency-svc-4hjq9
  I0901 11:20:28.698848 16 service_latency.go:351] Created: latency-svc-c7hpt
  I0901 11:20:28.698953 16 service_latency.go:351] Created: latency-svc-sspm8
  I0901 11:20:28.699020 16 service_latency.go:351] Created: latency-svc-d257w
  I0901 11:20:28.699138 16 service_latency.go:351] Created: latency-svc-hk8sc
  I0901 11:20:28.708311 16 service_latency.go:351] Created: latency-svc-9ghpf
  I0901 11:20:28.708892 16 service_latency.go:351] Created: latency-svc-bkbrm
  I0901 11:20:28.709382 16 service_latency.go:351] Created: latency-svc-szvzp
  I0901 11:20:28.714320 16 service_latency.go:358] Got endpoints: latency-svc-qd2vh [719.455499ms]
  I0901 11:20:28.714415 16 service_latency.go:358] Got endpoints: latency-svc-92wqr [751.08161ms]
  I0901 11:20:28.767838 16 service_latency.go:358] Got endpoints: latency-svc-hjpqj [353.590297ms]
  I0901 11:20:28.768607 16 service_latency.go:358] Got endpoints: latency-svc-6s25r [388.534067ms]
  I0901 11:20:28.790401 16 service_latency.go:358] Got endpoints: latency-svc-g7h45 [668.134769ms]
  I0901 11:20:28.805093 16 service_latency.go:358] Got endpoints: latency-svc-d257w [456.593232ms]
  I0901 11:20:28.805256 16 service_latency.go:358] Got endpoints: latency-svc-hk8sc [535.706857ms]
  I0901 11:20:28.845615 16 service_latency.go:358] Got endpoints: latency-svc-bkbrm [556.154866ms]
  I0901 11:20:28.845606 16 service_latency.go:358] Got endpoints: latency-svc-szvzp [496.517303ms]
  I0901 11:20:28.856099 16 service_latency.go:358] Got endpoints: latency-svc-58mbh [992.056625ms]
  I0901 11:20:28.856169 16 service_latency.go:358] Got endpoints: latency-svc-9ghpf [586.824857ms]
  I0901 11:20:28.856395 16 service_latency.go:358] Got endpoints: latency-svc-4hjq9 [679.725238ms]
  I0901 11:20:28.940295 16 service_latency.go:351] Created: latency-svc-8fvrm
  I0901 11:20:28.943266 16 service_latency.go:358] Got endpoints: latency-svc-c7hpt [821.480715ms]
  I0901 11:20:28.943418 16 service_latency.go:351] Created: latency-svc-6xd98
  I0901 11:20:28.943487 16 service_latency.go:358] Got endpoints: latency-svc-sspm8 [555.118449ms]
  I0901 11:20:28.960881 16 service_latency.go:358] Got endpoints: latency-svc-6xd98 [246.484904ms]
  I0901 11:20:28.960712 16 service_latency.go:358] Got endpoints: latency-svc-8fvrm [282.097881ms]
  I0901 11:20:28.994949 16 service_latency.go:351] Created: latency-svc-tf6g4
  I0901 11:20:29.030988 16 service_latency.go:358] Got endpoints: latency-svc-tf6g4 [316.501478ms]
  I0901 11:20:29.034971 16 service_latency.go:351] Created: latency-svc-kxw54
  I0901 11:20:29.039871 16 service_latency.go:351] Created: latency-svc-ln28x
  I0901 11:20:29.066538 16 service_latency.go:351] Created: latency-svc-qh6lc
  I0901 11:20:29.085494 16 service_latency.go:358] Got endpoints: latency-svc-ln28x [317.551779ms]
  I0901 11:20:29.086057 16 service_latency.go:358] Got endpoints: latency-svc-kxw54 [317.394388ms]
  I0901 11:20:29.100936 16 service_latency.go:358] Got endpoints: latency-svc-qh6lc [309.268698ms]
  I0901 11:20:29.285522 16 service_latency.go:351] Created: latency-svc-2g994
  I0901 11:20:29.290532 16 service_latency.go:351] Created: latency-svc-mx95b
  I0901 11:20:29.319536 16 service_latency.go:351] Created: latency-svc-7vpxj
  I0901 11:20:29.319614 16 service_latency.go:351] Created: latency-svc-zzn5k
  I0901 11:20:29.320174 16 service_latency.go:351] Created: latency-svc-9nlpg
  I0901 11:20:29.322777 16 service_latency.go:351] Created: latency-svc-52x7j
  I0901 11:20:29.329179 16 service_latency.go:351] Created: latency-svc-nx2m5
  I0901 11:20:29.340008 16 service_latency.go:351] Created: latency-svc-dkpcj
  I0901 11:20:29.340897 16 service_latency.go:351] Created: latency-svc-dkgf7
  I0901 11:20:29.340994 16 service_latency.go:351] Created: latency-svc-t5p7q
  I0901 11:20:29.341008 16 service_latency.go:351] Created: latency-svc-4vtvp
  I0901 11:20:29.351628 16 service_latency.go:351] Created: latency-svc-pz7lp
  I0901 11:20:29.353415 16 service_latency.go:351] Created: latency-svc-9vwrb
  I0901 11:20:29.353499 16 service_latency.go:351] Created: latency-svc-trmp2
  I0901 11:20:29.355540 16 service_latency.go:351] Created: latency-svc-tkk8p
  I0901 11:20:29.388879 16 service_latency.go:358] Got endpoints: latency-svc-9nlpg [357.789658ms]
  I0901 11:20:29.388900 16 service_latency.go:358] Got endpoints: latency-svc-mx95b [532.644222ms]
  I0901 11:20:29.389235 16 service_latency.go:358] Got endpoints: latency-svc-2g994 [543.507039ms]
  I0901 11:20:29.392331 16 service_latency.go:358] Got endpoints: latency-svc-zzn5k [535.898337ms]
  I0901 11:20:29.392600 16 service_latency.go:358] Got endpoints: latency-svc-7vpxj [587.378633ms]
  I0901 11:20:29.433716 16 service_latency.go:358] Got endpoints: latency-svc-4vtvp [490.385583ms]
  I0901 11:20:29.440087 16 service_latency.go:358] Got endpoints: latency-svc-nx2m5 [583.88614ms]
  I0901 11:20:29.466934 16 service_latency.go:358] Got endpoints: latency-svc-pz7lp [621.199231ms]
  I0901 11:20:29.467206 16 service_latency.go:358] Got endpoints: latency-svc-52x7j [505.414418ms]
  I0901 11:20:29.467768 16 service_latency.go:358] Got endpoints: latency-svc-t5p7q [506.606677ms]
  I0901 11:20:29.495207 16 service_latency.go:358] Got endpoints: latency-svc-dkpcj [689.875508ms]
  I0901 11:20:29.500536 16 service_latency.go:358] Got endpoints: latency-svc-dkgf7 [414.436959ms]
  I0901 11:20:29.500717 16 service_latency.go:358] Got endpoints: latency-svc-trmp2 [399.478896ms]
  I0901 11:20:29.530722 16 service_latency.go:351] Created: latency-svc-zm6mn
  I0901 11:20:29.533272 16 service_latency.go:358] Got endpoints: latency-svc-9vwrb [589.63019ms]
  I0901 11:20:29.533221 16 service_latency.go:358] Got endpoints: latency-svc-tkk8p [447.623405ms]
  I0901 11:20:29.557777 16 service_latency.go:351] Created: latency-svc-zvt6j
  I0901 11:20:29.592425 16 service_latency.go:358] Got endpoints: latency-svc-zm6mn [203.429082ms]
  I0901 11:20:29.603628 16 service_latency.go:358] Got endpoints: latency-svc-zvt6j [210.886421ms]
  I0901 11:20:29.607051 16 service_latency.go:351] Created: latency-svc-97fws
  I0901 11:20:29.627624 16 service_latency.go:351] Created: latency-svc-rlsmf
  I0901 11:20:29.646077 16 service_latency.go:358] Got endpoints: latency-svc-97fws [257.120884ms]
  I0901 11:20:29.658664 16 service_latency.go:351] Created: latency-svc-tqd6h
  I0901 11:20:29.675449 16 service_latency.go:358] Got endpoints: latency-svc-rlsmf [286.174644ms]
  I0901 11:20:29.701016 16 service_latency.go:358] Got endpoints: latency-svc-tqd6h [308.630881ms]
  I0901 11:20:30.051355 16 service_latency.go:351] Created: latency-svc-qbh5m
  I0901 11:20:30.053649 16 service_latency.go:351] Created: latency-svc-g6w5n
  I0901 11:20:30.065346 16 service_latency.go:351] Created: latency-svc-d826n
  I0901 11:20:30.103479 16 service_latency.go:351] Created: latency-svc-xhb26
  I0901 11:20:30.107677 16 service_latency.go:351] Created: latency-svc-vrzhv
  I0901 11:20:30.109824 16 service_latency.go:351] Created: latency-svc-4r7mn
  I0901 11:20:30.127359 16 service_latency.go:351] Created: latency-svc-pw64j
  I0901 11:20:30.127440 16 service_latency.go:351] Created: latency-svc-rbtd8
  I0901 11:20:30.127498 16 service_latency.go:351] Created: latency-svc-65wnv
  I0901 11:20:30.131596 16 service_latency.go:351] Created: latency-svc-7snhl
  I0901 11:20:30.149826 16 service_latency.go:351] Created: latency-svc-gfd7n
  I0901 11:20:30.149974 16 service_latency.go:351] Created: latency-svc-hn4ws
  I0901 11:20:30.150058 16 service_latency.go:351] Created: latency-svc-w9k77
  I0901 11:20:30.151346 16 service_latency.go:351] Created: latency-svc-kfjxn
  I0901 11:20:30.151424 16 service_latency.go:358] Got endpoints: latency-svc-g6w5n [450.350872ms]
  I0901 11:20:30.151877 16 service_latency.go:358] Got endpoints: latency-svc-qbh5m [547.293497ms]
  I0901 11:20:30.177344 16 service_latency.go:351] Created: latency-svc-98vq8
  I0901 11:20:30.199834 16 service_latency.go:358] Got endpoints: latency-svc-7snhl [524.182283ms]
  I0901 11:20:30.257653 16 service_latency.go:351] Created: latency-svc-jjk88
  I0901 11:20:30.258540 16 service_latency.go:358] Got endpoints: latency-svc-d826n [790.250208ms]
  I0901 11:20:30.258621 16 service_latency.go:358] Got endpoints: latency-svc-xhb26 [757.430415ms]
  I0901 11:20:30.291033 16 service_latency.go:358] Got endpoints: latency-svc-rbtd8 [795.216765ms]
  I0901 11:20:30.291176 16 service_latency.go:358] Got endpoints: latency-svc-vrzhv [698.287767ms]
  I0901 11:20:30.291353 16 service_latency.go:358] Got endpoints: latency-svc-65wnv [823.28675ms]
  I0901 11:20:30.306467 16 service_latency.go:358] Got endpoints: latency-svc-4r7mn [838.651108ms]
  I0901 11:20:30.306419 16 service_latency.go:358] Got endpoints: latency-svc-pw64j [773.047485ms]
  I0901 11:20:30.326818 16 service_latency.go:351] Created: latency-svc-dqp2b
  I0901 11:20:30.364946 16 service_latency.go:351] Created: latency-svc-hf64r
  I0901 11:20:30.368478 16 service_latency.go:358] Got endpoints: latency-svc-w9k77 [834.930125ms]
  I0901 11:20:30.369046 16 service_latency.go:358] Got endpoints: latency-svc-hn4ws [928.821676ms]
  I0901 11:20:30.369471 16 service_latency.go:358] Got endpoints: latency-svc-kfjxn [868.221158ms]
  I0901 11:20:30.378830 16 service_latency.go:358] Got endpoints: latency-svc-gfd7n [944.753866ms]
  I0901 11:20:30.394082 16 service_latency.go:351] Created: latency-svc-stzzw
  I0901 11:20:30.417431 16 service_latency.go:358] Got endpoints: latency-svc-98vq8 [770.943435ms]
  I0901 11:20:30.429071 16 service_latency.go:351] Created: latency-svc-5txwr
  I0901 11:20:30.448852 16 service_latency.go:358] Got endpoints: latency-svc-jjk88 [297.393035ms]
  I0901 11:20:30.457716 16 service_latency.go:351] Created: latency-svc-f6n4s
  I0901 11:20:30.483392 16 service_latency.go:351] Created: latency-svc-fbzfd
  I0901 11:20:30.496265 16 service_latency.go:358] Got endpoints: latency-svc-dqp2b [344.330279ms]
  I0901 11:20:30.505615 16 service_latency.go:351] Created: latency-svc-7bdjm
  I0901 11:20:30.511048 16 service_latency.go:351] Created: latency-svc-vtfj5
  I0901 11:20:30.550408 16 service_latency.go:358] Got endpoints: latency-svc-hf64r [350.129554ms]
  I0901 11:20:30.578257 16 service_latency.go:358] Got endpoints: latency-svc-stzzw [319.657417ms]
  I0901 11:20:30.641588 16 service_latency.go:358] Got endpoints: latency-svc-5txwr [382.917087ms]
  I0901 11:20:30.702331 16 service_latency.go:358] Got endpoints: latency-svc-f6n4s [411.238766ms]
  I0901 11:20:30.760161 16 service_latency.go:358] Got endpoints: latency-svc-fbzfd [453.514272ms]
  I0901 11:20:30.766309 16 service_latency.go:351] Created: latency-svc-7sf4t
  I0901 11:20:30.769973 16 service_latency.go:351] Created: latency-svc-nrmdr
  I0901 11:20:30.770546 16 service_latency.go:351] Created: latency-svc-lrltr
  I0901 11:20:30.770727 16 service_latency.go:351] Created: latency-svc-cwxg9
  I0901 11:20:30.770725 16 service_latency.go:351] Created: latency-svc-hjp5f
  I0901 11:20:30.770812 16 service_latency.go:351] Created: latency-svc-pjp2q
  I0901 11:20:30.770869 16 service_latency.go:351] Created: latency-svc-mnp7v
  I0901 11:20:30.770914 16 service_latency.go:351] Created: latency-svc-mtf6p
  I0901 11:20:30.770992 16 service_latency.go:351] Created: latency-svc-pr62n
  I0901 11:20:30.770972 16 service_latency.go:351] Created: latency-svc-8jj7l
  I0901 11:20:30.771060 16 service_latency.go:351] Created: latency-svc-qcs5b
  I0901 11:20:30.803893 16 service_latency.go:358] Got endpoints: latency-svc-7bdjm [512.648389ms]
  I0901 11:20:30.843400 16 service_latency.go:358] Got endpoints: latency-svc-vtfj5 [551.91915ms]
  I0901 11:20:30.853233 16 service_latency.go:351] Created: latency-svc-5wvsx
  I0901 11:20:30.894562 16 service_latency.go:358] Got endpoints: latency-svc-pjp2q [587.478346ms]
  I0901 11:20:30.895368 16 service_latency.go:351] Created: latency-svc-d74xx
  I0901 11:20:30.898822 16 service_latency.go:351] Created: latency-svc-6prpf
  I0901 11:20:30.951243 16 service_latency.go:358] Got endpoints: latency-svc-8jj7l [582.659717ms]
  I0901 11:20:30.994291 16 service_latency.go:358] Got endpoints: latency-svc-nrmdr [615.381381ms]
  I0901 11:20:30.997218 16 service_latency.go:351] Created: latency-svc-kfhnf
  I0901 11:20:31.052997 16 service_latency.go:351] Created: latency-svc-l44pt
  I0901 11:20:31.063067 16 service_latency.go:358] Got endpoints: latency-svc-qcs5b [484.74045ms]
  I0901 11:20:31.075267 16 service_latency.go:351] Created: latency-svc-kstj9
  I0901 11:20:31.089134 16 service_latency.go:358] Got endpoints: latency-svc-cwxg9 [538.580746ms]
  I0901 11:20:31.095398 16 service_latency.go:351] Created: latency-svc-tvwhl
  I0901 11:20:31.155336 16 service_latency.go:351] Created: latency-svc-pzdfm
  I0901 11:20:31.162184 16 service_latency.go:358] Got endpoints: latency-svc-lrltr [665.828721ms]
  I0901 11:20:31.185173 16 service_latency.go:351] Created: latency-svc-wbnnj
  I0901 11:20:31.189027 16 service_latency.go:358] Got endpoints: latency-svc-mnp7v [740.105469ms]
  I0901 11:20:31.214419 16 service_latency.go:351] Created: latency-svc-5d7lc
  I0901 11:20:31.230046 16 service_latency.go:358] Got endpoints: latency-svc-mtf6p [811.343351ms]
  I0901 11:20:31.250366 16 service_latency.go:351] Created: latency-svc-s5skd
  I0901 11:20:31.271163 16 service_latency.go:351] Created: latency-svc-gjjc9
  I0901 11:20:31.287663 16 service_latency.go:358] Got endpoints: latency-svc-pr62n [646.008243ms]
  I0901 11:20:31.321011 16 service_latency.go:351] Created: latency-svc-m7lq6
  I0901 11:20:31.332005 16 service_latency.go:358] Got endpoints: latency-svc-hjp5f [962.853123ms]
  I0901 11:20:31.360910 16 service_latency.go:351] Created: latency-svc-5gj58
  I0901 11:20:31.380913 16 service_latency.go:358] Got endpoints: latency-svc-7sf4t [1.011370825s]
  I0901 11:20:31.412471 16 service_latency.go:351] Created: latency-svc-jcwb5
  I0901 11:20:31.424365 16 service_latency.go:358] Got endpoints: latency-svc-5wvsx [721.40781ms]
  I0901 11:20:31.457976 16 service_latency.go:351] Created: latency-svc-b5jpq
  I0901 11:20:31.481073 16 service_latency.go:358] Got endpoints: latency-svc-d74xx [720.785776ms]
  I0901 11:20:31.515857 16 service_latency.go:351] Created: latency-svc-l5dh6
  I0901 11:20:31.525691 16 service_latency.go:358] Got endpoints: latency-svc-6prpf [721.717808ms]
  I0901 11:20:31.561351 16 service_latency.go:351] Created: latency-svc-r6sdz
  I0901 11:20:31.591219 16 service_latency.go:358] Got endpoints: latency-svc-kfhnf [747.73769ms]
  I0901 11:20:31.639069 16 service_latency.go:351] Created: latency-svc-zltq4
  I0901 11:20:31.648520 16 service_latency.go:358] Got endpoints: latency-svc-l44pt [753.84851ms]
  I0901 11:20:31.682163 16 service_latency.go:358] Got endpoints: latency-svc-kstj9 [730.785349ms]
  I0901 11:20:31.694151 16 service_latency.go:351] Created: latency-svc-8npm9
  I0901 11:20:31.732870 16 service_latency.go:351] Created: latency-svc-7h5s2
  I0901 11:20:31.738573 16 service_latency.go:358] Got endpoints: latency-svc-tvwhl [744.139817ms]
  I0901 11:20:31.783235 16 service_latency.go:351] Created: latency-svc-kvdqt
  I0901 11:20:31.785174 16 service_latency.go:358] Got endpoints: latency-svc-pzdfm [721.986044ms]
  I0901 11:20:31.819264 16 service_latency.go:351] Created: latency-svc-rkfxw
  I0901 11:20:31.823175 16 service_latency.go:358] Got endpoints: latency-svc-wbnnj [733.89414ms]
  I0901 11:20:31.862857 16 service_latency.go:351] Created: latency-svc-7gnd2
  I0901 11:20:31.888377 16 service_latency.go:358] Got endpoints: latency-svc-5d7lc [726.105296ms]
  I0901 11:20:31.939740 16 service_latency.go:358] Got endpoints: latency-svc-s5skd [750.632344ms]
  I0901 11:20:31.953406 16 service_latency.go:351] Created: latency-svc-qqh9w
  I0901 11:20:31.996687 16 service_latency.go:351] Created: latency-svc-9v724
  I0901 11:20:31.997147 16 service_latency.go:358] Got endpoints: latency-svc-gjjc9 [767.041123ms]
  I0901 11:20:32.033549 16 service_latency.go:358] Got endpoints: latency-svc-m7lq6 [745.581325ms]
  I0901 11:20:32.042360 16 service_latency.go:351] Created: latency-svc-npw4d
  I0901 11:20:32.086261 16 service_latency.go:351] Created: latency-svc-mrlzt
  I0901 11:20:32.088088 16 service_latency.go:358] Got endpoints: latency-svc-5gj58 [755.545212ms]
  I0901 11:20:32.133591 16 service_latency.go:358] Got endpoints: latency-svc-jcwb5 [752.607612ms]
  I0901 11:20:32.146929 16 service_latency.go:351] Created: latency-svc-w7qvx
  I0901 11:20:32.175422 16 service_latency.go:351] Created: latency-svc-x27tw
  I0901 11:20:32.184251 16 service_latency.go:358] Got endpoints: latency-svc-b5jpq [759.764694ms]
  I0901 11:20:32.244405 16 service_latency.go:358] Got endpoints: latency-svc-l5dh6 [762.901556ms]
  I0901 11:20:32.245976 16 service_latency.go:351] Created: latency-svc-ljwnc
  I0901 11:20:32.283930 16 service_latency.go:358] Got endpoints: latency-svc-r6sdz [758.130604ms]
  I0901 11:20:32.295204 16 service_latency.go:351] Created: latency-svc-fczrp
  I0901 11:20:32.328707 16 service_latency.go:358] Got endpoints: latency-svc-zltq4 [737.300019ms]
  I0901 11:20:32.343332 16 service_latency.go:351] Created: latency-svc-mcn2c
  I0901 11:20:32.361156 16 service_latency.go:351] Created: latency-svc-wrv2s
  I0901 11:20:32.379339 16 service_latency.go:358] Got endpoints: latency-svc-8npm9 [730.749449ms]
  I0901 11:20:32.412606 16 service_latency.go:351] Created: latency-svc-hfks2
  I0901 11:20:32.427377 16 service_latency.go:358] Got endpoints: latency-svc-7h5s2 [745.097982ms]
  I0901 11:20:32.455741 16 service_latency.go:351] Created: latency-svc-w45jh
  I0901 11:20:32.482089 16 service_latency.go:358] Got endpoints: latency-svc-kvdqt [743.239803ms]
  I0901 11:20:32.515101 16 service_latency.go:351] Created: latency-svc-4bs95
  I0901 11:20:32.527836 16 service_latency.go:358] Got endpoints: latency-svc-rkfxw [742.430875ms]
  I0901 11:20:32.565951 16 service_latency.go:351] Created: latency-svc-zm86k
  I0901 11:20:32.577282 16 service_latency.go:358] Got endpoints: latency-svc-7gnd2 [754.039024ms]
  I0901 11:20:32.628007 16 service_latency.go:351] Created: latency-svc-v9c7d
  I0901 11:20:32.640750 16 service_latency.go:358] Got endpoints: latency-svc-qqh9w [751.050711ms]
  I0901 11:20:32.699749 16 service_latency.go:358] Got endpoints: latency-svc-9v724 [759.911698ms]
  I0901 11:20:32.702052 16 service_latency.go:351] Created: latency-svc-2wmch
  I0901 11:20:32.728082 16 service_latency.go:358] Got endpoints: latency-svc-npw4d [730.828606ms]
  I0901 11:20:32.766657 16 service_latency.go:351] Created: latency-svc-ppqlz
  I0901 11:20:32.798398 16 service_latency.go:358] Got endpoints: latency-svc-mrlzt [764.713537ms]
  I0901 11:20:32.804761 16 service_latency.go:351] Created: latency-svc-wbfp7
  I0901 11:20:32.838691 16 service_latency.go:358] Got endpoints: latency-svc-w7qvx [750.495662ms]
  I0901 11:20:32.856157 16 service_latency.go:351] Created: latency-svc-59dsz
  I0901 11:20:32.916755 16 service_latency.go:351] Created: latency-svc-nw47x
  I0901 11:20:32.918435 16 service_latency.go:358] Got endpoints: latency-svc-x27tw [784.762576ms]
  I0901 11:20:32.961095 16 service_latency.go:358] Got endpoints: latency-svc-ljwnc [776.728722ms]
  I0901 11:20:32.979844 16 service_latency.go:358] Got endpoints: latency-svc-fczrp [735.361726ms]
  I0901 11:20:33.013010 16 service_latency.go:351] Created: latency-svc-89xk7
  I0901 11:20:33.058597 16 service_latency.go:358] Got endpoints: latency-svc-mcn2c [774.558742ms]
  I0901 11:20:33.061593 16 service_latency.go:351] Created: latency-svc-89wvp
  I0901 11:20:33.097188 16 service_latency.go:351] Created: latency-svc-dc2rq
  I0901 11:20:33.098020 16 service_latency.go:358] Got endpoints: latency-svc-wrv2s [769.24025ms]
  I0901 11:20:33.146091 16 service_latency.go:351] Created: latency-svc-m4w7s
  I0901 11:20:33.157134 16 service_latency.go:358] Got endpoints: latency-svc-hfks2 [777.689128ms]
  I0901 11:20:33.204609 16 service_latency.go:351] Created: latency-svc-dnx8p
  I0901 11:20:33.215349 16 service_latency.go:358] Got endpoints: latency-svc-w45jh [787.883563ms]
  I0901 11:20:33.227768 16 service_latency.go:351] Created: latency-svc-6lt2g
  I0901 11:20:33.242912 16 service_latency.go:358] Got endpoints: latency-svc-4bs95 [760.694573ms]
  I0901 11:20:33.279170 16 service_latency.go:351] Created: latency-svc-l8rdf
  I0901 11:20:33.298966 16 service_latency.go:358] Got endpoints: latency-svc-zm86k [771.048173ms]
  I0901 11:20:33.322794 16 service_latency.go:351] Created: latency-svc-7g79s
  I0901 11:20:33.340723 16 service_latency.go:358] Got endpoints: latency-svc-v9c7d [763.36297ms]
  I0901 11:20:33.379186 16 service_latency.go:351] Created: latency-svc-tnvc6
  I0901 11:20:33.392862 16 service_latency.go:358] Got endpoints: latency-svc-2wmch [751.929641ms]
  I0901 11:20:33.408452 16 service_latency.go:351] Created: latency-svc-59xq8
  I0901 11:20:33.441692 16 service_latency.go:358] Got endpoints: latency-svc-ppqlz [741.845645ms]
  I0901 11:20:33.452442 16 service_latency.go:351] Created: latency-svc-kbz8v
  I0901 11:20:33.482894 16 service_latency.go:358] Got endpoints: latency-svc-wbfp7 [754.676518ms]
  I0901 11:20:33.483554 16 service_latency.go:351] Created: latency-svc-lx4zd
  I0901 11:20:33.510924 16 service_latency.go:351] Created: latency-svc-5p7mp
  I0901 11:20:33.529690 16 service_latency.go:358] Got endpoints: latency-svc-59dsz [730.892529ms]
  I0901 11:20:33.562408 16 service_latency.go:351] Created: latency-svc-9dzkx
  I0901 11:20:33.570768 16 service_latency.go:358] Got endpoints: latency-svc-nw47x [731.664713ms]
  I0901 11:20:33.610646 16 service_latency.go:351] Created: latency-svc-5jlvf
  I0901 11:20:33.633719 16 service_latency.go:358] Got endpoints: latency-svc-89xk7 [715.216553ms]
  I0901 11:20:33.666891 16 service_latency.go:351] Created: latency-svc-h9b8g
  I0901 11:20:33.680771 16 service_latency.go:358] Got endpoints: latency-svc-89wvp [719.288205ms]
  I0901 11:20:33.730767 16 service_latency.go:351] Created: latency-svc-zg4qc
  I0901 11:20:33.735335 16 service_latency.go:358] Got endpoints: latency-svc-dc2rq [755.428564ms]
  I0901 11:20:33.812555 16 service_latency.go:358] Got endpoints: latency-svc-m4w7s [753.853934ms]
  I0901 11:20:33.838022 16 service_latency.go:358] Got endpoints: latency-svc-dnx8p [739.934617ms]
  I0901 11:20:33.847256 16 service_latency.go:351] Created: latency-svc-sc86f
  I0901 11:20:33.871195 16 service_latency.go:351] Created: latency-svc-mpz8b
  I0901 11:20:33.888478 16 service_latency.go:358] Got endpoints: latency-svc-6lt2g [731.266969ms]
  I0901 11:20:33.921307 16 service_latency.go:351] Created: latency-svc-w52nl
  I0901 11:20:33.945340 16 service_latency.go:358] Got endpoints: latency-svc-l8rdf [729.897115ms]
  I0901 11:20:33.962771 16 service_latency.go:351] Created: latency-svc-tdtrk
  I0901 11:20:33.980583 16 service_latency.go:358] Got endpoints: latency-svc-7g79s [737.368553ms]
  I0901 11:20:34.009019 16 service_latency.go:351] Created: latency-svc-v6zrb
  I0901 11:20:34.040439 16 service_latency.go:351] Created: latency-svc-fnwxc
  I0901 11:20:34.057569 16 service_latency.go:358] Got endpoints: latency-svc-tnvc6 [758.172775ms]
  I0901 11:20:34.102685 16 service_latency.go:358] Got endpoints: latency-svc-59xq8 [761.88407ms]
  I0901 11:20:34.138547 16 service_latency.go:351] Created: latency-svc-2c2mt
  I0901 11:20:34.143192 16 service_latency.go:358] Got endpoints: latency-svc-kbz8v [750.185861ms]
  I0901 11:20:34.174327 16 service_latency.go:351] Created: latency-svc-sfclf
  I0901 11:20:34.186165 16 service_latency.go:358] Got endpoints: latency-svc-lx4zd [744.394696ms]
  I0901 11:20:34.209523 16 service_latency.go:351] Created: latency-svc-hlc6x
  I0901 11:20:34.234147 16 service_latency.go:358] Got endpoints: latency-svc-5p7mp [751.147495ms]
  I0901 11:20:34.247062 16 service_latency.go:351] Created: latency-svc-556gc
  I0901 11:20:34.291274 16 service_latency.go:358] Got endpoints: latency-svc-9dzkx [761.508543ms]
  I0901 11:20:34.305598 16 service_latency.go:351] Created: latency-svc-zjfr8
  I0901 11:20:34.325444 16 service_latency.go:351] Created: latency-svc-w8k4g
  I0901 11:20:34.329940 16 service_latency.go:358] Got endpoints: latency-svc-5jlvf [759.097465ms]
  I0901 11:20:34.363786 16 service_latency.go:351] Created: latency-svc-vtrx4
  I0901 11:20:34.375075 16 service_latency.go:358] Got endpoints: latency-svc-h9b8g [741.210825ms]
  I0901 11:20:34.409675 16 service_latency.go:351] Created: latency-svc-qnh2w
  I0901 11:20:34.423646 16 service_latency.go:358] Got endpoints: latency-svc-zg4qc [742.776474ms]
  I0901 11:20:34.451875 16 service_latency.go:351] Created: latency-svc-w6q7z
  I0901 11:20:34.476667 16 service_latency.go:358] Got endpoints: latency-svc-sc86f [741.2449ms]
  I0901 11:20:34.514654 16 service_latency.go:351] Created: latency-svc-htzvd
  I0901 11:20:34.528681 16 service_latency.go:358] Got endpoints: latency-svc-mpz8b [715.969585ms]
  I0901 11:20:34.567037 16 service_latency.go:351] Created: latency-svc-vjvcw
  I0901 11:20:34.578909 16 service_latency.go:358] Got endpoints: latency-svc-w52nl [740.773895ms]
  I0901 11:20:34.615200 16 service_latency.go:351] Created: latency-svc-zxxsx
  I0901 11:20:34.634321 16 service_latency.go:358] Got endpoints: latency-svc-tdtrk [745.180541ms]
  I0901 11:20:34.670764 16 service_latency.go:351] Created: latency-svc-kbrpf
  I0901 11:20:34.688798 16 service_latency.go:358] Got endpoints: latency-svc-v6zrb [743.139933ms]
  I0901 11:20:34.734339 16 service_latency.go:351] Created: latency-svc-4jpmz
  I0901 11:20:34.735036 16 service_latency.go:358] Got endpoints: latency-svc-fnwxc [754.362754ms]
  I0901 11:20:34.766135 16 service_latency.go:351] Created: latency-svc-h6jp5
  I0901 11:20:34.789953 16 service_latency.go:358] Got endpoints: latency-svc-2c2mt [732.318669ms]
  I0901 11:20:34.822007 16 service_latency.go:358] Got endpoints: latency-svc-sfclf [718.276842ms]
  I0901 11:20:34.896179 16 service_latency.go:358] Got endpoints: latency-svc-hlc6x [752.911935ms]
  I0901 11:20:34.924330 16 service_latency.go:358] Got endpoints: latency-svc-556gc [738.044359ms]
  I0901 11:20:34.978936 16 service_latency.go:358] Got endpoints: latency-svc-zjfr8 [743.746979ms]
  I0901 11:20:35.029725 16 service_latency.go:358] Got endpoints: latency-svc-w8k4g [738.36733ms]
  I0901 11:20:35.079756 16 service_latency.go:358] Got endpoints: latency-svc-vtrx4 [749.733602ms]
  I0901 11:20:35.135917 16 service_latency.go:358] Got endpoints: latency-svc-qnh2w [760.668454ms]
  I0901 11:20:35.178585 16 service_latency.go:358] Got endpoints: latency-svc-w6q7z [754.857252ms]
  I0901 11:20:35.234173 16 service_latency.go:358] Got endpoints: latency-svc-htzvd [757.431796ms]
  I0901 11:20:35.278923 16 service_latency.go:358] Got endpoints: latency-svc-vjvcw [750.156434ms]
  I0901 11:20:35.334811 16 service_latency.go:358] Got endpoints: latency-svc-zxxsx [755.777632ms]
  I0901 11:20:35.386457 16 service_latency.go:358] Got endpoints: latency-svc-kbrpf [751.64307ms]
  I0901 11:20:35.426438 16 service_latency.go:358] Got endpoints: latency-svc-4jpmz [737.53248ms]
  I0901 11:20:35.477938 16 service_latency.go:358] Got endpoints: latency-svc-h6jp5 [742.623034ms]
  I0901 11:20:35.478249 16 service_latency.go:114] Latencies: [51.61608ms 203.429082ms 210.886421ms 246.484904ms 253.439809ms 257.120884ms 257.307104ms 265.928271ms 282.097881ms 286.174644ms 297.393035ms 308.630881ms 309.268698ms 316.501478ms 317.394388ms 317.551779ms 319.657417ms 331.787126ms 336.797343ms 344.330279ms 350.129554ms 353.590297ms 357.789658ms 382.917087ms 384.759497ms 388.534067ms 391.83203ms 397.050365ms 399.478896ms 411.238766ms 412.684976ms 414.436959ms 415.982551ms 416.507023ms 419.87246ms 422.499773ms 439.14391ms 447.623405ms 450.350872ms 453.514272ms 456.593232ms 468.118462ms 484.74045ms 490.385583ms 491.844266ms 496.517303ms 500.170604ms 505.414418ms 506.606677ms 512.648389ms 514.090383ms 515.394793ms 518.104125ms 524.182283ms 532.644222ms 535.706857ms 535.898337ms 538.580746ms 543.507039ms 547.293497ms 550.427857ms 551.91915ms 555.118449ms 556.154866ms 561.010205ms 565.623117ms 576.188909ms 579.824705ms 582.659717ms 583.88614ms 586.824857ms 587.378633ms 587.478346ms 589.63019ms 597.746308ms 609.961143ms 613.4799ms 615.381381ms 621.199231ms 628.674522ms 640.495638ms 643.55651ms 646.008243ms 653.727053ms 665.828721ms 668.134769ms 679.442084ms 679.725238ms 679.808972ms 679.938298ms 679.997967ms 683.747605ms 689.36207ms 689.875508ms 698.287767ms 707.217875ms 715.216553ms 715.969585ms 718.276842ms 719.288205ms 719.455499ms 720.785776ms 721.40781ms 721.717808ms 721.986044ms 722.958761ms 723.252493ms 726.105296ms 729.897115ms 730.749449ms 730.785349ms 730.828606ms 730.892529ms 731.266969ms 731.664713ms 732.318669ms 733.89414ms 735.361726ms 737.300019ms 737.368553ms 737.53248ms 738.044359ms 738.36733ms 739.934617ms 740.105469ms 740.773895ms 741.210825ms 741.2449ms 741.845645ms 742.430875ms 742.623034ms 742.776474ms 743.139933ms 743.239803ms 743.746979ms 744.139817ms 744.394696ms 745.097982ms 745.180541ms 745.581325ms 747.73769ms 749.733602ms 750.156434ms 750.185861ms 750.495662ms 750.632344ms 751.050711ms 751.08161ms 751.147495ms 751.64307ms 751.929641ms 752.607612ms 752.911935ms 753.84851ms 753.853934ms 754.039024ms 754.362754ms 754.676518ms 754.857252ms 755.428564ms 755.545212ms 755.777632ms 757.430415ms 757.431796ms 758.130604ms 758.172775ms 759.097465ms 759.764694ms 759.911698ms 760.668454ms 760.694573ms 761.508543ms 761.88407ms 762.901556ms 763.36297ms 764.713537ms 767.041123ms 769.24025ms 770.943435ms 771.048173ms 773.047485ms 774.558742ms 776.728722ms 777.689128ms 784.762576ms 787.883563ms 790.250208ms 795.216765ms 811.343351ms 821.480715ms 823.28675ms 834.930125ms 838.651108ms 868.221158ms 928.821676ms 944.753866ms 947.406254ms 962.853123ms 992.056625ms 1.011370825s]
  I0901 11:20:35.478304 16 service_latency.go:118] 50 %ile: 719.455499ms
  I0901 11:20:35.478325 16 service_latency.go:119] 90 %ile: 773.047485ms
  I0901 11:20:35.478356 16 service_latency.go:120] 99 %ile: 992.056625ms
  I0901 11:20:35.478373 16 service_latency.go:121] Total sample count: 200
  I0901 11:20:35.478800 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2579" for this suite. @ 09/01/25 11:20:35.494
• [11.024 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/01/25 11:20:35.513
  I0901 11:20:35.513490 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 11:20:35.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:35.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:35.55
  STEP: Waiting for pod completion @ 09/01/25 11:20:35.579
  I0901 11:20:39.648932 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2373" for this suite. @ 09/01/25 11:20:39.663
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 09/01/25 11:20:39.684
  I0901 11:20:39.685001 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:20:39.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:39.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:39.72
  STEP: creating Agnhost RC @ 09/01/25 11:20:39.726
  I0901 11:20:39.726497 16 kubectl.go:1540] namespace kubectl-5362
  I0901 11:20:39.726819 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5362 create -f -'
  I0901 11:20:40.139040 16 builder.go:146] stderr: ""
  I0901 11:20:40.139539 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 11:20:40.139
  I0901 11:20:41.166920 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 11:20:41.167052 16 framework.go:733] Found 0 / 1
  I0901 11:20:42.151243 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 11:20:42.151316 16 framework.go:733] Found 0 / 1
  I0901 11:20:43.183590 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 11:20:43.183669 16 framework.go:733] Found 1 / 1
  I0901 11:20:43.183801 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 11:20:43.285472 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 11:20:43.285725 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 11:20:43.285801 16 kubectl.go:1547] wait on agnhost-primary startup in kubectl-5362 
  I0901 11:20:43.286216 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5362 logs agnhost-primary-f49cd agnhost-primary'
  I0901 11:20:43.533179 16 builder.go:146] stderr: ""
  I0901 11:20:43.533292 16 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/01/25 11:20:43.533
  I0901 11:20:43.533629 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5362 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0901 11:20:43.828805 16 builder.go:146] stderr: ""
  I0901 11:20:43.829866 16 builder.go:147] stdout: "service/rm2 exposed\n"
  I0901 11:20:43.881136 16 utils.go:1115] Service rm2 in namespace kubectl-5362 found.
  I0901 11:20:45.892302 16 kubectl.go:1568] No endpoint found, retrying
  I0901 11:20:47.903382 16 kubectl.go:1568] No endpoint found, retrying
  I0901 11:20:49.894291 16 kubectl.go:1568] No endpoint found, retrying
  STEP: exposing service @ 09/01/25 11:20:51.906
  I0901 11:20:51.906883 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5362 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0901 11:20:52.165034 16 builder.go:146] stderr: ""
  I0901 11:20:52.166722 16 builder.go:147] stdout: "service/rm3 exposed\n"
  I0901 11:20:52.171945 16 utils.go:1115] Service rm3 in namespace kubectl-5362 found.
  I0901 11:20:54.198283 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5362" for this suite. @ 09/01/25 11:20:54.209
• [14.539 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 09/01/25 11:20:54.227
  I0901 11:20:54.227187 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:20:54.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:54.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:54.269
  STEP: Counting existing ResourceQuota @ 09/01/25 11:20:54.274
  STEP: Creating a ResourceQuota @ 09/01/25 11:20:59.293
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:20:59.314
  STEP: Creating a Pod that fits quota @ 09/01/25 11:21:01.329
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/01/25 11:21:01.376
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/01/25 11:21:03.388
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/01/25 11:21:03.395
  STEP: Ensuring a pod cannot update its resource requirements @ 09/01/25 11:21:03.401
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/01/25 11:21:03.414
  STEP: Deleting the pod @ 09/01/25 11:21:05.426
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:21:05.465
  I0901 11:21:07.476655 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-64" for this suite. @ 09/01/25 11:21:07.488
• [13.277 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/01/25 11:21:07.504
  I0901 11:21:07.504935 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:21:07.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:07.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:07.542
  I0901 11:21:07.550415 16 deployment.go:1664] Creating simple deployment test-new-deployment
  I0901 11:21:07.588259 16 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/01/25 11:21:09.646
  STEP: updating a scale subresource @ 09/01/25 11:21:09.655
  STEP: verifying the deployment Spec.Replicas was modified @ 09/01/25 11:21:09.68
  STEP: Patch a scale subresource @ 09/01/25 11:21:09.69
  I0901 11:21:09.780549 16 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aea37983-dc97-4c19-b8d9-ef0857e8e845",
      ResourceVersion: (string) (len=4) "9133",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:21:09.807218 16 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de0a5b5e-5f91-4ba9-9ff0-3714c434d9e0",
      ResourceVersion: (string) (len=4) "9136",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "aea37983-dc97-4c19-b8d9-ef0857e8e845",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 65 61 33 37 39  38 33 2d 64 63 39 37 2d  |\"aea37983-dc97-|
              00000120  34 63 31 39 2d 62 38 64  39 2d 65 66 30 38 35 37  |4c19-b8d9-ef0857|
              00000130  65 38 65 38 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e8e845\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:21:09.826369 16 deployment.go:68] Pod "test-new-deployment-685b768f58-bg7zx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-bg7zx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb15d4da-b0f4-4199-a90a-bcd0d53ca4f5",
      ResourceVersion: (string) (len=4) "9138",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "de0a5b5e-5f91-4ba9-9ff0-3714c434d9e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  30 61 35 62 35 65 2d 35  |d\":\"de0a5b5e-5|
              00000090  66 39 31 2d 34 62 61 39  2d 39 66 66 30 2d 33 37  |f91-4ba9-9ff0-37|
              000000a0  31 34 63 34 33 34 64 39  65 30 5c 22 7d 22 3a 7b  |14c434d9e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rf8q2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rf8q2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:21:09.832822 16 deployment.go:68] Pod "test-new-deployment-685b768f58-hvz5f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-hvz5f",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "935b8fa6-37f6-436c-945e-81a81f5647c1",
      ResourceVersion: (string) (len=4) "9128",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "de0a5b5e-5f91-4ba9-9ff0-3714c434d9e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  30 61 35 62 35 65 2d 35  |d\":\"de0a5b5e-5|
              00000090  66 39 31 2d 34 62 61 39  2d 39 66 66 30 2d 33 37  |f91-4ba9-9ff0-37|
              000000a0  31 34 63 34 33 34 64 39  65 30 5c 22 7d 22 3a 7b  |14c434d9e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 39 5c 22 7d 22 3a  |.233.66.209\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5p7dj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5p7dj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892322468,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2feec5f2eeaf748e3ced533b29bcab370e3332d20cd2ae88c35c4491431e7eb4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5p7dj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:21:09.840643 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1354" for this suite. @ 09/01/25 11:21:09.86
• [2.399 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 11:21:09.904
  I0901 11:21:09.904459 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:21:09.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:09.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:10.007
  STEP: Creating configMap with name configmap-test-volume-89480e4a-fe02-4c02-8245-c63a9901ea39 @ 09/01/25 11:21:10.015
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:21:10.027
  STEP: Saw pod success @ 09/01/25 11:21:14.084
  I0901 11:21:14.102599 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-d1bf99c8-493f-4560-9221-3cb9e9b2a469 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:21:14.125
  I0901 11:21:14.164610 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9172" for this suite. @ 09/01/25 11:21:14.177
• [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/01/25 11:21:14.199
  I0901 11:21:14.199727 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:21:14.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:14.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:14.242
  I0901 11:21:14.255454 16 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-8254"
  I0901 11:21:14.271903 16 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-8254"
  STEP: waiting for a new root ca configmap created @ 09/01/25 11:21:14.773
  I0901 11:21:14.787575 16 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-8254"
  I0901 11:21:14.806417 16 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-8254"
  STEP: waiting for the root ca configmap reconciled @ 09/01/25 11:21:15.307
  I0901 11:21:15.315792 16 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-8254"
  I0901 11:21:15.316186 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8254" for this suite. @ 09/01/25 11:21:15.327
• [1.142 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 11:21:15.343
  I0901 11:21:15.343911 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:21:15.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:15.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:15.384
  STEP: Creating secret with name secret-test-map-c2bbfb7e-a137-406e-b01d-a31f39b48397 @ 09/01/25 11:21:15.392
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:21:15.404
  STEP: Saw pod success @ 09/01/25 11:21:19.516
  I0901 11:21:19.526781 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-2b30c6f6-315f-4df9-ab57-a931ade2a67e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:21:19.547
  I0901 11:21:19.597151 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2120" for this suite. @ 09/01/25 11:21:19.617
• [4.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/01/25 11:21:19.662
  I0901 11:21:19.663036 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:21:19.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:19.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:19.709
  I0901 11:21:19.750269 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:21:19.771809 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 11:21:19.780209 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-1 before test
  I0901 11:21:19.795906 16 predicates.go:958] cilium-jq2g6 from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796075 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:19.796158 16 predicates.go:958] cilium-node-init-24srs from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796182 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:21:19.796203 16 predicates.go:958] kube-apiserver-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796221 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:19.796240 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796257 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:21:19.796365 16 predicates.go:958] kube-proxy-sfcrg from kube-system started at 2025-09-01 10:45:37 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796384 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:19.796403 16 predicates.go:958] kube-scheduler-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.796420 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:19.796439 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8 from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 11:21:19.796455 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:19.796471 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:19.796489 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-2 before test
  I0901 11:21:19.812525 16 predicates.go:958] cilium-jb44h from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812581 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:19.812606 16 predicates.go:958] cilium-node-init-2jnhr from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812624 16 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 11:21:19.812664 16 predicates.go:958] coredns-674b8bbfcf-6wfq2 from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812682 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 11:21:19.812703 16 predicates.go:958] coredns-674b8bbfcf-xqczq from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812721 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 11:21:19.812741 16 predicates.go:958] kube-apiserver-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812759 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:19.812810 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812828 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:21:19.812847 16 predicates.go:958] kube-proxy-vkvcp from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812873 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:19.812895 16 predicates.go:958] kube-scheduler-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.812913 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:19.812932 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-q8n4b from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 11:21:19.812949 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:19.812965 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:19.812983 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-3 before test
  I0901 11:21:19.825199 16 predicates.go:958] cilium-7ffvq from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.825259 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:19.825283 16 predicates.go:958] cilium-node-init-r4zwt from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.825300 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:21:19.825318 16 predicates.go:958] cilium-operator-66b866ccb5-zzktz from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.825334 16 predicates.go:960] 	Container cilium-operator ready: true, restart count 4
  I0901 11:21:19.825351 16 predicates.go:958] kube-proxy-m96dg from kube-system started at 2025-09-01 10:47:04 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.825366 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:19.825383 16 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:20 +0000 UTC (1 container statuses recorded)
  I0901 11:21:19.825432 16 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:21:19.825451 16 predicates.go:958] sonobuoy-e2e-job-4eba01326b644eed from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:19.825466 16 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 11:21:19.825482 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:19.825499 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-bx8bz from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 11:21:19.825539 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:19.825556 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/01/25 11:21:19.825
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.186124b2c58c5d86], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/01/25 11:21:19.903
  I0901 11:21:20.902684 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3447" for this suite. @ 09/01/25 11:21:20.927
• [1.288 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 09/01/25 11:21:20.948
  I0901 11:21:20.948775 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:21:20.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:20.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:20.987
  STEP: creating a replication controller @ 09/01/25 11:21:20.992
  I0901 11:21:20.992630 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 create -f -'
  I0901 11:21:21.444166 16 builder.go:146] stderr: ""
  I0901 11:21:21.444439 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:21:21.444
  I0901 11:21:21.445022 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:21:21.679775 16 builder.go:146] stderr: ""
  I0901 11:21:21.679853 16 builder.go:147] stdout: "update-demo-nautilus-5zqz4 update-demo-nautilus-9n9xm "
  I0901 11:21:21.680070 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:21.919657 16 builder.go:146] stderr: ""
  I0901 11:21:21.919774 16 builder.go:147] stdout: ""
  I0901 11:21:21.919944 16 kubectl.go:2505] update-demo-nautilus-5zqz4 is created but not running
  I0901 11:21:26.924263 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:21:27.175415 16 builder.go:146] stderr: ""
  I0901 11:21:27.175492 16 builder.go:147] stdout: "update-demo-nautilus-5zqz4 update-demo-nautilus-9n9xm "
  I0901 11:21:27.177315 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:27.417767 16 builder.go:146] stderr: ""
  I0901 11:21:27.417903 16 builder.go:147] stdout: ""
  I0901 11:21:27.418381 16 kubectl.go:2505] update-demo-nautilus-5zqz4 is created but not running
  I0901 11:21:32.422693 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:21:32.765441 16 builder.go:146] stderr: ""
  I0901 11:21:32.765652 16 builder.go:147] stdout: "update-demo-nautilus-5zqz4 update-demo-nautilus-9n9xm "
  I0901 11:21:32.768196 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:33.071300 16 builder.go:146] stderr: ""
  I0901 11:21:33.071776 16 builder.go:147] stdout: ""
  I0901 11:21:33.071808 16 kubectl.go:2505] update-demo-nautilus-5zqz4 is created but not running
  I0901 11:21:38.072942 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:21:38.304821 16 builder.go:146] stderr: ""
  I0901 11:21:38.304923 16 builder.go:147] stdout: "update-demo-nautilus-5zqz4 update-demo-nautilus-9n9xm "
  I0901 11:21:38.305320 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:38.479589 16 builder.go:146] stderr: ""
  I0901 11:21:38.480505 16 builder.go:147] stdout: ""
  I0901 11:21:38.480549 16 kubectl.go:2505] update-demo-nautilus-5zqz4 is created but not running
  I0901 11:21:43.483177 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:21:43.698922 16 builder.go:146] stderr: ""
  I0901 11:21:43.699031 16 builder.go:147] stdout: "update-demo-nautilus-5zqz4 update-demo-nautilus-9n9xm "
  I0901 11:21:43.699336 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:43.880304 16 builder.go:146] stderr: ""
  I0901 11:21:43.880485 16 builder.go:147] stdout: "true"
  I0901 11:21:43.880748 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-5zqz4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:21:44.126813 16 builder.go:146] stderr: ""
  I0901 11:21:44.126915 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:21:44.126940 16 kubectl.go:2396] validating pod update-demo-nautilus-5zqz4
  I0901 11:21:44.154307 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:21:44.154691 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:21:44.154779 16 kubectl.go:2523] update-demo-nautilus-5zqz4 is verified up and running
  I0901 11:21:44.155337 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-9n9xm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:21:44.353340 16 builder.go:146] stderr: ""
  I0901 11:21:44.353685 16 builder.go:147] stdout: "true"
  I0901 11:21:44.354580 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods update-demo-nautilus-9n9xm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:21:44.550073 16 builder.go:146] stderr: ""
  I0901 11:21:44.550328 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:21:44.550395 16 kubectl.go:2396] validating pod update-demo-nautilus-9n9xm
  I0901 11:21:44.580845 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:21:44.582195 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:21:44.582311 16 kubectl.go:2523] update-demo-nautilus-9n9xm is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 11:21:44.583
  I0901 11:21:44.583896 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 delete --grace-period=0 --force -f -'
  I0901 11:21:44.823061 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:21:44.823329 16 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 11:21:44.824197 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get rc,svc -l name=update-demo --no-headers'
  I0901 11:21:45.131265 16 builder.go:146] stderr: "No resources found in kubectl-8024 namespace.\n"
  I0901 11:21:45.131755 16 builder.go:147] stdout: ""
  I0901 11:21:45.132487 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8024 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 11:21:45.390848 16 builder.go:146] stderr: ""
  I0901 11:21:45.390929 16 builder.go:147] stdout: ""
  I0901 11:21:45.391261 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8024" for this suite. @ 09/01/25 11:21:45.406
• [24.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/01/25 11:21:45.429
  I0901 11:21:45.429939 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:21:45.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:45.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:45.471
  STEP: Setting up server cert @ 09/01/25 11:21:45.504
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:21:46.218
  STEP: Deploying the webhook pod @ 09/01/25 11:21:46.234
  STEP: Wait for the deployment to be ready @ 09/01/25 11:21:46.279
  I0901 11:21:46.340708 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:21:48.372
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:21:48.417
  I0901 11:21:49.418756 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 11:21:49.438266 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/01/25 11:21:49.967
  STEP: Creating a custom resource that should be denied by the webhook @ 09/01/25 11:21:50.032
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/01/25 11:21:52.19
  STEP: Updating the custom resource with disallowed data should be denied @ 09/01/25 11:21:52.219
  STEP: Deleting the custom resource should be denied @ 09/01/25 11:21:52.25
  STEP: Remove the offending key and value from the custom resource data @ 09/01/25 11:21:52.276
  STEP: Deleting the updated custom resource should be successful @ 09/01/25 11:21:52.311
  I0901 11:21:53.085406 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3201" for this suite. @ 09/01/25 11:21:53.106
  STEP: Destroying namespace "webhook-markers-289" for this suite. @ 09/01/25 11:21:53.131
• [7.724 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:21:53.156
  I0901 11:21:53.156993 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:21:53.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:53.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:53.202
  STEP: Setting up data @ 09/01/25 11:21:53.212
  STEP: Creating pod pod-subpath-test-configmap-92qn @ 09/01/25 11:21:53.248
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:21:53.249
  STEP: Saw pod success @ 09/01/25 11:22:17.441
  I0901 11:22:17.452876 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-subpath-test-configmap-92qn container test-container-subpath-configmap-92qn: <nil>
  STEP: delete the pod @ 09/01/25 11:22:17.482
  STEP: Deleting pod pod-subpath-test-configmap-92qn @ 09/01/25 11:22:17.538
  I0901 11:22:17.539168 16 delete.go:62] Deleting pod "pod-subpath-test-configmap-92qn" in namespace "subpath-2156"
  I0901 11:22:17.547279 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2156" for this suite. @ 09/01/25 11:22:17.561
• [24.429 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/01/25 11:22:17.585
  I0901 11:22:17.585844 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:22:17.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:17.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:17.629
  I0901 11:22:17.696146      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:22:19.708481      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:22:19.811889      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:22:19.822459 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5213" for this suite. @ 09/01/25 11:22:19.833
• [2.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/01/25 11:22:19.854
  I0901 11:22:19.854373 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:22:19.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:19.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:19.89
  STEP: Creating projection with secret that has name projected-secret-test-map-5609f20e-7c3e-4f6a-ae15-05427bfabec9 @ 09/01/25 11:22:19.895
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:22:19.906
  STEP: Saw pod success @ 09/01/25 11:22:23.963
  I0901 11:22:23.972022 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-secrets-ad77cde3-5d6c-4bbb-903b-d3933cbdd1d1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:22:23.996
  I0901 11:22:24.049224 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-238" for this suite. @ 09/01/25 11:22:24.063
• [4.228 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 09/01/25 11:22:24.085
  I0901 11:22:24.085444 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:22:24.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:24.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:24.137
  STEP: Setting up server cert @ 09/01/25 11:22:24.185
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:22:25.751
  STEP: Deploying the webhook pod @ 09/01/25 11:22:25.769
  STEP: Wait for the deployment to be ready @ 09/01/25 11:22:25.794
  I0901 11:22:25.817262 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:22:27.855
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:22:27.915
  I0901 11:22:28.916323 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 11:22:28.929
  STEP: verifying the validating webhook match conditions @ 09/01/25 11:22:28.981
  STEP: updating the validating webhook match conditions @ 09/01/25 11:22:28.992
  STEP: verifying the validating webhook match conditions @ 09/01/25 11:22:29.035
  I0901 11:22:29.186662 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-263" for this suite. @ 09/01/25 11:22:29.201
  STEP: Destroying namespace "webhook-markers-5519" for this suite. @ 09/01/25 11:22:29.225
• [5.157 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 09/01/25 11:22:29.248
  I0901 11:22:29.248819 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:22:29.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:29.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:29.301
  STEP: create deployment with httpd image @ 09/01/25 11:22:29.309
  I0901 11:22:29.310379 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3156 create -f -'
  I0901 11:22:29.633952 16 builder.go:146] stderr: ""
  I0901 11:22:29.634028 16 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/01/25 11:22:29.634
  I0901 11:22:29.635253 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3156 diff -f -'
  I0901 11:22:30.009575 16 builder.go:135] rc: 1
  I0901 11:22:30.010574 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3156 delete -f -'
  I0901 11:22:30.431399 16 builder.go:146] stderr: ""
  I0901 11:22:30.431473 16 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0901 11:22:30.431698 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3156" for this suite. @ 09/01/25 11:22:30.445
• [1.219 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/01/25 11:22:30.463
  I0901 11:22:30.463932 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:22:30.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:30.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:30.504
  STEP: creating a new configmap @ 09/01/25 11:22:30.51
  STEP: modifying the configmap once @ 09/01/25 11:22:30.519
  STEP: modifying the configmap a second time @ 09/01/25 11:22:30.543
  STEP: deleting the configmap @ 09/01/25 11:22:30.558
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/01/25 11:22:30.569
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/01/25 11:22:30.575
  I0901 11:22:30.577885 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7420  b7861319-c755-4ce9-b281-bc97c8f5507e 9764 0 2025-09-01 11:22:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:22:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:22:30.578287 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7420  b7861319-c755-4ce9-b281-bc97c8f5507e 9765 0 2025-09-01 11:22:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:22:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:22:30.578480 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7420" for this suite. @ 09/01/25 11:22:30.595
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:22:30.618
  I0901 11:22:30.618492 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:22:30.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:30.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:30.66
  STEP: Creating secret with name secret-test-36fd4bdd-55b3-4af6-9033-fc19df83f66d @ 09/01/25 11:22:30.678
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:22:30.694
  STEP: Saw pod success @ 09/01/25 11:22:34.754
  I0901 11:22:34.770290 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod pod-secrets-b79b158d-e8b0-4034-81fb-b7a97df0fb39 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:22:34.84
  I0901 11:22:34.880193 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-418" for this suite. @ 09/01/25 11:22:34.889
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:22:34.908
  I0901 11:22:34.909036 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:22:34.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:34.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:34.959
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:22:34.966
  STEP: Saw pod success @ 09/01/25 11:22:39.033
  I0901 11:22:39.044754 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-2cdd532c-866a-40fa-9a52-1200862c7a1b container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:22:39.064
  I0901 11:22:39.113353 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6778" for this suite. @ 09/01/25 11:22:39.131
• [4.250 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/01/25 11:22:39.159
  I0901 11:22:39.159482 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:22:39.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:39.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:39.206
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 11:22:39.212
  STEP: Saw pod success @ 09/01/25 11:22:43.284
  I0901 11:22:43.298749 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-83eaed76-3ae3-4229-9691-c4c58db50136 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:22:43.323
  I0901 11:22:43.378510 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4034" for this suite. @ 09/01/25 11:22:43.398
• [4.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:22:43.422
  I0901 11:22:43.422844 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:22:43.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:43.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:43.467
  STEP: Creating configMap with name configmap-test-volume-map-1aae7a6a-f158-4920-b9ac-8b717b440362 @ 09/01/25 11:22:43.476
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:22:43.499
  STEP: Saw pod success @ 09/01/25 11:22:47.55
  I0901 11:22:47.559576 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-edc6ac01-a72f-4d61-9a73-511ff78b99b7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:22:47.577
  I0901 11:22:47.615927 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2113" for this suite. @ 09/01/25 11:22:47.626
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/01/25 11:22:47.645
  I0901 11:22:47.645282 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:22:47.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:47.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:47.681
  STEP: Creating a pod to test substitution in container's args @ 09/01/25 11:22:47.687
  STEP: Saw pod success @ 09/01/25 11:22:51.759
  I0901 11:22:51.768775 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod var-expansion-9877eab1-9235-4858-b2f9-9d9cdc4bfb4c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:22:51.786
  I0901 11:22:51.832079 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5737" for this suite. @ 09/01/25 11:22:51.843
• [4.216 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/01/25 11:22:51.861
  I0901 11:22:51.861715 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 11:22:51.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:51.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:51.902
  STEP: Creating a ReplaceConcurrent cronjob @ 09/01/25 11:22:51.909
  STEP: Ensuring a job is scheduled @ 09/01/25 11:22:51.923
  STEP: Ensuring exactly one is scheduled @ 09/01/25 11:23:01.935
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 11:23:01.944
  STEP: Ensuring the job is replaced with a new one @ 09/01/25 11:23:01.953
  STEP: Removing cronjob @ 09/01/25 11:24:01.965
  I0901 11:24:01.989749 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8355" for this suite. @ 09/01/25 11:24:02.003
• [70.175 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/01/25 11:24:02.037
  I0901 11:24:02.037468 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:24:02.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:02.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:02.077
  STEP: Create a pod @ 09/01/25 11:24:02.083
  STEP: patching /status @ 09/01/25 11:24:04.142
  I0901 11:24:04.172664 16 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0901 11:24:04.176501 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7994" for this suite. @ 09/01/25 11:24:04.196
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/01/25 11:24:04.229
  I0901 11:24:04.229704 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename events @ 09/01/25 11:24:04.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:04.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:04.276
  STEP: creating a test event @ 09/01/25 11:24:04.282
  STEP: listing all events in all namespaces @ 09/01/25 11:24:04.293
  STEP: patching the test event @ 09/01/25 11:24:04.332
  STEP: fetching the test event @ 09/01/25 11:24:04.352
  STEP: updating the test event @ 09/01/25 11:24:04.36
  STEP: getting the test event @ 09/01/25 11:24:04.394
  STEP: deleting the test event @ 09/01/25 11:24:04.4
  STEP: listing all events in all namespaces @ 09/01/25 11:24:04.43
  I0901 11:24:04.467093 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3939" for this suite. @ 09/01/25 11:24:04.476
• [0.272 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/01/25 11:24:04.501
  I0901 11:24:04.501739 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:24:04.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:04.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:04.541
  STEP: Creating a pod to test downward api env vars @ 09/01/25 11:24:04.548
  STEP: Saw pod success @ 09/01/25 11:24:08.605
  I0901 11:24:08.637797 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-d807feaa-4919-4b88-a016-2bb3bfad84c1 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:24:08.665
  I0901 11:24:08.724313 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3186" for this suite. @ 09/01/25 11:24:08.736
• [4.253 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/01/25 11:24:08.756
  I0901 11:24:08.756725 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:24:08.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:08.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:08.798
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:24:08.807
  STEP: Saw pod success @ 09/01/25 11:24:12.87
  I0901 11:24:12.883716 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod downwardapi-volume-830f8e63-fdc4-433f-a430-35461cddc88a container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:24:12.94
  I0901 11:24:13.005996 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8433" for this suite. @ 09/01/25 11:24:13.024
• [4.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 09/01/25 11:24:13.044
  I0901 11:24:13.044986 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:24:13.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:13.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:13.082
  STEP: fetching services @ 09/01/25 11:24:13.09
  I0901 11:24:13.103574 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5140" for this suite. @ 09/01/25 11:24:13.116
• [0.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 09/01/25 11:24:13.13
  I0901 11:24:13.130484 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:24:13.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:13.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:13.162
  STEP: Discovering how many secrets are in namespace by default @ 09/01/25 11:24:13.168
  STEP: Counting existing ResourceQuota @ 09/01/25 11:24:18.175
  STEP: Creating a ResourceQuota @ 09/01/25 11:24:23.188
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:24:23.206
  STEP: Creating a Secret @ 09/01/25 11:24:25.223
  STEP: Ensuring resource quota status captures secret creation @ 09/01/25 11:24:25.283
  STEP: Deleting a secret @ 09/01/25 11:24:27.301
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:24:27.329
  I0901 11:24:29.346989 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1199" for this suite. @ 09/01/25 11:24:29.365
• [16.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/01/25 11:24:29.388
  I0901 11:24:29.388753 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:24:29.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:29.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:29.438
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 11:24:29.445
  STEP: Saw pod success @ 09/01/25 11:24:33.507
  I0901 11:24:33.513062 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-d1d8fe49-b994-40d9-8e20-e98d9f745931 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:24:33.529
  I0901 11:24:33.564313 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-405" for this suite. @ 09/01/25 11:24:33.572
• [4.200 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/01/25 11:24:33.588
  I0901 11:24:33.588792 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:24:33.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:33.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:33.623
  STEP: Creating configMap with name projected-configmap-test-volume-5033df76-836f-4a79-b164-027c6bb761a8 @ 09/01/25 11:24:33.632
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:24:33.64
  STEP: Saw pod success @ 09/01/25 11:24:37.693
  I0901 11:24:37.706900 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-configmaps-98a55f40-6798-4350-bc72-606242bc1c32 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:24:37.727
  I0901 11:24:37.818039 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4058" for this suite. @ 09/01/25 11:24:37.828
• [4.256 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 09/01/25 11:24:37.845
  I0901 11:24:37.845263 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:24:37.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:37.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:37.876
  STEP: creating a collection of services @ 09/01/25 11:24:37.882
  I0901 11:24:37.882585 16 service.go:3666] Creating e2e-svc-a-xxqcd
  I0901 11:24:37.919453 16 service.go:3666] Creating e2e-svc-b-dvck4
  I0901 11:24:37.950758 16 service.go:3666] Creating e2e-svc-c-b8wgn
  STEP: deleting service collection @ 09/01/25 11:24:37.997
  I0901 11:24:38.083392 16 service.go:3701] Collection of services has been deleted
  I0901 11:24:38.083876 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-657" for this suite. @ 09/01/25 11:24:38.092
• [0.260 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/01/25 11:24:38.105
  I0901 11:24:38.105306 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 11:24:38.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:38.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:38.136
  I0901 11:24:38.143026 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 11:24:40.864505      16 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 11:24:40.864666      16 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 11:24:40.864698      16 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 11:24:40.864725      16 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 11:24:40.864753      16 warnings.go:110] "Warning: unknown field \"gamma\""
  I0901 11:24:41.472710 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-238" for this suite. @ 09/01/25 11:24:41.484
• [3.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 09/01/25 11:24:41.502
  I0901 11:24:41.502641 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:24:41.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:41.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:41.547
  STEP: creating service multi-endpoint-test in namespace services-4072 @ 09/01/25 11:24:41.554
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4072 to expose endpoints map[] @ 09/01/25 11:24:41.597
  I0901 11:24:41.614697      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:41.615899 16 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0901 11:24:42.623599      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:42.634281 16 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4072 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4072 @ 09/01/25 11:24:42.634
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4072 to expose endpoints map[pod1:[100]] @ 09/01/25 11:24:44.689
  I0901 11:24:44.712758      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:44.728920 16 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4072 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4072 @ 09/01/25 11:24:44.729
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4072 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/01/25 11:24:46.78
  I0901 11:24:46.807230      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:46.820994 16 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4072 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/01/25 11:24:46.821
  I0901 11:24:46.821521 16 resource.go:361] Creating new exec pod
  I0901 11:24:48.886962 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4072 exec execpod7rf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0901 11:24:49.315061 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.30.230) 80 port [tcp/http] succeeded!\n"
  I0901 11:24:49.315190 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:24:49.315753 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4072 exec execpod7rf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.230 80'
  I0901 11:24:49.634271 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.30.230 80\nConnection to 10.233.30.230 80 port [tcp/http] succeeded!\n"
  I0901 11:24:49.634359 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:24:49.634837 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4072 exec execpod7rf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0901 11:24:49.912197 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.30.230) 81 port [tcp/*] succeeded!\n"
  I0901 11:24:49.912313 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:24:49.912965 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4072 exec execpod7rf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.230 81'
  I0901 11:24:50.225549 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.30.230 81\nConnection to 10.233.30.230 81 port [tcp/*] succeeded!\n"
  I0901 11:24:50.225643 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4072 @ 09/01/25 11:24:50.225
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4072 to expose endpoints map[pod2:[101]] @ 09/01/25 11:24:50.281
  I0901 11:24:50.309450      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:50.322400 16 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4072 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4072 @ 09/01/25 11:24:50.322
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4072 to expose endpoints map[] @ 09/01/25 11:24:50.366
  I0901 11:24:50.374622      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:50.394947 16 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4072 exposes endpoints map[]
  I0901 11:24:50.458599 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4072" for this suite. @ 09/01/25 11:24:50.476
• [8.989 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/01/25 11:24:50.49
  I0901 11:24:50.490906 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:24:50.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:50.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:50.527
  STEP: referencing a single matching pod @ 09/01/25 11:24:52.761
  I0901 11:24:52.776458      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/01/25 11:24:52.776
  I0901 11:24:52.790815      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/01/25 11:24:52.79
  I0901 11:24:52.804770      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/01/25 11:24:52.805
  I0901 11:24:52.844711 16 endpointslice.go:938] EndpointSlice for Service endpointslice-2635/example-named-port not found
  I0901 11:24:54.878756      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:24:54.880488 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2635" for this suite. @ 09/01/25 11:24:54.891
• [4.416 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/01/25 11:24:54.907
  I0901 11:24:54.907500 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:24:54.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:54.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:55.002
  STEP: creating the pod @ 09/01/25 11:24:55.01
  STEP: submitting the pod to kubernetes @ 09/01/25 11:24:55.01
  STEP: verifying the pod is in kubernetes @ 09/01/25 11:24:57.071
  STEP: updating the pod @ 09/01/25 11:24:57.087
  I0901 11:24:57.643906 16 pod_client.go:173] Successfully updated pod "pod-update-9f4b8be1-4871-43cd-9119-13947d600593"
  STEP: verifying the updated pod is in kubernetes @ 09/01/25 11:24:57.66
  I0901 11:24:57.668793 16 pods.go:391] Pod update OK
  I0901 11:24:57.669550 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6970" for this suite. @ 09/01/25 11:24:57.709
• [2.814 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/01/25 11:24:57.725
  I0901 11:24:57.725169 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl-logs @ 09/01/25 11:24:57.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:57.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:57.804
  STEP: creating a pod @ 09/01/25 11:24:57.812
  I0901 11:24:57.812800 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0901 11:24:58.020498 16 builder.go:146] stderr: ""
  I0901 11:24:58.021088 16 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/01/25 11:24:58.021
  I0901 11:24:58.021491 16 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0901 11:25:00.062366 16 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/01/25 11:25:00.062
  I0901 11:25:00.063599 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator'
  I0901 11:25:00.452641 16 builder.go:146] stderr: ""
  I0901 11:25:00.452861 16 builder.go:147] stdout: "I0901 11:24:59.119051       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/gfxj 478\nI0901 11:24:59.319710       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/7mc 380\nI0901 11:24:59.520220       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/872p 577\nI0901 11:24:59.719637       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/7sdn 251\nI0901 11:24:59.919930       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/7j7j 509\nI0901 11:25:00.119551       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/8vsk 283\nI0901 11:25:00.328542       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/np8s 580\n"
  STEP: limiting log lines @ 09/01/25 11:25:00.452
  I0901 11:25:00.453416 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator --tail=1'
  I0901 11:25:00.656755 16 builder.go:146] stderr: ""
  I0901 11:25:00.657318 16 builder.go:147] stdout: "I0901 11:25:00.520029       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/4kz 331\n"
  I0901 11:25:00.657590 16 logs.go:180] got output "I0901 11:25:00.520029       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/4kz 331\n"
  STEP: limiting log bytes @ 09/01/25 11:25:00.657
  I0901 11:25:00.658353 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator --limit-bytes=1'
  I0901 11:25:00.906623 16 builder.go:146] stderr: ""
  I0901 11:25:00.906799 16 builder.go:147] stdout: "I"
  I0901 11:25:00.906832 16 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/01/25 11:25:00.906
  I0901 11:25:00.909507 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator --tail=1 --timestamps'
  I0901 11:25:01.098009 16 builder.go:146] stderr: ""
  I0901 11:25:01.098416 16 builder.go:147] stdout: "2025-09-01T11:25:00.922051774Z I0901 11:25:00.921862       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/c4xl 523\n"
  I0901 11:25:01.098454 16 logs.go:192] got output "2025-09-01T11:25:00.922051774Z I0901 11:25:00.921862       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/c4xl 523\n"
  STEP: restricting to a time range @ 09/01/25 11:25:01.098
  I0901 11:25:03.603756 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator --since=1s'
  I0901 11:25:03.870735 16 builder.go:146] stderr: ""
  I0901 11:25:03.870912 16 builder.go:147] stdout: "I0901 11:25:02.920903       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/29n 230\nI0901 11:25:03.119098       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/96dn 578\nI0901 11:25:03.319634       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/mclp 567\nI0901 11:25:03.519077       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/24fd 326\nI0901 11:25:03.719994       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/56bs 372\n"
  I0901 11:25:03.871419 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 logs logs-generator logs-generator --since=24h'
  I0901 11:25:04.060931 16 builder.go:146] stderr: ""
  I0901 11:25:04.061209 16 builder.go:147] stdout: "I0901 11:24:59.119051       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/gfxj 478\nI0901 11:24:59.319710       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/7mc 380\nI0901 11:24:59.520220       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/872p 577\nI0901 11:24:59.719637       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/7sdn 251\nI0901 11:24:59.919930       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/7j7j 509\nI0901 11:25:00.119551       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/8vsk 283\nI0901 11:25:00.328542       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/np8s 580\nI0901 11:25:00.520029       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/4kz 331\nI0901 11:25:00.719315       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/6hs 386\nI0901 11:25:00.921862       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/c4xl 523\nI0901 11:25:01.119270       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/w7m 538\nI0901 11:25:01.319896       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/8dt 384\nI0901 11:25:01.519231       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/nw75 536\nI0901 11:25:01.719727       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/prj 489\nI0901 11:25:01.919094       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/96jr 446\nI0901 11:25:02.119870       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/xtd 260\nI0901 11:25:02.319267       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/69jp 457\nI0901 11:25:02.520029       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/l55 222\nI0901 11:25:02.719296       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/7sbm 382\nI0901 11:25:02.920903       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/29n 230\nI0901 11:25:03.119098       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/96dn 578\nI0901 11:25:03.319634       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/mclp 567\nI0901 11:25:03.519077       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/24fd 326\nI0901 11:25:03.719994       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/56bs 372\nI0901 11:25:03.919245       1 logs_generator.go:76] 24 POST /api/v1/namespaces/ns/pods/c6z 249\n"
  I0901 11:25:04.065791 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-logs-1779 delete pod logs-generator'
  I0901 11:25:04.800969 16 builder.go:146] stderr: ""
  I0901 11:25:04.801056 16 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0901 11:25:04.802004 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1779" for this suite. @ 09/01/25 11:25:04.821
• [7.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/01/25 11:25:04.835
  I0901 11:25:04.835950 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:25:04.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:04.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:04.871
  STEP: Creating pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996 @ 09/01/25 11:25:04.881
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:25:06.956
  I0901 11:25:06.967287 16 container_probe.go:1748] Initial restart count of pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 is 0
  I0901 11:25:06.976411 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:08.995939 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:11.007320 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:13.020513 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:15.034932 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:17.046353 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:19.059732 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:21.074883 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:23.087059 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:25.099925 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:27.117452 16 container_probe.go:1758] Get pod liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 in namespace container-probe-1996
  I0901 11:25:27.117603 16 container_probe.go:1762] Restart count of pod container-probe-1996/liveness-f518a3cd-7e3d-4b4b-9c1f-96bcaaf8c0b5 is now 1 (20.150211482s elapsed)
  STEP: deleting the pod @ 09/01/25 11:25:27.117
  I0901 11:25:27.157309 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1996" for this suite. @ 09/01/25 11:25:27.18
• [22.365 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/01/25 11:25:27.204
  I0901 11:25:27.204769 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:25:27.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:27.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:27.241
  STEP: Creating secret with name secret-test-2fe1a9fb-2150-49ed-a29b-17c7af260e19 @ 09/01/25 11:25:27.248
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:25:27.26
  STEP: Saw pod success @ 09/01/25 11:25:31.32
  I0901 11:25:31.331980 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-15a02dc2-89b7-4f71-b473-8cf5305ec46e container secret-env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:25:31.358
  I0901 11:25:31.419943 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3784" for this suite. @ 09/01/25 11:25:31.434
• [4.256 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/01/25 11:25:31.465
  I0901 11:25:31.465161 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:25:31.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:31.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:31.511
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 11:25:31.592
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:25:31.606
  I0901 11:25:31.670265 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:25:31.672234 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  I0901 11:25:32.647995 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:25:32.648881 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  I0901 11:25:33.644658 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:25:33.644772 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  I0901 11:25:34.633676 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:34.633761 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:35.645951 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:35.646321 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:36.652762 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:36.652994 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:37.719801 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:37.719914 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:38.627469 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:38.627600 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:39.626355 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:39.626433 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:40.666386 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:40.666510 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:41.697219 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:41.697399 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:42.648581 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:42.648733 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:43.629458 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:43.629549 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:44.652245 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:25:44.652359 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  I0901 11:25:45.647173 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:25:45.647298 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/01/25 11:25:45.657
  I0901 11:25:45.674515 16 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/01/25 11:25:45.674
  I0901 11:25:45.710089 16 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/01/25 11:25:45.71
  I0901 11:25:45.717238 16 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0901 11:25:45.717626 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.717853 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.718448 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.718686 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.718941 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.719008 16 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-579 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:25:45.719041 16 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/01/25 11:25:45.719
  STEP: watching for the daemon set status to be patched @ 09/01/25 11:25:45.768
  I0901 11:25:45.774765 16 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0901 11:25:45.775606 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.776761 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.777440 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.778167 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.778961 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.779074 16 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-579 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:25:45.779493 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:25:45.779616 16 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-579 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0901 11:25:45.780384 16 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:25:45.789
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-579, will wait for the garbage collector to delete the pods @ 09/01/25 11:25:45.789
  I0901 11:25:45.862713 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.462792ms
  I0901 11:25:45.963847 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.162761ms
  I0901 11:25:47.876292 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:25:47.876376 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:25:47.886664 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11027"},"items":null}

  I0901 11:25:47.895297 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11027"},"items":null}

  I0901 11:25:47.941940 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-579" for this suite. @ 09/01/25 11:25:47.952
• [16.507 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/01/25 11:25:47.973
  I0901 11:25:47.973249 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:25:47.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:48.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:48.032
  STEP: Creating configMap configmap-7437/configmap-test-70c68b13-55a7-46f7-8e6d-6dabee7e1af5 @ 09/01/25 11:25:48.047
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:25:48.057
  STEP: Saw pod success @ 09/01/25 11:25:52.111
  I0901 11:25:52.121741 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-0a8afc57-8681-4459-8829-f4e834fe0615 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:25:52.149
  I0901 11:25:52.189042 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7437" for this suite. @ 09/01/25 11:25:52.206
• [4.254 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/01/25 11:25:52.226
  I0901 11:25:52.226864 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:25:52.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:52.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:52.266
  I0901 11:25:52.327365 16 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:25:52.338
  I0901 11:25:52.487423 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:25:52.487565 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  I0901 11:25:53.377479 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:25:53.378328 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  I0901 11:25:54.365017 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:25:54.365171 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/01/25 11:25:54.397
  STEP: Check that daemon pods images are updated. @ 09/01/25 11:25:54.455
  I0901 11:25:54.471417 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:54.471528 16 daemon_set.go:1193] Wrong image for pod: daemon-set-crrrg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:55.464489 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:55.464589 16 daemon_set.go:1193] Wrong image for pod: daemon-set-crrrg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:56.464372 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:56.464445 16 daemon_set.go:1193] Wrong image for pod: daemon-set-crrrg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:56.464478 16 daemon_set.go:1198] Pod daemon-set-s72kz is not available
  I0901 11:25:57.472000 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:58.501376 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:58.501619 16 daemon_set.go:1198] Pod daemon-set-q5lqs is not available
  I0901 11:25:59.471465 16 daemon_set.go:1193] Wrong image for pod: daemon-set-bf7w6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 11:25:59.471612 16 daemon_set.go:1198] Pod daemon-set-q5lqs is not available
  I0901 11:26:00.467999 16 daemon_set.go:1198] Pod daemon-set-nqmbz is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/01/25 11:26:00.485
  I0901 11:26:00.511973 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:26:00.512044 16 fixtures.go:131] Node xoongeig7eeb-3 is running 0 daemon pod, expected 1
  I0901 11:26:01.512771 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:26:01.512845 16 fixtures.go:131] Node xoongeig7eeb-3 is running 0 daemon pod, expected 1
  I0901 11:26:02.509641 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:26:02.509759 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:26:02.567
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-343, will wait for the garbage collector to delete the pods @ 09/01/25 11:26:02.567
  I0901 11:26:02.644996 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.685584ms
  I0901 11:26:02.745595 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.598387ms
  I0901 11:26:04.357504 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:26:04.357652 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:26:04.371213 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11236"},"items":null}

  I0901 11:26:04.381267 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11236"},"items":null}

  I0901 11:26:04.433068 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-343" for this suite. @ 09/01/25 11:26:04.448
• [12.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/01/25 11:26:04.475
  I0901 11:26:04.475912 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 11:26:04.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:04.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:04.514
  STEP: Looking for a node to schedule job pod @ 09/01/25 11:26:04.522
  STEP: Creating a job @ 09/01/25 11:26:04.534
  STEP: Ensuring job fails @ 09/01/25 11:26:04.547
  I0901 11:26:10.606076 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9120" for this suite. @ 09/01/25 11:26:10.627
• [6.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/01/25 11:26:10.654
  I0901 11:26:10.655085 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:26:10.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:10.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:10.701
  I0901 11:26:10.749870 16 service_accounts.go:646] created pod
  STEP: Saw pod success @ 09/01/25 11:26:14.79
  I0901 11:26:44.791246 16 service_accounts.go:652] polling logs
  I0901 11:26:44.821802 16 service_accounts.go:662] Pod logs: 
  I0901 11:26:11.842780       1 log.go:245] OK: Got token
  I0901 11:26:11.845506       1 log.go:245] validating with in-cluster discovery
  I0901 11:26:11.847200       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0901 11:26:11.847354       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8742:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000d0f20), NotBefore:(*jwt.NumericDate)(0xc0000d1010), IssuedAt:(*jwt.NumericDate)(0xc0000d0f30), ID:"9e82cee9-63b6-4bd9-98ae-5843373a8344"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8742", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ce607a52-0554-4be1-9958-41acf3d381c1"}}}
  I0901 11:26:11.885883       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0901 11:26:11.908213       1 log.go:245] OK: Validated signature on JWT
  I0901 11:26:11.908960       1 log.go:245] OK: Got valid claims from token!
  I0901 11:26:11.909027       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8742:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002420b0), NotBefore:(*jwt.NumericDate)(0xc000242138), IssuedAt:(*jwt.NumericDate)(0xc0002420b8), ID:"9e82cee9-63b6-4bd9-98ae-5843373a8344"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8742", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ce607a52-0554-4be1-9958-41acf3d381c1"}}}

  I0901 11:26:44.822089 16 service_accounts.go:666] completed pod
  I0901 11:26:44.848862 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8742" for this suite. @ 09/01/25 11:26:44.858
• [34.217 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/01/25 11:26:44.872
  I0901 11:26:44.872718 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:26:44.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:44.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:44.917
  STEP: creating a ReplicationController @ 09/01/25 11:26:44.931
  STEP: waiting for RC to be added @ 09/01/25 11:26:44.943
  STEP: waiting for available Replicas @ 09/01/25 11:26:44.944
  STEP: patching ReplicationController @ 09/01/25 11:26:46.46
  STEP: waiting for RC to be modified @ 09/01/25 11:26:46.478
  STEP: patching ReplicationController status @ 09/01/25 11:26:46.478
  STEP: waiting for RC to be modified @ 09/01/25 11:26:46.489
  STEP: waiting for available Replicas @ 09/01/25 11:26:46.49
  STEP: fetching ReplicationController status @ 09/01/25 11:26:46.502
  STEP: patching ReplicationController scale @ 09/01/25 11:26:46.51
  STEP: waiting for RC to be modified @ 09/01/25 11:26:46.523
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/01/25 11:26:46.524
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/01/25 11:26:47.636
  STEP: updating ReplicationController status @ 09/01/25 11:26:47.647
  STEP: waiting for RC to be modified @ 09/01/25 11:26:47.66
  STEP: listing all ReplicationControllers @ 09/01/25 11:26:47.661
  STEP: checking that ReplicationController has expected values @ 09/01/25 11:26:47.666
  STEP: deleting ReplicationControllers by collection @ 09/01/25 11:26:47.666
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/01/25 11:26:47.691
  I0901 11:26:47.804073 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:26:47.805171      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3505" for this suite. @ 09/01/25 11:26:47.814
• [2.958 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/01/25 11:26:47.831
  I0901 11:26:47.831448 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:26:47.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:47.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:47.86
  STEP: Setting up server cert @ 09/01/25 11:26:47.913
  E0901 11:26:48.806319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:49.807196      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:26:50.006
  STEP: Deploying the webhook pod @ 09/01/25 11:26:50.031
  STEP: Wait for the deployment to be ready @ 09/01/25 11:26:50.064
  I0901 11:26:50.081185 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 11:26:50.807944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:51.808799      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:26:52.11
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:26:52.156
  E0901 11:26:52.808798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:26:53.158527 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/01/25 11:26:53.168
  STEP: create a namespace for the webhook @ 09/01/25 11:26:53.205
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/01/25 11:26:53.234
  I0901 11:26:53.463689 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1964" for this suite. @ 09/01/25 11:26:53.515
  STEP: Destroying namespace "webhook-markers-6461" for this suite. @ 09/01/25 11:26:53.536
  STEP: Destroying namespace "fail-closed-namespace-5694" for this suite. @ 09/01/25 11:26:53.549
• [5.732 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:26:53.564
  I0901 11:26:53.564910 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 11:26:53.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:53.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:53.608
  STEP: Performing setup for networking test in namespace pod-network-test-238 @ 09/01/25 11:26:53.616
  STEP: creating a selector @ 09/01/25 11:26:53.616
  STEP: Creating the service pods in kubernetes @ 09/01/25 11:26:53.616
  I0901 11:26:53.616505 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 11:26:53.810445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:54.831445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:55.832723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:56.832837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:57.833678      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:58.834522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:26:59.836899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:00.836669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:01.837020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:02.837655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:03.837912      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:04.838572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:05.839406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:06.840086      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 11:27:07.832
  E0901 11:27:07.840620      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:08.841926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:09.842485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:09.941243 16 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 11:27:09.941407 16 utils.go:495] Going to poll 10.233.65.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:27:09.952535 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-238 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:27:09.952935 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:27:09.953397 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-238/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 11:27:10.843097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:11.169916 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:27:11.170101 16 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0901 11:27:11.170190 16 utils.go:495] Going to poll 10.233.64.112 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:27:11.178421 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.112 8081 | grep -v '^\s*$'] Namespace:pod-network-test-238 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:27:11.178531 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:27:11.179058 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-238/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.112+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 11:27:11.843779      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:12.321937 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:27:12.322102 16 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0901 11:27:12.322202 16 utils.go:495] Going to poll 10.233.66.62 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:27:12.337974 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.62 8081 | grep -v '^\s*$'] Namespace:pod-network-test-238 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:27:12.338044 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:27:12.338357 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-238/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.62+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 11:27:12.844027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:13.459855 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:27:13.460397 16 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0901 11:27:13.461700 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-238" for this suite. @ 09/01/25 11:27:13.48
• [19.942 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/01/25 11:27:13.51
  I0901 11:27:13.510970 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:27:13.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:13.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:13.569
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:27:13.579
  E0901 11:27:13.844626      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:14.845717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:15.846253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:16.846916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:27:17.661
  I0901 11:27:17.674634 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-a5a1f999-8358-492d-98ed-ea123a561279 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:27:17.702
  I0901 11:27:17.805845 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4127" for this suite. @ 09/01/25 11:27:17.819
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  E0901 11:27:17.847746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 09/01/25 11:27:17.848
  I0901 11:27:17.848188 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:27:17.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:17.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:17.903
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1045 @ 09/01/25 11:27:17.914
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 11:27:17.948
  STEP: creating service externalsvc in namespace services-1045 @ 09/01/25 11:27:17.95
  I0901 11:27:18.036360 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 11:27:18.848704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:19.848840      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/01/25 11:27:20.074
  I0901 11:27:20.114456 16 resource.go:361] Creating new exec pod
  E0901 11:27:20.849491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:21.849697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:22.146951 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1045 exec execpodqnjbk -- /bin/sh -x -c nslookup clusterip-service.services-1045.svc.cluster.local'
  I0901 11:27:22.628212 16 builder.go:146] stderr: "+ nslookup clusterip-service.services-1045.svc.cluster.local\n"
  I0901 11:27:22.628304 16 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-1045.svc.cluster.local\tcanonical name = externalsvc.services-1045.svc.cluster.local.\nName:\texternalsvc.services-1045.svc.cluster.local\nAddress: 10.233.30.227\n\n"
  I0901 11:27:22.697478 16 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0901 11:27:22.743272 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1045" for this suite. @ 09/01/25 11:27:22.772
• [4.955 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/01/25 11:27:22.809
  I0901 11:27:22.809424 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:27:22.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:22.844
  E0901 11:27:22.850530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:22.851
  STEP: Creating service test in namespace statefulset-5078 @ 09/01/25 11:27:22.855
  STEP: Creating a new StatefulSet @ 09/01/25 11:27:22.88
  I0901 11:27:22.981036 16 wait.go:44] Found 0 stateful pods, waiting for 3
  E0901 11:27:23.850969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:24.857419      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:25.857421      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:26.857589      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:27.858227      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:28.858375      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:29.859210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:30.859250      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:31.859858      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:32.860028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:27:32.940159 16 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:27:32.940297 16 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:27:32.940596 16 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:27:32.974909 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-5078 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:27:33.226573 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:27:33.226897 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:27:33.226962 16 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0901 11:27:33.860742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:34.860673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:35.861780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:36.862481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:37.862908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:38.863666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:39.863933      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:40.865498      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:41.866325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:42.867366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 11:27:43.255
  I0901 11:27:43.289399 16 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 11:27:43.289
  E0901 11:27:43.867420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:44.868003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:45.868095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:46.868589      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:47.868903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:48.869195      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:49.869486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:50.869983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:51.870397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:52.870863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/01/25 11:27:53.317
  I0901 11:27:53.326299 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-5078 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:27:53.658527 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:27:53.658663 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:27:53.658693 16 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0901 11:27:53.871231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:54.873388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:55.872948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:56.872964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:57.872755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:58.873318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:27:59.873648      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:00.873936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:01.874098      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:02.874424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:03.741844 16 wait.go:158] Waiting for StatefulSet statefulset-5078/ss2 to complete update
  I0901 11:28:03.742013 16 wait.go:165] Waiting for Pod statefulset-5078/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0901 11:28:03.742759 16 wait.go:165] Waiting for Pod statefulset-5078/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:28:03.874727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:04.876006      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:05.876493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:06.876844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:07.877195      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:08.879342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:09.878775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:10.879009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:11.880914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:12.880778      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:13.777807 16 wait.go:158] Waiting for StatefulSet statefulset-5078/ss2 to complete update
  I0901 11:28:13.778816 16 wait.go:165] Waiting for Pod statefulset-5078/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:28:13.881784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:14.882870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:15.884225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:16.883403      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:17.883728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:18.883795      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:19.884602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:20.884504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:21.885302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:22.886046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:23.752785 16 wait.go:158] Waiting for StatefulSet statefulset-5078/ss2 to complete update
  E0901 11:28:23.886170      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:24.887085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:25.886825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:26.886876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:27.887365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:28.887943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:29.888097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:30.888997      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:31.889478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:32.889729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:33.759606 16 wait.go:158] Waiting for StatefulSet statefulset-5078/ss2 to complete update
  E0901 11:28:33.890396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:34.891290      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:35.891169      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:36.891662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:37.892038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:38.893442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:39.892502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:40.893341      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:41.893489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:42.894814      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/01/25 11:28:43.75
  I0901 11:28:43.752513 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-5078 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 11:28:43.894996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:44.138903 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:28:44.140096 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:28:44.140875 16 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0901 11:28:44.895832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:45.896755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:46.896415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:47.897961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:48.898579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:49.898805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:50.898900      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:51.899505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:52.899933      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:53.900024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:28:54.199942 16 statefulset.go:2542] Updating stateful set ss2
  E0901 11:28:54.900254      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:55.901004      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:56.900846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:57.902470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:58.901821      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:28:59.902676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:00.903487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:01.904269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:02.904677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:03.905023      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/01/25 11:29:04.223
  I0901 11:29:04.231837 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-5078 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:29:04.500780 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:29:04.500881 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:29:04.500948 16 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0901 11:29:04.905469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:05.906507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:06.907720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:07.907296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:08.907716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:09.908075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:10.912697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:11.912398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:12.912420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:13.912717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:29:14.540993 16 statefulset.go:138] Deleting all statefulset in ns statefulset-5078
  I0901 11:29:14.550821 16 rest.go:153] Scaling statefulset ss2 to 0
  E0901 11:29:14.913295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:15.913081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:16.913636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:17.914191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:18.914645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:19.914940      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:20.915510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:21.915941      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:22.919022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:23.919838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:29:24.594428 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:29:24.606212 16 rest.go:91] Deleting statefulset ss2
  I0901 11:29:24.673486 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5078" for this suite. @ 09/01/25 11:29:24.695
• [121.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/01/25 11:29:24.72
  I0901 11:29:24.720405 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename init-container @ 09/01/25 11:29:24.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:24.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:24.763
  STEP: creating the pod @ 09/01/25 11:29:24.773
  I0901 11:29:24.774429 16 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0901 11:29:24.919931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:25.920022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:26.921284      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:27.928856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:28.929644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:29.930510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:29:30.199474 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5257" for this suite. @ 09/01/25 11:29:30.209
• [5.506 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/01/25 11:29:30.226
  I0901 11:29:30.226511 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename chunking @ 09/01/25 11:29:30.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:30.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:30.255
  STEP: creating a large number of resources @ 09/01/25 11:29:30.263
  E0901 11:29:30.930823      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:31.931493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:32.931332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:33.932778      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:34.933505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:35.934441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:36.934677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:37.935932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:38.936635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:39.937491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:40.938369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:41.939286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:42.939544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:43.941608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:44.941572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:45.942592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:46.943575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:47.944677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/01/25 11:29:47.948
  I0901 11:29:47.994170 16 chunking.go:163] Retrieved 40/40 results with rv 13116 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/01/25 11:29:47.994
  E0901 11:29:48.945414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:49.945697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:50.945916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:51.946297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:52.947394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:53.947939      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:54.948734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:55.948503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:56.949446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:57.949275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:58.950450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:29:59.950916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:00.950979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:01.951682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:02.953408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:03.952435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:04.953080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:05.953442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:06.953779      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:07.954187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:30:08.016488 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:30:08.954349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:09.955038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:10.955500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:11.955776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:12.956442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:13.957015      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:14.957614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:15.958522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:16.958884      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:17.959531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:18.959939      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:19.960148      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:20.961055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:21.961198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:22.961745      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:23.961935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:24.962614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:25.963826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:26.963919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:27.964544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:30:28.015480 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:30:28.965244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:29.966320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:30.966223      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:31.966378      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:32.967319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:33.967067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:34.967686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:35.968045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:36.968955      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:37.969689      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:38.970279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:39.970796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:40.971064      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:41.971865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:42.972538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:43.972780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:44.973806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:45.973619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:46.974015      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:47.977526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:30:48.030730 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:30:48.976395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:49.976753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:50.997529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:51.984692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:52.984516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:53.985520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:54.985712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:55.987944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:56.986356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:57.986457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:58.987547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:30:59.988703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:00.989030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:01.989356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:02.989848      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:03.989991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:04.990638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:05.991091      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:06.991979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:07.992395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:31:08.022788 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:31:08.992483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:09.992844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:10.993385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:11.993792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:12.994052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:13.995319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:14.995666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:15.995950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:16.996050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:17.997271      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:18.998307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:19.999451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:20.999699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:22.002265      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:23.002555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:24.006844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:25.006991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:26.008221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:27.007794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:28.008696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:31:28.022696 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:31:29.009029      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:30.009996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:31.010689      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:32.011351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:33.011632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:34.012321      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:35.012931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:36.013535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:37.014018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:38.014482      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:39.014995      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:40.015929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:41.017051      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:42.016789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:43.017055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:44.017339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:45.017478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:46.018052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:47.018342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:48.018662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:31:48.020296 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:31:49.019248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:50.019773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:51.020377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:52.021217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:53.022380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:54.023244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:55.024404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:56.025421      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:57.025547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:58.025800      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:31:59.026284      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:00.026648      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:01.027534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:02.028339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:03.030995      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:04.029764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:05.030463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:06.031040      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:07.031910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:32:08.017253 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:32:08.033355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:09.034490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:10.035264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:11.035797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:12.037910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:13.036507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:14.037191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:15.038073      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:16.038963      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:17.039228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:18.040388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:19.041037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:20.041092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:21.042187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:22.042182      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:23.042918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:24.042688      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:25.043303      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:26.044063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:27.044409      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:32:28.025637 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:32:28.045585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:29.046722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:30.047396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:31.048271      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:32.048700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:33.049000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:34.049912      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:35.050108      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:36.050900      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:37.051181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:38.052037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:39.053262      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:40.053475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:41.054286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:42.054487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:43.055690      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:44.057350      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:45.057764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:46.058378      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:47.058723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:32:48.017147 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:32:48.059672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:49.060050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:50.060657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:51.060676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:52.060869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:53.061012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:54.061530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:55.061924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:56.063054      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:57.063297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:58.063740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:32:59.064401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:00.064815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:01.065223      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:02.065464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:03.066415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:04.066932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:05.067311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:06.068435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:07.068889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:33:08.009781 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:33:08.069590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:09.071831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:10.071983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:11.073026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:12.073870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:13.074528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:14.075261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:15.075306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:16.075684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:17.075899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:18.076709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:19.077392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:20.077737      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:21.077984      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:22.078526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:23.078585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:24.079429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:25.079543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:26.079791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:27.079896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:33:28.014437 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:33:28.080261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:29.080545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:30.081351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:31.082049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:32.082464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:33.082873      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:34.083859      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:35.085208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:36.085693      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:37.085585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:38.086328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:39.087264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:40.087923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:41.088347      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:42.088541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:43.088943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:44.089471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:45.090192      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:46.090601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:47.090759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:33:48.016279 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:33:48.091910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:49.092586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:50.093773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:51.094453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:52.095454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:53.096050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:54.096364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:55.097709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:56.098404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:57.098953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:58.099590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:33:59.100366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:00.100973      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:01.101911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:02.102538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:03.103583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:04.103039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:05.104211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:06.104005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:07.104304      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:34:08.016734 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:34:08.105322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:09.106981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:10.106355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:11.106695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:12.107691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:13.108015      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:14.108043      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:15.108794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:16.109703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:17.109861      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:18.110338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:19.111282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:20.112170      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:21.112748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:22.113094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:23.113366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:24.114015      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:25.114443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:26.114728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:27.115189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:34:28.023362 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:34:28.115550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:29.116390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:30.117437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:31.117553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:32.118282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:33.118549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:34.119474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:35.119686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:36.120404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:37.121433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:38.121912      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:39.122190      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:40.122603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:41.123024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:42.123745      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:43.124856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:44.125669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:45.125889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:46.125993      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:47.126479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:34:48.018624 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:34:48.126477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:49.126570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:50.127004      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:51.127809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:52.127446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:53.127805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:54.128204      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:55.128748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:56.129898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:57.129815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:58.129928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:34:59.131327      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:00.131186      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:01.131783      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:02.132050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:03.132891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:04.134297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:05.134674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:06.134925      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:07.135391      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:35:08.018355 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:35:08.137604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:09.137660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:10.139947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:11.138615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:12.139005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:13.139887      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:14.140233      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:15.140435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:16.140750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:17.142001      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:18.142540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:19.143740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:20.144428      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:21.145046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:22.145577      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:23.145812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:24.146955      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:25.147660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:26.148034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:27.148593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:35:28.016186 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:35:28.149401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:29.149622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:30.149871      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:31.150252      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:32.150521      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:33.151269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:34.152320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:35.152852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:36.152929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:37.153335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:38.153419      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:39.153610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:40.154618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:41.154871      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:42.155203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:43.155431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:44.155826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:45.156232      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:46.157068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:47.157277      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:35:48.012048 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:35:48.158754      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:49.159377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:50.160355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:51.161576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:52.161716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:53.162907      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:54.164205      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:55.164404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:56.165502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:57.165796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:58.166083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:35:59.167005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:00.168249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:01.168336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:02.169457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:03.169519      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:04.170012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:05.170353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:06.171481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:07.171526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:36:08.012571 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:36:08.172908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:09.172790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:10.173674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:11.175201      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:12.175984      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:13.176275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:14.176435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:15.176725      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:16.176935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:17.177197      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:18.177954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:19.178263      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:20.178897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:21.179790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:22.180582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:23.181880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:24.181889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:25.183512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:26.182486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:27.183468      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:36:28.018030 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:36:28.184273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:29.185344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:30.185815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:31.186777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:32.187492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:33.188412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:34.191371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:35.200751      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:36.198326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:37.198404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:38.210627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:39.201528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:40.202594      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:41.203394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:42.203787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:43.204472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:44.205854      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:45.205890      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:46.206580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:47.207494      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:36:48.018067 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:36:48.208041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:49.208346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:50.209561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:51.210643      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:52.211730      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:53.211857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:54.212528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:55.213365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:56.213983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:57.214283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:58.215433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:36:59.216435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:00.216570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:01.217446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:02.217868      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:03.218848      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:04.219572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:05.219894      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:06.221142      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:07.220628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:37:08.015151 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:37:08.221612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:09.222410      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:10.223394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:11.224074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:12.223956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:13.224600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:14.225013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:15.225570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:16.226332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:17.226904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:18.227930      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:19.228228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:20.228914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:21.229043      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:22.229847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:23.230841      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:24.231268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:25.231579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:26.232532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:27.236731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:37:28.012286 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:37:28.233819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:29.234350      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:30.235179      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:31.236053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:32.236904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:33.237470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:34.238343      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:35.240798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:36.239225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:37.239936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:38.240580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:39.241402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:40.241582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:41.242293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:42.242804      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:43.242979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:44.243970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:45.244061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:46.244557      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:47.244547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:37:48.016346 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:37:48.245055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:49.246544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:50.246587      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:51.246948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:52.248210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:53.248532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:54.249324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:55.251007      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:56.250918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:57.251970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:58.253814      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:37:59.253570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:00.254093      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:01.257759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:02.255937      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:03.256884      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:04.258744      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:05.257673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:06.258042      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:07.258773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:38:08.017277 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:38:08.260228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:09.260823      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:10.261542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:11.262342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:12.262631      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:13.262880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:14.277485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:15.277916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:16.278882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:17.279891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:18.280782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:19.281355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:20.281342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:21.281928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:22.282630      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:23.283757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:24.283794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:25.284013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:26.284821      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:27.285536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:38:28.021929 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:38:28.286322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:29.286455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:30.287403      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:31.286998      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:32.287832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:33.289089      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:34.289414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:35.289532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:36.289910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:37.290283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:38.290480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:39.291238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:40.291982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:41.292481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:42.292781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:43.293914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:44.293983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:45.294636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:46.294484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:47.295381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:38:48.014519 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:38:48.295818      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:49.295394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:50.295905      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:51.296674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:52.297497      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:53.298398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:54.299280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:55.299789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:56.300457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:57.300523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:58.300745      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:38:59.300960      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:00.301574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:01.301983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:02.302229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:03.302905      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:04.302908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:05.303346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:06.303492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:07.304539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:08.021341 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 11:39:08.305177      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:09.305696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:10.306606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:11.307356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:12.307606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:13.308629      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:14.309803      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:15.310599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:16.310970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:17.311430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:18.312211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:19.312256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:20.312540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:21.313008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:22.313293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:23.313483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:24.313699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:25.314652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:26.315591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:27.316269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:28.014973 16 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0901 11:39:28.015340 16 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/01/25 11:39:28.015
  STEP: retrieving all remaining pages @ 09/01/25 11:39:28.04
  I0901 11:39:28.066216 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0901 11:39:28.086339 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0901 11:39:28.103621 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0901 11:39:28.125164 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0901 11:39:28.146674 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0901 11:39:28.162872 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0901 11:39:28.204729 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQzODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0901 11:39:28.231039 16 chunking.go:221] Retrieved 40/40 results with rv 14385 and continue 
  I0901 11:39:28.232453 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8102" for this suite. @ 09/01/25 11:39:28.253
• [598.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/01/25 11:39:28.282
  I0901 11:39:28.282651 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:39:28.288
  E0901 11:39:28.321352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:28.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:28.339
  I0901 11:39:28.446079 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7221" for this suite. @ 09/01/25 11:39:28.458
• [0.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 09/01/25 11:39:28.479
  I0901 11:39:28.479901 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:39:28.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:28.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:28.518
  STEP: Counting existing ResourceQuota @ 09/01/25 11:39:28.525
  E0901 11:39:29.318612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:30.318648      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:31.319322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:32.319805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:33.320418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 11:39:33.539
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:39:33.559
  E0901 11:39:34.320255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:35.320877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/01/25 11:39:35.571
  STEP: Ensuring resource quota status captures replication controller creation @ 09/01/25 11:39:35.615
  E0901 11:39:36.320835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:37.322090      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/01/25 11:39:37.629
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:39:37.647
  E0901 11:39:38.322846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:39.323319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:39.665533 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4620" for this suite. @ 09/01/25 11:39:39.683
• [11.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/01/25 11:39:39.703
  I0901 11:39:39.703225 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:39:39.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:39.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:39.749
  I0901 11:39:39.756234 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: creating the pod @ 09/01/25 11:39:39.758
  STEP: submitting the pod to kubernetes @ 09/01/25 11:39:39.759
  E0901 11:39:40.324921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:41.325741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:41.950429 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3898" for this suite. @ 09/01/25 11:39:41.966
• [2.288 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 09/01/25 11:39:41.991
  I0901 11:39:41.991831 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 11:39:41.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:42.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:42.045
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3112 @ 09/01/25 11:39:42.055
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 11:39:42.114
  STEP: creating service externalsvc in namespace services-3112 @ 09/01/25 11:39:42.114
  I0901 11:39:42.179817 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 11:39:42.326583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:43.327257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:44.186625 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 39, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 39, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 39, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:39:44.327932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:45.329006      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 09/01/25 11:39:46.23
  I0901 11:39:46.310252 16 resource.go:361] Creating new exec pod
  E0901 11:39:46.329300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:47.329403      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:48.330331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:49.330393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:50.331059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:50.368028 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-3112 exec execpodjfdtf -- /bin/sh -x -c nslookup nodeport-service.services-3112.svc.cluster.local'
  I0901 11:39:50.866902 16 builder.go:146] stderr: "+ nslookup nodeport-service.services-3112.svc.cluster.local\n"
  I0901 11:39:50.867036 16 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-3112.svc.cluster.local\tcanonical name = externalsvc.services-3112.svc.cluster.local.\nName:\texternalsvc.services-3112.svc.cluster.local\nAddress: 10.233.6.172\n\n"
  I0901 11:39:50.984411 16 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0901 11:39:51.038780 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3112" for this suite. @ 09/01/25 11:39:51.074
• [9.115 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/01/25 11:39:51.106
  I0901 11:39:51.106885 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:39:51.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:51.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:51.197
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 11:39:51.205
  E0901 11:39:51.331319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:52.331704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:53.332380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:54.332583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:39:55.274
  I0901 11:39:55.282329 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-99282f21-13ce-42d5-97fd-9ac87e5f2d6f container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:39:55.331
  E0901 11:39:55.332457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:39:55.372568 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9797" for this suite. @ 09/01/25 11:39:55.385
• [4.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/01/25 11:39:55.403
  I0901 11:39:55.403394 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 11:39:55.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:55.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:55.442
  STEP: creating the policy @ 09/01/25 11:39:55.467
  STEP: waiting until the marker is denied @ 09/01/25 11:39:55.503
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 11:39:55.827
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 11:39:55.857
  I0901 11:39:56.005174 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8054" for this suite. @ 09/01/25 11:39:56.015
• [0.626 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:39:56.028
  I0901 11:39:56.028636 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 11:39:56.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:56.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:56.059
  E0901 11:39:56.333208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:57.333486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:58.335063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:39:59.335067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/01/25 11:40:00.164
  STEP: Cleaning up the configmap @ 09/01/25 11:40:00.192
  STEP: Cleaning up the pod @ 09/01/25 11:40:00.214
  I0901 11:40:00.256404 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8089" for this suite. @ 09/01/25 11:40:00.274
• [4.269 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/01/25 11:40:00.303
  I0901 11:40:00.303608 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:40:00.307
  E0901 11:40:00.335058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:00.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:00.343
  I0901 11:40:00.451643 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7541" for this suite. @ 09/01/25 11:40:00.462
• [0.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/01/25 11:40:00.482
  I0901 11:40:00.482585 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 11:40:00.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:00.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:00.52
  I0901 11:40:00.571749 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 11:40:01.335666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:02.335685      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:03.337425      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:04.337344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:05.338086      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:06.339056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:07.343492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:08.341627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:09.342653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:10.343906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:11.343784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:12.345502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:13.345491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:14.345193      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:15.345755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:16.346255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:17.348914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:18.348548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:19.348874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:20.349408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:21.349877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:22.350909      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:23.351898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:24.352369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:25.353216      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:26.353198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:27.353812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:28.354607      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:29.355087      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:30.355228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:31.355317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:32.355964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:33.356837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:34.357205      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:35.357934      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:36.358598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:37.358588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:38.359246      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:39.360469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:40.361285      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:41.361656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:42.362338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:43.363094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:44.363226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:45.363855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:46.363658      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:47.364632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:48.364503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:49.365055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:50.365094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:51.366659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:52.366759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:53.366996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:54.367325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:55.367502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:56.367675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:57.368656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:58.369300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:40:59.369581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:00.370482      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:00.591800 16 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 11:41:00.606
  STEP: Adding a custom resource @ 09/01/25 11:41:00.606
  I0901 11:41:00.674990 16 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0901 11:41:00.693760 16 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:41:00.693
  I0901 11:41:00.740756 16 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 11:41:00.752922 16 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:41:00.754
  I0901 11:41:00.846705 16 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 11:41:00.866357 16 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 11:41:00.867
  E0901 11:41:01.370552      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:02.370958      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:03.371705      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:04.372457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/01/25 11:41:05.036
  E0901 11:41:05.374240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:06.374430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 11:41:07.291
  STEP: Removing a custom resource @ 09/01/25 11:41:07.325
  STEP: Removing a custom resource @ 09/01/25 11:41:07.356
  E0901 11:41:07.374719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:07.390048 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2066" for this suite. @ 09/01/25 11:41:07.404
• [66.939 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/01/25 11:41:07.423
  I0901 11:41:07.423582 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:41:07.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:07.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:07.46
  I0901 11:41:07.470406 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:41:08.376236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:09.376374      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:10.377392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 11:41:11.018
  I0901 11:41:11.019343 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 create -f -'
  E0901 11:41:11.377599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:11.446839 16 builder.go:146] stderr: ""
  I0901 11:41:11.447017 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6659-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:41:11.447966 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 delete e2e-test-crd-publish-openapi-6659-crds test-cr'
  I0901 11:41:11.824669 16 builder.go:146] stderr: ""
  I0901 11:41:11.824792 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6659-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0901 11:41:11.825486 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 apply -f -'
  I0901 11:41:12.047196 16 builder.go:146] stderr: ""
  I0901 11:41:12.047341 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6659-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:41:12.047680 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 delete e2e-test-crd-publish-openapi-6659-crds test-cr'
  I0901 11:41:12.258956 16 builder.go:146] stderr: ""
  I0901 11:41:12.259095 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6659-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 11:41:12.259
  I0901 11:41:12.259892 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-3697 explain e2e-test-crd-publish-openapi-6659-crds'
  E0901 11:41:12.378024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:12.456068 16 builder.go:146] stderr: ""
  I0901 11:41:12.458388 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6659-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0901 11:41:13.378619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:14.378869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:14.951222 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3697" for this suite. @ 09/01/25 11:41:14.977
• [7.570 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/01/25 11:41:14.992
  I0901 11:41:14.993020 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename init-container @ 09/01/25 11:41:14.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:15.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:15.099
  STEP: creating the pod @ 09/01/25 11:41:15.106
  I0901 11:41:15.106829 16 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0901 11:41:15.379879      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:16.379470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:17.379708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:18.380713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:18.856982 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7731" for this suite. @ 09/01/25 11:41:18.88
• [3.902 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 09/01/25 11:41:18.895
  I0901 11:41:18.895913 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:41:18.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:18.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:18.949
  E0901 11:41:19.381056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:20.381248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:21.382308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:22.383527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:23.383357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:24.384445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:25.385522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:26.385921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:27.386574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:28.387460      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:29.387929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:30.388987      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:31.388951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:32.389588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:33.390287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:34.390529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:35.391418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/01/25 11:41:35.97
  E0901 11:41:36.391470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:37.392483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:38.393448      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:39.393950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:40.395223      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 11:41:40.999
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:41:41.018
  E0901 11:41:41.396296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:42.396441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/01/25 11:41:43.031
  STEP: Ensuring resource quota status captures configMap creation @ 09/01/25 11:41:43.067
  E0901 11:41:43.396880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:44.397326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/01/25 11:41:45.082
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:41:45.103
  E0901 11:41:45.398875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:46.398862      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:47.119278 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3947" for this suite. @ 09/01/25 11:41:47.132
• [28.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/01/25 11:41:47.155
  I0901 11:41:47.155171 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:41:47.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:47.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:47.203
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:41:47.212
  E0901 11:41:47.399512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:48.399638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:49.401357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:50.400825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:41:51.29
  I0901 11:41:51.301229 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-6b85bbf9-6c0c-4a5f-bc94-fddeaede932d container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:41:51.358
  E0901 11:41:51.401781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:41:51.406714 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9386" for this suite. @ 09/01/25 11:41:51.423
• [4.292 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/01/25 11:41:51.447
  I0901 11:41:51.447964 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:41:51.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:51.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:51.493
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 11:41:51.503
  E0901 11:41:52.405473      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:53.405797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:54.406316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:55.407312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:41:55.562
  I0901 11:41:55.573492 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-686905cc-2642-4bbc-ace2-2ecf5f0fc5c7 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:41:55.598
  I0901 11:41:55.647965 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1428" for this suite. @ 09/01/25 11:41:55.657
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/01/25 11:41:55.669
  I0901 11:41:55.669731 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pv @ 09/01/25 11:41:55.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:55.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:55.701
  STEP: Creating initial PV and PVC @ 09/01/25 11:41:55.709
  I0901 11:41:55.709513 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2398" @ 09/01/25 11:41:55.739
  STEP: Listing PVCs in namespace "pv-2398" @ 09/01/25 11:41:55.746
  STEP: Patching the PV "pv-2398-tbwpm" @ 09/01/25 11:41:55.755
  STEP: Patching the PVC "pvc-bcm2b" @ 09/01/25 11:41:55.787
  STEP: Getting PV "pv-2398-tbwpm" @ 09/01/25 11:41:55.801
  STEP: Getting PVC "pvc-bcm2b" @ 09/01/25 11:41:55.806
  STEP: Deleting PVC "pvc-bcm2b" @ 09/01/25 11:41:55.814
  STEP: Confirm deletion of PVC "pvc-bcm2b" @ 09/01/25 11:41:55.831
  E0901 11:41:56.407623      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:57.408081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2398-tbwpm" @ 09/01/25 11:41:57.852
  STEP: Confirm deletion of PV "pv-2398-tbwpm" @ 09/01/25 11:41:57.875
  E0901 11:41:58.408264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:41:59.409439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/01/25 11:41:59.901
  I0901 11:41:59.901090 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2398-sl94d" @ 09/01/25 11:41:59.94
  STEP: Updating the PVC "pvc-6whtl" @ 09/01/25 11:41:59.968
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-6whtl=updated" @ 09/01/25 11:41:59.987
  STEP: Deleting PVC "pvc-6whtl" via DeleteCollection @ 09/01/25 11:41:59.999
  STEP: Confirm deletion of PVC "pvc-6whtl" @ 09/01/25 11:42:00.017
  E0901 11:42:00.409329      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:01.410069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2398-sl94d" via DeleteCollection @ 09/01/25 11:42:02.039
  STEP: Confirm deletion of PV "pv-2398-sl94d" @ 09/01/25 11:42:02.075
  E0901 11:42:02.410582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:03.412072      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:04.102934 16 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 11:42:04.103022 16 pv.go:205] Deleting PersistentVolumeClaim "pvc-6whtl"
  I0901 11:42:04.113726 16 pv.go:193] Deleting PersistentVolume "pv-2398-sl94d"
  I0901 11:42:04.129160 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2398" for this suite. @ 09/01/25 11:42:04.147
• [8.504 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/01/25 11:42:04.174
  I0901 11:42:04.174929 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:42:04.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:04.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:04.216
  STEP: set up a multi version CRD @ 09/01/25 11:42:04.222
  I0901 11:42:04.223285 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:42:04.412632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:05.413048      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:06.413406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:07.414561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:08.414793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:09.415981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/01/25 11:42:09.866
  STEP: check the unserved version gets removed @ 09/01/25 11:42:09.916
  E0901 11:42:10.416742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:11.417614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/01/25 11:42:11.746
  E0901 11:42:12.418250      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:13.418615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:14.420001      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:15.419909      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:16.115389 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3488" for this suite. @ 09/01/25 11:42:16.16
• [12.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/01/25 11:42:16.208
  I0901 11:42:16.208152 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename containers @ 09/01/25 11:42:16.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:16.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:16.256
  STEP: Creating a pod to test override all @ 09/01/25 11:42:16.266
  E0901 11:42:16.420714      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:17.420381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:18.420877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:19.421916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:20.329
  I0901 11:42:20.336057 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod client-containers-8ec165ee-f6f5-4f82-b0f6-45697180eea8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:42:20.38
  E0901 11:42:20.422935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:20.428185 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4791" for this suite. @ 09/01/25 11:42:20.439
• [4.248 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/01/25 11:42:20.456
  I0901 11:42:20.456489 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:42:20.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:20.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:20.498
  STEP: Creating replication controller my-hostname-basic-8cbd6723-b4ad-4432-9927-f004b3413137 @ 09/01/25 11:42:20.504
  I0901 11:42:20.540356 16 resource.go:81] Pod name my-hostname-basic-8cbd6723-b4ad-4432-9927-f004b3413137: Found 0 pods out of 1
  E0901 11:42:21.423522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:22.423834      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:23.424333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:24.424643      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:25.425265      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:25.558635 16 resource.go:81] Pod name my-hostname-basic-8cbd6723-b4ad-4432-9927-f004b3413137: Found 1 pods out of 1
  I0901 11:42:25.559093 16 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-8cbd6723-b4ad-4432-9927-f004b3413137" are running
  I0901 11:42:25.575324 16 rc.go:525] Pod "my-hostname-basic-8cbd6723-b4ad-4432-9927-f004b3413137-48cks" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:42:22 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:42:20 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:42:22 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:42:22 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:42:20 +0000 UTC Reason: Message:}])
  I0901 11:42:25.575563 16 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 11:42:25.575
  I0901 11:42:25.627559 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5064" for this suite. @ 09/01/25 11:42:25.641
• [5.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/01/25 11:42:25.66
  I0901 11:42:25.660060 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:42:25.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:25.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:25.705
  STEP: Creating projection with secret that has name projected-secret-test-0df8c6c4-0dd9-4a21-8d51-1babddb492e5 @ 09/01/25 11:42:25.711
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:42:25.737
  E0901 11:42:26.426019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:27.426063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:28.427824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:29.429319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:29.8
  I0901 11:42:29.811808 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod pod-projected-secrets-979ebf5d-a160-416d-beec-327514fdb0a1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:42:29.877
  I0901 11:42:29.935871 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9610" for this suite. @ 09/01/25 11:42:29.951
• [4.309 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/01/25 11:42:29.969
  I0901 11:42:29.969608 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:42:29.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:30.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:30.025
  STEP: Creating configMap with name projected-configmap-test-volume-ef19ac59-018d-468c-8fca-1522d0ec230a @ 09/01/25 11:42:30.034
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:42:30.053
  E0901 11:42:30.429379      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:31.430335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:32.430893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:33.432494      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:34.129
  I0901 11:42:34.142802 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod pod-projected-configmaps-67707560-c5ae-4752-a624-434671993c68 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:42:34.17
  I0901 11:42:34.213941 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7602" for this suite. @ 09/01/25 11:42:34.228
• [4.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 09/01/25 11:42:34.249
  I0901 11:42:34.249799 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename servicecidr @ 09/01/25 11:42:34.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:34.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:34.292
  STEP: creating @ 09/01/25 11:42:34.301
  STEP: patching @ 09/01/25 11:42:34.329
  STEP: updating @ 09/01/25 11:42:34.346
  STEP: getting @ 09/01/25 11:42:34.371
  STEP: listing @ 09/01/25 11:42:34.384
  STEP: watching @ 09/01/25 11:42:34.393
  STEP: deleting @ 09/01/25 11:42:34.397
  STEP: deleting a collection @ 09/01/25 11:42:34.411
  E0901 11:42:34.434176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:34.458539 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-908" for this suite. @ 09/01/25 11:42:34.468
• [0.240 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/01/25 11:42:34.49
  I0901 11:42:34.490457 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 11:42:34.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:34.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:34.531
  STEP: Deleting RuntimeClass runtimeclass-5900-delete-me @ 09/01/25 11:42:34.554
  STEP: Waiting for the RuntimeClass to disappear @ 09/01/25 11:42:34.575
  I0901 11:42:34.607329 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5900" for this suite. @ 09/01/25 11:42:34.618
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 09/01/25 11:42:34.632
  I0901 11:42:34.632543 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:42:34.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:34.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:34.677
  STEP: Creating service test in namespace statefulset-8465 @ 09/01/25 11:42:34.683
  STEP: Creating statefulset ss in namespace statefulset-8465 @ 09/01/25 11:42:34.701
  I0901 11:42:34.758004 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 11:42:35.434520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:36.436016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:37.436696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:38.436701      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:39.439502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:40.439493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:41.440624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:42.442243      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:43.442982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:44.443455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:44.732583 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/01/25 11:42:44.757
  STEP: Getting /status @ 09/01/25 11:42:44.79
  I0901 11:42:44.808942 16 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/01/25 11:42:44.809
  I0901 11:42:44.841792 16 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/01/25 11:42:44.842
  I0901 11:42:44.848396 16 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0901 11:42:44.848601 16 statefulset.go:1126] Found Statefulset ss in namespace statefulset-8465 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 11:42:44.848697 16 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 11:42:44.848
  I0901 11:42:44.848892 16 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 11:42:44.870065 16 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/01/25 11:42:44.87
  I0901 11:42:44.875745 16 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0901 11:42:44.876857 16 statefulset.go:138] Deleting all statefulset in ns statefulset-8465
  I0901 11:42:44.893719 16 rest.go:153] Scaling statefulset ss to 0
  E0901 11:42:45.443907      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:46.444257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:47.444386      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:48.444435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:49.444708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:50.445879      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:51.445590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:52.447704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:53.448186      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:54.448320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:54.954637 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:42:54.966429 16 rest.go:91] Deleting statefulset ss
  I0901 11:42:55.018310 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8465" for this suite. @ 09/01/25 11:42:55.033
• [20.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/01/25 11:42:55.061
  I0901 11:42:55.062338 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:42:55.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:55.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:55.111
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 11:42:55.173
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:42:55.191
  I0901 11:42:55.267708 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:42:55.267903 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 11:42:55.448363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:56.230557 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:42:56.230658 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 11:42:56.448750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:42:57.226084 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:42:57.226352 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/01/25 11:42:57.24
  STEP: DeleteCollection of the DaemonSets @ 09/01/25 11:42:57.25
  STEP: Verify that ReplicaSets have been deleted @ 09/01/25 11:42:57.283
  I0901 11:42:57.319143 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16134"},"items":null}

  I0901 11:42:57.341878 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16138"},"items":[{"metadata":{"name":"daemon-set-9rvw2","generateName":"daemon-set-","namespace":"daemonsets-8030","uid":"79f39e03-3d7f-4adc-895b-01f21fce4bcd","resourceVersion":"16138","generation":2,"creationTimestamp":"2025-09-01T11:42:55Z","deletionTimestamp":"2025-09-01T11:43:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6fc9791c-480c-4cd5-b525-ebf5188e9ac2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6fc9791c-480c-4cd5-b525-ebf5188e9ac2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.35\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6stl6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6stl6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"xoongeig7eeb-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["xoongeig7eeb-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"}],"hostIP":"192.168.121.109","hostIPs":[{"ip":"192.168.121.109"}],"podIP":"10.233.66.35","podIPs":[{"ip":"10.233.66.35"}],"startTime":"2025-09-01T11:42:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T11:42:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://244531308cd3b97db05572410aea6c99042deddff5595151fea7d68dcf4837a0","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-6stl6","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kbgcg","generateName":"daemon-set-","namespace":"daemonsets-8030","uid":"fe31db22-56cb-4194-bc80-770136ede460","resourceVersion":"16135","generation":2,"creationTimestamp":"2025-09-01T11:42:55Z","deletionTimestamp":"2025-09-01T11:43:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6fc9791c-480c-4cd5-b525-ebf5188e9ac2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6fc9791c-480c-4cd5-b525-ebf5188e9ac2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-22rj5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-22rj5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"xoongeig7eeb-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["xoongeig7eeb-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"}],"hostIP":"192.168.121.88","hostIPs":[{"ip":"192.168.121.88"}],"podIP":"10.233.64.59","podIPs":[{"ip":"10.233.64.59"}],"startTime":"2025-09-01T11:42:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T11:42:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://a01547ce6609a65ba079fed742afd9266a99b774ef647a693d8da7d9096dcce0","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-22rj5","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-s6dhd","generateName":"daemon-set-","namespace":"daemonsets-8030","uid":"c2127e10-1793-42d5-89f4-a31715cdf391","resourceVersion":"16137","generation":2,"creationTimestamp":"2025-09-01T11:42:55Z","deletionTimestamp":"2025-09-01T11:43:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6fc9791c-480c-4cd5-b525-ebf5188e9ac2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6fc9791c-480c-4cd5-b525-ebf5188e9ac2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T11:42:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.239\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cgm7l","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cgm7l","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"xoongeig7eeb-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["xoongeig7eeb-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T11:42:55Z"}],"hostIP":"192.168.121.188","hostIPs":[{"ip":"192.168.121.188"}],"podIP":"10.233.65.239","podIPs":[{"ip":"10.233.65.239"}],"startTime":"2025-09-01T11:42:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T11:42:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://638bc578e17d472e015e308e437591d55ca0551baad0fa0172f418c56ad0c0e4","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-cgm7l","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0901 11:42:57.381404 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8030" for this suite. @ 09/01/25 11:42:57.391
• [2.352 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/01/25 11:42:57.413
  I0901 11:42:57.413444 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:42:57.418
  E0901 11:42:57.448599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:57.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:57.461
  STEP: creating secret secrets-6361/secret-test-6ef72f3f-7a5d-4cd0-9fa4-e699ddc3fceb @ 09/01/25 11:42:57.472
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:42:57.484
  E0901 11:42:58.449457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:42:59.450368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:00.450673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:01.450917      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:43:01.553
  I0901 11:43:01.565030 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-a72b170a-eec9-4fb7-8c78-e31092eb03b0 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:43:01.593
  I0901 11:43:01.671074 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6361" for this suite. @ 09/01/25 11:43:01.691
• [4.300 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/01/25 11:43:01.713
  I0901 11:43:01.713520 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename csi-storageclass @ 09/01/25 11:43:01.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:01.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:01.798
  STEP: Creating a StorageClass @ 09/01/25 11:43:01.806
  STEP: Get StorageClass "e2e-xw6jm" @ 09/01/25 11:43:01.821
  STEP: Patching the StorageClass "e2e-xw6jm" @ 09/01/25 11:43:01.831
  STEP: Delete StorageClass "e2e-xw6jm" @ 09/01/25 11:43:01.845
  STEP: Confirm deletion of StorageClass "e2e-xw6jm" @ 09/01/25 11:43:01.858
  STEP: Create a replacement StorageClass @ 09/01/25 11:43:01.864
  STEP: Updating StorageClass "e2e-v2-jtj2d" @ 09/01/25 11:43:01.875
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-jtj2d=updated" @ 09/01/25 11:43:01.89
  STEP: Deleting StorageClass "e2e-v2-jtj2d" via DeleteCollection @ 09/01/25 11:43:01.916
  STEP: Confirm deletion of StorageClass "e2e-v2-jtj2d" @ 09/01/25 11:43:01.933
  I0901 11:43:01.941704 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9449" for this suite. @ 09/01/25 11:43:01.955
• [0.257 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/01/25 11:43:01.971
  I0901 11:43:01.971274 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 11:43:01.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:02.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:02.012
  STEP: Creating 50 configmaps @ 09/01/25 11:43:02.019
  E0901 11:43:02.451245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:43:02.518
  I0901 11:43:02.548421 16 resource.go:81] Pod name wrapped-volume-race-3bce51f5-a708-47d5-8e5a-bb0c42d32bc9: Found 0 pods out of 5
  E0901 11:43:03.451500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:04.452855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:05.462211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:06.462210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:07.463079      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:07.573928 16 resource.go:81] Pod name wrapped-volume-race-3bce51f5-a708-47d5-8e5a-bb0c42d32bc9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:43:07.574
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:43:07.673
  I0901 11:43:07.710491 16 resource.go:81] Pod name wrapped-volume-race-dbacbefd-135c-43db-b793-755b9b6b8174: Found 0 pods out of 5
  E0901 11:43:08.463275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:09.463571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:10.464455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:11.465365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:12.466450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:12.733721 16 resource.go:81] Pod name wrapped-volume-race-dbacbefd-135c-43db-b793-755b9b6b8174: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:43:12.734
  E0901 11:43:13.466511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:14.466504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:43:14.848
  I0901 11:43:14.904584 16 resource.go:81] Pod name wrapped-volume-race-37063663-3916-4136-980f-48384643e875: Found 0 pods out of 5
  E0901 11:43:15.467549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:16.468046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:17.469556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:18.470348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:19.471376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:19.926387 16 resource.go:81] Pod name wrapped-volume-race-37063663-3916-4136-980f-48384643e875: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:43:19.926
  STEP: deleting ReplicationController wrapped-volume-race-37063663-3916-4136-980f-48384643e875 in namespace emptydir-wrapper-1774, will wait for the garbage collector to delete the pods @ 09/01/25 11:43:20.01
  I0901 11:43:20.101745 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-37063663-3916-4136-980f-48384643e875 took: 26.072736ms
  I0901 11:43:20.303842 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-37063663-3916-4136-980f-48384643e875 pods took: 202.131067ms
  E0901 11:43:20.471589      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:21.472040      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:22.472533      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:23.480316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-dbacbefd-135c-43db-b793-755b9b6b8174 in namespace emptydir-wrapper-1774, will wait for the garbage collector to delete the pods @ 09/01/25 11:43:23.507
  I0901 11:43:23.620069 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-dbacbefd-135c-43db-b793-755b9b6b8174 took: 44.199997ms
  I0901 11:43:23.720731 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-dbacbefd-135c-43db-b793-755b9b6b8174 pods took: 100.689423ms
  E0901 11:43:24.477675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:25.478057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3bce51f5-a708-47d5-8e5a-bb0c42d32bc9 in namespace emptydir-wrapper-1774, will wait for the garbage collector to delete the pods @ 09/01/25 11:43:25.926
  I0901 11:43:26.016578 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-3bce51f5-a708-47d5-8e5a-bb0c42d32bc9 took: 18.517819ms
  I0901 11:43:26.217506 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-3bce51f5-a708-47d5-8e5a-bb0c42d32bc9 pods took: 200.92569ms
  E0901 11:43:26.478504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:27.480464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:28.480844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/01/25 11:43:28.521
  I0901 11:43:29.194050 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1774" for this suite. @ 09/01/25 11:43:29.206
• [27.262 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/01/25 11:43:29.24
  I0901 11:43:29.241020 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:43:29.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:29.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:29.287
  STEP: creating a Pod with a static label @ 09/01/25 11:43:29.352
  STEP: watching for Pod to be ready @ 09/01/25 11:43:29.375
  I0901 11:43:29.377924 16 pods.go:947] observed Pod pod-test in namespace pods-4545 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0901 11:43:29.393880 16 pods.go:947] observed Pod pod-test in namespace pods-4545 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  }]
  I0901 11:43:29.439552 16 pods.go:947] observed Pod pod-test in namespace pods-4545 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  }]
  E0901 11:43:29.482235      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:30.482534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:31.300564 16 pods.go:950] Found Pod pod-test in namespace pods-4545 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:31 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:31 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:31 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:43:29 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/01/25 11:43:31.323
  STEP: getting the Pod and ensuring that it's patched @ 09/01/25 11:43:31.354
  STEP: replacing the Pod's status Ready condition to False @ 09/01/25 11:43:31.369
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/01/25 11:43:31.414
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/01/25 11:43:31.415
  STEP: watching for the Pod to be deleted @ 09/01/25 11:43:31.45
  I0901 11:43:31.454320 16 pods.go:1060] observed event type MODIFIED
  E0901 11:43:31.483756      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:32.484380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:33.097417 16 pods.go:1060] observed event type MODIFIED
  I0901 11:43:33.337941 16 pods.go:1060] observed event type MODIFIED
  E0901 11:43:33.488445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:33.570985 16 pods.go:1060] observed event type MODIFIED
  I0901 11:43:34.395236 16 pods.go:1060] observed event type MODIFIED
  I0901 11:43:34.415945 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4545" for this suite. @ 09/01/25 11:43:34.428
• [5.206 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/01/25 11:43:34.445
  I0901 11:43:34.445706 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename chunking @ 09/01/25 11:43:34.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:34.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:34.483
  E0901 11:43:34.489463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a large number of resources @ 09/01/25 11:43:34.49
  E0901 11:43:35.489928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:36.490696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:37.491798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:38.492649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:39.493809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:40.495055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:41.496601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:42.497641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:43.499189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:44.499098      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:45.500903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:46.499986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:47.500723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:48.501187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:49.502251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:50.503194      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:51.503954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/01/25 11:43:52.174
  I0901 11:43:52.215991 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 11:43:52.266569 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 11:43:52.318627 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:43:52.368523 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:43:52.417535 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:43:52.472610 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E0901 11:43:52.504345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:52.521183 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:43:52.565461 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:43:52.626207 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:43:52.669710 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:43:52.714037 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:43:52.771530 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:43:52.813333 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:43:52.864608 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:43:52.925876 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:43:52.989668 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:43:53.018822 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:43:53.069480 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 11:43:53.119382 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:43:53.171634 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:43:53.220592 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:43:53.270089 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 11:43:53.317846 16 chunking.go:98] Retrieved 17/17 results with rv 17273 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:43:53.369015 16 chunking.go:98] Retrieved 9/17 results with rv 17273 and continue 
  I0901 11:43:53.421295 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 11:43:53.467958 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0901 11:43:53.504318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:53.522153 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:43:53.570669 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:43:53.621062 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:43:53.666409 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 11:43:53.714428 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:43:53.770450 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:43:53.819968 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:43:53.869531 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:43:53.918938 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:43:53.969443 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:43:54.020584 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:43:54.066718 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:43:54.119233 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:43:54.172011 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:43:54.217969 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:43:54.265937 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 11:43:54.316657 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:43:54.364876 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:43:54.416266 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:43:54.464507 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0901 11:43:54.504361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:54.516839 16 chunking.go:98] Retrieved 17/17 results with rv 17275 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:43:54.565609 16 chunking.go:98] Retrieved 9/17 results with rv 17275 and continue 
  I0901 11:43:54.628458 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 11:43:54.667067 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 11:43:54.717749 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:43:54.769009 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:43:54.821313 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:43:54.882426 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 11:43:54.911743 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:43:54.969902 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:43:55.020392 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:43:55.069080 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:43:55.116401 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:43:55.169858 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:43:55.218364 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:43:55.265559 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:43:55.318663 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:43:55.370853 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:43:55.415295 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:43:55.468481 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0901 11:43:55.504795      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:43:55.514301 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:43:55.566727 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:43:55.612529 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:43:55.666155 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 11:43:55.713964 16 chunking.go:98] Retrieved 17/17 results with rv 17279 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTcyNzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:43:55.768037 16 chunking.go:98] Retrieved 9/17 results with rv 17279 and continue 
  STEP: retrieving those results all at once @ 09/01/25 11:43:55.768
  I0901 11:43:55.828394 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2547" for this suite. @ 09/01/25 11:43:55.868
• [21.481 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/01/25 11:43:55.928
  I0901 11:43:55.928469 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/01/25 11:43:55.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:55.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:55.979
  I0901 11:43:55.990378 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 11:43:56.505311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:57.505549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:58.506345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:43:59.506731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:00.507100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:01.507432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:02.507757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:03.507757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:04.508757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:05.508657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:06.509041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:07.509988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:08.511243      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:09.511183      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:10.512417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:11.513206      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:12.514240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:13.514305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:14.515341      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:15.515481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:16.515674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:17.516370      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:18.516444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:19.516702      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:20.517075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:21.517610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:22.517908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:23.518236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:24.518449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:25.518846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:26.519233      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:27.520061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:28.520305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:29.520628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:30.520942      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:31.521698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:32.522231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:33.522501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:34.523026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:35.523754      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:36.524390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:37.524642      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:38.525415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:39.525492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:40.525707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:41.526637      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:42.526815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:43.527527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:44.527856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:45.529244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:46.528769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:47.529344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:48.529633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:49.529863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:50.530622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:51.531189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:52.532423      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:53.532963      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:54.532964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:55.533601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:44:55.991014 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 11:44:56.000466 16 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/01/25 11:44:56
  I0901 11:44:56.249300 16 taints.go:463] Pod1 is running on xoongeig7eeb-3. Tainting Node
  E0901 11:44:56.534282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:44:57.534882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:44:58.519326 16 taints.go:471] Pod2 is running on xoongeig7eeb-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 11:44:58.519
  E0901 11:44:58.534971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 11:44:58.552
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/01/25 11:44:58.56
  E0901 11:44:59.536323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:00.535861      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:01.536836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:02.537391      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:03.538062      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:04.539204      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:45:05.015591 16 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0901 11:45:05.539850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:06.539991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:07.540301      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:08.540455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:09.540628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:10.541608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:11.541244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:12.542220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:13.543003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:14.543009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:15.543719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:16.544412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:17.545588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:18.546094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:19.546976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:20.547299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:21.547542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:22.548166      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:23.548499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:45:24.438846 16 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 11:45:24.478
  I0901 11:45:24.492738 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4616" for this suite. @ 09/01/25 11:45:24.504
• [88.599 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/01/25 11:45:24.529
  I0901 11:45:24.529197 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:45:24.533
  E0901 11:45:24.549927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:24.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:24.577
  STEP: Creating a Serviceaccount "e2e-sa-d42gh" in namespace "svcaccounts-8838" @ 09/01/25 11:45:24.588
  STEP: Creating a ServiceaccountToken "e2e-sa-d42gh" in namespace "svcaccounts-8838" @ 09/01/25 11:45:24.602
  STEP: Creating a TokenReview for "e2e-sa-d42gh" in namespace "svcaccounts-8838" @ 09/01/25 11:45:24.62
  I0901 11:45:24.628776 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8838" for this suite. @ 09/01/25 11:45:24.641
• [0.136 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/01/25 11:45:24.665
  I0901 11:45:24.665283 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:45:24.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:24.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:24.711
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/01/25 11:45:24.719
  I0901 11:45:24.721266 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:45:25.550666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:26.550835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:27.551596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:28.552397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:29.553257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:30.553950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:31.554179      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:32.554946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:33.557201      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/01/25 11:45:33.661
  I0901 11:45:33.663032 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:45:34.558362      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:35.558501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:45:36.096842 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:45:36.558413      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:37.559038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:38.560263      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:39.560779      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:40.562843      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:41.564183      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:42.564923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:43.566286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:44.566471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:45:45.056766 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6707" for this suite. @ 09/01/25 11:45:45.085
• [20.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:45:45.105
  I0901 11:45:45.105593 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:45:45.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:45.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:45.15
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:45:45.156
  E0901 11:45:45.567445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:46.567624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:47.568273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:48.568352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:45:49.216
  I0901 11:45:49.225359 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-480ec26e-4b6d-46ba-838d-d1b1e86f4f5d container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:45:49.293
  I0901 11:45:49.336246 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6111" for this suite. @ 09/01/25 11:45:49.353
• [4.269 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/01/25 11:45:49.374
  I0901 11:45:49.375022 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 11:45:49.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:49.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:49.42
  STEP: Performing setup for networking test in namespace pod-network-test-6605 @ 09/01/25 11:45:49.43
  STEP: creating a selector @ 09/01/25 11:45:49.431
  STEP: Creating the service pods in kubernetes @ 09/01/25 11:45:49.431
  I0901 11:45:49.431232 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 11:45:49.568983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:50.569452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:51.570509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:52.571303      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:53.571515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:54.571713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:55.572370      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:56.573883      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:57.574383      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:58.575507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:45:59.575709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:00.576424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:01.577328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:02.577777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:03.578461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 11:46:03.675
  E0901 11:46:04.580298      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:05.579652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:46:05.796945 16 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 11:46:05.797173 16 utils.go:495] Going to poll 10.233.65.173 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:46:05.804608 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.173:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6605 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:46:05.804714 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:46:05.804958 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6605/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.173%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:46:06.045718 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:46:06.045872 16 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0901 11:46:06.045913 16 utils.go:495] Going to poll 10.233.64.186 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:46:06.056983 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.186:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6605 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:46:06.057041 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:46:06.057214 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6605/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.186%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:46:06.198196 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:46:06.198479 16 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0901 11:46:06.198551 16 utils.go:495] Going to poll 10.233.66.22 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:46:06.210936 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.22:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6605 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:46:06.211019 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:46:06.211309 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6605/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.22%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:46:06.377486 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:46:06.377594 16 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0901 11:46:06.377915 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6605" for this suite. @ 09/01/25 11:46:06.396
• [17.041 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/01/25 11:46:06.417
  I0901 11:46:06.417858 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:46:06.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:06.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:06.462
  E0901 11:46:06.580369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:07.581318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:46:08.516401 16 delete.go:62] Deleting pod "var-expansion-adad939e-793e-4640-86b9-81a6918098a3" in namespace "var-expansion-395"
  I0901 11:46:08.543833 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-adad939e-793e-4640-86b9-81a6918098a3" to be fully deleted
  E0901 11:46:08.580857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:09.582097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:46:10.568919 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:46:10.583048      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-395" for this suite. @ 09/01/25 11:46:10.589
• [4.197 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/01/25 11:46:10.613
  I0901 11:46:10.613284 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 11:46:10.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:10.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:10.652
  STEP: Looking for a node to schedule job pods @ 09/01/25 11:46:10.658
  STEP: Creating a job @ 09/01/25 11:46:10.687
  STEP: Waiting for all the pods to be ready @ 09/01/25 11:46:10.706
  E0901 11:46:11.584013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:12.585055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:13.585618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:14.585651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:15.586729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:16.586923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:17.587877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:18.588865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:19.590026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:20.591184      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:21.591425      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:22.591720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/01/25 11:46:22.788
  STEP: Evict all the Pods @ 09/01/25 11:46:22.804
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-hktkc/job-4317 @ 09/01/25 11:46:22.805
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-tq7lc/job-4317 @ 09/01/25 11:46:22.805
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-4czmj/job-4317 @ 09/01/25 11:46:22.805
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-tq7lc/job-4317 to be deleted @ 09/01/25 11:46:22.901
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-hktkc/job-4317 to be deleted @ 09/01/25 11:46:22.93
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-4czmj/job-4317 to be deleted @ 09/01/25 11:46:22.93
  E0901 11:46:23.592074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:24.592443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:25.592691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:26.593753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/01/25 11:46:26.978
  E0901 11:46:27.593977      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:28.594853      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:29.595175      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:30.595869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:31.596046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:32.596806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:33.598226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:34.597927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:35.599298      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:36.599449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:37.600479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:38.601510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:39.601681      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:40.601732      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:41.603200      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:42.603707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:43.604047      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:44.614758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:45.605475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:46.605414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:47.605616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:48.606982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:49.608492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:50.640471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:51.614433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:52.614792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:53.614507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:54.617058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:55.615728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:56.617277      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:57.617666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:58.617883      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:46:59.619432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:00.619153      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:01.619611      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:02.619553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:03.619949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:04.620222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:05.620762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:06.621486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:07.621892      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:08.621850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:09.622697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:10.622857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:47:11.351289 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4317" for this suite. @ 09/01/25 11:47:11.367
• [60.779 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/01/25 11:47:11.398
  I0901 11:47:11.398373 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:47:11.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:11.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:11.457
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2381639a-f398-41ff-bec9-599e763daa1b @ 09/01/25 11:47:11.479
  STEP: Creating the pod @ 09/01/25 11:47:11.49
  E0901 11:47:11.623769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:12.624280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-2381639a-f398-41ff-bec9-599e763daa1b @ 09/01/25 11:47:13.586
  STEP: waiting to observe update in volume @ 09/01/25 11:47:13.6
  E0901 11:47:13.624388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:14.625540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:15.625496      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:16.625779      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:17.626057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:18.626267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:19.626630      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:20.626794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:21.628413      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:22.627582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:23.628406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:24.629445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:25.630261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:26.630870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:27.631620      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:28.632276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:29.632654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:30.633382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:31.633284      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:32.634373      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:33.635008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:34.635981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:35.636347      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:36.636370      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:37.636633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:38.636893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:39.637191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:40.637197      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:41.637599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:42.638430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:43.638489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:44.638535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:45.646365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:46.638952      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:47.639663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:48.640570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:49.640601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:50.642751      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:51.642489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:52.643273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:53.643643      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:54.644260      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:55.644597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:56.645186      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:57.645576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:58.645978      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:47:59.646087      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:00.646267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:01.646776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:02.647548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:03.648773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:04.649901      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:05.651315      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:06.651443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:07.653052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:08.652922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:09.654157      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:10.654339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:11.654613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:12.654692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:13.655592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:14.655947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:15.656919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:16.657443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:17.657390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:18.658292      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:19.658574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:20.658893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:21.659928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:22.660962      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:23.661443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:24.663800      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:25.662895      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:26.663454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:27.664524      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:28.665508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:29.666452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:30.666241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:48:30.822572 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1089" for this suite. @ 09/01/25 11:48:30.844
• [79.477 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 09/01/25 11:48:30.875
  I0901 11:48:30.875636 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 11:48:30.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:30.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:30.924
  STEP: Creating a job @ 09/01/25 11:48:30.938
  STEP: Ensuring job reaches completions @ 09/01/25 11:48:30.968
  E0901 11:48:31.670611      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:32.669415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:33.672038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:34.670243      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:35.670570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:36.671159      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:37.672389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:38.672274      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:39.672903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:40.673683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:48:41.070784 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9561" for this suite. @ 09/01/25 11:48:41.085
• [10.228 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/01/25 11:48:41.104
  I0901 11:48:41.104046 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 11:48:41.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:41.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:41.153
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/01/25 11:48:41.16
  E0901 11:48:41.674778      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:42.675334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/01/25 11:48:43.216
  STEP: Then the orphan pod is adopted @ 09/01/25 11:48:43.233
  E0901 11:48:43.676103      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/01/25 11:48:44.263
  I0901 11:48:44.280634 16 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 11:48:44.308
  E0901 11:48:44.677049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:48:45.340042 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5627" for this suite. @ 09/01/25 11:48:45.352
• [4.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 09/01/25 11:48:45.373
  I0901 11:48:45.373782 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:48:45.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:45.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:45.412
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:48:45.42
  I0901 11:48:45.420648 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-6802 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0901 11:48:45.646268 16 builder.go:146] stderr: ""
  I0901 11:48:45.646477 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 11:48:45.646
  I0901 11:48:45.658604 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-6802 delete pods e2e-test-httpd-pod'
  E0901 11:48:45.678620      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:46.679422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:47.680842      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:48:47.785779 16 builder.go:146] stderr: ""
  I0901 11:48:47.785932 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 11:48:47.787467 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6802" for this suite. @ 09/01/25 11:48:47.806
• [2.455 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/01/25 11:48:47.829
  I0901 11:48:47.829942 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:48:47.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:47.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:47.875
  STEP: create the rc1 @ 09/01/25 11:48:47.906
  STEP: create the rc2 @ 09/01/25 11:48:47.917
  E0901 11:48:48.681283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:49.709553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:50.735422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:51.774065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:52.800219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:53.801919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/01/25 11:48:54.684  E0901 11:48:54.851997      16 retrywatcher.go:169] "Watch failed" err="context canceled"

  E0901 11:48:55.852298      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:56.877383      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:57.887295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:48:58.961098      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:00.045836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:01.120559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:02.054140      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/01/25 11:49:02.608
  STEP: wait for the rc to be deleted @ 09/01/25 11:49:02.628
  E0901 11:49:03.057520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:04.057581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:05.058530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:06.058849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:07.097951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:07.733047 16 garbage_collector.go:770] 88 pods remaining
  I0901 11:49:07.733194 16 garbage_collector.go:777] 71 pods has nil DeletionTimestamp
  I0901 11:49:07.733213 16 garbage_collector.go:778] 
  E0901 11:49:08.094825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:09.096173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:10.096536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:11.096741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:12.096903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:12.656772 16 garbage_collector.go:770] 63 pods remaining
  I0901 11:49:12.656851 16 garbage_collector.go:777] 50 pods has nil DeletionTimestamp
  I0901 11:49:12.656962 16 garbage_collector.go:778] 
  E0901 11:49:13.097151      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:14.097979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:15.098430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:16.098453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:17.099394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 11:49:17.657
  I0901 11:49:18.073597 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:49:18.073809 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2gvsd" in namespace "gc-925"
  E0901 11:49:18.100382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:18.128227 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xtr8" in namespace "gc-925"
  I0901 11:49:18.161077 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zztz" in namespace "gc-925"
  I0901 11:49:18.270797 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46zxs" in namespace "gc-925"
  I0901 11:49:18.328915 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jwnw" in namespace "gc-925"
  I0901 11:49:18.392453 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lx9w" in namespace "gc-925"
  I0901 11:49:18.464781 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zxs7" in namespace "gc-925"
  I0901 11:49:18.509084 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5f7cb" in namespace "gc-925"
  I0901 11:49:18.671813 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hk48" in namespace "gc-925"
  I0901 11:49:18.782540 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5p5vb" in namespace "gc-925"
  I0901 11:49:18.944412 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rmvx" in namespace "gc-925"
  I0901 11:49:19.099553 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6brgt" in namespace "gc-925"
  E0901 11:49:19.100775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:19.258835 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cs2m" in namespace "gc-925"
  I0901 11:49:19.693676 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6n7cx" in namespace "gc-925"
  I0901 11:49:19.745545 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rsrh" in namespace "gc-925"
  I0901 11:49:19.812682 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74qdj" in namespace "gc-925"
  I0901 11:49:19.844741 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-782ss" in namespace "gc-925"
  I0901 11:49:19.954360 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78xsf" in namespace "gc-925"
  I0901 11:49:19.994576 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7c44t" in namespace "gc-925"
  I0901 11:49:20.024908 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7dtv9" in namespace "gc-925"
  I0901 11:49:20.062353 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fcxt" in namespace "gc-925"
  I0901 11:49:20.094511 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mc9v" in namespace "gc-925"
  E0901 11:49:20.101387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:20.133803 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t2ww" in namespace "gc-925"
  I0901 11:49:20.188957 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86h2p" in namespace "gc-925"
  I0901 11:49:20.280301 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88t5x" in namespace "gc-925"
  I0901 11:49:20.382588 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cvrk" in namespace "gc-925"
  I0901 11:49:20.490589 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-98qts" in namespace "gc-925"
  I0901 11:49:20.716241 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ckk4" in namespace "gc-925"
  I0901 11:49:20.896757 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ckq8" in namespace "gc-925"
  I0901 11:49:20.990986 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9l8dq" in namespace "gc-925"
  I0901 11:49:21.029819 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mlqf" in namespace "gc-925"
  I0901 11:49:21.070392 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9spjc" in namespace "gc-925"
  I0901 11:49:21.185677 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tzc8" in namespace "gc-925"
  E0901 11:49:21.186027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:21.238576 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wfz6" in namespace "gc-925"
  I0901 11:49:21.276811 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5qs7" in namespace "gc-925"
  I0901 11:49:21.307708 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9wnd" in namespace "gc-925"
  I0901 11:49:21.344487 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btxfv" in namespace "gc-925"
  I0901 11:49:21.375032 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c489h" in namespace "gc-925"
  I0901 11:49:21.406306 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c4rng" in namespace "gc-925"
  I0901 11:49:21.459598 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvnzf" in namespace "gc-925"
  I0901 11:49:21.486651 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5zt5" in namespace "gc-925"
  I0901 11:49:21.517085 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcc8f" in namespace "gc-925"
  I0901 11:49:21.542682 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvgfm" in namespace "gc-925"
  I0901 11:49:21.568275 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4cn7" in namespace "gc-925"
  I0901 11:49:21.603814 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f52zq" in namespace "gc-925"
  I0901 11:49:21.648353 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7zfn" in namespace "gc-925"
  I0901 11:49:21.701693 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fczsv" in namespace "gc-925"
  I0901 11:49:21.849255 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpvtw" in namespace "gc-925"
  I0901 11:49:21.911776 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwhj9" in namespace "gc-925"
  I0901 11:49:21.976832 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghj9f" in namespace "gc-925"
  I0901 11:49:22.033588 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-925" for this suite. @ 09/01/25 11:49:22.056
• [34.250 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/01/25 11:49:22.08
  I0901 11:49:22.080855 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:49:22.098
  E0901 11:49:22.186410      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:22.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:22.701
  STEP: Creating pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191 @ 09/01/25 11:49:22.727
  E0901 11:49:23.187616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:24.188371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:25.188231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:26.188800      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:27.196824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:28.190954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:29.191825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:30.192682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:49:30.969
  I0901 11:49:30.986258 16 container_probe.go:1748] Initial restart count of pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is 0
  I0901 11:49:30.996840 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:31.194312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:32.194672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:33.006680 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:33.195183      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:34.195597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:35.037669 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:35.197021      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:36.196849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:37.051539 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:37.197655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:38.199080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:39.070165 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:39.199203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:40.200068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:41.122659 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:41.201083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:42.201501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:43.149981 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:43.204415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:44.203649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:45.204069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:45.208028 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  I0901 11:49:45.208271 16 container_probe.go:1762] Restart count of pod container-probe-3191/liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is now 1 (14.221904237s elapsed)
  E0901 11:49:46.208549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:47.205405      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:47.219951 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:48.205991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:49.206570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:49.232743 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:50.207542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:51.207716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:51.245970 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:52.207949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:53.208523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:53.258734 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:54.209682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:55.209992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:55.274504 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:56.210439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:57.211036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:57.289517 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:49:58.211184      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:49:59.212393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:49:59.300359 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:00.212771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:01.213298      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:01.314463 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:02.213578      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:03.213698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:03.328472 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:04.214838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:05.215533      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:05.342264 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  I0901 11:50:05.342393 16 container_probe.go:1762] Restart count of pod container-probe-3191/liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is now 2 (34.356040272s elapsed)
  E0901 11:50:06.215956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:07.215916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:07.351751 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:08.216978      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:09.217071      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:09.362094 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:10.217574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:11.218442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:11.374014 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:12.219050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:13.219690      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:13.386929 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:14.220310      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:15.221501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:15.400940 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:16.221920      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:17.223246      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:17.413850 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:18.223760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:19.223954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:19.435920 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:20.226153      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:21.225032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:21.449507 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:22.226229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:23.232844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:23.466013 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:24.241682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:25.230735      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:25.483202 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  I0901 11:50:25.483832 16 container_probe.go:1762] Restart count of pod container-probe-3191/liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is now 3 (54.49742396s elapsed)
  E0901 11:50:26.230045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:27.231819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:27.497723 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:28.231536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:29.232384      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:29.511350 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:30.233515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:31.234445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:31.525569 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:32.234948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:33.235012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:33.541443 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:34.235472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:35.235910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:35.555279 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:36.236382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:37.236948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:37.569340 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:38.237192      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:39.237654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:39.582947 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:40.238644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:41.239171      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:41.596720 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:42.239517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:43.244793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:43.608154 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:44.244865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:45.246366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:45.632623 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  I0901 11:50:45.632725 16 container_probe.go:1762] Restart count of pod container-probe-3191/liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is now 4 (1m14.6463618s elapsed)
  E0901 11:50:46.246990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:47.247820      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:47.644323 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:48.248055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:49.248625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:49.654663 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:50.250077      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:51.250062      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:51.668192 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:52.250501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:53.251420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:53.683705 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:54.252408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:55.252204      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:55.696316 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:56.253019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:57.253075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:57.710770 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:50:58.252975      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:50:59.253028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:50:59.725249 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:00.253996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:01.254715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:01.778654 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:02.254696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:03.255591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:03.795505 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:04.256625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:05.257035      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:05.808757 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:06.258227      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:07.257863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:07.822501 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:08.259518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:09.259612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:09.836202 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:10.260504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:11.261388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:11.848853 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:12.262768      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:13.262960      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:13.863509 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:14.263677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:15.263809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:15.876172 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:16.265338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:17.265503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:17.891641 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:18.266327      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:19.267302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:19.904188 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:20.267758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:21.268781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:21.927626 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:22.269653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:23.270634      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:23.943379 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:24.270312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:25.270462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:25.959397 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:26.270732      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:27.271542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:27.971043 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:28.272590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:29.273391      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:29.985956 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:30.275559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:31.275345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:31.996932 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:32.276253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:33.276280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:34.012049 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:34.276414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:35.277438      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:36.023997 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:36.277314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:37.278052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:38.040555 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:38.278950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:39.280270      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:40.051349 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:40.280501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:41.281340      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:42.066043 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:42.281621      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:43.283165      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:44.095609 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:44.282796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:45.286660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:46.111488 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:46.283943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:47.288856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:48.124312 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  E0901 11:51:48.285970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:49.286361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:50.138735 16 container_probe.go:1758] Get pod liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b in namespace container-probe-3191
  I0901 11:51:50.138888 16 container_probe.go:1762] Restart count of pod container-probe-3191/liveness-5c7b16cf-c98c-41ea-b80a-216a0a4ff11b is now 5 (2m19.152509752s elapsed)
  STEP: deleting the pod @ 09/01/25 11:51:50.139
  I0901 11:51:50.207676 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3191" for this suite. @ 09/01/25 11:51:50.226
• [148.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 09/01/25 11:51:50.247
  I0901 11:51:50.247828 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:51:50.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:51:50.284
  E0901 11:51:50.287056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:51:50.291
  STEP: Creating a test headless service @ 09/01/25 11:51:50.303
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5112.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5112.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 255.4.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.4.255_udp@PTR;check="$$(dig +tcp +noall +answer +search 255.4.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.4.255_tcp@PTR;sleep 1; done
   @ 09/01/25 11:51:50.363
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5112.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5112.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5112.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5112.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5112.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 255.4.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.4.255_udp@PTR;check="$$(dig +tcp +noall +answer +search 255.4.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.4.255_tcp@PTR;sleep 1; done
   @ 09/01/25 11:51:50.364
  STEP: creating a pod to probe DNS @ 09/01/25 11:51:50.365
  STEP: submitting the pod to kubernetes @ 09/01/25 11:51:50.366
  E0901 11:51:51.292016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:52.293270      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 11:51:52.434
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:51:52.445
  I0901 11:51:52.462776 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.472782 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.483264 16 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.494534 16 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.556171 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.566141 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.579062 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.587733 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local from pod dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de: the server could not find the requested resource (get pods dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de)
  I0901 11:51:52.626167 16 dns_common.go:506] Lookups using dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de failed for: [agnhost_udp@dns-test-service.dns-5112.svc.cluster.local agnhost_tcp@dns-test-service.dns-5112.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local jessie_udp@dns-test-service.dns-5112.svc.cluster.local jessie_tcp@dns-test-service.dns-5112.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5112.svc.cluster.local]

  I0901 11:51:52.664389 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 11:51:52.678479 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 11:51:52.696845 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 11:51:53.290671      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:54.291584      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:55.291966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:56.292439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:57.292551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:51:57.636382 16 dns_common.go:546] DNS probes using dns-5112/dns-test-841f67c8-9cda-4ed2-adcd-ef3528e340de succeeded

  STEP: deleting the pod @ 09/01/25 11:51:57.639
  STEP: deleting the test service @ 09/01/25 11:51:57.683
  STEP: deleting the test headless service @ 09/01/25 11:51:57.812
  I0901 11:51:57.843517 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5112" for this suite. @ 09/01/25 11:51:57.873
• [7.640 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:51:57.888
  I0901 11:51:57.888515 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:51:57.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:51:57.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:51:57.929
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 11:51:57.939
  E0901 11:51:58.293332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:51:59.294331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:00.295207      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:01.295791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:52:01.995
  I0901 11:52:02.005057 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-35dad8d7-b649-477b-bf76-e3189644e8f9 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:52:02.023
  I0901 11:52:02.063712 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4121" for this suite. @ 09/01/25 11:52:02.075
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/01/25 11:52:02.091
  I0901 11:52:02.091285 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:52:02.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:02.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:02.125
  I0901 11:52:02.133818 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:52:02.297039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:03.298874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:04.298599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/01/25 11:52:04.807
  I0901 11:52:04.808598 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 create -f -'
  I0901 11:52:05.202512 16 builder.go:146] stderr: ""
  I0901 11:52:05.202873 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1476-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 11:52:05.203437 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 delete e2e-test-crd-publish-openapi-1476-crds test-foo'
  E0901 11:52:05.299356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:05.429338 16 builder.go:146] stderr: ""
  I0901 11:52:05.429571 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1476-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0901 11:52:05.430211 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 apply -f -'
  I0901 11:52:05.640682 16 builder.go:146] stderr: ""
  I0901 11:52:05.640799 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1476-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 11:52:05.641491 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 delete e2e-test-crd-publish-openapi-1476-crds test-foo'
  I0901 11:52:05.853740 16 builder.go:146] stderr: ""
  I0901 11:52:05.853992 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1476-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/01/25 11:52:05.854
  I0901 11:52:05.854677 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 create -f -'
  I0901 11:52:06.030364 16 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/01/25 11:52:06.03
  I0901 11:52:06.031004 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 create -f -'
  I0901 11:52:06.182151 16 builder.go:135] rc: 1
  I0901 11:52:06.183149 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 apply -f -'
  E0901 11:52:06.299949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:06.368863 16 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/01/25 11:52:06.369
  I0901 11:52:06.369571 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 create -f -'
  I0901 11:52:06.534179 16 builder.go:135] rc: 1
  I0901 11:52:06.535268 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 --namespace=crd-publish-openapi-736 apply -f -'
  I0901 11:52:06.722238 16 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/01/25 11:52:06.722
  I0901 11:52:06.723316 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 explain e2e-test-crd-publish-openapi-1476-crds'
  I0901 11:52:06.950420 16 builder.go:146] stderr: ""
  I0901 11:52:06.950536 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1476-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/01/25 11:52:06.951
  I0901 11:52:06.951356 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 explain e2e-test-crd-publish-openapi-1476-crds.metadata'
  I0901 11:52:07.127216 16 builder.go:146] stderr: ""
  I0901 11:52:07.128536 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1476-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0901 11:52:07.130013 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 explain e2e-test-crd-publish-openapi-1476-crds.spec'
  E0901 11:52:07.300541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:07.301386 16 builder.go:146] stderr: ""
  I0901 11:52:07.301626 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1476-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0901 11:52:07.302406 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 explain e2e-test-crd-publish-openapi-1476-crds.spec.bars'
  I0901 11:52:07.489844 16 builder.go:146] stderr: ""
  I0901 11:52:07.490043 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1476-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/01/25 11:52:07.49
  I0901 11:52:07.490642 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-736 explain e2e-test-crd-publish-openapi-1476-crds.spec.bars2'
  I0901 11:52:07.660698 16 builder.go:135] rc: 1
  E0901 11:52:08.301670      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:09.302351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:09.971849 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-736" for this suite. @ 09/01/25 11:52:10
• [7.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/01/25 11:52:10.028
  I0901 11:52:10.028536 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 11:52:10.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:10.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:10.071
  STEP: creating a target pod @ 09/01/25 11:52:10.076
  E0901 11:52:10.302545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:11.303692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/01/25 11:52:12.129
  E0901 11:52:12.304962      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:13.305387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/01/25 11:52:14.193
  STEP: checking pod container endpoints @ 09/01/25 11:52:14.203
  I0901 11:52:14.204074 16 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2300 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:52:14.204161 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:52:14.204255 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2300/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  E0901 11:52:14.305431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:14.337061 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:52:14.337859 16 exec_util.go:112] Exec stderr: ""
  I0901 11:52:14.359292 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2300" for this suite. @ 09/01/25 11:52:14.374
• [4.366 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/01/25 11:52:14.391
  I0901 11:52:14.391759 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:52:14.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:14.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:14.428
  STEP: Creating configMap with name projected-configmap-test-volume-map-641b249e-1236-44c2-b0ea-68333a5bf8c1 @ 09/01/25 11:52:14.435
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:52:14.447
  E0901 11:52:15.306187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:16.306904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:17.307700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:18.308011      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:52:18.51
  I0901 11:52:18.522213 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-configmaps-0f3b96c8-8634-42a7-955b-64eea49d4a77 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:52:18.552
  I0901 11:52:18.598840 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9064" for this suite. @ 09/01/25 11:52:18.609
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/01/25 11:52:18.631
  I0901 11:52:18.631899 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:52:18.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:18.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:18.665
  STEP: Creating ReplicationController "e2e-rc-nfqf2" @ 09/01/25 11:52:18.672
  I0901 11:52:18.682185 16 rc.go:795] Get Replication Controller "e2e-rc-nfqf2" to confirm replicas
  E0901 11:52:19.308751      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:19.683337 16 rc.go:795] Get Replication Controller "e2e-rc-nfqf2" to confirm replicas
  I0901 11:52:19.694343 16 rc.go:804] Found 1 replicas for "e2e-rc-nfqf2" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-nfqf2" @ 09/01/25 11:52:19.694
  STEP: Updating a scale subresource @ 09/01/25 11:52:19.707
  STEP: Verifying replicas where modified for replication controller "e2e-rc-nfqf2" @ 09/01/25 11:52:19.742
  I0901 11:52:19.742999 16 rc.go:795] Get Replication Controller "e2e-rc-nfqf2" to confirm replicas
  E0901 11:52:20.309901      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:20.744221 16 rc.go:795] Get Replication Controller "e2e-rc-nfqf2" to confirm replicas
  I0901 11:52:20.753588 16 rc.go:804] Found 2 replicas for "e2e-rc-nfqf2" replication controller
  I0901 11:52:20.753835 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1552" for this suite. @ 09/01/25 11:52:20.767
• [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/01/25 11:52:20.796
  I0901 11:52:20.796642 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:52:20.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:20.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:20.85
  STEP: Creating configMap with name configmap-projected-all-test-volume-021e75a0-2c20-48e4-8224-16c9ce406b5e @ 09/01/25 11:52:20.856
  STEP: Creating secret with name secret-projected-all-test-volume-421261d4-2cfb-416b-b8d3-e93bfa195121 @ 09/01/25 11:52:20.865
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/01/25 11:52:20.879
  I0901 11:52:20.897247      16 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0901 11:52:21.320893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:22.322000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:23.322433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:24.323771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:52:24.947
  I0901 11:52:24.961705 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod projected-volume-6f5b052a-2538-403d-99d1-59e6dc9a4aad container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:52:25.026
  I0901 11:52:25.067196 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5565" for this suite. @ 09/01/25 11:52:25.082
• [4.303 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/01/25 11:52:25.099
  I0901 11:52:25.099824 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:52:25.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:25.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:25.149
  STEP: Creating the pod @ 09/01/25 11:52:25.158
  E0901 11:52:25.324178      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:26.324552      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:27.325447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:27.796605 16 pod_client.go:173] Successfully updated pod "labelsupdate86e46db3-ec03-4bec-afab-81e6dbaa57d1"
  E0901 11:52:28.326017      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:29.326770      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:29.855401 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5043" for this suite. @ 09/01/25 11:52:29.871
• [4.796 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 09/01/25 11:52:29.901
  I0901 11:52:29.901460 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:52:29.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:29.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:29.956
  STEP: Creating service test in namespace statefulset-7212 @ 09/01/25 11:52:29.965
  STEP: Creating a new StatefulSet @ 09/01/25 11:52:29.98
  I0901 11:52:30.017091 16 wait.go:44] Found 0 stateful pods, waiting for 3
  E0901 11:52:30.327056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:31.328058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:32.328456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:33.329418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:34.332295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:35.331446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:36.332367      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:37.346490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:38.336719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:39.338038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:52:40.024186 16 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:52:40.024359 16 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:52:40.024398 16 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 11:52:40.057
  I0901 11:52:40.090311 16 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 11:52:40.09
  E0901 11:52:40.338268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:41.339455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:42.339521      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:43.340278      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:44.340352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:45.345782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:46.341516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:47.342390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:48.342696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:49.343659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/01/25 11:52:50.125
  STEP: Performing a canary update @ 09/01/25 11:52:50.126
  I0901 11:52:50.165378 16 statefulset.go:2542] Updating stateful set ss2
  I0901 11:52:50.206691 16 wait.go:74] Waiting for Pod statefulset-7212/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:52:50.344203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:51.344875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:52.344982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:53.345485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:54.348007      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:55.347214      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:56.347773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:57.348684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:58.348894      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:52:59.349290      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/01/25 11:53:00.192
  I0901 11:53:00.302029 16 wait.go:44] Found 1 stateful pods, waiting for 3
  E0901 11:53:00.350051      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:01.350549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:02.351288      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:03.352985      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:04.352849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:05.353865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:06.354786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:07.356026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:08.356397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:09.357085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:53:10.298606 16 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:53:10.299362 16 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:53:10.299436 16 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/01/25 11:53:10.323
  I0901 11:53:10.356520 16 statefulset.go:2542] Updating stateful set ss2
  E0901 11:53:10.357407      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:53:10.381971 16 wait.go:74] Waiting for Pod statefulset-7212/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:53:11.357589      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:12.358203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:13.358660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:14.359357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:15.360059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:16.360275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:17.360579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:18.361296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:19.361283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:20.362665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:53:20.420607 16 statefulset.go:2542] Updating stateful set ss2
  I0901 11:53:20.454579 16 wait.go:56] Waiting for StatefulSet statefulset-7212/ss2 to complete update
  I0901 11:53:20.455480 16 wait.go:63] Waiting for Pod statefulset-7212/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:53:21.362981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:22.363913      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:23.364986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:24.366082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:25.366607      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:26.367404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:27.367838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:28.367977      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:29.368790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:30.369217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:53:30.457391 16 statefulset.go:138] Deleting all statefulset in ns statefulset-7212
  I0901 11:53:30.473243 16 rest.go:153] Scaling statefulset ss2 to 0
  E0901 11:53:31.369872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:32.370537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:33.370738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:34.370979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:35.371668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:36.372330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:37.372770      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:38.373095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:39.373368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:40.373673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:53:40.520268 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:53:40.529546 16 rest.go:91] Deleting statefulset ss2
  I0901 11:53:40.583291 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7212" for this suite. @ 09/01/25 11:53:40.607
• [70.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/01/25 11:53:40.647
  I0901 11:53:40.647768 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:53:40.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:40.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:40.695
  STEP: creating a watch on configmaps with a certain label @ 09/01/25 11:53:40.704
  STEP: creating a new configmap @ 09/01/25 11:53:40.709
  STEP: modifying the configmap once @ 09/01/25 11:53:40.721
  STEP: changing the label value of the configmap @ 09/01/25 11:53:40.74
  STEP: Expecting to observe a delete notification for the watched object @ 09/01/25 11:53:40.758
  I0901 11:53:40.760480 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 21925 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:53:40.761613 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 21926 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:53:40.762369 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 21927 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/01/25 11:53:40.762
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/01/25 11:53:40.783
  E0901 11:53:41.373864      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:42.375444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:43.375345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:44.375703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:45.375801      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:46.377279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:47.376711      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:48.377210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:49.377316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:50.378293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/01/25 11:53:50.783
  STEP: modifying the configmap a third time @ 09/01/25 11:53:50.811
  STEP: deleting the configmap @ 09/01/25 11:53:50.833
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/01/25 11:53:50.853
  I0901 11:53:50.853848 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 22005 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:53:50.854206 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 22006 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:53:50.854390 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7853  131eb9fd-4d0a-4989-b8f6-258cdbbf7240 22007 0 2025-09-01 11:53:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:53:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:53:50.854580 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7853" for this suite. @ 09/01/25 11:53:50.867
• [10.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/01/25 11:53:50.891
  I0901 11:53:50.891054 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:53:50.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:50.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:50.926
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:53:50.959
  E0901 11:53:51.378432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:52.379324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:53.378896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:54.379707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:53:55.013
  I0901 11:53:55.023654 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-059f4e2b-f3da-4603-ad02-ab4ad714a9b6 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:53:55.045
  I0901 11:53:55.095197 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9951" for this suite. @ 09/01/25 11:53:55.116
• [4.251 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/01/25 11:53:55.144
  I0901 11:53:55.144072 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:53:55.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:55.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:55.192
  STEP: Updating Namespace "namespaces-5843" @ 09/01/25 11:53:55.204
  I0901 11:53:55.228229 16 namespace.go:390] Namespace "namespaces-5843" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"10ad96ef-022b-4393-8852-e8e7d8ffe2e4", "kubernetes.io/metadata.name":"namespaces-5843", "namespaces-5843":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0901 11:53:55.228571 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5843" for this suite. @ 09/01/25 11:53:55.241
• [0.115 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/01/25 11:53:55.258
  I0901 11:53:55.258994 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:53:55.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:55.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:55.3
  STEP: set up a multi version CRD @ 09/01/25 11:53:55.308
  I0901 11:53:55.311035 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:53:55.380092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:56.381475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:57.382247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:58.382434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:53:59.382686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:00.384336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/01/25 11:54:01.322
  STEP: check the new version name is served @ 09/01/25 11:54:01.357
  E0901 11:54:01.384686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:02.386408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:03.385886      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/01/25 11:54:03.552
  E0901 11:54:04.386218      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/01/25 11:54:04.591
  E0901 11:54:05.386287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:06.387429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:07.407205      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:08.408265      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:54:08.980187 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6710" for this suite. @ 09/01/25 11:54:09.013
• [13.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/01/25 11:54:09.039
  I0901 11:54:09.040129 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 11:54:09.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:54:09.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:54:09.084
  I0901 11:54:09.133100 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 11:54:09.409444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:10.409544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:11.409824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:12.410624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:13.411099      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:14.411809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:15.412495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:16.412930      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:17.413540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:18.413918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:19.414695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:20.414994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:21.415665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:22.415956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:23.416307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:24.416543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:25.417780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:26.418047      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:27.418367      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:28.419082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:29.419619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:30.420712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:31.421431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:32.421718      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:33.422150      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:34.422484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:35.423217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:36.423995      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:37.425021      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:38.425386      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:39.426323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:40.427302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:41.427930      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:42.428610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:43.428843      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:44.429610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:45.430666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:46.430932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:47.431732      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:48.431499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:49.432389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:50.432396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:51.432715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:52.433039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:53.433843      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:54.434212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:55.435180      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:56.435633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:57.437150      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:58.436997      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:54:59.437811      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:00.438766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:01.440051      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:02.439725      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:03.440417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:04.441404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:05.441946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:06.442683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:07.443491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:08.444083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:55:09.152799 16 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 11:55:09.164
  STEP: Adding a custom resource @ 09/01/25 11:55:09.164
  I0901 11:55:09.217879 16 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0901 11:55:09.237819 16 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:55:09.238
  I0901 11:55:09.277841 16 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 11:55:09.287021 16 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:55:09.287
  I0901 11:55:09.350835 16 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 11:55:09.384061 16 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 11:55:09.384
  E0901 11:55:09.444816      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:10.448372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:11.447612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/01/25 11:55:11.471
  E0901 11:55:12.447833      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:13.448000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:14.449282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:15.449494      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 11:55:15.639
  STEP: Removing a custom resource @ 09/01/25 11:55:15.666
  STEP: Removing a custom resource @ 09/01/25 11:55:15.695
  I0901 11:55:15.727579 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2658" for this suite. @ 09/01/25 11:55:15.739
• [66.718 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/01/25 11:55:15.757
  I0901 11:55:15.758060 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:55:15.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:15.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:15.792
  E0901 11:55:16.450594      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:17.450867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:18.451581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:19.452381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:20.452991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:21.453506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:22.454596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:23.456307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:24.456368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:25.457238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:26.458484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:27.458764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:28.458787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:29.459554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:30.459451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:31.460587      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:32.461086      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:33.461472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:34.462540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:35.463505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:36.464989      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:37.467222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:38.467554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:39.468502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:40.469183      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:41.469496      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:42.471200      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:43.470068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:44.471238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:45.473201      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:46.474591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:47.475645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:48.476701      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:49.476855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:50.477091      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:51.478630      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:52.479297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:53.480754      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:54.481471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:55.482065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:56.483175      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:57.483523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:58.484221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:55:59.485306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:00.486176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:01.486773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:02.487517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:03.488821      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:04.489290      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:05.489837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:06.490279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:07.490221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:08.490507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:09.492854      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:10.492469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:11.492748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:12.493669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:13.494451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:14.494917      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:15.495572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:15.844212 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6429" for this suite. @ 09/01/25 11:56:15.868
• [60.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/01/25 11:56:15.897
  I0901 11:56:15.897460 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:56:15.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:15.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:15.948
  I0901 11:56:15.957093 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:56:16.496214      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:17.497665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 11:56:18.341
  I0901 11:56:18.343541 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-9649 --namespace=crd-publish-openapi-9649 create -f -'
  E0901 11:56:18.497739      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:18.778704 16 builder.go:146] stderr: ""
  I0901 11:56:18.778965 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7912-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 11:56:18.779602 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-9649 --namespace=crd-publish-openapi-9649 delete e2e-test-crd-publish-openapi-7912-crds test-cr'
  I0901 11:56:19.000253 16 builder.go:146] stderr: ""
  I0901 11:56:19.000432 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7912-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0901 11:56:19.001013 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-9649 --namespace=crd-publish-openapi-9649 apply -f -'
  I0901 11:56:19.199496 16 builder.go:146] stderr: ""
  I0901 11:56:19.199869 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7912-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 11:56:19.201224 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-9649 --namespace=crd-publish-openapi-9649 delete e2e-test-crd-publish-openapi-7912-crds test-cr'
  I0901 11:56:19.389645 16 builder.go:146] stderr: ""
  I0901 11:56:19.389769 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7912-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 11:56:19.389
  I0901 11:56:19.390288 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-9649 explain e2e-test-crd-publish-openapi-7912-crds'
  E0901 11:56:19.497922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:19.559272 16 builder.go:146] stderr: ""
  I0901 11:56:19.559417 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7912-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0901 11:56:20.499048      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:21.500057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:21.920295 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9649" for this suite. @ 09/01/25 11:56:21.943
• [6.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 09/01/25 11:56:21.959
  I0901 11:56:21.959836 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:56:21.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:22.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:22.021
  STEP: validating cluster-info @ 09/01/25 11:56:22.027
  I0901 11:56:22.027857 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-2328 cluster-info'
  I0901 11:56:22.208747 16 builder.go:146] stderr: ""
  I0901 11:56:22.208870 16 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0901 11:56:22.210675 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2328" for this suite. @ 09/01/25 11:56:22.225
• [0.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/01/25 11:56:22.254
  I0901 11:56:22.254443 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename servicecidr @ 09/01/25 11:56:22.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:22.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:22.302
  STEP: getting @ 09/01/25 11:56:22.307
  STEP: patching @ 09/01/25 11:56:22.318
  STEP: updating @ 09/01/25 11:56:22.331
  STEP: listing @ 09/01/25 11:56:22.346
  STEP: watching @ 09/01/25 11:56:22.353
  I0901 11:56:22.355001 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9236" for this suite. @ 09/01/25 11:56:22.364
• [0.123 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/01/25 11:56:22.377
  I0901 11:56:22.377805 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:56:22.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:22.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:22.403
  STEP: creating a watch on configmaps @ 09/01/25 11:56:22.408
  STEP: creating a new configmap @ 09/01/25 11:56:22.41
  STEP: modifying the configmap once @ 09/01/25 11:56:22.417
  STEP: closing the watch once it receives two notifications @ 09/01/25 11:56:22.433
  I0901 11:56:22.434074 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5477  e227ad92-3159-4470-9a30-ad2f679182cf 22621 0 2025-09-01 11:56:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:56:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:56:22.434418 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5477  e227ad92-3159-4470-9a30-ad2f679182cf 22622 0 2025-09-01 11:56:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:56:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/01/25 11:56:22.434
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/01/25 11:56:22.449
  STEP: deleting the configmap @ 09/01/25 11:56:22.451
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/01/25 11:56:22.463
  I0901 11:56:22.463839 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5477  e227ad92-3159-4470-9a30-ad2f679182cf 22623 0 2025-09-01 11:56:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:56:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:56:22.464611 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5477  e227ad92-3159-4470-9a30-ad2f679182cf 22624 0 2025-09-01 11:56:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:56:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:56:22.465299 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5477" for this suite. @ 09/01/25 11:56:22.476
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/01/25 11:56:22.491
  I0901 11:56:22.491750 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 11:56:22.494
  E0901 11:56:22.501323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:22.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:22.523
  I0901 11:56:22.530935 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 11:56:23.500875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:24.501789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:25.372658      16 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 11:56:25.372740      16 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 11:56:25.372769      16 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 11:56:25.372851      16 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 11:56:25.372888      16 warnings.go:110] "Warning: unknown field \"gamma\""
  E0901 11:56:25.502757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:25.999448 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3994" for this suite. @ 09/01/25 11:56:26.01
• [3.538 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/01/25 11:56:26.029
  I0901 11:56:26.029431 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 11:56:26.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:26.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:26.062
  STEP: Performing setup for networking test in namespace pod-network-test-3128 @ 09/01/25 11:56:26.073
  STEP: creating a selector @ 09/01/25 11:56:26.073
  STEP: Creating the service pods in kubernetes @ 09/01/25 11:56:26.073
  I0901 11:56:26.074256 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 11:56:26.504052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:27.503063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:28.504388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:29.504470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:30.505571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:31.506445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:32.506804      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:33.507382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:34.507617      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:35.509259      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:36.509702      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:37.509966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:38.510312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:39.511047      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:40.512345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:41.512355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 11:56:42.348
  E0901 11:56:42.512514      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:43.512780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:44.513347      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:45.513507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:46.429071 16 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 11:56:46.429286 16 networking.go:42] Breadth first check of 10.233.65.17 on host 192.168.121.188...
  I0901 11:56:46.438554 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.122:9080/dial?request=hostname&protocol=http&host=10.233.65.17&port=8083&tries=1'] Namespace:pod-network-test-3128 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:46.438665 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:46.438820 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3128/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.17%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0901 11:56:46.514065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:46.669014 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:56:46.669548 16 utils.go:355] Waiting for responses: map[]
  I0901 11:56:46.669755 16 utils.go:359] reached 10.233.65.17 after 0/1 tries
  I0901 11:56:46.669791 16 networking.go:42] Breadth first check of 10.233.64.77 on host 192.168.121.88...
  I0901 11:56:46.678974 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.122:9080/dial?request=hostname&protocol=http&host=10.233.64.77&port=8083&tries=1'] Namespace:pod-network-test-3128 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:46.679048 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:46.679169 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3128/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.77%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 11:56:46.815525 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:56:46.816205 16 utils.go:355] Waiting for responses: map[]
  I0901 11:56:46.816283 16 utils.go:359] reached 10.233.64.77 after 0/1 tries
  I0901 11:56:46.816305 16 networking.go:42] Breadth first check of 10.233.66.143 on host 192.168.121.109...
  I0901 11:56:46.827182 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.122:9080/dial?request=hostname&protocol=http&host=10.233.66.143&port=8083&tries=1'] Namespace:pod-network-test-3128 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:46.827234 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:46.827314 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3128/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.143%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 11:56:46.972261 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:56:46.972368 16 utils.go:355] Waiting for responses: map[]
  I0901 11:56:46.972393 16 utils.go:359] reached 10.233.66.143 after 0/1 tries
  I0901 11:56:46.972424 16 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 11:56:46.972682 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3128" for this suite. @ 09/01/25 11:56:46.988
• [20.979 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 09/01/25 11:56:47.008
  I0901 11:56:47.008703 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:56:47.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:47.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:47.047
  STEP: Setting up server cert @ 09/01/25 11:56:47.097
  E0901 11:56:47.514591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:48.515249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:56:48.781
  STEP: Deploying the webhook pod @ 09/01/25 11:56:48.799
  STEP: Wait for the deployment to be ready @ 09/01/25 11:56:48.832
  I0901 11:56:48.853584 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 11:56:49.516727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:50.517573      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:56:50.924
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:56:51.056
  E0901 11:56:51.517590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:56:52.057809 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 11:56:52.074
  STEP: create the configmap with a random name @ 09/01/25 11:56:52.201
  STEP: verify the configmap is mutated @ 09/01/25 11:56:52.252
  STEP: create the configmap with 'skip-me' name @ 09/01/25 11:56:52.252
  I0901 11:56:52.414766 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4146" for this suite. @ 09/01/25 11:56:52.426
  STEP: Destroying namespace "webhook-markers-3504" for this suite. @ 09/01/25 11:56:52.446
• [5.494 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/01/25 11:56:52.509
  I0901 11:56:52.509536 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 11:56:52.516
  E0901 11:56:52.518414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:52.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:52.629
  STEP: creating a target pod @ 09/01/25 11:56:52.65
  E0901 11:56:53.519335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:54.520523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/01/25 11:56:54.784
  E0901 11:56:55.521063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:56.521329      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/01/25 11:56:56.846
  STEP: checking pod container endpoints @ 09/01/25 11:56:56.862
  I0901 11:56:56.862936 16 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9253 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:56.863036 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:56.863304 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-9253/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 11:56:56.975170 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 11:56:56.975246 16 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/01/25 11:56:57.119
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/01/25 11:56:57.157
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/01/25 11:56:57.217
  I0901 11:56:57.245496 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9253" for this suite. @ 09/01/25 11:56:57.257
• [4.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/01/25 11:56:57.272
  I0901 11:56:57.272778 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:56:57.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:57.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:57.302
  STEP: Creating a test namespace @ 09/01/25 11:56:57.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:57.328
  STEP: Creating a pod in the namespace @ 09/01/25 11:56:57.333
  STEP: Waiting for the pod to have running status @ 09/01/25 11:56:57.35
  E0901 11:56:57.521734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:58.522956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:56:59.523917      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:00.524767      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/01/25 11:57:01.381
  STEP: Waiting for the namespace to be removed. @ 09/01/25 11:57:01.402
  E0901 11:57:01.525103      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:02.525977      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:03.526836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:04.527709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:05.528525      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:06.529045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:07.530331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:08.530674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:09.531698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:10.531839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:11.532441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/01/25 11:57:12.416
  STEP: Verifying there are no pods in the namespace @ 09/01/25 11:57:12.45
  I0901 11:57:12.462559 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-294" for this suite. @ 09/01/25 11:57:12.476
  STEP: Destroying namespace "nsdeletetest-2198" for this suite. @ 09/01/25 11:57:12.493
  I0901 11:57:12.502540 16 framework.go:370] Namespace nsdeletetest-2198 was already deleted
  STEP: Destroying namespace "nsdeletetest-2296" for this suite. @ 09/01/25 11:57:12.503
• [15.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:57:12.52
  I0901 11:57:12.520365 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 11:57:12.524
  E0901 11:57:12.533919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:12.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:12.565
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/01/25 11:57:12.573
  I0901 11:57:12.588628 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8695" for this suite. @ 09/01/25 11:57:12.614
• [0.111 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/01/25 11:57:12.631
  I0901 11:57:12.631405 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 11:57:12.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:12.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:12.661
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 11:57:12.704
  E0901 11:57:13.533598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:14.533918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:15.534742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:16.535049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 11:57:16.786
  E0901 11:57:17.535935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:18.536647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/01/25 11:57:18.834
  E0901 11:57:19.537571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:20.538338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/01/25 11:57:20.873
  I0901 11:57:20.903480 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7181" for this suite. @ 09/01/25 11:57:20.928
• [8.326 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/01/25 11:57:20.958
  I0901 11:57:20.958427 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:57:20.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:21.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:21.025
  E0901 11:57:21.538533      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:22.539721      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:23.539025      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:24.539390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:25.127994 16 delete.go:62] Deleting pod "var-expansion-1f29735f-d7ae-4521-a074-da5a94261b16" in namespace "var-expansion-7095"
  I0901 11:57:25.153267 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-1f29735f-d7ae-4521-a074-da5a94261b16" to be fully deleted
  E0901 11:57:25.539861      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:26.540033      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:27.186348 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7095" for this suite. @ 09/01/25 11:57:27.202
• [6.269 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/01/25 11:57:27.227
  I0901 11:57:27.227771 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:57:27.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:27.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:27.273
  STEP: Creating pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545 @ 09/01/25 11:57:27.281
  E0901 11:57:27.539961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:28.540520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:57:29.331
  I0901 11:57:29.343260 16 container_probe.go:1748] Initial restart count of pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 is 0
  I0901 11:57:29.356249 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:29.541641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:30.541895      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:31.368653 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:31.542046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:32.542417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:33.382179 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:33.543809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:34.543620      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:35.393329 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:35.545295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:36.545389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:37.405600 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:37.546548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:38.546588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:39.418221 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:39.548096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:40.548543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:41.429155 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:41.549571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:42.550189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:43.440792 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:43.550443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:44.550568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:45.456294 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:45.551759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:46.552712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:47.472854 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:47.552932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:48.555846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:49.485236 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:49.555199      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:50.555896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:51.501613 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:51.556769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:52.557061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:53.515991 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:53.557247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:54.557647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:55.530479 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:55.558629      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:56.559503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:57.544493 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:57.560344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:57:58.570434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:57:59.557724 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:57:59.564195      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:00.570076      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:01.566994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:01.572606 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:02.567704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:03.568859      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:03.585655 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:04.568493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:05.576889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:05.600829 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:06.571644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:07.574355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:07.618980 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:08.573515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:09.573633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:09.639230 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:10.575994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:11.573933      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:11.657531 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:12.575333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:13.575547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:13.669815 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:14.575495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:15.576634      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:15.686222 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:16.577324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:17.577694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:17.704368 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:18.577895      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:19.578543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:19.719407 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:20.579079      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:21.579808      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:21.733079 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:22.579526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:23.580827      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:23.749060 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:24.582400      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:25.582385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:25.805634 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:26.583239      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:27.583707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:27.823196 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:28.584181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:29.584085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:29.835787 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:30.584986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:31.585228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:31.849558 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:32.585875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:33.586557      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:33.864502 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:34.586820      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:35.591077      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:35.879509 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:36.592484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:37.592484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:37.903445 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:38.593414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:39.593508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:39.918195 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:40.594260      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:41.595240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:41.929174 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:42.596647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:43.596739      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:43.943778 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:44.597555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:45.598083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:45.956554 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:46.598216      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:47.598415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:47.972522 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:48.598930      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:49.599451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:49.987234 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:50.599951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:51.600478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:51.999253 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:52.600641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:53.601544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:54.014775 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:54.601911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:55.603936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:56.028460 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:56.605079      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:57.605778      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:58:58.057096 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:58:58.606516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:58:59.606932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:00.066483 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:00.607834      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:01.607733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:02.080007 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:02.608363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:03.609365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:04.089704 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:04.609639      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:05.609586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:06.104236 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:06.610212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:07.610437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:08.118893 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:08.610432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:09.611193      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:10.133489 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:10.610899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:11.611821      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:12.148300 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:12.612736      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:13.612844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:14.163547 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:14.612988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:15.615283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:16.177256 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:16.614581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:17.615596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:18.192020 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:18.615975      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:19.616897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:20.208407 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:20.617028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:21.617486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:22.224251 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:22.617967      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:23.618582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:24.239357 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:24.618650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:25.619464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:26.249157 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:26.620342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:27.621085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:28.263930 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:28.622306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:29.622535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:30.277751 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:30.623304      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:31.624508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:32.290536 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:32.624736      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:33.625269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:34.305505 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:34.626089      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:35.627891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:36.323092 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:36.627843      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:37.628425      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:38.339486 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:38.628577      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:39.629417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:40.354287 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:40.630679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:41.630729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:42.369515 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:42.631479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:43.632286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:44.383570 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:44.633703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:45.634189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:46.395827 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:46.634453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:47.634819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:48.405774 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:48.634742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:49.635634      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:50.418452 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:50.637888      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:51.638882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:52.430359 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:52.639909      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:53.640437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:54.444555 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:54.641199      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:55.641363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:56.452435 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:56.642213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:57.642314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 11:59:58.467202 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 11:59:58.642975      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 11:59:59.644356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:00.478942 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:00.643678      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:01.644408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:02.489737 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:02.644461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:03.644833      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:04.503809 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:04.644940      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:05.645624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:06.517006 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:06.646331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:07.646458      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:08.534089 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:08.647442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:09.647716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:10.547470 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:10.649334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:11.649547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:12.564140 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:12.650482      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:13.650812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:14.576917 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:14.651644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:15.651693      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:16.590336 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:16.652594      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:17.653638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:18.602439 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:18.654381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:19.654921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:20.620425 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:20.655770      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:21.655947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:22.632997 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:22.656655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:23.657087      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:24.645432 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:24.658257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:25.658397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:26.653942 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:26.658973      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:27.659749      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:28.660027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:28.668247 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:29.660824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:30.661638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:30.678461 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:31.662202      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:32.662819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:32.692857 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:33.663572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:34.664806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:34.708956 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:35.665229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:36.666891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:36.732710 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:37.665990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:38.666280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:38.742505 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:39.666685      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:40.667493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:40.755048 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:41.667562      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:42.667944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:42.768649 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:43.668312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:44.668693      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:44.782942 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:45.669701      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:46.669969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:46.794602 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:47.670344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:48.670371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:48.817188 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:49.673213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:50.672279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:50.841319 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:51.672909      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:52.673762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:52.852622 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:53.674757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:54.675876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:54.865260 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:55.676102      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:56.676806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:56.879834 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:57.682517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:00:58.678484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:00:58.892574 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:00:59.678824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:00.678914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:00.903956 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:01.681659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:02.682686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:02.915460 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:03.683282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:04.684786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:04.926302 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:05.684508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:06.684911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:06.942541 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:07.685979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:08.686390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:08.956622 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:09.687463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:10.687588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:10.971574 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:11.687903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:12.688059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:12.992771 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:13.688587      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:14.688456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:15.007796 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:15.688830      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:16.689761      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:17.021910 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:17.690945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:18.691471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:19.037309 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:19.692755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:20.692798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:21.049903 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:21.692623      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:22.693598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:23.061403 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:23.694677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:24.694626      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:25.078048 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:25.695532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:26.696766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:27.087386 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:27.697213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:28.696961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:01:29.101741 16 container_probe.go:1758] Get pod test-webserver-15f4f4c9-963c-4fc6-b03d-0efff06afa11 in namespace container-probe-3545
  E0901 12:01:29.697421      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:30.697730      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/01/25 12:01:31.103
  I0901 12:01:31.137579 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3545" for this suite. @ 09/01/25 12:01:31.159
• [243.947 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/01/25 12:01:31.175
  I0901 12:01:31.175721 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename init-container @ 09/01/25 12:01:31.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:01:31.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:01:31.226
  STEP: creating the pod @ 09/01/25 12:01:31.232
  I0901 12:01:31.232957 16 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0901 12:01:31.698456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:32.699097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:33.699737      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:34.700839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:35.701461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:36.703221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:37.702490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:38.703299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:39.703234      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:40.703343      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:41.703475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:42.704393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:43.704922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:44.705818      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:45.705994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:46.707042      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:47.707377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:48.708003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:49.708201      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:50.708870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:51.708906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:52.709672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:53.709818      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:54.710727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:55.711007      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:56.711700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:57.712504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:58.712558      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:01:59.713363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:00.713584      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:01.714666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:02.715167      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:03.716478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:04.716517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:05.716734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:06.716884      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:07.717679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:08.718728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:09.718417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:10.718562      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:11.719675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:12.719887      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:13.721191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:14.721715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:15.722246      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:16.722513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:02:16.994414 16 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-48a360f4-b242-4468-adfc-7d6a640a5883", GenerateName:"", Namespace:"init-container-8461", SelfLink:"", UID:"7f2ee48d-5275-4d73-9b6b-39a0ff4fdf8a", ResourceVersion:"23854", Generation:1, CreationTimestamp:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"232779164"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cae888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 2, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cae8e8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jvlsk", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001124740), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jvlsk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jvlsk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jvlsk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003b166d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"xoongeig7eeb-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004755560), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003b16760)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003b16780)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003b16788), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003b1678c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00128e510), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 1, 32, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.109", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.109"}}, PodIP:"10.233.66.53", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.53"}}, StartTime:time.Date(2025, time.September, 1, 12, 1, 31, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003dbc850)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003dbc8c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://c01eb7b30bf3b96c4a6a8bb1a353c55a57d1867e9b2cc3acb5a1d19fc0d393f4", Started:(*bool)(0xc003b1683a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc00711da10), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jvlsk", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00128e530)}}, User:(*v1.ContainerUser)(0xc001a643a0), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0011248a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003b16865), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jvlsk", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00128e540)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001124860), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003b1680f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jvlsk", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00128e520)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0901 12:02:16.995168 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8461" for this suite. @ 09/01/25 12:02:17.015
• [45.860 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/01/25 12:02:17.036
  I0901 12:02:17.036936 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 12:02:17.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:02:17.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:02:17.071
  I0901 12:02:17.077022 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 12:02:17.122964 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:02:17.132022 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-1 before test
  I0901 12:02:17.145840 16 predicates.go:958] cilium-jq2g6 from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.145930 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:02:17.145970 16 predicates.go:958] cilium-node-init-24srs from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.145994 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:02:17.146021 16 predicates.go:958] cilium-operator-66b866ccb5-tvdgj from kube-system started at 2025-09-01 11:44:58 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.146044 16 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0901 12:02:17.146070 16 predicates.go:958] kube-apiserver-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.146163 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:02:17.146201 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.146227 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:02:17.146252 16 predicates.go:958] kube-proxy-sfcrg from kube-system started at 2025-09-01 10:45:37 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.146275 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:02:17.146302 16 predicates.go:958] kube-scheduler-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.146325 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:02:17.146360 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8 from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:02:17.146408 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:02:17.146424 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:02:17.146440 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-2 before test
  I0901 12:02:17.161726 16 predicates.go:958] cilium-jb44h from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.161781 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:02:17.161806 16 predicates.go:958] cilium-node-init-2jnhr from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.162001 16 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 12:02:17.162222 16 predicates.go:958] coredns-674b8bbfcf-6wfq2 from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.162315 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:02:17.162343 16 predicates.go:958] coredns-674b8bbfcf-xqczq from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.162360 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:02:17.162379 16 predicates.go:958] kube-apiserver-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.162525 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:02:17.162897 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.163000 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:02:17.163386 16 predicates.go:958] kube-proxy-vkvcp from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.163435 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:02:17.163583 16 predicates.go:958] kube-scheduler-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.163671 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:02:17.163818 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-q8n4b from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:02:17.163970 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:02:17.163994 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:02:17.164012 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-3 before test
  I0901 12:02:17.175322 16 predicates.go:958] pod-init-48a360f4-b242-4468-adfc-7d6a640a5883 from init-container-8461 started at 2025-09-01 12:01:31 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.175384 16 predicates.go:960] 	Container run1 ready: false, restart count 0
  I0901 12:02:17.175438 16 predicates.go:958] cilium-7ffvq from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.175701 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:02:17.175745 16 predicates.go:958] cilium-node-init-r4zwt from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.175978 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:02:17.176015 16 predicates.go:958] kube-proxy-m96dg from kube-system started at 2025-09-01 10:47:04 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.176545 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:02:17.176603 16 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:20 +0000 UTC (1 container statuses recorded)
  I0901 12:02:17.176766 16 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 12:02:17.177035 16 predicates.go:958] sonobuoy-e2e-job-4eba01326b644eed from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:02:17.177064 16 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 12:02:17.177287 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:02:17.177318 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-bx8bz from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:02:17.177486 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:02:17.177714 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:02:17.178
  E0901 12:02:17.723223      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:18.724058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:02:19.234
  STEP: Trying to apply a random label on the found node. @ 09/01/25 12:02:19.284
  STEP: verifying the node has the label kubernetes.io/e2e-1dbee4ec-fcaa-40dc-a5b3-986d694d8526 95 @ 09/01/25 12:02:19.314
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/01/25 12:02:19.33
  E0901 12:02:19.724908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:20.725529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.109 on the node which pod4 resides and expect not scheduled @ 09/01/25 12:02:21.366
  E0901 12:02:21.725595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:22.725797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:23.726185      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:24.727183      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:25.727418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:26.727849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:27.729211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:28.729840      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:29.729785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:30.730615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:31.731235      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:32.731566      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:33.731746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:34.732645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:35.733030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:36.733274      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:37.733637      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:38.733789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:39.734014      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:40.734181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:41.734574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:42.734793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:43.735884      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:44.736349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:45.736208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:46.738295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:47.737926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:48.738339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:49.739522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:50.741027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:51.741741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:52.742383      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:53.742487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:54.742820      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:55.743207      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:56.743579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:57.744058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:58.744659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:02:59.745503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:00.745737      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:01.748209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:02.746660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:03.747512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:04.748677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:05.750570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:06.749173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:07.749273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:08.750074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:09.750799      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:10.751831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:11.752449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:12.752478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:13.757567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:14.753397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:15.754281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:16.754850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:17.755762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:18.756668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:19.756839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:20.757046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:21.757673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:22.757870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:23.758992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:24.758956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:25.759335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:26.759480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:27.759671      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:28.759935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:29.760495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:30.761040      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:31.761307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:32.762472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:33.763338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:34.763749      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:35.764585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:36.765466      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:37.767030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:38.767859      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:39.768723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:40.768815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:41.770342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:42.770353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:43.770392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:44.770642      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:45.771399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:46.771267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:47.774253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:48.772595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:49.773073      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:50.773638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:51.774430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:52.775087      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:53.774982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:54.775331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:55.775586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:56.776300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:57.776666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:58.777519      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:03:59.779058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:00.779591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:01.779850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:02.779986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:03.780234      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:04.781286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:05.782301      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:06.782783      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:07.783717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:08.784393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:09.784584      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:10.784891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:11.785848      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:12.786531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:13.786798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:14.788339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:15.788550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:16.788760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:17.789475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:18.790966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:19.790876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:20.791286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:21.791591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:22.792332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:23.792744      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:24.792861      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:25.793543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:26.793712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:27.793875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:28.794898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:29.796776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:30.796045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:31.796567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:32.796888      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:33.797018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:34.798492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:35.798561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:36.799323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:37.799777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:38.800881      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:39.801336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:40.803081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:41.802731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:42.804248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:43.804242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:44.805764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:45.805965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:46.806480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:47.808923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:48.809019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:49.809628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:50.810528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:51.810575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:52.812890      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:53.812654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:54.813492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:55.814282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:56.814522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:57.815284      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:58.815891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:04:59.816538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:00.816797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:01.816839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:02.817680      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:03.818633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:04.819873      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:05.820715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:06.821473      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:07.822408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:08.823247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:09.823438      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:10.823662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:11.823708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:12.824046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:13.824750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:14.825630      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:15.826548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:16.826983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:17.827539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:18.828297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:19.828696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:20.830005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:21.829911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:22.830839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:23.831350      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:24.833509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:25.834772      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:26.835579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:27.835884      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:28.838082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:29.837896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:30.837986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:31.838086      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:32.839278      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:33.839671      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:34.840457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:35.840603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:36.841575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:37.842475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:38.843476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:39.842963      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:40.843798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:41.844841      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:42.845668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:43.845572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:44.846377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:45.846823      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:46.847138      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:47.847348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:48.847472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:49.847970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:50.847983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:51.848883      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:52.849855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:53.849918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:54.850686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:55.851039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:56.851097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:57.851264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:58.852250      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:05:59.852101      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:00.852796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:01.852943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:02.853600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:03.853998      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:04.854493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:05.855368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:06.856009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:07.856488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:08.856803      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:09.857347      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:10.859310      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:11.858474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:12.858468      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:13.858591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:14.860479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:15.859475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:16.860055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:17.861029      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:18.861235      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:19.861380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:20.862048      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:21.862878      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:22.863553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:23.863666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:24.864838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:25.864485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:26.865554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:27.866502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:28.867205      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:29.867561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:30.868340      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:31.869470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:32.870617      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:33.870663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:34.871278      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:35.872504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:36.873319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:37.873299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:38.876726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:39.874467      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:40.874776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:41.874654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:42.874863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:43.875157      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:44.875838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:45.875806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:46.876281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:47.876590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:48.876820      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:49.877896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:50.878033      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:51.878652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:52.878742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:53.879018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:54.879256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:55.879752      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:56.880412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:57.880784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:58.881544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:06:59.881610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:00.881876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:01.882917      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:02.883613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:03.883924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:04.884704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:05.885616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:06.886500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:07.886709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:08.887720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:09.889092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:10.889044      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:11.889250      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:12.889538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:13.890980      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:14.890253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:15.891245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:16.890847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:17.891510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:18.891986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:19.893392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:20.892810      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-1dbee4ec-fcaa-40dc-a5b3-986d694d8526 off the node xoongeig7eeb-3 @ 09/01/25 12:07:21.391
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1dbee4ec-fcaa-40dc-a5b3-986d694d8526 @ 09/01/25 12:07:21.448
  I0901 12:07:21.472366 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8733" for this suite. @ 09/01/25 12:07:21.49
• [304.473 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/01/25 12:07:21.514
  I0901 12:07:21.515712 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:07:21.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:21.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:21.572
  I0901 12:07:21.608842 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:07:21.893003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:22.893353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:23.893679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:24.893782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:25.894779      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:26.895679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:27.897446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:28.897892      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:29.898717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:30.899057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:31.899037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:32.899549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:33.900395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:34.900462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:35.901432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:36.902393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:37.902477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:38.903001      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:39.903713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:40.904323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:41.904593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:42.904872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:43.905916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:44.907052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:45.907006      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:46.907443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:47.908306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:48.909245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:49.909614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:50.911293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:51.912181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:52.912624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:53.913647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:54.915932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:55.915822      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:56.916733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:57.916954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:58.917527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:07:59.917775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:00.917915      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:01.918971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:02.919707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:03.920738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:04.921476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:05.923430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:06.923502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:07.925318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:08.925748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:09.926462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:10.927355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:11.927619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:12.927961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:13.928620      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:14.928582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:15.928677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:16.928852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:17.929954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:18.930302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:19.931495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:20.931657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:21.629637 16 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/01/25 12:08:21.648
  STEP: Adding a custom resource @ 09/01/25 12:08:21.648
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/01/25 12:08:21.674
  I0901 12:08:21.715020 16 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/01/25 12:08:21.715
  E0901 12:08:21.932857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:22.934536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/01/25 12:08:23.774
  I0901 12:08:23.795638 16 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/01/25 12:08:23.795
  E0901 12:08:23.935466      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:24.935407      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/01/25 12:08:25.828
  I0901 12:08:25.836720 16 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0901 12:08:25.936549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:26.394746 16 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/01/25 12:08:26.452
  STEP: Removing a custom resource @ 09/01/25 12:08:26.487
  STEP: Removing a custom resource @ 09/01/25 12:08:26.517
  I0901 12:08:26.548640 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1499" for this suite. @ 09/01/25 12:08:26.563
• [65.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/01/25 12:08:26.585
  I0901 12:08:26.585622 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:08:26.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:26.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:26.629
  I0901 12:08:26.675664 16 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0901 12:08:26.937558      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:27.938389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:28.938394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:29.938981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:30.939597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:31.704051 16 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:08:31.704
  STEP: Scaling up "test-rs" replicaset @ 09/01/25 12:08:31.704
  I0901 12:08:31.724963 16 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/01/25 12:08:31.725
  I0901 12:08:31.745713 16 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9786 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:08:31.772898 16 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9786 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:08:31.832688 16 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9786 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:08:31.848563 16 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9786 with ReadyReplicas 1, AvailableReplicas 1
  E0901 12:08:31.940229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:32.940451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:33.428583 16 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9786 with ReadyReplicas 2, AvailableReplicas 2
  I0901 12:08:33.474057 16 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-9786 with ReadyReplicas 3 found true
  I0901 12:08:33.474641 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9786" for this suite. @ 09/01/25 12:08:33.486
• [6.916 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/01/25 12:08:33.502
  I0901 12:08:33.502431 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:08:33.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:33.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:33.542
  STEP: Creating configMap that has name configmap-test-emptyKey-deaaa22c-e3ea-45eb-9242-86d2fa4c1725 @ 09/01/25 12:08:33.549
  I0901 12:08:33.554878 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7407" for this suite. @ 09/01/25 12:08:33.586
• [0.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/01/25 12:08:33.609
  I0901 12:08:33.609604 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:08:33.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:33.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:33.642
  STEP: Setting up server cert @ 09/01/25 12:08:33.684
  E0901 12:08:33.941408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:08:34.551
  STEP: Deploying the webhook pod @ 09/01/25 12:08:34.582
  STEP: Wait for the deployment to be ready @ 09/01/25 12:08:34.62
  I0901 12:08:34.639271 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:08:34.941549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:35.941698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:08:36.671
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:08:36.721
  E0901 12:08:36.942368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:37.722078 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/01/25 12:08:37.772
  STEP: create a pod that should be updated by the webhook @ 09/01/25 12:08:37.834
  E0901 12:08:37.949697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:38.066358 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4551" for this suite. @ 09/01/25 12:08:38.096
  STEP: Destroying namespace "webhook-markers-6667" for this suite. @ 09/01/25 12:08:38.122
• [4.544 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:08:38.153
  I0901 12:08:38.153971 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:08:38.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:38.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:38.196
  STEP: Creating secret with name secret-test-0182c925-8d6b-462a-a1b2-da2162cdbd7e @ 09/01/25 12:08:38.201
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:08:38.212
  E0901 12:08:38.948218      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:39.947567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:40.948645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:41.949349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:08:42.27
  I0901 12:08:42.299314 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-102ae647-b047-4524-b40d-6211aa667a1f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:08:42.345
  I0901 12:08:42.377574 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1584" for this suite. @ 09/01/25 12:08:42.386
• [4.246 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 09/01/25 12:08:42.401
  I0901 12:08:42.401763 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:08:42.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:42.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:42.428
  STEP: Creating service test in namespace statefulset-6463 @ 09/01/25 12:08:42.436
  STEP: Creating stateful set ss in namespace statefulset-6463 @ 09/01/25 12:08:42.451
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6463 @ 09/01/25 12:08:42.47
  I0901 12:08:42.497180 16 wait.go:44] Found 0 stateful pods, waiting for 1
  E0901 12:08:42.949539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:43.950404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:44.950792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:45.951544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:46.951950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:47.952227      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:48.952598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:49.953420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:50.954010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:51.954864      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:08:52.483726 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/01/25 12:08:52.483
  I0901 12:08:52.496306 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:08:52.851096 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:08:52.851247 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:08:52.851275 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:08:52.866810 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0901 12:08:52.955034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:53.955455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:54.955625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:55.955927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:56.956658      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:57.957649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:58.958241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:08:59.958527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:00.958830      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:01.959610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:02.873542 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:02.873655 16 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:09:02.916485 16 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 12:09:02.916616 16 resource.go:175] ss-0  xoongeig7eeb-3  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:44 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC  }]
  I0901 12:09:02.916639 16 resource.go:178] 
  I0901 12:09:02.916656 16 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 1
  E0901 12:09:02.959417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:03.942437 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.992511582s
  E0901 12:09:03.960046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:04.958915 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.966637185s
  E0901 12:09:04.961035      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:05.961581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:05.968604 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.949631767s
  E0901 12:09:06.962577      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:06.979796 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.940672761s
  E0901 12:09:07.963713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:07.996451 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.928989852s
  E0901 12:09:08.964437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:09.017966 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.912217287s
  E0901 12:09:09.964615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:10.037477 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.890881796s
  E0901 12:09:10.964944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:11.063808 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.871803472s
  E0901 12:09:11.965698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:12.081641 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 845.073912ms
  E0901 12:09:12.966408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6463 @ 09/01/25 12:09:13.082
  I0901 12:09:13.099098 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:09:13.434553 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:09:13.434653 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:13.434688 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:13.435378 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:09:13.793297 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 12:09:13.793385 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:13.793408 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:13.794024 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:09:13.966390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:14.106834 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 12:09:14.107033 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:14.107812 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:14.121180 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:09:14.121783 16 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:09:14.121859 16 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/01/25 12:09:14.122
  I0901 12:09:14.134201 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:09:14.497560 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:14.497645 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:14.497687 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:14.498317 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:09:14.808926 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:14.809060 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:14.809101 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:14.810684 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-6463 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 12:09:14.966730      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:15.190905 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:15.190985 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:15.191010 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:15.191032 16 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:09:15.199699 16 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0901 12:09:15.968041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:16.969356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:17.969513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:18.970046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:19.970638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:20.971061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:21.971624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:22.972069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:23.973072      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:24.974333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:25.222663 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:25.222802 16 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:25.222842 16 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:25.300559 16 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 12:09:25.300739 16 resource.go:175] ss-0  xoongeig7eeb-3  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:44 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC  }]
  I0901 12:09:25.300807 16 resource.go:175] ss-1  xoongeig7eeb-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:06 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:02 +0000 UTC  }]
  I0901 12:09:25.300900 16 resource.go:175] ss-2  xoongeig7eeb-1  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:02 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:02 +0000 UTC  }]
  I0901 12:09:25.300931 16 resource.go:178] 
  I0901 12:09:25.300956 16 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0901 12:09:25.974983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:26.316955 16 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0901 12:09:26.317163 16 resource.go:175] ss-0  xoongeig7eeb-3  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:25 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:14 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:14 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:42 +0000 UTC  }]
  I0901 12:09:26.317353 16 resource.go:175] ss-1  xoongeig7eeb-2  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:25 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:02 +0000 UTC  }]
  I0901 12:09:26.317410 16 resource.go:178] 
  I0901 12:09:26.317443 16 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  E0901 12:09:26.975856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:27.330671 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.937190231s
  E0901 12:09:27.976036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:28.345812 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.924028095s
  E0901 12:09:28.975991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:29.360886 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.908497921s
  E0901 12:09:29.977036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:30.372569 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.893700147s
  E0901 12:09:30.977662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:31.388608 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.882274214s
  E0901 12:09:31.978280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:32.403408 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.866046006s
  E0901 12:09:32.977952      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:33.419073 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.850492766s
  E0901 12:09:33.979912      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:34.427762 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 835.67524ms
  E0901 12:09:34.978641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6463 @ 09/01/25 12:09:35.428
  I0901 12:09:35.451654 16 rest.go:153] Scaling statefulset ss to 0
  I0901 12:09:35.475343 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:09:35.483620 16 statefulset.go:138] Deleting all statefulset in ns statefulset-6463
  I0901 12:09:35.492656 16 rest.go:153] Scaling statefulset ss to 0
  I0901 12:09:35.554294 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:09:35.568860 16 rest.go:91] Deleting statefulset ss
  I0901 12:09:35.600701 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6463" for this suite. @ 09/01/25 12:09:35.62
• [53.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 09/01/25 12:09:35.64
  I0901 12:09:35.640212 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:09:35.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:35.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:35.689
  STEP: Creating a job @ 09/01/25 12:09:35.696
  STEP: Ensuring active pods == parallelism @ 09/01/25 12:09:35.712
  E0901 12:09:35.979414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:36.979559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:37.979861      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:38.980514      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/01/25 12:09:39.791
  STEP: deleting Job.batch foo in namespace job-3507, will wait for the garbage collector to delete the pods @ 09/01/25 12:09:39.792
  I0901 12:09:39.877339 16 resources.go:139] Deleting Job.batch foo took: 17.526414ms
  I0901 12:09:39.978200 16 resources.go:163] Terminating Job.batch foo pods took: 100.729356ms
  E0901 12:09:39.981715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:40.982802      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/01/25 12:09:41.079
  I0901 12:09:41.089176 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3507" for this suite. @ 09/01/25 12:09:41.11
• [5.497 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 09/01/25 12:09:41.138
  I0901 12:09:41.138838 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:09:41.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:41.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:41.185
  STEP: Starting the proxy @ 09/01/25 12:09:41.192
  I0901 12:09:41.194052 16 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4949 proxy --unix-socket=/tmp/kubectl-proxy-unix1608186037/test'
  STEP: retrieving proxy /api/ output @ 09/01/25 12:09:41.332
  I0901 12:09:41.337687 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4949" for this suite. @ 09/01/25 12:09:41.349
• [0.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/01/25 12:09:41.368
  I0901 12:09:41.368291 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename events @ 09/01/25 12:09:41.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:41.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:41.417
  STEP: creating a test event @ 09/01/25 12:09:41.428
  STEP: listing events in all namespaces @ 09/01/25 12:09:41.446
  STEP: listing events in test namespace @ 09/01/25 12:09:41.462
  STEP: listing events with field selection filtering on source @ 09/01/25 12:09:41.468
  STEP: listing events with field selection filtering on reportingController @ 09/01/25 12:09:41.474
  STEP: getting the test event @ 09/01/25 12:09:41.487
  STEP: patching the test event @ 09/01/25 12:09:41.491
  STEP: getting the test event @ 09/01/25 12:09:41.521
  STEP: updating the test event @ 09/01/25 12:09:41.53
  STEP: getting the test event @ 09/01/25 12:09:41.548
  STEP: deleting the test event @ 09/01/25 12:09:41.553
  STEP: listing events in all namespaces @ 09/01/25 12:09:41.568
  STEP: listing events in test namespace @ 09/01/25 12:09:41.577
  I0901 12:09:41.586580 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3725" for this suite. @ 09/01/25 12:09:41.596
• [0.246 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/01/25 12:09:41.616
  I0901 12:09:41.616417 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:09:41.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:41.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:41.663
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:09:41.7
  E0901 12:09:41.983312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:42.983567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 12:09:43.775
  E0901 12:09:43.984570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:44.986024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/01/25 12:09:45.83
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:09:45.859
  E0901 12:09:45.986743      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:46.987618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:09:47.911013 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-774" for this suite. @ 09/01/25 12:09:47.928
• [6.335 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 09/01/25 12:09:47.951
  I0901 12:09:47.952045 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:09:47.956
  E0901 12:09:47.991474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:48.01
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/01/25 12:09:48.02
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/01/25 12:09:48.038
  E0901 12:09:48.989911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:49.989776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:50.990615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:51.990936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:52.991260      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:53.992062      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/01/25 12:09:54.09
  I0901 12:09:54.097702 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9036" for this suite. @ 09/01/25 12:09:54.107
• [6.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:09:54.124
  I0901 12:09:54.124868 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 12:09:54.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:54.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:54.163
  STEP: Create a pod template @ 09/01/25 12:09:54.17
  STEP: Replace a pod template @ 09/01/25 12:09:54.181
  I0901 12:09:54.198270 16 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0901 12:09:54.198504 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-436" for this suite. @ 09/01/25 12:09:54.211
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/01/25 12:09:54.23
  I0901 12:09:54.230565 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:09:54.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:54.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:54.268
  STEP: create the rc @ 09/01/25 12:09:54.272
  I0901 12:09:54.286684      16 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0901 12:09:54.992691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:55.992865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:56.993396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:57.993447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:09:58.994471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 12:09:59.303
  STEP: wait for all pods to be garbage collected @ 09/01/25 12:09:59.325
  E0901 12:09:59.994766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:00.995067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:01.996039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:02.996971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:03.997808      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:10:04.355
  I0901 12:10:04.753172 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:10:04.753967 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-693" for this suite. @ 09/01/25 12:10:04.772
• [10.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/01/25 12:10:04.803
  I0901 12:10:04.803464 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:10:04.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:04.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:04.87
  I0901 12:10:04.883447 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:10:04.999520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:05.999449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:06.999346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:07.999294      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:08.298881 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6870" for this suite. @ 09/01/25 12:10:08.317
• [3.541 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/01/25 12:10:08.346
  I0901 12:10:08.346181 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:10:08.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:08.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:08.398
  STEP: Creating projection with secret that has name secret-emptykey-test-575d3d5e-bf82-49e8-a2c4-694d7b1d1bd5 @ 09/01/25 12:10:08.411
  I0901 12:10:08.417994 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1533" for this suite. @ 09/01/25 12:10:08.436
• [0.117 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/01/25 12:10:08.463
  I0901 12:10:08.463311 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:10:08.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:08.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:08.517
  STEP: Setting up server cert @ 09/01/25 12:10:08.575
  E0901 12:10:08.999568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:10:09.723
  STEP: Deploying the webhook pod @ 09/01/25 12:10:09.764
  STEP: Wait for the deployment to be ready @ 09/01/25 12:10:09.794
  I0901 12:10:09.815094 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 12:10:09.999931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:11.000326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:10:11.855
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:10:11.931
  E0901 12:10:12.000922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:12.933357 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:10:12.944711 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:10:13.002311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3462-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 12:10:13.467
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 12:10:13.512
  E0901 12:10:14.002636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:15.002513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:16.003749      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:16.487280 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2574" for this suite. @ 09/01/25 12:10:16.504
  STEP: Destroying namespace "webhook-markers-3000" for this suite. @ 09/01/25 12:10:16.526
• [8.084 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/01/25 12:10:16.547
  I0901 12:10:16.547750 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:10:16.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:16.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:16.618
  STEP: creating a policy with variables @ 09/01/25 12:10:16.645
  STEP: waiting until the marker is denied @ 09/01/25 12:10:16.701
  E0901 12:10:17.003248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 12:10:17.229
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 12:10:17.263
  I0901 12:10:17.331405 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9315" for this suite. @ 09/01/25 12:10:17.345
• [0.842 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:10:17.392
  I0901 12:10:17.395188 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:10:17.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:17.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:17.531
  E0901 12:10:18.004479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:19.005032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:19.654392 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7800" for this suite. @ 09/01/25 12:10:19.668
• [2.295 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/01/25 12:10:19.687
  I0901 12:10:19.687674 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:10:19.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:19.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:19.733
  STEP: Creating configMap with name configmap-test-volume-map-f95a2cc0-ba4a-444e-a9b4-85c25634b289 @ 09/01/25 12:10:19.74
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:10:19.753
  E0901 12:10:20.005901      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:21.006675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:22.007223      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:23.007811      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:10:23.809
  I0901 12:10:23.822699 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-f909392a-cf6c-4fbd-86b6-d1be84e01839 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:10:23.849
  I0901 12:10:23.895310 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6140" for this suite. @ 09/01/25 12:10:23.913
• [4.245 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/01/25 12:10:23.933
  I0901 12:10:23.933182 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:10:23.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:23.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:23.974
  STEP: fetching the /apis discovery document @ 09/01/25 12:10:23.982
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/01/25 12:10:23.987
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 12:10:23.987
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/01/25 12:10:23.987
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/01/25 12:10:23.991
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 12:10:23.992
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 12:10:23.995
  I0901 12:10:23.995711 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:10:24.008597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-3625" for this suite. @ 09/01/25 12:10:24.012
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/01/25 12:10:24.033
  I0901 12:10:24.034531 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:10:24.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:24.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:24.079
  STEP: Creating ServiceAccount "e2e-sa-wmz8v"  @ 09/01/25 12:10:24.088
  I0901 12:10:24.101615 16 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-wmz8v"  @ 09/01/25 12:10:24.102
  I0901 12:10:24.126781 16 service_accounts.go:867] AutomountServiceAccountToken: true
  I0901 12:10:24.127016 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8915" for this suite. @ 09/01/25 12:10:24.141
• [0.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/01/25 12:10:24.158
  I0901 12:10:24.158662 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename discovery @ 09/01/25 12:10:24.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:24.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:24.2
  STEP: Setting up server cert @ 09/01/25 12:10:24.211
  E0901 12:10:25.009417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:25.166474 16 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0901 12:10:25.169414 16 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0901 12:10:25.169478 16 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0901 12:10:25.169498 16 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0901 12:10:25.169514 16 discovery.go:139] Checking APIGroup: apps
  I0901 12:10:25.171873 16 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0901 12:10:25.171987 16 discovery.go:148] Versions found [{apps/v1 v1}]
  I0901 12:10:25.172010 16 discovery.go:154] apps/v1 matches apps/v1
  I0901 12:10:25.172186 16 discovery.go:139] Checking APIGroup: events.k8s.io
  I0901 12:10:25.174846 16 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0901 12:10:25.174901 16 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0901 12:10:25.174920 16 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0901 12:10:25.174961 16 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0901 12:10:25.177441 16 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0901 12:10:25.177519 16 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0901 12:10:25.177539 16 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0901 12:10:25.177557 16 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0901 12:10:25.181796 16 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0901 12:10:25.181848 16 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0901 12:10:25.181868 16 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0901 12:10:25.181906 16 discovery.go:139] Checking APIGroup: autoscaling
  I0901 12:10:25.185894 16 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0901 12:10:25.186581 16 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0901 12:10:25.186677 16 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0901 12:10:25.186702 16 discovery.go:139] Checking APIGroup: batch
  I0901 12:10:25.189394 16 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0901 12:10:25.189451 16 discovery.go:148] Versions found [{batch/v1 v1}]
  I0901 12:10:25.189474 16 discovery.go:154] batch/v1 matches batch/v1
  I0901 12:10:25.189491 16 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0901 12:10:25.194268 16 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0901 12:10:25.194328 16 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0901 12:10:25.194349 16 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0901 12:10:25.194367 16 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0901 12:10:25.198495 16 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0901 12:10:25.198576 16 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0901 12:10:25.198599 16 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0901 12:10:25.198617 16 discovery.go:139] Checking APIGroup: policy
  I0901 12:10:25.201926 16 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0901 12:10:25.202172 16 discovery.go:148] Versions found [{policy/v1 v1}]
  I0901 12:10:25.202201 16 discovery.go:154] policy/v1 matches policy/v1
  I0901 12:10:25.202219 16 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0901 12:10:25.206909 16 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0901 12:10:25.206997 16 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0901 12:10:25.207024 16 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0901 12:10:25.207045 16 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0901 12:10:25.209866 16 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0901 12:10:25.209967 16 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0901 12:10:25.210036 16 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0901 12:10:25.210069 16 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0901 12:10:25.213186 16 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0901 12:10:25.213676 16 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0901 12:10:25.213715 16 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0901 12:10:25.213740 16 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0901 12:10:25.216640 16 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0901 12:10:25.216778 16 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0901 12:10:25.216842 16 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0901 12:10:25.216890 16 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0901 12:10:25.219875 16 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0901 12:10:25.219959 16 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0901 12:10:25.219989 16 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0901 12:10:25.220009 16 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0901 12:10:25.224865 16 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0901 12:10:25.224996 16 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0901 12:10:25.225052 16 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0901 12:10:25.225100 16 discovery.go:139] Checking APIGroup: node.k8s.io
  I0901 12:10:25.227634 16 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0901 12:10:25.227714 16 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0901 12:10:25.227742 16 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0901 12:10:25.227770 16 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0901 12:10:25.230403 16 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0901 12:10:25.230507 16 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0901 12:10:25.230559 16 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0901 12:10:25.230607 16 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0901 12:10:25.233100 16 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0901 12:10:25.233342 16 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0901 12:10:25.233377 16 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0901 12:10:25.233403 16 discovery.go:139] Checking APIGroup: cilium.io
  I0901 12:10:25.237869 16 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0901 12:10:25.238642 16 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0901 12:10:25.239502 16 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0901 12:10:25.240736 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9131" for this suite. @ 09/01/25 12:10:25.257
• [1.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/01/25 12:10:25.281
  I0901 12:10:25.281762 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename hostport @ 09/01/25 12:10:25.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:25.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:25.35
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/01/25 12:10:25.374
  E0901 12:10:26.010487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:27.011601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.88 on the node which pod1 resides and expect scheduled @ 09/01/25 12:10:27.417
  E0901 12:10:28.011824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:29.013002      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.88 but use UDP protocol on the node which pod2 resides @ 09/01/25 12:10:29.455
  E0901 12:10:30.012470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:31.013052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:32.013999      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:33.014342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:34.014827      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:35.015415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:36.015630      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:37.016221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:38.017417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:39.018077      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:40.018650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:41.018818      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:42.019011      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:43.019790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/01/25 12:10:43.628
  I0901 12:10:43.629103 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.88 http://127.0.0.1:54323/hostname] Namespace:hostport-2934 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:43.629215 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:43.629861 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2934/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.88+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  E0901 12:10:43.665402      16 websocket.go:297] Unknown stream id 1, discarding message
  I0901 12:10:43.795845 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.88, port: 54323 @ 09/01/25 12:10:43.795
  I0901 12:10:43.796036 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.88:54323/hostname] Namespace:hostport-2934 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:43.796062 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:43.796281 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2934/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.88%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0901 12:10:43.919856 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.88, port: 54323 UDP @ 09/01/25 12:10:43.919
  I0901 12:10:43.920023 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.88 54323] Namespace:hostport-2934 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:43.920044 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:43.920190 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2934/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.88+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0901 12:10:44.020342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:45.021305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:46.021520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:47.021902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:48.022305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:49.013645 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:10:49.013991 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:10:49.022747      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "hostport-2934" for this suite. @ 09/01/25 12:10:49.038
• [23.776 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 09/01/25 12:10:49.074
  I0901 12:10:49.074961 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:10:49.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:49.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:49.119
  STEP: Creating service test in namespace statefulset-7193 @ 09/01/25 12:10:49.126
  I0901 12:10:49.169534 16 wait.go:44] Found 0 stateful pods, waiting for 1
  E0901 12:10:50.023400      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:51.023742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:52.023870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:53.024593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:54.025669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:55.026467      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:56.027414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:57.027449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:58.027626      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:10:59.028173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:10:59.167695 16 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/01/25 12:10:59.183
  I0901 12:10:59.219236 16 wait.go:44] Found 1 stateful pods, waiting for 2
  E0901 12:11:00.028344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:01.028597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:02.028876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:03.030274      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:04.031389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:05.032398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:06.031514      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:07.031900      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:08.032352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:09.033022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:09.225974 16 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:11:09.226482 16 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/01/25 12:11:09.249
  STEP: Delete all of the StatefulSets @ 09/01/25 12:11:09.263
  STEP: Verify that StatefulSets have been deleted @ 09/01/25 12:11:09.293
  I0901 12:11:09.303464 16 statefulset.go:138] Deleting all statefulset in ns statefulset-7193
  I0901 12:11:09.352623 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7193" for this suite. @ 09/01/25 12:11:09.388
• [20.333 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 09/01/25 12:11:09.408
  I0901 12:11:09.408823 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:11:09.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:09.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:09.441
  STEP: Setting up server cert @ 09/01/25 12:11:09.482
  E0901 12:11:10.033358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:11:10.925
  STEP: Deploying the webhook pod @ 09/01/25 12:11:10.941
  STEP: Wait for the deployment to be ready @ 09/01/25 12:11:10.97
  I0901 12:11:10.997402 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 12:11:11.034156      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:12.034644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:11:13.032
  E0901 12:11:13.034890      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:11:13.076
  E0901 12:11:14.035510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:14.077209 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/01/25 12:11:14.088
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/01/25 12:11:14.132
  STEP: Creating a configMap that should not be mutated @ 09/01/25 12:11:14.148
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/01/25 12:11:14.174
  STEP: Creating a configMap that should be mutated @ 09/01/25 12:11:14.192
  I0901 12:11:14.358292 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2002" for this suite. @ 09/01/25 12:11:14.371
  STEP: Destroying namespace "webhook-markers-6841" for this suite. @ 09/01/25 12:11:14.382
• [4.985 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 09/01/25 12:11:14.396
  I0901 12:11:14.396337 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:11:14.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:14.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:14.441
  STEP: Creating a job @ 09/01/25 12:11:14.447
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/01/25 12:11:14.464
  E0901 12:11:15.037041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:16.037604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:17.038685      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:18.039652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/01/25 12:11:18.507
  STEP: updating /status @ 09/01/25 12:11:18.528
  STEP: get /status @ 09/01/25 12:11:18.555
  I0901 12:11:18.570419 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4876" for this suite. @ 09/01/25 12:11:18.585
• [4.211 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 09/01/25 12:11:18.607
  I0901 12:11:18.607627 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:11:18.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:18.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:18.68
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2027.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-2027.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:11:18.688
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2027.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2027.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:11:18.688
  STEP: creating a pod to probe /etc/hosts @ 09/01/25 12:11:18.688
  STEP: submitting the pod to kubernetes @ 09/01/25 12:11:18.688
  E0901 12:11:19.039891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:20.040296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:21.040724      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:22.041568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:11:22.756
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:11:22.77
  I0901 12:11:22.827815 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-2027/dns-test-c041d37e-1837-47ff-85ee-5b200a9663a0: the server could not find the requested resource (get pods dns-test-c041d37e-1837-47ff-85ee-5b200a9663a0)
  I0901 12:11:22.827931 16 dns_common.go:506] Lookups using dns-2027/dns-test-c041d37e-1837-47ff-85ee-5b200a9663a0 failed for: [jessie_hosts@dns-querier-1]

  I0901 12:11:22.848209 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:11:22.879566 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:11:22.894845 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:11:23.043204      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:24.044406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:25.044721      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:26.044813      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:27.045203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:27.804951 16 dns_common.go:546] DNS probes using dns-2027/dns-test-c041d37e-1837-47ff-85ee-5b200a9663a0 succeeded

  STEP: deleting the pod @ 09/01/25 12:11:27.805
  I0901 12:11:27.845003 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2027" for this suite. @ 09/01/25 12:11:27.862
• [9.281 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/01/25 12:11:27.889
  I0901 12:11:27.889389 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:11:27.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:27.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:27.934
  STEP: Read namespace status @ 09/01/25 12:11:27.944
  I0901 12:11:27.956524 16 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/01/25 12:11:27.956
  I0901 12:11:27.978294 16 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/01/25 12:11:27.978
  I0901 12:11:28.017314 16 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0901 12:11:28.017710 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5766" for this suite. @ 09/01/25 12:11:28.03
  E0901 12:11:28.045871      16 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.170 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/01/25 12:11:28.06
  I0901 12:11:28.060148 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:11:28.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:28.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:28.095
  STEP: creating a Deployment @ 09/01/25 12:11:28.114
  STEP: waiting for Deployment to be created @ 09/01/25 12:11:28.128
  STEP: waiting for all Replicas to be Ready @ 09/01/25 12:11:28.131
  I0901 12:11:28.134944 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.135641 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.173222 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.173308 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.210170 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.210232 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.258594 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:11:28.259511 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0901 12:11:29.058196      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:29.620303 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:11:29.620372 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:11:29.896773 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/01/25 12:11:29.896
  I0901 12:11:29.916816 16 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/01/25 12:11:29.916
  I0901 12:11:29.921762 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.921815 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.921837 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.921854 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.922381 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.922423 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.922523 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.922727 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 0
  I0901 12:11:29.923659 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:29.923784 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:29.923899 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:29.924192 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:29.924433 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:29.924464 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:29.946870 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:29.946930 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:30.000318 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:30.000387 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:30.021208 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:30.022230 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:30.044841 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:30.044909 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  E0901 12:11:30.054431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:31.054484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:32.005402 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:32.005506 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:32.039535 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  STEP: listing Deployments @ 09/01/25 12:11:32.039
  I0901 12:11:32.048927 16 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/01/25 12:11:32.049
  E0901 12:11:32.055452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:32.083485 16 deployment.go:360] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/01/25 12:11:32.083
  I0901 12:11:32.117347 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:32.117447 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:32.184196 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:32.206342 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:32.228633 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:32.242770 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:11:33.055418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:34.027528 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:11:34.056526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:34.059408 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:34.160159 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:11:34.174325 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:11:35.057508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:35.737356 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/01/25 12:11:35.811
  STEP: fetching the DeploymentStatus @ 09/01/25 12:11:35.843
  I0901 12:11:35.858421 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.858850 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.859615 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.859701 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.860181 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.860577 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 1
  I0901 12:11:35.861456 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:35.861827 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3
  I0901 12:11:35.862224 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3
  I0901 12:11:35.863249 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 2
  I0901 12:11:35.864063 16 deployment.go:448] observed Deployment test-deployment in namespace deployment-2136 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/01/25 12:11:35.864
  I0901 12:11:35.892206 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.895006 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.895221 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.895755 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.896412 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.897187 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.897333 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.897818 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.897886 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.898196 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.898245 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.898656 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.898716 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.898932 16 deployment.go:474] observed event type MODIFIED
  I0901 12:11:35.907733 16 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0901 12:11:35.922986 16 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4348dc6-10fa-4ea5-8821-1ac868ee32d3",
      ResourceVersion: (string) (len=5) "26627",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325488,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2dcd5c03-911d-4cc6-a030-a078b437f9f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 63 64  35 63 30 33 2d 39 31 31  |":\"2dcd5c03-911|
              00000130  64 2d 34 63 63 36 2d 61  30 33 30 2d 61 30 37 38  |d-4cc6-a030-a078|
              00000140  62 34 33 37 66 39 66 32  5c 22 7d 22 3a 7b 7d 7d  |b437f9f2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0901 12:11:35.943690 16 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b6bbf6f-7b47-4c46-b9f8-c17fb2d45923",
      ResourceVersion: (string) (len=5) "26730",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2dcd5c03-911d-4cc6-a030-a078b437f9f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 63 64  35 63 30 33 2d 39 31 31  |":\"2dcd5c03-911|
              00000130  64 2d 34 63 63 36 2d 61  30 33 30 2d 61 30 37 38  |d-4cc6-a030-a078|
              00000140  62 34 33 37 66 39 66 32  5c 22 7d 22 3a 7b 7d 7d  |b437f9f2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0901 12:11:35.959891 16 deployment.go:668] pod: "test-deployment-79899bcfcc-29vj6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-29vj6",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1046f536-312b-463c-a211-76af11609a86",
      ResourceVersion: (string) (len=5) "26729",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325494,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "9b6bbf6f-7b47-4c46-b9f8-c17fb2d45923",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 62 36 62 62 66 36 66  |uid\":\"9b6bbf6f|
              000000a0  2d 37 62 34 37 2d 34 63  34 36 2d 62 39 66 38 2d  |-7b47-4c46-b9f8-|
              000000b0  63 31 37 66 62 32 64 34  35 39 32 33 5c 22 7d 22  |c17fb2d45923\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  39 5c 22 7d 22 3a 7b 22  |.233.65.9\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d77zq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d77zq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=11) "10.233.65.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.65.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325494,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325495,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a841a95783ecb6a43e84b9013dbafd9f05a06887a84a9067a1fe2e27434595f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d77zq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 12:11:35.969340 16 deployment.go:668] pod: "test-deployment-79899bcfcc-s2xd6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-s2xd6",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a762b7d0-8d35-4ca6-ad33-99cb5024261c",
      ResourceVersion: (string) (len=5) "26688",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "9b6bbf6f-7b47-4c46-b9f8-c17fb2d45923",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 62 36 62 62 66 36 66  |uid\":\"9b6bbf6f|
              000000a0  2d 37 62 34 37 2d 34 63  34 36 2d 62 39 66 38 2d  |-7b47-4c46-b9f8-|
              000000b0  63 31 37 66 62 32 64 34  35 39 32 33 5c 22 7d 22  |c17fb2d45923\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 31 35 5c 22 7d 22 3a  |.233.66.215\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7q5k4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7q5k4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.215",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.215"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325493,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d091ced489349be0ce06da26852b496729514b72fbcac3c1409a1f2d97b4ef7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7q5k4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 12:11:35.975282 16 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62054b16-4b8b-4791-ba4d-4e8798f0834b",
      ResourceVersion: (string) (len=5) "26738",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2dcd5c03-911d-4cc6-a030-a078b437f9f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 63 64  35 63 30 33 2d 39 31 31  |":\"2dcd5c03-911|
              00000130  64 2d 34 63 63 36 2d 61  30 33 30 2d 61 30 37 38  |d-4cc6-a030-a078|
              00000140  62 34 33 37 66 39 66 32  5c 22 7d 22 3a 7b 7d 7d  |b437f9f2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0901 12:11:36.037240 16 deployment.go:668] pod: "test-deployment-f78d658f9-9vpv7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-9vpv7",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf88912-99c1-42ce-92ee-9b18db18e567",
      ResourceVersion: (string) (len=5) "26734",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "62054b16-4b8b-4791-ba4d-4e8798f0834b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 32 30 35 34 62 31 36  |uid\":\"62054b16|
              000000a0  2d 34 62 38 62 2d 34 37  39 31 2d 62 61 34 64 2d  |-4b8b-4791-ba4d-|
              000000b0  34 65 38 37 39 38 66 30  38 33 34 62 5c 22 7d 22  |4e8798f0834b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 37 36 5c 22 7d 22 3a  |.233.64.176\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czhtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czhtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) (len=13) "10.233.64.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325493,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7c38f24774e3cbd906d2d33c38354ccf787635581c122965132c9bd309754d4a",
          ContainerID: (string) (len=72) "cri-o://e57690063e62f60bef4d71649d87422097d08d06eafe4b1258da7983beb12618",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-czhtg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 12:11:36.047836 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:11:36.059576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-2136" for this suite. @ 09/01/25 12:11:36.064
• [8.028 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/01/25 12:11:36.088
  I0901 12:11:36.088973 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:11:36.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:36.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:36.141
  STEP: getting a starting resourceVersion @ 09/01/25 12:11:36.148
  STEP: starting a background goroutine to produce watch events @ 09/01/25 12:11:36.158
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/01/25 12:11:36.159
  E0901 12:11:37.059209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:38.059290      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:11:38.956445 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2285" for this suite. @ 09/01/25 12:11:38.968
• [2.925 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/01/25 12:11:39.014
  I0901 12:11:39.014880 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename discovery @ 09/01/25 12:11:39.018
  E0901 12:11:39.059699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:39.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:39.075
  STEP: Setting up server cert @ 09/01/25 12:11:39.086
  E0901 12:11:40.059866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 09/01/25 12:11:40.375
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/01/25 12:11:40.38
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/01/25 12:11:40.383
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/01/25 12:11:40.387
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/01/25 12:11:40.389
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/01/25 12:11:40.392
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/01/25 12:11:40.397
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/01/25 12:11:40.4
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/01/25 12:11:40.403
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/01/25 12:11:40.407
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/01/25 12:11:40.41
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/01/25 12:11:40.414
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/01/25 12:11:40.418
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/01/25 12:11:40.421
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/01/25 12:11:40.427
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/01/25 12:11:40.43
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/01/25 12:11:40.433
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/01/25 12:11:40.437
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/01/25 12:11:40.441
  I0901 12:11:40.446304 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3716" for this suite. @ 09/01/25 12:11:40.468
• [1.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:11:40.493
  I0901 12:11:40.493207 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:11:40.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:40.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:40.534
  STEP: Creating secret with name s-test-opt-del-e6ac7671-2097-4dc1-affd-9954eb4239d3 @ 09/01/25 12:11:40.561
  STEP: Creating secret with name s-test-opt-upd-e43ba0dd-d028-4dd6-abad-559133d9a690 @ 09/01/25 12:11:40.577
  STEP: Creating the pod @ 09/01/25 12:11:40.587
  E0901 12:11:41.060632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:42.060787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e6ac7671-2097-4dc1-affd-9954eb4239d3 @ 09/01/25 12:11:42.723
  STEP: Updating secret s-test-opt-upd-e43ba0dd-d028-4dd6-abad-559133d9a690 @ 09/01/25 12:11:42.742
  STEP: Creating secret with name s-test-opt-create-9a2dd67b-7b7d-4487-8e7c-18717c2f9676 @ 09/01/25 12:11:42.752
  STEP: waiting to observe update in volume @ 09/01/25 12:11:42.762
  E0901 12:11:43.062817      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:44.063061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:45.064025      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:46.064367      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:47.064943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:48.065673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:49.065734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:50.066450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:51.067039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:52.067488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:53.068516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:54.070648      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:55.070675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:56.073045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:57.072215      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:58.073092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:11:59.073464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:00.073922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:01.074318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:02.075054      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:03.075901      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:04.077053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:05.077221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:06.077943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:07.078238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:08.078569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:09.079452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:10.079974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:11.080420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:12.080445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:13.080711      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:14.081227      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:15.082067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:16.082094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:17.082636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:18.083336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:19.083453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:20.083755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:21.084437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:22.084515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:23.084717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:24.086235      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:25.085752      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:26.085931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:27.086192      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:28.086716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:29.087763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:30.088692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:31.089233      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:32.090591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:33.090513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:34.091000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:35.091624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:36.091699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:37.092058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:38.092287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:39.094218      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:40.092865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:41.093554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:42.094509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:43.094691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:44.094926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:45.095924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:46.095763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:47.096526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:48.096895      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:49.096988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:50.097959      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:51.099008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:52.100328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:53.099955      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:54.100876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:55.103515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:56.102669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:57.102877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:58.103600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:12:59.104211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:00.105055      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:01.105848      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:13:02.055951 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3974" for this suite. @ 09/01/25 12:13:02.071
• [81.600 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:13:02.093
  I0901 12:13:02.094178 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:13:02.103
  E0901 12:13:02.106711      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:02.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:02.146
  STEP: Creating configMap with name projected-configmap-test-volume-e166dcbf-7b3c-4257-af54-f5ccc7079c97 @ 09/01/25 12:13:02.154
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:13:02.167
  E0901 12:13:03.107175      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:04.107938      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:05.108498      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:06.109424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:06.227
  I0901 12:13:06.238545 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod pod-projected-configmaps-0890833c-0755-4cf7-b061-e718a366ee32 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:13:06.278
  I0901 12:13:06.315067 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9345" for this suite. @ 09/01/25 12:13:06.327
• [4.249 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 09/01/25 12:13:06.343
  I0901 12:13:06.343306 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:13:06.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:06.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:06.382
  STEP: Setting up server cert @ 09/01/25 12:13:06.427
  E0901 12:13:07.109704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:13:07.949
  STEP: Deploying the webhook pod @ 09/01/25 12:13:07.963
  STEP: Wait for the deployment to be ready @ 09/01/25 12:13:07.99
  I0901 12:13:08.019358 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:13:08.110545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:09.111568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:13:10.054
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:13:10.111
  E0901 12:13:10.113009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:11.111641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:13:11.112499 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 12:13:11.255
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:13:11.331
  STEP: Deleting the collection of validation webhooks @ 09/01/25 12:13:11.402
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:13:11.517
  I0901 12:13:11.647390 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7473" for this suite. @ 09/01/25 12:13:11.66
  STEP: Destroying namespace "webhook-markers-2471" for this suite. @ 09/01/25 12:13:11.676
• [5.350 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/01/25 12:13:11.694
  I0901 12:13:11.694680 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:13:11.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:11.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:11.727
  E0901 12:13:12.112502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:13.112979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:13:13.795539 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8088" for this suite. @ 09/01/25 12:13:13.809
• [2.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/01/25 12:13:13.828
  I0901 12:13:13.828052 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:13:13.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:13.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:13.864
  STEP: Creating a pod to test service account token:  @ 09/01/25 12:13:13.869
  E0901 12:13:14.114991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:15.115363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:16.116547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:17.116722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:17.927
  I0901 12:13:17.935745 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod test-pod-b847d46e-974f-49ee-a1b6-e84bc8541133 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:13:17.951
  I0901 12:13:17.997766 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9753" for this suite. @ 09/01/25 12:13:18.006
• [4.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:13:18.033
  I0901 12:13:18.033097 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:13:18.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:18.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:18.071
  STEP: Creating secret with name secret-test-map-72cad5ee-653c-4eae-932c-45977f102e46 @ 09/01/25 12:13:18.076
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:13:18.087
  E0901 12:13:18.117045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:19.118061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:20.118169      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:21.119000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:22.119700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:22.138
  I0901 12:13:22.147648 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-fbcf64c2-d229-4f65-8ff9-5540dcb69568 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:13:22.165
  I0901 12:13:22.200334 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9458" for this suite. @ 09/01/25 12:13:22.213
• [4.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 09/01/25 12:13:22.23
  I0901 12:13:22.230848 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:13:22.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:22.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:22.273
  STEP: Setting up server cert @ 09/01/25 12:13:22.327
  E0901 12:13:23.119346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:24.119804      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:13:24.156
  STEP: Deploying the webhook pod @ 09/01/25 12:13:24.173
  STEP: Wait for the deployment to be ready @ 09/01/25 12:13:24.202
  I0901 12:13:24.223842 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:13:25.121942      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:26.121577      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:13:26.255
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:13:26.296
  E0901 12:13:27.122718      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:13:27.297183 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 12:13:27.453
  STEP: Creating a configMap that should be mutated @ 09/01/25 12:13:27.494
  STEP: Deleting the collection of validation webhooks @ 09/01/25 12:13:27.582
  STEP: Creating a configMap that should not be mutated @ 09/01/25 12:13:27.688
  I0901 12:13:27.793050 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5113" for this suite. @ 09/01/25 12:13:27.802
  STEP: Destroying namespace "webhook-markers-7685" for this suite. @ 09/01/25 12:13:27.813
• [5.599 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/01/25 12:13:27.83
  I0901 12:13:27.830248 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:13:27.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:27.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:27.876
  STEP: Creating configMap with name cm-test-opt-del-23e5da99-db38-4578-8362-bdbbadca4cd1 @ 09/01/25 12:13:27.904
  STEP: Creating configMap with name cm-test-opt-upd-6ab74ddb-7d86-4828-beba-5d9bafa48aab @ 09/01/25 12:13:27.915
  STEP: Creating the pod @ 09/01/25 12:13:27.924
  E0901 12:13:28.122404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:29.124180      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-23e5da99-db38-4578-8362-bdbbadca4cd1 @ 09/01/25 12:13:30.046
  STEP: Updating configmap cm-test-opt-upd-6ab74ddb-7d86-4828-beba-5d9bafa48aab @ 09/01/25 12:13:30.063
  STEP: Creating configMap with name cm-test-opt-create-33ca4d78-ba98-4b5b-917a-54b88b4b70d6 @ 09/01/25 12:13:30.082
  STEP: waiting to observe update in volume @ 09/01/25 12:13:30.096
  E0901 12:13:30.123943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:31.124856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:32.124951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:33.125226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:34.126332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:35.126823      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:36.127793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:37.128225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:38.128070      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:39.129454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:40.129580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:41.129842      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:42.130431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:43.131432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:44.132546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:45.133321      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:46.133473      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:47.134352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:48.134268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:49.134775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:50.135268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:51.135882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:52.136625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:53.136974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:54.137785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:55.138718      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:56.138372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:57.139393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:58.140344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:13:59.141497      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:00.141750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:01.142447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:02.142598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:03.143398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:04.144511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:05.145173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:06.145561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:07.146702      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:08.147074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:09.147684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:10.148615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:11.149570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:12.150300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:13.150258      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:14.150437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:15.151304      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:16.151495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:17.152640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:18.152692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:19.153049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:20.153399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:21.153557      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:22.154790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:23.155549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:24.155848      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:25.156478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:26.157409      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:27.158100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:28.159253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:29.159455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:30.160537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:31.161613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:32.161812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:33.162916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:34.162996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:35.163044      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:36.164036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:37.165014      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:38.165643      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:39.166522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:14:39.257709 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7822" for this suite. @ 09/01/25 12:14:39.275
• [71.470 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/01/25 12:14:39.301
  I0901 12:14:39.301383 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 12:14:39.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:39.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:39.352
  STEP: Creating a LimitRange @ 09/01/25 12:14:39.361
  STEP: Setting up watch @ 09/01/25 12:14:39.362
  STEP: Submitting a LimitRange @ 09/01/25 12:14:39.475
  STEP: Verifying LimitRange creation was observed @ 09/01/25 12:14:39.497
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/01/25 12:14:39.498
  I0901 12:14:39.509523 16 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 12:14:39.509681 16 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/01/25 12:14:39.509
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/01/25 12:14:39.526
  I0901 12:14:39.538991 16 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 12:14:39.539401 16 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/01/25 12:14:39.539
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/01/25 12:14:39.559
  I0901 12:14:39.568579 16 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0901 12:14:39.568693 16 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/01/25 12:14:39.568
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 12:14:39.573
  STEP: Updating a LimitRange @ 09/01/25 12:14:39.577
  STEP: Verifying LimitRange updating is effective @ 09/01/25 12:14:39.595
  E0901 12:14:40.166719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:41.167064      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/01/25 12:14:41.606
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 12:14:41.625
  STEP: Deleting a LimitRange @ 09/01/25 12:14:41.628
  STEP: Verifying the LimitRange was deleted @ 09/01/25 12:14:41.643
  E0901 12:14:42.170096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:43.169336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:44.170401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:45.171020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:46.172042      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:14:46.659315 16 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/01/25 12:14:46.659
  I0901 12:14:46.684522 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7469" for this suite. @ 09/01/25 12:14:46.705
• [7.424 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/01/25 12:14:46.725
  I0901 12:14:46.725547 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:14:46.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:46.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:46.761
  STEP: Creating a pod to test substitution in container's command @ 09/01/25 12:14:46.768
  E0901 12:14:47.174225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:48.172758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:49.173870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:50.173638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:50.825
  I0901 12:14:50.834772 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod var-expansion-48cb984e-2f70-49d3-a4b0-82ebf6a40ee6 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:50.855
  I0901 12:14:50.918929 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9842" for this suite. @ 09/01/25 12:14:50.962
• [4.256 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/01/25 12:14:50.982
  I0901 12:14:50.983043 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:14:50.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:51.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:51.021
  STEP: Creating a cronjob @ 09/01/25 12:14:51.026
  STEP: creating @ 09/01/25 12:14:51.027
  STEP: getting @ 09/01/25 12:14:51.042
  STEP: listing @ 09/01/25 12:14:51.049
  STEP: watching @ 09/01/25 12:14:51.058
  I0901 12:14:51.058606 16 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:14:51.061
  STEP: cluster-wide watching @ 09/01/25 12:14:51.068
  I0901 12:14:51.068686 16 cronjob.go:407] starting watch
  STEP: patching @ 09/01/25 12:14:51.071
  STEP: updating @ 09/01/25 12:14:51.104
  I0901 12:14:51.128164 16 cronjob.go:431] waiting for watch events with expected annotations
  I0901 12:14:51.128300 16 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 12:14:51.128
  STEP: updating /status @ 09/01/25 12:14:51.143
  STEP: get /status @ 09/01/25 12:14:51.167
  E0901 12:14:51.173883      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting @ 09/01/25 12:14:51.174
  STEP: deleting a collection @ 09/01/25 12:14:51.214
  I0901 12:14:51.240576 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-369" for this suite. @ 09/01/25 12:14:51.256
• [0.293 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:14:51.274
  I0901 12:14:51.274973 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:14:51.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:51.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:51.311
  STEP: Creating configMap with name configmap-test-volume-0b1df90a-da41-437f-96a6-e2067fc9541c @ 09/01/25 12:14:51.319
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:14:51.333
  E0901 12:14:52.178812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:53.175261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:54.176243      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:55.176353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:55.391
  I0901 12:14:55.399569 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-f3d7bcbb-776e-476a-b8c1-0db4a18c86e2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:55.413
  I0901 12:14:55.457569 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3994" for this suite. @ 09/01/25 12:14:55.468
• [4.213 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:14:55.487
  I0901 12:14:55.487765 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subjectreview @ 09/01/25 12:14:55.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:55.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:55.521
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8244" @ 09/01/25 12:14:55.527
  I0901 12:14:55.537096 16 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8244:e2e"
  I0901 12:14:55.537330 16 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8244"}
  I0901 12:14:55.537370 16 subjectreviews.go:71] saUID: "14817b8d-c517-40c5-a066-41aee3d20e3e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8244:e2e" @ 09/01/25 12:14:55.537
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8244:e2e" @ 09/01/25 12:14:55.539
  I0901 12:14:55.543092 16 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8244:e2e" api 'list' configmaps in "subjectreview-8244" namespace @ 09/01/25 12:14:55.543
  I0901 12:14:55.546700 16 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8244:e2e" @ 09/01/25 12:14:55.546
  I0901 12:14:55.551459 16 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0901 12:14:55.551507 16 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0901 12:14:55.551860 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8244" for this suite. @ 09/01/25 12:14:55.569
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:14:55.587
  I0901 12:14:55.587456 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:14:55.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:55.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:55.62
  STEP: Creating configMap with name projected-configmap-test-volume-ae8a66fd-033d-48fa-a56a-687a274cff3e @ 09/01/25 12:14:55.626
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:14:55.635
  E0901 12:14:56.176852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:57.177567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:58.178599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:14:59.179218      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:59.693
  I0901 12:14:59.700778 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-configmaps-15278eaa-6d8d-453f-9e80-276466b508e7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:59.717
  I0901 12:14:59.748501 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7109" for this suite. @ 09/01/25 12:14:59.761
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 09/01/25 12:14:59.779
  I0901 12:14:59.780015 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:14:59.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:59.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:59.876
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/01/25 12:14:59.885
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/01/25 12:14:59.904
  E0901 12:15:00.180013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:01.179780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:02.180321      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:03.180640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/01/25 12:15:03.949
  STEP: Verifying that the only appropriately index succeeded @ 09/01/25 12:15:03.97
  I0901 12:15:03.982058 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-677" for this suite. @ 09/01/25 12:15:03.995
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/01/25 12:15:04.018
  I0901 12:15:04.018451 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:15:04.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:04.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:04.071
  STEP: creating a Namespace @ 09/01/25 12:15:04.079
  STEP: patching the Namespace @ 09/01/25 12:15:04.109
  STEP: get the Namespace and ensuring it has the label @ 09/01/25 12:15:04.125
  I0901 12:15:04.132975 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-811" for this suite. @ 09/01/25 12:15:04.144
  STEP: Destroying namespace "nspatchtest-832ae99a-5504-43e5-a0df-aacffeda3937-2677" for this suite. @ 09/01/25 12:15:04.16
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/01/25 12:15:04.179
  I0901 12:15:04.179830 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:15:04.180555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:15:04.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:04.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:04.219
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:15:04.225
  E0901 12:15:05.181485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:06.182319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:07.183490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:08.183563      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:15:08.294
  I0901 12:15:08.304891 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-7b61bb02-4f01-45bf-9f2a-47a35a35abd7 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:15:08.328
  I0901 12:15:08.388067 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2356" for this suite. @ 09/01/25 12:15:08.408
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/01/25 12:15:08.431
  I0901 12:15:08.431960 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename tables @ 09/01/25 12:15:08.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:08.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:08.478
  I0901 12:15:08.488070 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7022" for this suite. @ 09/01/25 12:15:08.521
• [0.121 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/01/25 12:15:08.552
  I0901 12:15:08.552886 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename apf @ 09/01/25 12:15:08.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:08.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:08.593
  STEP: getting /apis @ 09/01/25 12:15:08.598
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 12:15:08.607
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 12:15:08.61
  STEP: creating @ 09/01/25 12:15:08.614
  STEP: getting @ 09/01/25 12:15:08.645
  STEP: listing @ 09/01/25 12:15:08.652
  STEP: watching @ 09/01/25 12:15:08.657
  I0901 12:15:08.657903 16 flowcontrol.go:620] starting watch
  STEP: patching @ 09/01/25 12:15:08.66
  STEP: updating @ 09/01/25 12:15:08.674
  I0901 12:15:08.689560 16 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 12:15:08.689
  STEP: patching /status @ 09/01/25 12:15:08.697
  STEP: updating /status @ 09/01/25 12:15:08.707
  STEP: deleting @ 09/01/25 12:15:08.723
  STEP: deleting a collection @ 09/01/25 12:15:08.754
  I0901 12:15:08.801654 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-533" for this suite. @ 09/01/25 12:15:08.813
• [0.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:15:08.831
  I0901 12:15:08.832040 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:15:08.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:08.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:08.878
  I0901 12:15:08.886671 16 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0901 12:15:08.919505 16 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0901 12:15:09.184708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:10.185572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:11.186229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:12.186982      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:13.187488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:13.931773 16 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:15:13.931
  I0901 12:15:13.932034 16 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0901 12:15:13.954552 16 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0901 12:15:13.977073 16 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0901 12:15:14.187509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:15.187666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:16.007217 16 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0901 12:15:16.020517 16 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0901 12:15:16.046003 16 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b18c053-9a1f-4f1a-a0f5-3b19d44524c2",
      ResourceVersion: (string) (len=5) "28136",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:15:16.059597 16 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b41eb3c1-6490-4554-a369-b4514a042524",
      ResourceVersion: (string) (len=5) "28125",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6b18c053-9a1f-4f1a-a0f5-3b19d44524c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 62 31 38 63 30  35 33 2d 39 61 31 66 2d  |\"6b18c053-9a1f-|
              00000120  34 66 31 61 2d 61 30 66  35 2d 33 62 31 39 64 34  |4f1a-a0f5-3b19d4|
              00000130  34 35 32 34 63 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4524c2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:15:16.066238 16 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0901 12:15:16.067029 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cde7afb-5d91-4400-9cda-754a24d75881",
      ResourceVersion: (string) (len=5) "28134",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6b18c053-9a1f-4f1a-a0f5-3b19d44524c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 62 31 38 63 30 35  |"uid\":\"6b18c05|
              000000b0  33 2d 39 61 31 66 2d 34  66 31 61 2d 61 30 66 35  |3-9a1f-4f1a-a0f5|
              000000c0  2d 33 62 31 39 64 34 34  35 32 34 63 32 5c 22 7d  |-3b19d44524c2\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:15:16.091276 16 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-95mhx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-95mhx",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff7b2328-0ff0-438c-8181-241c23b2b534",
      ResourceVersion: (string) (len=5) "28124",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "b41eb3c1-6490-4554-a369-b4514a042524",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  31 65 62 33 63 31 2d 36  |d\":\"b41eb3c1-6|
              00000090  34 39 30 2d 34 35 35 34  2d 61 33 36 39 2d 62 34  |490-4554-a369-b4|
              000000a0  35 31 34 61 30 34 32 35  32 34 5c 22 7d 22 3a 7b  |514a042524\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 37 5c 22 7d 22 3a  |.233.66.197\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kggsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kggsz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325714,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://9bc81063557bd7937b1266723a58e4421f162d517c59a24e9f805e50e3b2acfe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kggsz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:15:16.099226 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-911" for this suite. @ 09/01/25 12:15:16.14
• [7.330 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:15:16.164
  I0901 12:15:16.164167 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:15:16.167
  E0901 12:15:16.188333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:16.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:16.208
  STEP: Create a Replicaset @ 09/01/25 12:15:16.228
  STEP: Verify that the required pods have come up. @ 09/01/25 12:15:16.242
  I0901 12:15:16.270521 16 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:15:16.27
  E0901 12:15:17.188546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:18.188799      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/01/25 12:15:18.29
  I0901 12:15:18.299585 16 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/01/25 12:15:18.299
  I0901 12:15:18.323554 16 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/01/25 12:15:18.323
  I0901 12:15:18.329155 16 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0901 12:15:18.329700 16 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.330143 16 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.330347 16 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.330410 16 replica_set.go:688] Found replicaset test-rs in namespace replicaset-203 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 12:15:18.330440 16 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/01/25 12:15:18.33
  I0901 12:15:18.330505 16 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:15:18.343410 16 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/01/25 12:15:18.343
  I0901 12:15:18.346623 16 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0901 12:15:18.346870 16 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.347063 16 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.347834 16 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.347942 16 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-203 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:15:18.349857 16 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:15:18.349969 16 replica_set.go:724] Found replicaset test-rs in namespace replicaset-203 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0901 12:15:18.350190 16 replica_set.go:735] Replicaset test-rs has a patched status
  I0901 12:15:18.350901 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-203" for this suite. @ 09/01/25 12:15:18.363
• [2.215 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/01/25 12:15:18.381
  I0901 12:15:18.381699 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:15:18.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:18.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:18.412
  I0901 12:15:18.435311 16 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0901 12:15:19.189576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:20.190576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:21.191185      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:22.191650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:23.191751      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:23.453185 16 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:15:23.453
  I0901 12:15:23.453407 16 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0901 12:15:24.192014      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:25.192499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:25.462207 16 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0901 12:15:25.485811 16 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0901 12:15:26.193949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:27.193831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:27.510593 16 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0901 12:15:27.528374 16 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0901 12:15:27.545230 16 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0901 12:15:27.572096 16 deployment.go:314] Updating deployment test-rollover-deployment
  I0901 12:15:27.572508 16 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0901 12:15:28.195468      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:29.195202      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:29.594983 16 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0901 12:15:29.625929 16 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0901 12:15:29.657280 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:29.657435 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:30.195546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:31.196709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:31.679367 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:31.679488 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:32.196733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:33.196851      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:33.696427 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:33.697816 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:34.197281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:35.197776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:35.686533 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:35.686755 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:36.198708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:37.199041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:37.690176 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:37.690739 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:38.199636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:39.200494      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:39.685947 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 12:15:39.686200 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:40.201655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:41.202635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:41.690177 16 deployment.go:95] 
  I0901 12:15:41.690288 16 deployment.go:993] Ensure that both old replica sets have no replicas
  I0901 12:15:41.713700 16 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89ffccf4-aac3-4b59-8b7f-26a7a7757462",
      ResourceVersion: (string) (len=5) "28430",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:15:41.780700 16 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e621d9d8-fba8-41e6-a931-bc9a701a6115",
      ResourceVersion: (string) (len=5) "28419",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "89ffccf4-aac3-4b59-8b7f-26a7a7757462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 39 66 66 63 63  66 34 2d 61 61 63 33 2d  |\"89ffccf4-aac3-|
              00000120  34 62 35 39 2d 38 62 37  66 2d 32 36 61 37 61 37  |4b59-8b7f-26a7a7|
              00000130  37 35 37 34 36 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |757462\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:15:41.789285 16 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0901 12:15:41.790220 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be716ea7-f738-409e-83ce-8a4470ee413e",
      ResourceVersion: (string) (len=5) "28429",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "89ffccf4-aac3-4b59-8b7f-26a7a7757462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 39 66 66 63 63 66 34  2d 61 61 63 33 2d 34 62  |89ffccf4-aac3-4b|
              000000c0  35 39 2d 38 62 37 66 2d  32 36 61 37 61 37 37 35  |59-8b7f-26a7a775|
              000000d0  37 34 36 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7462\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:15:41.796937 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59b8cdf7-7134-4e3a-93a5-636ed4d5441a",
      ResourceVersion: (string) (len=5) "28381",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "89ffccf4-aac3-4b59-8b7f-26a7a7757462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 39 66 66 63 63  66 34 2d 61 61 63 33 2d  |\"89ffccf4-aac3-|
              00000120  34 62 35 39 2d 38 62 37  66 2d 32 36 61 37 61 37  |4b59-8b7f-26a7a7|
              00000130  37 35 37 34 36 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |757462\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:15:41.817573 16 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-js4lk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-js4lk",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-1470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "546c3d1f-1ab9-4ddb-8dce-dcc12abe1b76",
      ResourceVersion: (string) (len=5) "28394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "e621d9d8-fba8-41e6-a931-bc9a701a6115",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 36  32 31 64 39 64 38 2d 66  |d\":\"e621d9d8-f|
              00000090  62 61 38 2d 34 31 65 36  2d 61 39 33 31 2d 62 63  |ba8-41e6-a931-bc|
              000000a0  39 61 37 30 31 61 36 31  31 35 5c 22 7d 22 3a 7b  |9a701a6115\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 38 5c 22 7d 22 3a  |.233.66.208\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jl9z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jl9z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325728,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://938962b69b88c67a8e1629bfbb3ab350668ece208341502e5de27b4c1eec3760",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9jl9z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:15:41.827967 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1470" for this suite. @ 09/01/25 12:15:41.844
• [23.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/01/25 12:15:41.869
  I0901 12:15:41.869955 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:15:41.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:41.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:41.917
  STEP: starting an echo server on multiple ports @ 09/01/25 12:15:41.963
  I0901 12:15:41.985769 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:15:42.202535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:43.202852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:43.996004 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 15, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 15, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-8qsdt-544dd68879\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:15:44.203984      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:45.204703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:46.032702      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:15:46.033142 16 proxy.go:273] setup took 4.107724572s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/01/25 12:15:46.033
  I0901 12:15:46.068629 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 35.220393ms)
  I0901 12:15:46.074386 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 40.080122ms)
  I0901 12:15:46.075348 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 39.913718ms)
  I0901 12:15:46.083578 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 48.54939ms)
  I0901 12:15:46.089373 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 54.953675ms)
  I0901 12:15:46.089532 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 54.870338ms)
  I0901 12:15:46.091027 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 56.216388ms)
  I0901 12:15:46.091646 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 56.902523ms)
  I0901 12:15:46.092912 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 59.301426ms)
  I0901 12:15:46.092435 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 57.107889ms)
  I0901 12:15:46.094357 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 59.040724ms)
  I0901 12:15:46.098464 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 63.868046ms)
  I0901 12:15:46.098551 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 63.973067ms)
  I0901 12:15:46.098550 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 63.332468ms)
  I0901 12:15:46.098601 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 64.453693ms)
  I0901 12:15:46.099212 16 proxy.go:601] (0) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 64.396778ms)
  I0901 12:15:46.115999 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 16.34065ms)
  I0901 12:15:46.117093 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 17.653125ms)
  I0901 12:15:46.134012 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 34.189544ms)
  I0901 12:15:46.134533 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 32.297995ms)
  I0901 12:15:46.136435 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 34.645975ms)
  I0901 12:15:46.136860 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 36.117885ms)
  I0901 12:15:46.137631 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 37.001287ms)
  I0901 12:15:46.137682 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 35.203736ms)
  I0901 12:15:46.137739 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 37.049337ms)
  I0901 12:15:46.137808 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 37.027255ms)
  I0901 12:15:46.137845 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 37.737737ms)
  I0901 12:15:46.137885 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 36.001205ms)
  I0901 12:15:46.137925 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 38.635219ms)
  I0901 12:15:46.138566 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 38.163102ms)
  I0901 12:15:46.142192 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 40.521636ms)
  I0901 12:15:46.142781 16 proxy.go:601] (1) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 40.245176ms)
  I0901 12:15:46.156363 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 13.498657ms)
  I0901 12:15:46.162908 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 19.129051ms)
  I0901 12:15:46.178350 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 34.361177ms)
  I0901 12:15:46.178445 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 34.74647ms)
  I0901 12:15:46.178811 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 35.271967ms)
  I0901 12:15:46.178863 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 35.340498ms)
  I0901 12:15:46.178920 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 35.262826ms)
  I0901 12:15:46.178977 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 35.135693ms)
  I0901 12:15:46.179024 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 35.215551ms)
  I0901 12:15:46.179107 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 35.216662ms)
  I0901 12:15:46.179253 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 36.367394ms)
  I0901 12:15:46.179286 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 35.384931ms)
  I0901 12:15:46.179334 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 35.611931ms)
  I0901 12:15:46.179341 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 35.994957ms)
  I0901 12:15:46.179439 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 35.785509ms)
  I0901 12:15:46.179539 16 proxy.go:601] (2) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 35.802132ms)
  I0901 12:15:46.199549 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 19.833561ms)
  I0901 12:15:46.202219 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 22.371806ms)
  I0901 12:15:46.202724 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 22.317298ms)
  I0901 12:15:46.204278 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 23.583813ms)
  I0901 12:15:46.204514 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 24.476896ms)
  E0901 12:15:46.204852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:46.206629 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 25.82249ms)
  I0901 12:15:46.206635 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 25.668157ms)
  I0901 12:15:46.209390 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 28.908456ms)
  I0901 12:15:46.210140 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 29.922562ms)
  I0901 12:15:46.211252 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 30.600033ms)
  I0901 12:15:46.213932 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 33.070433ms)
  I0901 12:15:46.214331 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 33.532983ms)
  I0901 12:15:46.214766 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 33.847247ms)
  I0901 12:15:46.214777 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 34.173625ms)
  I0901 12:15:46.215849 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 35.317825ms)
  I0901 12:15:46.216178 16 proxy.go:601] (3) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 36.523769ms)
  I0901 12:15:46.232557 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 15.960811ms)
  I0901 12:15:46.232639 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 16.392144ms)
  I0901 12:15:46.237415 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 20.086607ms)
  I0901 12:15:46.237916 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 20.93419ms)
  I0901 12:15:46.248344 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 30.926119ms)
  I0901 12:15:46.248416 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 31.77916ms)
  I0901 12:15:46.248464 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 31.318259ms)
  I0901 12:15:46.248530 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 31.617181ms)
  I0901 12:15:46.249190 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 31.9512ms)
  I0901 12:15:46.250783 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 34.260819ms)
  I0901 12:15:46.250874 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 34.025171ms)
  I0901 12:15:46.251175 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 33.053571ms)
  I0901 12:15:46.251260 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 34.813445ms)
  I0901 12:15:46.251814 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 35.093039ms)
  I0901 12:15:46.252350 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 35.901161ms)
  I0901 12:15:46.252470 16 proxy.go:601] (4) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 35.787547ms)
  I0901 12:15:46.269491 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 16.769203ms)
  I0901 12:15:46.269673 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 17.00144ms)
  I0901 12:15:46.273304 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 19.790096ms)
  I0901 12:15:46.277234 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 23.5137ms)
  I0901 12:15:46.280776 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 27.925658ms)
  I0901 12:15:46.282223 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 28.457731ms)
  I0901 12:15:46.282685 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 29.239921ms)
  I0901 12:15:46.284449 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 30.816726ms)
  I0901 12:15:46.284540 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 30.593517ms)
  I0901 12:15:46.284590 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 30.597301ms)
  I0901 12:15:46.285103 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 31.185364ms)
  I0901 12:15:46.285293 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 31.621781ms)
  I0901 12:15:46.286308 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 32.496718ms)
  I0901 12:15:46.286513 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 33.521128ms)
  I0901 12:15:46.286623 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 33.040619ms)
  I0901 12:15:46.287068 16 proxy.go:601] (5) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 33.165822ms)
  I0901 12:15:46.303163 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 15.498265ms)
  I0901 12:15:46.303198 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 15.165555ms)
  I0901 12:15:46.309222 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 20.594852ms)
  I0901 12:15:46.309365 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 20.928769ms)
  I0901 12:15:46.309484 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 21.175339ms)
  I0901 12:15:46.309669 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 21.253543ms)
  I0901 12:15:46.309712 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 22.097596ms)
  I0901 12:15:46.311557 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 22.86539ms)
  I0901 12:15:46.313897 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 25.247819ms)
  I0901 12:15:46.314616 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 26.745413ms)
  I0901 12:15:46.314680 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 26.198932ms)
  I0901 12:15:46.315008 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 26.481934ms)
  I0901 12:15:46.316363 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 27.626266ms)
  I0901 12:15:46.316608 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 27.709742ms)
  I0901 12:15:46.318189 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 29.407614ms)
  I0901 12:15:46.320098 16 proxy.go:601] (6) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 31.137721ms)
  I0901 12:15:46.338278 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 16.767249ms)
  I0901 12:15:46.341369 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 19.958386ms)
  I0901 12:15:46.341685 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 19.38936ms)
  I0901 12:15:46.345870 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 25.246647ms)
  I0901 12:15:46.346198 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 24.217875ms)
  I0901 12:15:46.346770 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 26.2235ms)
  I0901 12:15:46.347184 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 25.889331ms)
  I0901 12:15:46.347327 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 26.417686ms)
  I0901 12:15:46.347387 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 26.650674ms)
  I0901 12:15:46.347979 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 27.000227ms)
  I0901 12:15:46.347833 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 25.921056ms)
  I0901 12:15:46.349342 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 27.55754ms)
  I0901 12:15:46.349919 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 28.236436ms)
  I0901 12:15:46.349925 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 27.414901ms)
  I0901 12:15:46.349959 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 27.339681ms)
  I0901 12:15:46.350619 16 proxy.go:601] (7) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 28.166828ms)
  I0901 12:15:46.363407 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 12.409715ms)
  I0901 12:15:46.363479 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 12.393385ms)
  I0901 12:15:46.365636 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 14.938124ms)
  I0901 12:15:46.369429 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 18.514196ms)
  I0901 12:15:46.372549 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 21.054989ms)
  I0901 12:15:46.372623 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 20.680093ms)
  I0901 12:15:46.374981 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 23.55779ms)
  I0901 12:15:46.375236 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 23.224941ms)
  I0901 12:15:46.376906 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 25.655394ms)
  I0901 12:15:46.378309 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 26.126739ms)
  I0901 12:15:46.379090 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 27.140879ms)
  I0901 12:15:46.379188 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 26.95144ms)
  I0901 12:15:46.379228 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 27.140254ms)
  I0901 12:15:46.379231 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 27.405526ms)
  I0901 12:15:46.380055 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 27.743823ms)
  I0901 12:15:46.380333 16 proxy.go:601] (8) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 28.623801ms)
  I0901 12:15:46.395633 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 15.080394ms)
  I0901 12:15:46.400251 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 18.39569ms)
  I0901 12:15:46.400448 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 19.382871ms)
  I0901 12:15:46.403896 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 21.005206ms)
  I0901 12:15:46.403971 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 21.345437ms)
  I0901 12:15:46.404059 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 21.445797ms)
  I0901 12:15:46.405160 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 24.650917ms)
  I0901 12:15:46.405766 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 23.093439ms)
  I0901 12:15:46.407937 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 25.440581ms)
  I0901 12:15:46.407997 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 27.252876ms)
  I0901 12:15:46.408063 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 25.972618ms)
  I0901 12:15:46.408156 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 26.46765ms)
  I0901 12:15:46.408192 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 25.825544ms)
  I0901 12:15:46.408213 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 25.482546ms)
  I0901 12:15:46.408251 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 25.801919ms)
  I0901 12:15:46.408285 16 proxy.go:601] (9) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 25.747446ms)
  I0901 12:15:46.418894 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 10.4642ms)
  I0901 12:15:46.422257 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 13.517762ms)
  I0901 12:15:46.425400 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 16.513428ms)
  I0901 12:15:46.429917 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 21.231782ms)
  I0901 12:15:46.429993 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 21.20767ms)
  I0901 12:15:46.430607 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 22.113616ms)
  I0901 12:15:46.432397 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 22.361412ms)
  I0901 12:15:46.432468 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 23.836291ms)
  I0901 12:15:46.432514 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 23.584922ms)
  I0901 12:15:46.432553 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 22.646774ms)
  I0901 12:15:46.432730 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 24.158599ms)
  I0901 12:15:46.432815 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 22.629884ms)
  I0901 12:15:46.435248 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 25.549568ms)
  I0901 12:15:46.435474 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 26.636409ms)
  I0901 12:15:46.435518 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 26.437138ms)
  I0901 12:15:46.436216 16 proxy.go:601] (10) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 26.238905ms)
  I0901 12:15:46.452704 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 15.013909ms)
  I0901 12:15:46.454515 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 16.679399ms)
  I0901 12:15:46.458372 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 20.393696ms)
  I0901 12:15:46.462076 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 24.295626ms)
  I0901 12:15:46.462209 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 24.892963ms)
  I0901 12:15:46.463473 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 25.260712ms)
  I0901 12:15:46.464596 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 28.196287ms)
  I0901 12:15:46.464824 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 26.572284ms)
  I0901 12:15:46.464876 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 26.998394ms)
  I0901 12:15:46.467865 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 29.385594ms)
  I0901 12:15:46.467934 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 29.773857ms)
  I0901 12:15:46.468009 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 30.077529ms)
  I0901 12:15:46.468254 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 29.816936ms)
  I0901 12:15:46.469033 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 30.64536ms)
  I0901 12:15:46.469832 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 31.494835ms)
  I0901 12:15:46.470678 16 proxy.go:601] (11) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 32.381394ms)
  I0901 12:15:46.483086 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 12.239602ms)
  I0901 12:15:46.487250 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 16.023438ms)
  I0901 12:15:46.492996 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 21.572529ms)
  I0901 12:15:46.493100 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 21.694831ms)
  I0901 12:15:46.493625 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 22.178317ms)
  I0901 12:15:46.493673 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 22.169406ms)
  I0901 12:15:46.493720 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 22.231208ms)
  I0901 12:15:46.495889 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 24.585538ms)
  I0901 12:15:46.498386 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 26.850343ms)
  I0901 12:15:46.499308 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 27.839286ms)
  I0901 12:15:46.499473 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 27.885619ms)
  I0901 12:15:46.499476 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 28.180275ms)
  I0901 12:15:46.500250 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 28.887142ms)
  I0901 12:15:46.500315 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 28.956541ms)
  I0901 12:15:46.501202 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 29.608787ms)
  I0901 12:15:46.502997 16 proxy.go:601] (12) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 31.438671ms)
  I0901 12:15:46.526433 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 21.701814ms)
  I0901 12:15:46.526654 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 21.496188ms)
  I0901 12:15:46.529637 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 25.4627ms)
  I0901 12:15:46.533286 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 26.86796ms)
  I0901 12:15:46.534885 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 30.382697ms)
  I0901 12:15:46.537256 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 32.167615ms)
  I0901 12:15:46.537616 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 31.359933ms)
  I0901 12:15:46.539322 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 32.668177ms)
  I0901 12:15:46.539425 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 32.721632ms)
  I0901 12:15:46.539453 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 33.709889ms)
  I0901 12:15:46.539453 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 31.858151ms)
  I0901 12:15:46.539472 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 33.077428ms)
  I0901 12:15:46.539499 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 34.146469ms)
  I0901 12:15:46.540376 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 34.822877ms)
  I0901 12:15:46.540385 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 33.792118ms)
  I0901 12:15:46.541065 16 proxy.go:601] (13) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 34.31569ms)
  I0901 12:15:46.560762 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 19.188815ms)
  I0901 12:15:46.562381 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 20.90577ms)
  I0901 12:15:46.565885 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 24.667951ms)
  I0901 12:15:46.566200 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 24.435948ms)
  I0901 12:15:46.569663 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 28.33775ms)
  I0901 12:15:46.575577 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 33.539737ms)
  I0901 12:15:46.575662 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 34.254644ms)
  I0901 12:15:46.575769 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 33.860143ms)
  I0901 12:15:46.575809 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 33.852818ms)
  I0901 12:15:46.575806 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 34.141171ms)
  I0901 12:15:46.576156 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 34.48682ms)
  I0901 12:15:46.576243 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 33.983056ms)
  I0901 12:15:46.576256 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 34.255779ms)
  I0901 12:15:46.576284 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 34.468126ms)
  I0901 12:15:46.577063 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 34.666745ms)
  I0901 12:15:46.577970 16 proxy.go:601] (14) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 35.646951ms)
  I0901 12:15:46.598444 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 20.040516ms)
  I0901 12:15:46.598530 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 19.684549ms)
  I0901 12:15:46.598566 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 20.067374ms)
  I0901 12:15:46.598601 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 19.713504ms)
  I0901 12:15:46.598630 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 20.553266ms)
  I0901 12:15:46.602645 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 23.553725ms)
  I0901 12:15:46.603271 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 24.262476ms)
  I0901 12:15:46.606157 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 26.894457ms)
  I0901 12:15:46.608465 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 29.256989ms)
  I0901 12:15:46.608528 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 29.738752ms)
  I0901 12:15:46.608860 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 30.292926ms)
  I0901 12:15:46.608939 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 30.273478ms)
  I0901 12:15:46.611513 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 32.20454ms)
  I0901 12:15:46.611645 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 33.031465ms)
  I0901 12:15:46.612620 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 34.289488ms)
  I0901 12:15:46.614084 16 proxy.go:601] (15) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 34.738495ms)
  I0901 12:15:46.644398 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 29.65576ms)
  I0901 12:15:46.645273 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 29.81625ms)
  I0901 12:15:46.648638 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 33.783656ms)
  I0901 12:15:46.649383 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 34.362969ms)
  I0901 12:15:46.649462 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 33.485032ms)
  I0901 12:15:46.649517 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 33.72652ms)
  I0901 12:15:46.650407 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 34.857747ms)
  I0901 12:15:46.652374 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 37.849085ms)
  I0901 12:15:46.652448 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 36.790377ms)
  I0901 12:15:46.652465 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 38.108779ms)
  I0901 12:15:46.653509 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 37.618706ms)
  I0901 12:15:46.654475 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 38.401673ms)
  I0901 12:15:46.654493 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 39.5665ms)
  I0901 12:15:46.654547 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 39.449019ms)
  I0901 12:15:46.659161 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 43.914439ms)
  I0901 12:15:46.661745 16 proxy.go:601] (16) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 46.389881ms)
  I0901 12:15:46.678953 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 17.101293ms)
  I0901 12:15:46.687228 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 25.119855ms)
  I0901 12:15:46.692573 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 30.326187ms)
  I0901 12:15:46.693033 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 30.661394ms)
  I0901 12:15:46.694152 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 31.682437ms)
  I0901 12:15:46.694225 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 31.62358ms)
  I0901 12:15:46.695385 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 32.72833ms)
  I0901 12:15:46.697062 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 34.580247ms)
  I0901 12:15:46.697907 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 35.294034ms)
  I0901 12:15:46.698609 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 35.9154ms)
  I0901 12:15:46.698712 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 36.393147ms)
  I0901 12:15:46.698790 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 36.406231ms)
  I0901 12:15:46.698825 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 36.326504ms)
  I0901 12:15:46.700955 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 38.202049ms)
  I0901 12:15:46.700967 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 38.442988ms)
  I0901 12:15:46.702787 16 proxy.go:601] (17) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 40.07739ms)
  I0901 12:15:46.723710 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 20.131758ms)
  I0901 12:15:46.731316 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 28.09638ms)
  I0901 12:15:46.733297 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 29.314487ms)
  I0901 12:15:46.733497 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 29.677172ms)
  I0901 12:15:46.747540 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 44.667367ms)
  I0901 12:15:46.748653 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 44.478228ms)
  I0901 12:15:46.748829 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 45.444295ms)
  I0901 12:15:46.752095 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 47.750624ms)
  I0901 12:15:46.752328 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 48.035478ms)
  I0901 12:15:46.754156 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 49.765049ms)
  I0901 12:15:46.755253 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 50.617602ms)
  I0901 12:15:46.756821 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 52.277305ms)
  I0901 12:15:46.757506 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 52.820801ms)
  I0901 12:15:46.758852 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 54.351442ms)
  I0901 12:15:46.759671 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 55.084241ms)
  I0901 12:15:46.759828 16 proxy.go:601] (18) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 55.391568ms)
  I0901 12:15:46.780727 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 20.813195ms)
  I0901 12:15:46.782596 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:462/proxy/: tls qux (200; 21.989329ms)
  I0901 12:15:46.784550 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:162/proxy/: bar (200; 23.111264ms)
  I0901 12:15:46.790916 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 30.553755ms)
  I0901 12:15:46.791758 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname1/proxy/: foo (200; 29.778191ms)
  I0901 12:15:46.791865 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/http:proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/... (200; 30.823841ms)
  I0901 12:15:46.794209 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname2/proxy/: bar (200; 34.299659ms)
  I0901 12:15:46.794296 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:160/proxy/: foo (200; 32.731015ms)
  I0901 12:15:46.794344 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname2/proxy/: tls qux (200; 33.593779ms)
  I0901 12:15:46.795156 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt:1080/proxy/rewri... (200; 33.469631ms)
  I0901 12:15:46.795245 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:460/proxy/: tls baz (200; 33.955964ms)
  I0901 12:15:46.795430 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/https:proxy-service-8qsdt-544dd68879-vgckt:443/proxy/... (200; 34.958258ms)
  I0901 12:15:46.795713 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/http:proxy-service-8qsdt:portname1/proxy/: foo (200; 35.632876ms)
  I0901 12:15:46.795839 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/: <a href="/api/v1/namespaces/proxy-6040/pods/proxy-service-8qsdt-544dd68879-vgckt/proxy/rewriteme"... (200; 35.669351ms)
  I0901 12:15:46.796695 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/proxy-service-8qsdt:portname2/proxy/: bar (200; 34.649577ms)
  I0901 12:15:46.796718 16 proxy.go:601] (19) /api/v1/namespaces/proxy-6040/services/https:proxy-service-8qsdt:tlsportname1/proxy/: tls baz (200; 35.788293ms)
  I0901 12:15:46.815372 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6040" for this suite. @ 09/01/25 12:15:46.829
• [4.978 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/01/25 12:15:46.848
  I0901 12:15:46.848637 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:15:46.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:46.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:46.9
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/01/25 12:15:46.914
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:15:46.957
  E0901 12:15:47.205785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:48.206576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/01/25 12:15:49.019
  STEP: Waiting for all pods to be running @ 09/01/25 12:15:49.019
  I0901 12:15:49.034677 16 disruption.go:680] pods: 0 < 3
  E0901 12:15:49.206564      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:50.206737      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:51.040625 16 disruption.go:691] running pods: 2 < 3
  E0901 12:15:51.207609      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:52.208516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 12:15:53.036
  STEP: Updating the pdb to allow a pod to be evicted @ 09/01/25 12:15:53.073
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:15:53.114
  E0901 12:15:53.209621      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:54.209683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 12:15:55.127
  STEP: Waiting for all pods to be running @ 09/01/25 12:15:55.127
  STEP: Waiting for the pdb to observed all healthy pods @ 09/01/25 12:15:55.144
  E0901 12:15:55.211212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/01/25 12:15:55.223
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:15:55.293
  E0901 12:15:56.211510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:15:57.211807      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/01/25 12:15:57.304
  STEP: locating a running pod @ 09/01/25 12:15:57.323
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/01/25 12:15:57.363
  STEP: Waiting for the pdb to be deleted @ 09/01/25 12:15:57.383
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 12:15:57.395
  STEP: Waiting for all pods to be running @ 09/01/25 12:15:57.395
  I0901 12:15:57.471569 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1980" for this suite. @ 09/01/25 12:15:57.498
• [10.674 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/01/25 12:15:57.522
  I0901 12:15:57.522904 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:15:57.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:57.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:57.566
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/01/25 12:15:57.624
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:15:57.639
  I0901 12:15:57.706810 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:15:57.706898 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:15:58.212555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:58.673059 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:15:58.673156 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:15:59.213197      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:15:59.664671 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:15:59.665530 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/01/25 12:15:59.68
  I0901 12:15:59.764386 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:15:59.764591 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  E0901 12:16:00.213238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:00.784740 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:16:00.784938 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  E0901 12:16:01.213605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:01.792095 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:16:01.792329 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/01/25 12:16:01.792
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:16:01.816
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7368, will wait for the garbage collector to delete the pods @ 09/01/25 12:16:01.817
  I0901 12:16:01.911462 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 25.207831ms
  I0901 12:16:02.013555 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 102.012623ms
  E0901 12:16:02.213914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:03.214917      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:03.529173 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:16:03.529384 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:16:03.543163 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28771"},"items":null}

  I0901 12:16:03.556794 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28771"},"items":null}

  I0901 12:16:03.607504 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7368" for this suite. @ 09/01/25 12:16:03.632
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 09/01/25 12:16:03.655
  I0901 12:16:03.655455 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:16:03.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:03.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:03.698
  STEP: Creating a suspended job @ 09/01/25 12:16:03.72
  STEP: Patching the Job @ 09/01/25 12:16:03.741
  STEP: Watching for Job to be patched @ 09/01/25 12:16:03.79
  I0901 12:16:03.800514 16 job.go:1369] Event ADDED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv] and annotations: map[]
  I0901 12:16:03.800578 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv] and annotations: map[]
  I0901 12:16:03.800643 16 job.go:1372] Event MODIFIED found for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[]
  STEP: Updating the job @ 09/01/25 12:16:03.801
  STEP: Watching for Job to be updated @ 09/01/25 12:16:03.833
  I0901 12:16:03.844861 16 job.go:1372] Event MODIFIED found for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:03.845039 16 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/01/25 12:16:03.845
  I0901 12:16:03.850588 16 job.go:1247] Job: e2e-m87wv as labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched]
  STEP: Waiting for job to complete @ 09/01/25 12:16:03.85
  E0901 12:16:04.250209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:05.225452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:06.225741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:07.225775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:08.226037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:09.273185      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:10.263317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:11.263549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:12.264222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:13.264797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/01/25 12:16:13.942
  STEP: Watching for Job to be deleted @ 09/01/25 12:16:13.975
  I0901 12:16:13.991313 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:13.994080 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:13.998371 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:13.998553 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:13.998656 16 job.go:1369] Event MODIFIED observed for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  I0901 12:16:13.999236 16 job.go:1372] Event DELETED found for Job e2e-m87wv in namespace job-2232 with labels: map[e2e-job-label:e2e-m87wv e2e-m87wv:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/01/25 12:16:13.999
  I0901 12:16:14.057537 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2232" for this suite. @ 09/01/25 12:16:14.071
• [10.432 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/01/25 12:16:14.091
  I0901 12:16:14.091621 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:16:14.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:14.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:14.135
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 12:16:14.143
  E0901 12:16:14.265451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:15.266054      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:16.266890      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:17.267225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:16:18.207
  I0901 12:16:18.223669 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-bb0b2d2e-1bc5-47d4-b691-b784bc887d22 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:16:18.25
  E0901 12:16:18.269605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:18.299719 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5318" for this suite. @ 09/01/25 12:16:18.314
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/01/25 12:16:18.33
  I0901 12:16:18.330497 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 12:16:18.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:18.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:18.368
  STEP: Create VolumeAttachment "va-e2e-lm2dh" on node "xoongeig7eeb-3" @ 09/01/25 12:16:18.412
  STEP: Patch VolumeAttachment "va-e2e-lm2dh" on node "xoongeig7eeb-3" @ 09/01/25 12:16:18.424
  STEP: Reading "va-e2e-lm2dh" Status @ 09/01/25 12:16:18.438
  STEP: Patching "va-e2e-lm2dh" Status @ 09/01/25 12:16:18.455
  I0901 12:16:18.469232 16 volume_attachment.go:224] "va-e2e-lm2dh" Status.Attached: true
  STEP: Updating "va-e2e-lm2dh" Status @ 09/01/25 12:16:18.469
  I0901 12:16:18.493265 16 volume_attachment.go:240] "va-e2e-lm2dh" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-lm2dh" on node "xoongeig7eeb-3" @ 09/01/25 12:16:18.493
  STEP: Confirm deletion of VolumeAttachment "va-e2e-lm2dh" on node "xoongeig7eeb-3" @ 09/01/25 12:16:18.513
  I0901 12:16:18.524954 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2215" for this suite. @ 09/01/25 12:16:18.542
• [0.235 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/01/25 12:16:18.566
  I0901 12:16:18.566563 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:16:18.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:18.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:18.613
  I0901 12:16:18.684360 16 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d6e86a86-ba1f-469e-8362-a4c15721ad5d", Controller:(*bool)(0xc00727782e), BlockOwnerDeletion:(*bool)(0xc00727782f)}}
  I0901 12:16:18.700959 16 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"5bda3644-97a3-415c-b891-757ada38f5e9", Controller:(*bool)(0xc0072779ee), BlockOwnerDeletion:(*bool)(0xc0072779ef)}}
  I0901 12:16:18.723634 16 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"cc46b960-2013-4ddc-9b4c-99cbfc98ea9e", Controller:(*bool)(0xc007277baa), BlockOwnerDeletion:(*bool)(0xc007277bab)}}
  E0901 12:16:19.268922      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:20.269941      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:21.269845      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:22.270097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:23.270746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:23.777284 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5605" for this suite. @ 09/01/25 12:16:23.792
• [5.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:16:23.808
  I0901 12:16:23.808182 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:16:23.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:23.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:23.853
  STEP: getting /apis @ 09/01/25 12:16:23.862
  STEP: getting /apis/node.k8s.io @ 09/01/25 12:16:23.877
  STEP: getting /apis/node.k8s.io/v1 @ 09/01/25 12:16:23.881
  STEP: creating @ 09/01/25 12:16:23.884
  STEP: watching @ 09/01/25 12:16:23.917
  I0901 12:16:23.917769 16 runtimeclass.go:278] starting watch
  STEP: getting @ 09/01/25 12:16:23.934
  STEP: listing @ 09/01/25 12:16:23.939
  STEP: patching @ 09/01/25 12:16:23.946
  STEP: updating @ 09/01/25 12:16:23.956
  I0901 12:16:23.968065 16 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 12:16:23.968
  STEP: deleting a collection @ 09/01/25 12:16:23.989
  I0901 12:16:24.021274 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9559" for this suite. @ 09/01/25 12:16:24.03
• [0.235 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/01/25 12:16:24.043
  I0901 12:16:24.043651 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:16:24.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:24.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:24.076
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:16:24.134
  E0901 12:16:24.271631      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:25.272291      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 12:16:26.195
  E0901 12:16:26.272885      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:27.273041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:16:28.256
  E0901 12:16:28.274100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:29.274797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:30.275219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/01/25 12:16:30.304
  I0901 12:16:30.362317 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5210" for this suite. @ 09/01/25 12:16:30.377
• [6.358 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/01/25 12:16:30.406
  I0901 12:16:30.406606 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:16:30.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:30.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:30.462
  STEP: creating the pod @ 09/01/25 12:16:30.475
  STEP: setting up watch @ 09/01/25 12:16:30.476
  STEP: submitting the pod to kubernetes @ 09/01/25 12:16:30.588
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:16:30.624
  STEP: verifying pod creation was observed @ 09/01/25 12:16:30.641
  E0901 12:16:31.275952      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:32.276282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/01/25 12:16:32.678
  STEP: verifying pod deletion was observed @ 09/01/25 12:16:32.695
  E0901 12:16:33.276691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:34.277683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:34.553791 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3258" for this suite. @ 09/01/25 12:16:34.569
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/01/25 12:16:34.595
  I0901 12:16:34.595432 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:16:34.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:34.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:34.641
  STEP: getting /apis @ 09/01/25 12:16:34.663
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 12:16:34.673
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 12:16:34.676
  STEP: creating @ 09/01/25 12:16:34.679
  STEP: getting @ 09/01/25 12:16:34.714
  STEP: listing @ 09/01/25 12:16:34.722
  STEP: watching @ 09/01/25 12:16:34.735
  I0901 12:16:34.735262 16 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/01/25 12:16:34.738
  STEP: updating @ 09/01/25 12:16:34.751
  I0901 12:16:34.769438 16 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 12:16:34.769
  STEP: deleting a collection @ 09/01/25 12:16:34.798
  I0901 12:16:34.850951 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-138" for this suite. @ 09/01/25 12:16:34.876
• [0.296 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/01/25 12:16:34.891
  I0901 12:16:34.891778 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:16:34.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:34.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:34.925
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:16:34.951
  E0901 12:16:35.278236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:36.279548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:37.280515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:38.281160      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:16:39.007
  I0901 12:16:39.018506 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-ba92ae86-754e-41dc-abbd-ee6fb395477c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:16:39.053
  I0901 12:16:39.109803 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5688" for this suite. @ 09/01/25 12:16:39.126
• [4.258 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/01/25 12:16:39.151
  I0901 12:16:39.151196 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:16:39.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:39.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:39.186
  I0901 12:16:39.194595 16 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0901 12:16:39.282081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/01/25 12:16:40.225
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/01/25 12:16:40.245
  E0901 12:16:40.282249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/01/25 12:16:41.278
  E0901 12:16:41.282857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:41.327170 16 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/01/25 12:16:41.327
  I0901 12:16:41.344699 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-386" for this suite. @ 09/01/25 12:16:41.355
• [2.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/01/25 12:16:41.38
  I0901 12:16:41.380456 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:16:41.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:41.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:41.44
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/01/25 12:16:41.444
  E0901 12:16:42.283539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:43.284612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:44.284260      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:45.284578      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:16:45.506
  I0901 12:16:45.516525 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-27b707bd-a0e3-4ac8-9221-fbaf2f409e3b container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:16:45.536
  I0901 12:16:45.568254 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3616" for this suite. @ 09/01/25 12:16:45.582
• [4.223 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:16:45.608
  I0901 12:16:45.608583 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 12:16:45.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:45.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:45.645
  STEP: creating @ 09/01/25 12:16:45.651
  STEP: getting @ 09/01/25 12:16:45.695
  STEP: listing in namespace @ 09/01/25 12:16:45.707
  STEP: patching @ 09/01/25 12:16:45.733
  STEP: deleting @ 09/01/25 12:16:45.757
  I0901 12:16:45.778218 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7694" for this suite. @ 09/01/25 12:16:45.787
• [0.194 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/01/25 12:16:45.801
  I0901 12:16:45.801879 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:16:45.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:45.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:45.832
  STEP: Creating projection with secret that has name projected-secret-test-84f882d2-a24c-4a70-b08d-944da4f18a60 @ 09/01/25 12:16:45.839
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:16:45.848
  E0901 12:16:46.285740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:47.286489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:48.287569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:49.288720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:16:49.903
  I0901 12:16:49.917003 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-secrets-2743cb98-9fe8-4022-8c6a-57b4e10e142c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:16:49.943
  I0901 12:16:49.984411 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7528" for this suite. @ 09/01/25 12:16:50.003
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/01/25 12:16:50.032
  I0901 12:16:50.033319 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:16:50.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:50.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:50.079
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/01/25 12:16:50.086
  I0901 12:16:50.089572 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:16:50.288840      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:51.288960      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:52.289364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:16:52.785801 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:16:53.290495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:54.292015      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:55.292634      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:56.292902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:57.293815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:58.294012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:16:59.294484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:00.295713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:01.295951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:17:02.035070 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1247" for this suite. @ 09/01/25 12:17:02.061
• [12.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:17:02.087
  I0901 12:17:02.088009 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/01/25 12:17:02.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:02.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:02.128
  STEP: mirroring a new custom Endpoint @ 09/01/25 12:17:02.176
  I0901 12:17:02.190427      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:17:02.205754 16 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0901 12:17:02.296162      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:03.296597      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/01/25 12:17:04.223
  I0901 12:17:04.238646      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/01/25 12:17:04.269
  I0901 12:17:04.290730      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0901 12:17:04.297360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:17:04.306882 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8959" for this suite. @ 09/01/25 12:17:04.318
• [2.245 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 12:17:04.332
  I0901 12:17:04.332737 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:17:04.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:04.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:04.375
  STEP: Creating secret with name secret-test-de4dfd33-256e-46dd-8bb5-b2acdf2bbeda @ 09/01/25 12:17:04.419
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:17:04.431
  E0901 12:17:05.298433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:06.298759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:07.299002      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:08.299656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:17:08.484
  I0901 12:17:08.497073 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-0eff3e0d-e460-4e7b-af24-63446ab3b145 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:17:08.549
  I0901 12:17:08.605440 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1880" for this suite. @ 09/01/25 12:17:08.62
  STEP: Destroying namespace "secret-namespace-4193" for this suite. @ 09/01/25 12:17:08.635
• [4.321 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/01/25 12:17:08.653
  I0901 12:17:08.653849 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:17:08.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:08.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:08.688
  STEP: Setting up server cert @ 09/01/25 12:17:08.728
  E0901 12:17:09.300515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:17:10.047
  STEP: Deploying the webhook pod @ 09/01/25 12:17:10.056
  STEP: Wait for the deployment to be ready @ 09/01/25 12:17:10.08
  I0901 12:17:10.107392 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:17:10.302450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:11.303403      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:17:12.149
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:17:12.202
  E0901 12:17:12.303787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:17:13.203867 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 12:17:13.213
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 12:17:13.277
  E0901 12:17:13.303971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a dummy validating-webhook-configuration object @ 09/01/25 12:17:13.322
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/01/25 12:17:13.36
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/01/25 12:17:13.378
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/01/25 12:17:13.404
  I0901 12:17:13.570980 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-513" for this suite. @ 09/01/25 12:17:13.582
  STEP: Destroying namespace "webhook-markers-1612" for this suite. @ 09/01/25 12:17:13.597
• [4.955 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/01/25 12:17:13.609
  I0901 12:17:13.609491 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:17:13.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:13.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:13.667
  STEP: Creating the pod @ 09/01/25 12:17:13.69
  E0901 12:17:14.304767      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:15.304686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:16.304881      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:17:16.369271 16 pod_client.go:173] Successfully updated pod "annotationupdate23031adc-5544-49d6-a393-be781dc668ae"
  E0901 12:17:17.305741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:18.305724      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:17:18.424043 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5983" for this suite. @ 09/01/25 12:17:18.441
• [4.853 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 09/01/25 12:17:18.462
  I0901 12:17:18.462820 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:17:18.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:18.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:18.505
  STEP: Creating a test externalName service @ 09/01/25 12:17:18.513
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:18.52
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:18.52
  STEP: creating a pod to probe DNS @ 09/01/25 12:17:18.52
  STEP: submitting the pod to kubernetes @ 09/01/25 12:17:18.52
  E0901 12:17:19.306231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:20.306963      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:21.307345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:22.308358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:17:22.579
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:17:22.594
  I0901 12:17:22.629594 16 dns_common.go:571] DNS probes using dns-test-3fbeba38-9293-414c-9426-a41c4bb8f79c succeeded

  STEP: changing the externalName to bar.example.com @ 09/01/25 12:17:22.629
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:22.648
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:22.648
  STEP: creating a second pod to probe DNS @ 09/01/25 12:17:22.648
  STEP: submitting the pod to kubernetes @ 09/01/25 12:17:22.648
  E0901 12:17:23.308637      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:24.311411      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:25.310863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:26.312556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:27.312289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:28.312555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:29.313039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:30.313338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:31.314507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:32.315340      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:33.315800      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:34.316173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:35.317816      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:36.318027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:37.318618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:38.318877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:39.320264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:40.321082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:41.321738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:42.322344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:43.322435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:44.323550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:45.323898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:46.324372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:17:46.837
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:17:46.85
  I0901 12:17:46.896179 16 dns_common.go:571] DNS probes using dns-test-fa394228-d92a-48ba-9cb8-9208646d7118 succeeded

  STEP: changing the service to type=ClusterIP @ 09/01/25 12:17:46.896
  I0901 12:17:46.973081      16 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:46.973
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1115.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1115.svc.cluster.local; sleep 1; done
   @ 09/01/25 12:17:46.973
  STEP: creating a third pod to probe DNS @ 09/01/25 12:17:46.973
  STEP: submitting the pod to kubernetes @ 09/01/25 12:17:46.987
  E0901 12:17:47.324485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:48.324672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:49.325012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:50.325979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:51.326614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:52.327492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:53.329850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:54.330591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:55.331434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:56.332605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:57.333376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:58.334242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:17:59.334433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:00.334653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:01.335516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:02.336324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:03.337333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:04.337561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:05.337959      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:06.338926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:18:07.162
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:18:07.174
  I0901 12:18:07.209652 16 dns_common.go:571] DNS probes using dns-test-d878597b-268b-4ce7-8a76-41f5a7bed0f8 succeeded

  STEP: deleting the pod @ 09/01/25 12:18:07.209
  STEP: deleting the pod @ 09/01/25 12:18:07.254
  STEP: deleting the pod @ 09/01/25 12:18:07.3
  STEP: deleting the test externalName service @ 09/01/25 12:18:07.328
  E0901 12:18:07.339311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:07.386354 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1115" for this suite. @ 09/01/25 12:18:07.398
• [48.951 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/01/25 12:18:07.414
  I0901 12:18:07.414722 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:18:07.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:07.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:07.456
  I0901 12:18:07.463444 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:18:08.340988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:09.341225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:10.341870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:11.343385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:12.344357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:13.345364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:14.053305 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2127" for this suite. @ 09/01/25 12:18:14.065
• [6.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/01/25 12:18:14.098
  I0901 12:18:14.098527 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:18:14.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:14.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:14.143
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:18:14.152
  E0901 12:18:14.345763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:15.345967      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:16.347467      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:17.348191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:18:18.214
  I0901 12:18:18.225283 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-117687ae-8fb3-4192-bc05-f84d8055e74f container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:18:18.252
  I0901 12:18:18.298470 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2407" for this suite. @ 09/01/25 12:18:18.314
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 12:18:18.338
  I0901 12:18:18.338165 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:18:18.342
  E0901 12:18:18.348990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:18.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:18.38
  STEP: Creating configMap with name configmap-test-volume-map-1fd638ec-0bbc-4528-a3e2-f3cda5dd287a @ 09/01/25 12:18:18.386
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:18:18.399
  E0901 12:18:19.349341      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:20.349943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:21.350474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:22.351249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:18:22.45
  I0901 12:18:22.462975 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-861740fb-6cf3-4ff5-a8e7-ddd6932f513c container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:18:22.483
  I0901 12:18:22.540985 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6441" for this suite. @ 09/01/25 12:18:22.556
• [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/01/25 12:18:22.577
  I0901 12:18:22.577511 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:18:22.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:22.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:22.615
  STEP: Creating projection with secret that has name projected-secret-test-fb5d9b16-1f65-4538-88c3-73c2b9dddb37 @ 09/01/25 12:18:22.628
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:18:22.64
  E0901 12:18:23.352891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:24.351595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:25.352990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:26.353376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:18:26.689
  I0901 12:18:26.702513 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-secrets-40e3cd46-9d19-4600-8474-04286322208e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:18:26.73
  I0901 12:18:26.784470 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9577" for this suite. @ 09/01/25 12:18:26.795
• [4.239 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/01/25 12:18:26.817
  I0901 12:18:26.817506 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:18:26.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:26.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:26.869
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:18:26.885
  E0901 12:18:27.353542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:28.353931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/01/25 12:18:28.901
  STEP: Waiting for all pods to be running @ 09/01/25 12:18:28.943
  I0901 12:18:28.956791 16 disruption.go:691] running pods: 0 < 1
  E0901 12:18:29.354501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:30.354921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 12:18:30.977
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:18:31.024
  STEP: Patching PodDisruptionBudget status @ 09/01/25 12:18:31.052
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:18:31.08
  I0901 12:18:31.092671 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4585" for this suite. @ 09/01/25 12:18:31.11
• [4.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 09/01/25 12:18:31.127
  I0901 12:18:31.127570 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:18:31.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:31.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:31.17
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1891 @ 09/01/25 12:18:31.179
  STEP: changing the ExternalName service to type=ClusterIP @ 09/01/25 12:18:31.193
  I0901 12:18:31.293867 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:18:31.355822      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:32.356308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:33.311248 16 resource.go:361] Creating new exec pod
  E0901 12:18:33.356708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:34.357354      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:35.358679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:35.392268 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1891 exec execpodlpmh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:18:35.848776 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.41.219) 80 port [tcp/http] succeeded!\n"
  I0901 12:18:35.849229 16 builder.go:147] stdout: "externalname-service-5d6d8f6676-lh8n6"
  I0901 12:18:35.849632 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1891 exec execpodlpmh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.219 80'
  I0901 12:18:36.253571 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.219 80\nConnection to 10.233.41.219 80 port [tcp/http] succeeded!\n"
  I0901 12:18:36.253679 16 builder.go:147] stdout: ""
  E0901 12:18:36.358720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:36.850403 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1891 exec execpodlpmh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.219 80'
  I0901 12:18:37.188988 16 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.41.219 80\necho hostName\nConnection to 10.233.41.219 80 port [tcp/http] succeeded!\n"
  I0901 12:18:37.189088 16 builder.go:147] stdout: "externalname-service-5d6d8f6676-lh8n6"
  I0901 12:18:37.190927 16 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0901 12:18:37.253158 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1891" for this suite. @ 09/01/25 12:18:37.27
• [6.156 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 09/01/25 12:18:37.284
  I0901 12:18:37.284780 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:18:37.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:37.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:37.325
  STEP: Creating a job @ 09/01/25 12:18:37.332
  STEP: Ensuring active pods == parallelism @ 09/01/25 12:18:37.347
  E0901 12:18:37.360520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:38.360097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:39.361479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:40.361692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:41.362989      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/01/25 12:18:41.386
  I0901 12:18:41.934624 16 pod_client.go:173] Successfully updated pod "adopt-release-fkxv9"
  STEP: Checking that the Job readopts the Pod @ 09/01/25 12:18:41.934
  E0901 12:18:42.365429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:43.365389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/01/25 12:18:43.953
  E0901 12:18:44.366572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:44.493305 16 pod_client.go:173] Successfully updated pod "adopt-release-fkxv9"
  STEP: Checking that the Job releases the Pod @ 09/01/25 12:18:44.493
  E0901 12:18:45.367294      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:46.367593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:46.522242 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5847" for this suite. @ 09/01/25 12:18:46.532
• [9.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/01/25 12:18:46.557
  I0901 12:18:46.558339 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:18:46.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:46.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:46.608
  I0901 12:18:46.615922 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 12:18:47.240282 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6277" for this suite. @ 09/01/25 12:18:47.259
• [0.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/01/25 12:18:47.293
  I0901 12:18:47.293793 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:18:47.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:47.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:47.331
  E0901 12:18:47.368575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:18:47.368871 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:18:48.369213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:49.369271      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:50.370515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:51.369935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:52.370265      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:53.370238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:54.370556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:55.370564      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:56.371247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:57.372541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:58.372647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:18:59.372958      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:00.373071      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:01.374071      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:02.374339      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:03.375034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:04.378445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:05.378878      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:06.379238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:07.380306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:08.380451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:09.381198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:10.382320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:11.382729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:12.383358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:13.383972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:14.384335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:15.384603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:16.385069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:17.385728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:18.386329      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:19.386863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:20.387263      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:21.389508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:22.391621      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:23.391741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:24.392229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:25.392551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:26.393506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:27.393947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:28.394628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:29.395625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:30.395733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:31.398040      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:32.397441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:33.397769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:34.397952      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:35.398867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:36.400195      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:37.400826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:38.401795      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:39.402603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:40.403262      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:41.403395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:42.404408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:43.404604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:44.405856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:45.406276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:46.407384      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:19:47.385714 16 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:19:47.398
  I0901 12:19:47.398584 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:19:47.403
  E0901 12:19:47.407892      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:19:47.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:19:47.454
  I0901 12:19:47.504423 16 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0901 12:19:47.515732 16 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/01/25 12:19:47.637
  STEP: Removing a custom resource @ 09/01/25 12:19:47.658
  STEP: Removing a custom resource @ 09/01/25 12:19:47.677
  I0901 12:19:47.701088 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-805" for this suite. @ 09/01/25 12:19:47.709
  I0901 12:19:47.727384 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3383" for this suite. @ 09/01/25 12:19:47.813
• [60.540 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/01/25 12:19:47.834
  I0901 12:19:47.834386 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:19:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:19:47.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:19:47.881
  I0901 12:19:47.888485 16 deployment.go:1215] Creating deployment "webserver-deployment"
  I0901 12:19:47.901355 16 deployment.go:1219] Waiting for observed generation 1
  E0901 12:19:48.408550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:49.409555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:19:49.962843 16 deployment.go:1224] Waiting for all required pods to come up
  I0901 12:19:49.972905 16 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/01/25 12:19:49.972
  E0901 12:19:50.411308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:51.412372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:52.412548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:53.412599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:19:54.057091 16 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0901 12:19:54.083549 16 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0901 12:19:54.116053 16 deployment.go:314] Updating deployment webserver-deployment
  I0901 12:19:54.116450 16 deployment.go:1243] Waiting for observed generation 2
  E0901 12:19:54.413236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:19:55.415392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:19:56.143707 16 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0901 12:19:56.152211 16 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0901 12:19:56.164902 16 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:19:56.207556 16 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0901 12:19:56.207904 16 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0901 12:19:56.220904 16 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:19:56.241546 16 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0901 12:19:56.241686 16 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0901 12:19:56.274379 16 deployment.go:314] Updating deployment webserver-deployment
  I0901 12:19:56.274489 16 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:19:56.290936 16 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0901 12:19:56.304174 16 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0901 12:19:56.412508 16 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03580663-5287-4bbc-95dc-4828ac35f0bb",
      ResourceVersion: (string) (len=5) "30756",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0901 12:19:56.418045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:19:56.528056 16 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
      ResourceVersion: (string) (len=5) "30750",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "03580663-5287-4bbc-95dc-4828ac35f0bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 33 35 38 30 36  36 33 2d 35 32 38 37 2d  |\"03580663-5287-|
              00000120  34 62 62 63 2d 39 35 64  63 2d 34 38 32 38 61 63  |4bbc-95dc-4828ac|
              00000130  33 35 66 30 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |35f0bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:19:56.530681 16 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0901 12:19:56.531362 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
      ResourceVersion: (string) (len=5) "30748",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "03580663-5287-4bbc-95dc-4828ac35f0bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 33 35 38 30 36  36 33 2d 35 32 38 37 2d  |\"03580663-5287-|
              00000120  34 62 62 63 2d 39 35 64  63 2d 34 38 32 38 61 63  |4bbc-95dc-4828ac|
              00000130  33 35 66 30 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |35f0bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:19:56.715390 16 deployment.go:68] Pod "webserver-deployment-685b768f58-5xqj9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5xqj9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18147efe-1fa0-439b-9cb4-1ae9c6033a57",
      ResourceVersion: (string) (len=5) "30799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8m8x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8m8x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.728100 16 deployment.go:68] Pod "webserver-deployment-685b768f58-69nvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-69nvj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16a6d985-e39a-457d-a84c-c483b6e5f9f2",
      ResourceVersion: (string) (len=5) "30775",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdxvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdxvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.736143 16 deployment.go:68] Pod "webserver-deployment-685b768f58-7kgvh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7kgvh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed85e18-851d-4c10-afad-73e8aeb4ab7e",
      ResourceVersion: (string) (len=5) "30779",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bm45g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bm45g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.740267 16 deployment.go:68] Pod "webserver-deployment-685b768f58-8bmhp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8bmhp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9c0587d-03d9-4481-8e43-077b09f8b479",
      ResourceVersion: (string) (len=5) "30654",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  33 35 5c 22 7d 22 3a 7b  |.233.64.35\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htx6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htx6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) (len=12) "10.233.64.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325991,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b27153578c00f1e39ab289ef44beba88cb754a66d3afa94ed247331cf87f6509",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-htx6b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.749981 16 deployment.go:68] Pod "webserver-deployment-685b768f58-8l8cc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8l8cc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d28d317c-dd77-4557-bcd7-40f04852faca",
      ResourceVersion: (string) (len=5) "30651",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 36 30 5c 22 7d 22 3a  |.233.64.160\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8zk5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8zk5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) (len=13) "10.233.64.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://caf43b97e23ad0e5a3f6eca1a20907686a676c198ed0faf2027cce6c0ead7bfa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m8zk5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.760584 16 deployment.go:68] Pod "webserver-deployment-685b768f58-dhlx6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dhlx6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb2841ef-9224-45c3-a6a8-9cf934c250f5",
      ResourceVersion: (string) (len=5) "30637",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 31 36 5c 22 7d 22 3a  |.233.65.216\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dptnn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dptnn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=13) "10.233.65.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3c3a83f9f889410a34870bc0cb5f0eff3aaf1b499b60d03051c62c23efe2819b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dptnn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.772024 16 deployment.go:68] Pod "webserver-deployment-685b768f58-dqnt4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dqnt4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73883c31-9f27-455f-986b-bd64e175ec06",
      ResourceVersion: (string) (len=5) "30797",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rt6ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rt6ts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rt6ts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.794561 16 deployment.go:68] Pod "webserver-deployment-685b768f58-g7p4b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-g7p4b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f31d5d1f-5268-4c07-915f-542baed9731d",
      ResourceVersion: (string) (len=5) "30630",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 37 31 5c 22 7d 22 3a  |.233.66.171\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbn6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbn6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://fbfa13a3a67711dd7ccb6811d7c13e573b880dbf25224031fe69bafe897954f1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tbn6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.814701 16 deployment.go:68] Pod "webserver-deployment-685b768f58-j52pm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j52pm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e0e1a10-c386-498b-890f-17fab29faca4",
      ResourceVersion: (string) (len=5) "30801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mfn57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mfn57",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mfn57",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.842358 16 deployment.go:68] Pod "webserver-deployment-685b768f58-jhqzc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jhqzc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5228a230-97e2-46b1-9382-fb01495090cf",
      ResourceVersion: (string) (len=5) "30664",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  36 31 5c 22 7d 22 3a 7b  |.233.64.61\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6htgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6htgn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) (len=12) "10.233.64.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325991,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://94c54bf6ebb2857f74f87856f847de922bcba35d97bf5c6cf192eaefa848f725",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6htgn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.866264 16 deployment.go:68] Pod "webserver-deployment-685b768f58-kx2lr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kx2lr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2456cd93-a2bf-4a9f-925b-d74c8893c09f",
      ResourceVersion: (string) (len=5) "30795",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jxk9q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jxk9q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jxk9q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.876869 16 deployment.go:68] Pod "webserver-deployment-685b768f58-nd2tp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nd2tp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05559c2e-3bb5-4016-89ad-614bb6e5c338",
      ResourceVersion: (string) (len=5) "30639",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 30 5c 22 7d 22 3a  |.233.65.120\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6nzb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6nzb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=13) "10.233.65.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e959007cd746a5fa9ca44aee6b4d9b32b17d5d83cc3616b24839847d318e7e21",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b6nzb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.888428 16 deployment.go:68] Pod "webserver-deployment-685b768f58-pqxns" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pqxns",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "338068a9-0e0f-4a57-bb2c-9a9880dd50aa",
      ResourceVersion: (string) (len=5) "30783",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7qbk7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7qbk7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7qbk7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.915768 16 deployment.go:68] Pod "webserver-deployment-685b768f58-qff4k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qff4k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d96ef50-e4f9-4e21-8159-a9b79c5491bc",
      ResourceVersion: (string) (len=5) "30791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qbbql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qbbql",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qbbql",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.923579 16 deployment.go:68] Pod "webserver-deployment-685b768f58-qsw8f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qsw8f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78e70778-1e96-49a1-8e36-37f236ed1031",
      ResourceVersion: (string) (len=5) "30604",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325987,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 30 31 5c 22 7d 22 3a  |.233.65.101\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dj5ks",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dj5ks",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325987,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=13) "10.233.65.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://342086902d79a63cdee4c9c8a2c2c42e0e322a9e17600b1209a249c16a7cf2ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dj5ks",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.940992 16 deployment.go:68] Pod "webserver-deployment-685b768f58-rjldr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rjldr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b389c10d-6455-41a0-97d0-e143b3736b90",
      ResourceVersion: (string) (len=5) "30657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 33 30 5c 22 7d 22 3a  |.233.66.230\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82644",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82644",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=13) "10.233.66.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892325990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e2b5ef566b268eb1764d3eb34dc048212994d9d238593ec5e7acc91aae070d87",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-82644",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.976773 16 deployment.go:68] Pod "webserver-deployment-685b768f58-s7qmd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s7qmd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e93b33b9-f31a-4874-aaf5-c12829c0b235",
      ResourceVersion: (string) (len=5) "30798",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nlrcv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nlrcv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.984549 16 deployment.go:68] Pod "webserver-deployment-685b768f58-td9nz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-td9nz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36d50b2b-7347-4d55-90e4-78c1c79391ad",
      ResourceVersion: (string) (len=5) "30768",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxmr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxmr9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.987323 16 deployment.go:68] Pod "webserver-deployment-685b768f58-wckdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wckdn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0de20ab4-8f90-44ac-9b58-00a9b0f15765",
      ResourceVersion: (string) (len=5) "30780",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvhgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvhgz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.990019 16 deployment.go:68] Pod "webserver-deployment-685b768f58-zkqdm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zkqdm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bd38e68-16d8-4e30-8636-e5adc81bb8b4",
      ResourceVersion: (string) (len=5) "30763",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "af7677b5-0818-4ef3-b514-d3e9b38ceceb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  37 36 37 37 62 35 2d 30  |d\":\"af7677b5-0|
              00000090  38 31 38 2d 34 65 66 33  2d 62 35 31 34 2d 64 33  |818-4ef3-b514-d3|
              000000a0  65 39 62 33 38 63 65 63  65 62 5c 22 7d 22 3a 7b  |e9b38ceceb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6zsf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6zsf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.993668 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-49qpm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-49qpm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f913695-5f01-4591-9b8e-c35094599642",
      ResourceVersion: (string) (len=5) "30785",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k6g5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k6g5b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:56.997927 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4k9wl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4k9wl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9803f8b5-d3fe-47c2-a691-282590cdb9d7",
      ResourceVersion: (string) (len=5) "30789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5dxpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5dxpc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.001674 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4m2dz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4m2dz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "220401e6-f350-4bd2-a904-4f2b9f4c19c9",
      ResourceVersion: (string) (len=5) "30792",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n79kd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n79kd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.006850 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-59gwm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-59gwm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64182566-5433-4d96-a6df-4d96efe98b95",
      ResourceVersion: (string) (len=5) "30728",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4cjx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4cjx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k4cjx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.049650 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c4klt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c4klt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdb49960-baa3-4b6e-81cc-ba15c5f542f5",
      ResourceVersion: (string) (len=5) "30701",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44m86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44m86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44m86",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.077443 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f486p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f486p",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a9d8283-ca50-461b-a9ed-d6cbcf0b8743",
      ResourceVersion: (string) (len=5) "30731",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bcd7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bcd7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2bcd7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.100220 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hk5vf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hk5vf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8209bef7-7663-4dad-ac40-9e183ef3682e",
      ResourceVersion: (string) (len=5) "30707",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rb9lh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rb9lh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.88",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.88"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rb9lh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.116728 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jm8vm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jm8vm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71d3263a-3f4a-4401-8734-b35cc24f7f7b",
      ResourceVersion: (string) (len=5) "30784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hv9p4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hv9p4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.137933 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mzgk6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mzgk6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "345a5153-7d5b-44f3-88bc-287a42f5aa6b",
      ResourceVersion: (string) (len=5) "30788",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjqbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjqbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.206898 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pm4wh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pm4wh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6fcffc8-6d98-4a5a-bf07-3b5442082222",
      ResourceVersion: (string) (len=5) "30706",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s9c6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s9c6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s9c6b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.227719 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qvvqg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qvvqg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59a67514-67a5-4388-86e2-40270f4a5435",
      ResourceVersion: (string) (len=5) "30773",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5crf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5crf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c5crf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.256651 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s2lwm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s2lwm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8092",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f62fab3a-0b35-4736-aeeb-b32e94c0cbf5",
      ResourceVersion: (string) (len=5) "30794",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892325996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b424fc73-af5a-4919-b664-f139d6525396",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  32 34 66 63 37 33 2d 61  |d\":\"b424fc73-a|
              00000090  66 35 61 2d 34 39 31 39  2d 62 36 36 34 2d 66 31  |f5a-4919-b664-f1|
              000000a0  33 39 64 36 35 32 35 33  39 36 5c 22 7d 22 3a 7b  |39d6525396\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nn45",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nn45",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892325996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:19:57.333596 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:19:57.601652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-8092" for this suite. @ 09/01/25 12:19:57.875
• [10.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 09/01/25 12:19:58.558
  I0901 12:19:58.559027 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:19:58.626521      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:19:58.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:19:58.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:19:59.102
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/01/25 12:19:59.154
  I0901 12:19:59.383920 16 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3429  b6c78ce4-e83b-428a-966e-997d6cdb5219 30873 1 2025-09-01 12:19:59 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-01 12:19:59 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sbsjc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sbsjc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0901 12:19:59.625468      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:00.626493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:01.627394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:02.628439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/01/25 12:20:03.47
  I0901 12:20:03.470891 16 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3429 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:20:03.470996 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:20:03.471198 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-3429/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  E0901 12:20:03.629315      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:20:04.323689 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 09/01/25 12:20:04.323
  I0901 12:20:04.323986 16 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3429 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:20:04.324011 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:20:04.324160 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-3429/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  E0901 12:20:04.630636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:20:05.188531 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:20:05.190239 16 dns.go:451] Deleting pod test-dns-nameservers...
  I0901 12:20:05.274741 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3429" for this suite. @ 09/01/25 12:20:05.329
• [6.826 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 09/01/25 12:20:05.385
  I0901 12:20:05.387276 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:20:05.407
  E0901 12:20:05.631771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:20:05.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:20:05.894
  I0901 12:20:05.959783 16 proxy.go:336] Creating pod...
  E0901 12:20:06.632698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:07.637566      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:08.634061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:09.634762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:20:10.198897 16 proxy.go:360] Creating service...
  I0901 12:20:10.268818 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/DELETE
  I0901 12:20:10.301268 16 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:20:10.301377 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/GET
  I0901 12:20:10.308031 16 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:20:10.308541 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/HEAD
  I0901 12:20:10.318770 16 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0901 12:20:10.318850 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/OPTIONS
  I0901 12:20:10.326288 16 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:20:10.327060 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/PATCH
  I0901 12:20:10.335448 16 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:20:10.335521 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/POST
  I0901 12:20:10.342440 16 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:20:10.342521 16 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/pods/agnhost/proxy/some/path/with/PUT
  I0901 12:20:10.350864 16 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:20:10.350948 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/DELETE
  I0901 12:20:10.359851 16 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:20:10.359909 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/GET
  I0901 12:20:10.369570 16 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:20:10.370086 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/HEAD
  I0901 12:20:10.381675 16 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0901 12:20:10.381758 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/OPTIONS
  I0901 12:20:10.395858 16 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:20:10.395922 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/PATCH
  I0901 12:20:10.407612 16 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:20:10.407703 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/POST
  I0901 12:20:10.420533 16 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:20:10.420654 16 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9595/services/test-service/proxy/some/path/with/PUT
  I0901 12:20:10.430620 16 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:20:10.430862 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9595" for this suite. @ 09/01/25 12:20:10.442
• [5.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 09/01/25 12:20:10.454
  I0901 12:20:10.455005 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:20:10.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:20:10.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:20:10.496
  I0901 12:20:10.501696 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8616 version'
  E0901 12:20:10.640604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:20:10.656064 16 builder.go:146] stderr: ""
  I0901 12:20:10.656911 16 builder.go:147] stdout: "Client Version: v1.33.4\nKustomize Version: v5.6.0\nServer Version: v1.33.4\n"
  I0901 12:20:10.659955 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8616" for this suite. @ 09/01/25 12:20:10.672
• [0.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/01/25 12:20:10.694
  I0901 12:20:10.695057 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:20:10.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:20:10.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:20:10.736
  STEP: Creating a suspended cronjob @ 09/01/25 12:20:10.743
  STEP: Ensuring no jobs are scheduled @ 09/01/25 12:20:10.755
  E0901 12:20:11.636217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:12.638699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:13.637746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:14.638225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:15.638600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:16.640342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:17.639480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:18.639712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:19.640011      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:20.640519      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:21.641644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:22.642553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:23.643351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:24.643686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:25.643969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:26.644401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:27.644811      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:28.645209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:29.645234      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:30.646431      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:31.646756      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:32.647541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:33.648669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:34.649326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:35.650210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:36.650713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:37.651972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:38.652713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:39.653992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:40.654598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:41.654873      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:42.655906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:43.657242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:44.657924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:45.658719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:46.659402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:47.659826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:48.660624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:49.661786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:50.661375      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:51.661512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:52.662444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:53.662824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:54.663280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:55.663180      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:56.663996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:57.664802      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:58.665440      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:20:59.666432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:00.666759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:01.668072      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:02.667654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:03.668312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:04.668639      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:05.670947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:06.670187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:07.671063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:08.672186      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:09.672433      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:10.672668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:11.672800      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:12.673198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:13.673061      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:14.673869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:15.675396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:16.675596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:17.677777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:18.676629      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:19.677030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:20.678408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:21.678583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:22.679094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:23.679852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:24.680574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:25.682219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:26.682902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:27.683632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:28.683944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:29.684674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:30.684992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:31.685605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:32.686679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:33.687543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:34.687882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:35.688385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:36.688436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:37.689017      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:38.689500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:39.690874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:40.691903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:41.691935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:42.692831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:43.693483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:44.693932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:45.694634      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:46.695010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:47.696088      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:48.696939      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:49.696988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:50.697867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:51.698666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:52.699682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:53.701753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:54.701151      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:55.701569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:56.701835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:57.703091      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:58.702694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:21:59.707068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:00.703432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:01.704477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:02.704971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:03.707768      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:04.706723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:05.707372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:06.708267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:07.709602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:08.710555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:09.711439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:10.712454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:11.713715      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:12.714710      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:13.715836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:14.715801      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:15.717224      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:16.717632      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:17.718059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:18.718836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:19.718928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:20.719696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:21.720590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:22.721544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:23.722613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:24.723540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:25.723926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:26.724455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:27.725531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:28.726238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:29.726709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:30.727446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:31.728085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:32.728450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:33.728745      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:34.729287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:35.729635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:36.730332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:37.730611      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:38.731022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:39.731090      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:40.731774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:41.732531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:42.732276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:43.732878      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:44.733862      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:45.734182      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:46.734970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:47.735362      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:48.735677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:49.736595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:50.737436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:51.737243      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:52.737726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:53.738590      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:54.738245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:55.739744      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:56.739782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:57.740413      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:58.741071      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:22:59.740943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:00.741374      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:01.742801      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:02.742206      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:03.743004      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:04.743376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:05.743771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:06.744776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:07.744932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:08.745236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:09.745816      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:10.745782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:11.745898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:12.746257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:13.746696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:14.747824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:15.748725      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:16.749571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:17.749527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:18.750586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:19.750644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:20.751016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:21.752046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:22.753020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:23.752756      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:24.753230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:25.753591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:26.754445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:27.754478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:28.755014      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:29.755389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:30.756362      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:31.757017      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:32.757676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:33.758856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:34.759396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:35.760224      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:36.761279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:37.761423      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:38.762877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:39.762832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:40.763787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:41.764402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:42.765357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:43.765652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:44.766030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:45.766517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:46.767207      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:47.767252      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:48.767711      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:49.767990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:50.768497      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:51.769616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:52.769573      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:53.770380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:54.771706      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:55.772240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:56.773010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:57.773841      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:58.774091      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:23:59.774637      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:00.775858      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:01.775878      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:02.776531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:03.776642      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:04.777096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:05.777957      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:06.779363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:07.780247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:08.780356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:09.780976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:10.781430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:11.781438      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:12.781580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:13.782285      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:14.783330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:15.784034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:16.784360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:17.784665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:18.785771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:19.786655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:20.787985      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:21.787549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:22.788902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:23.789500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:24.790230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:25.790066      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:26.791441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:27.791583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:28.792028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:29.792575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:30.793388      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:31.793719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:32.794509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:33.795484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:34.795935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:35.796349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:36.797595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:37.797965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:38.798660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:39.799047      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:40.801453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:41.801650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:42.802403      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:43.802980      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:44.804346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:45.803869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:46.804001      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:47.804537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:48.805286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:49.806257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:50.806369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:51.822571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:52.811057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:53.811515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:54.811625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:55.812711      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:56.813398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:57.813377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:58.828067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:24:59.816819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:00.817691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:01.817336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:02.819969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:03.818933      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:04.819297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:05.819720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:06.819908      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:07.820595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:08.821366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:09.821598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/01/25 12:25:10.756
  STEP: Removing cronjob @ 09/01/25 12:25:10.771
  I0901 12:25:10.799784 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:25:10.821704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "cronjob-7255" for this suite. @ 09/01/25 12:25:10.821
• [300.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/01/25 12:25:10.854
  I0901 12:25:10.854873 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:25:10.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:10.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:10.926
  I0901 12:25:10.938939 16 replica_set.go:192] Creating ReplicaSet my-hostname-basic-d3e2ec2b-3541-4dfa-95a4-67462e2b0d36
  I0901 12:25:10.967714 16 resource.go:81] Pod name my-hostname-basic-d3e2ec2b-3541-4dfa-95a4-67462e2b0d36: Found 0 pods out of 1
  E0901 12:25:11.822798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:12.823323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:13.823571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:14.824531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:15.824697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:25:15.982993 16 resource.go:81] Pod name my-hostname-basic-d3e2ec2b-3541-4dfa-95a4-67462e2b0d36: Found 1 pods out of 1
  I0901 12:25:15.983140 16 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-d3e2ec2b-3541-4dfa-95a4-67462e2b0d36" is running
  I0901 12:25:15.996049 16 replica_set.go:221] Pod "my-hostname-basic-d3e2ec2b-3541-4dfa-95a4-67462e2b0d36-5zndq" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:25:12 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:25:11 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:25:12 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:25:12 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:25:10 +0000 UTC Reason: Message:}])
  I0901 12:25:15.996204 16 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 12:25:15.996
  I0901 12:25:16.024422 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4337" for this suite. @ 09/01/25 12:25:16.034
• [5.196 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/01/25 12:25:16.051
  I0901 12:25:16.051189 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename server-version @ 09/01/25 12:25:16.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:16.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:16.08
  STEP: Request ServerVersion @ 09/01/25 12:25:16.086
  STEP: Confirm major version @ 09/01/25 12:25:16.088
  I0901 12:25:16.089061 16 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/01/25 12:25:16.089
  I0901 12:25:16.089246 16 server_version.go:58] cleanMinorVersion: 33
  I0901 12:25:16.089285 16 server_version.go:62] Minor version: 33
  I0901 12:25:16.089543 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6973" for this suite. @ 09/01/25 12:25:16.135
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 09/01/25 12:25:16.156
  I0901 12:25:16.156297 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:25:16.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:16.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:16.2
  STEP: Counting existing ResourceQuota @ 09/01/25 12:25:16.206
  E0901 12:25:16.824747      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:17.826297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:18.826490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:19.826869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:20.827316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:25:21.28
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:25:21.292
  E0901 12:25:21.827056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:22.827335      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/01/25 12:25:23.306
  STEP: Ensuring resource quota status captures replicaset creation @ 09/01/25 12:25:23.348
  E0901 12:25:23.828310      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:24.829282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/01/25 12:25:25.362
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:25:25.381
  E0901 12:25:25.829629      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:26.829676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:25:27.397842 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1102" for this suite. @ 09/01/25 12:25:27.413
• [11.286 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/01/25 12:25:27.443
  I0901 12:25:27.443356 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:25:27.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:27.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:27.499
  STEP: Creating a cronjob @ 09/01/25 12:25:27.544
  STEP: Ensuring more than one job is running at a time @ 09/01/25 12:25:27.561
  E0901 12:25:27.830529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:28.831573      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:29.831663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:30.831833      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:31.832972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:32.833060      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:33.834230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:34.834717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:35.835429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:36.836288      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:37.836527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:38.837337      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:39.837614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:40.837624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:41.838018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:42.838391      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:43.838929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:44.839739      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:45.840732      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:46.840598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:47.841490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:48.842408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:49.843068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:50.843554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:51.844587      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:52.843976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:53.845816      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:54.845760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:55.846500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:56.846654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:57.847724      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:58.848325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:25:59.848348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:00.848426      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:01.849355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:02.849855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:03.850075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:04.850396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:05.851566      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:06.853420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:07.853030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:08.853766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:09.854665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:10.854292      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:11.855571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:12.855898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:13.856652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:14.858052      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:15.859727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:16.859805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:17.860635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:18.861393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:19.861519      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:20.862606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:21.863387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:22.862946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:23.863316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:24.863470      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:25.864673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:26.865360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:27.866794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:28.867363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:29.867676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:30.867993      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:31.868085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:32.868672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:33.868417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:34.869282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:35.869317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:36.869680      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:37.870255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:38.870761      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:39.871178      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:40.871957      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:41.872416      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:42.873297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:43.873529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:44.873864      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:45.874107      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:46.874609      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:47.875846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:48.876256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:49.877523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:50.877764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:51.878380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:52.878599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:53.878841      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:54.879363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:55.880564      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:56.880536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:57.882226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:58.882348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:26:59.882432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:00.883417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/01/25 12:27:01.579
  STEP: Removing cronjob @ 09/01/25 12:27:01.594
  I0901 12:27:01.620551 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6847" for this suite. @ 09/01/25 12:27:01.647
• [94.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/01/25 12:27:01.679
  I0901 12:27:01.679075 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:27:01.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:01.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:01.757
  I0901 12:27:01.796560 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2568" for this suite. @ 09/01/25 12:27:01.806
• [0.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/01/25 12:27:01.823
  I0901 12:27:01.823593 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:27:01.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:01.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:01.855
  STEP: creating a watch on configmaps with label A @ 09/01/25 12:27:01.861
  STEP: creating a watch on configmaps with label B @ 09/01/25 12:27:01.863
  STEP: creating a watch on configmaps with label A or B @ 09/01/25 12:27:01.866
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/01/25 12:27:01.87
  I0901 12:27:01.881974 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32283 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:01.882991 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32283 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/01/25 12:27:01.883
  E0901 12:27:01.883469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:27:01.903543 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32284 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:01.904271 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32284 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/01/25 12:27:01.904
  I0901 12:27:01.924415 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32285 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:01.924652 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32285 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/01/25 12:27:01.925
  I0901 12:27:01.946451 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32286 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:01.947050 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3461  c6835fa3-d6f0-4a18-bcdc-2df48575b123 32286 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/01/25 12:27:01.947
  I0901 12:27:01.964534 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3461  5c64d15f-cc14-4b8d-95aa-011dac8ef341 32287 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:01.964815 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3461  5c64d15f-cc14-4b8d-95aa-011dac8ef341 32287 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0901 12:27:02.884541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:03.884784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:04.885523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:05.885827      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:06.885832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:07.886041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:08.886445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:09.886872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:10.887096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:11.888068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/01/25 12:27:11.966
  I0901 12:27:11.991020 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3461  5c64d15f-cc14-4b8d-95aa-011dac8ef341 32316 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:27:11.992744 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3461  5c64d15f-cc14-4b8d-95aa-011dac8ef341 32316 0 2025-09-01 12:27:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:27:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0901 12:27:12.888533      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:13.889612      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:14.890026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:15.891025      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:16.890944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:17.895056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:18.893220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:19.894172      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:20.894574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:21.895074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:27:21.993877 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3461" for this suite. @ 09/01/25 12:27:22.012
• [20.213 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/01/25 12:27:22.035
  I0901 12:27:22.035923 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:27:22.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:22.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:22.081
  I0901 12:27:22.133748 16 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0901 12:27:22.133878 16 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0901 12:27:22.147613 16 service_accounts.go:281] created pod pod-service-account-mountsa
  I0901 12:27:22.148228 16 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0901 12:27:22.161475 16 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0901 12:27:22.162059 16 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0901 12:27:22.178253 16 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0901 12:27:22.178334 16 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0901 12:27:22.229471 16 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0901 12:27:22.231933 16 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0901 12:27:22.304448 16 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0901 12:27:22.305185 16 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0901 12:27:22.352523 16 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0901 12:27:22.353247 16 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0901 12:27:22.391976 16 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0901 12:27:22.392058 16 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0901 12:27:22.485047 16 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0901 12:27:22.485174 16 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0901 12:27:22.485378 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6495" for this suite. @ 09/01/25 12:27:22.518
• [0.668 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/01/25 12:27:22.732
  I0901 12:27:22.732269 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:27:22.736
  E0901 12:27:22.895476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:22.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:23.151
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:27:23.234
  E0901 12:27:23.905412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:24.906332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:25.908467      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:26.908797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:27.409
  I0901 12:27:27.418495 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-abda8457-65bc-4153-b53d-db6756df1cb3 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:27.475
  I0901 12:27:27.519480 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5707" for this suite. @ 09/01/25 12:27:27.532
• [4.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/01/25 12:27:27.55
  I0901 12:27:27.550513 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:27:27.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:27.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:27.603
  I0901 12:27:27.614654 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:27:27.908598      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:28.913896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:29.916364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:30.915703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:27:31.073427 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6785" for this suite. @ 09/01/25 12:27:31.091
• [3.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/01/25 12:27:31.122
  I0901 12:27:31.122268 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context @ 09/01/25 12:27:31.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:31.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:31.175
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 12:27:31.188
  E0901 12:27:31.925187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:32.916175      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:33.917192      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:34.917739      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:35.285
  I0901 12:27:35.295327 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod security-context-d1849f00-ca58-4143-be22-ac69be60ca49 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:35.325
  I0901 12:27:35.379669 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-827" for this suite. @ 09/01/25 12:27:35.395
• [4.300 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/01/25 12:27:35.422
  I0901 12:27:35.422998 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:27:35.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:35.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:35.47
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 12:27:35.478
  E0901 12:27:35.918410      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:36.918405      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:37.920039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:38.920464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:39.554
  I0901 12:27:39.568072 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-4bc34c29-1cea-4ca8-bdc3-eca30945bb13 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:39.597
  I0901 12:27:39.675565 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3227" for this suite. @ 09/01/25 12:27:39.689
• [4.286 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/01/25 12:27:39.709
  I0901 12:27:39.709286 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:27:39.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:39.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:39.754
  STEP: create the deployment @ 09/01/25 12:27:39.763
  I0901 12:27:39.778005      16 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 12:27:39.778
  E0901 12:27:39.921386      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/01/25 12:27:40.3
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/01/25 12:27:40.323
  E0901 12:27:40.924190      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:27:40.927
  I0901 12:27:41.403287 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:27:41.404265 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6994" for this suite. @ 09/01/25 12:27:41.419
• [1.729 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 09/01/25 12:27:41.44
  I0901 12:27:41.440465 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:27:41.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:41.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:41.483
  STEP: creating the pod @ 09/01/25 12:27:41.491
  I0901 12:27:41.492952 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 create -f -'
  E0901 12:27:41.923809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:27:42.036192 16 builder.go:146] stderr: ""
  I0901 12:27:42.036353 16 builder.go:147] stdout: "pod/pause created\n"
  E0901 12:27:42.923443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:43.923764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/01/25 12:27:44.065
  I0901 12:27:44.066781 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 label pods pause testing-label=testing-label-value'
  I0901 12:27:44.367309 16 builder.go:146] stderr: ""
  I0901 12:27:44.367589 16 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/01/25 12:27:44.367
  I0901 12:27:44.368572 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 get pod pause -L testing-label'
  I0901 12:27:44.578022 16 builder.go:146] stderr: ""
  I0901 12:27:44.578456 16 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/01/25 12:27:44.578
  I0901 12:27:44.579085 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 label pods pause testing-label-'
  I0901 12:27:44.794458 16 builder.go:146] stderr: ""
  I0901 12:27:44.794625 16 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/01/25 12:27:44.795
  I0901 12:27:44.795810 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 get pod pause -L testing-label'
  E0901 12:27:44.924245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:27:44.978050 16 builder.go:146] stderr: ""
  I0901 12:27:44.978688 16 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/01/25 12:27:44.979
  I0901 12:27:44.979901 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 delete --grace-period=0 --force -f -'
  I0901 12:27:45.174797 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:27:45.175006 16 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0901 12:27:45.175573 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 get rc,svc -l name=pause --no-headers'
  I0901 12:27:45.438877 16 builder.go:146] stderr: "No resources found in kubectl-4049 namespace.\n"
  I0901 12:27:45.438970 16 builder.go:147] stdout: ""
  I0901 12:27:45.439345 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4049 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 12:27:45.625619 16 builder.go:146] stderr: ""
  I0901 12:27:45.625720 16 builder.go:147] stdout: ""
  I0901 12:27:45.626015 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4049" for this suite. @ 09/01/25 12:27:45.639
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:27:45.653
  I0901 12:27:45.653958 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:27:45.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:45.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:45.699
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:27:45.711
  E0901 12:27:45.924507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:46.924574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:47.927202      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:48.926493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:49.796
  I0901 12:27:49.812165 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-239ae16d-b5db-4b9c-9cd9-aa9e598f8887 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:49.839
  I0901 12:27:49.877024 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5715" for this suite. @ 09/01/25 12:27:49.887
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/01/25 12:27:49.905
  I0901 12:27:49.906040 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename lease-test @ 09/01/25 12:27:49.91
  E0901 12:27:49.927029      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:49.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:49.937
  I0901 12:27:50.066449 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6061" for this suite. @ 09/01/25 12:27:50.078
• [0.190 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/01/25 12:27:50.097
  I0901 12:27:50.097913 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:27:50.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:50.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:50.132
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:27:50.142
  E0901 12:27:50.927526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:51.928681      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:52.929465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:53.929480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:54.191
  I0901 12:27:54.204245 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-961bbe53-3892-4d32-b52f-00143f8ee0fa container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:54.231
  I0901 12:27:54.281077 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5719" for this suite. @ 09/01/25 12:27:54.297
• [4.223 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/01/25 12:27:54.325
  I0901 12:27:54.325878 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:27:54.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:54.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:54.37
  STEP: create the container @ 09/01/25 12:27:54.377
  I0901 12:27:54.408744      16 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:27:54.409
  E0901 12:27:54.929460      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:55.930692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:56.931237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 12:27:57.467
  STEP: the container should be terminated @ 09/01/25 12:27:57.48
  STEP: the termination message should be set @ 09/01/25 12:27:57.482
  I0901 12:27:57.483551 16 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/01/25 12:27:57.484
  I0901 12:27:57.550818 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1191" for this suite. @ 09/01/25 12:27:57.563
• [3.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:27:57.579
  I0901 12:27:57.579505 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:27:57.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:57.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:57.636
  STEP: Create a ReplicaSet @ 09/01/25 12:27:57.644
  STEP: Verify that the required pods have come up @ 09/01/25 12:27:57.653
  I0901 12:27:57.670325 16 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0901 12:27:57.931408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:58.932067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:27:59.933209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:00.933062      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:01.933504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:02.687861 16 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/01/25 12:28:02.687
  I0901 12:28:02.699544 16 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/01/25 12:28:02.699
  STEP: DeleteCollection of the ReplicaSets @ 09/01/25 12:28:02.715
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/01/25 12:28:02.741
  I0901 12:28:02.820552 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5096" for this suite. @ 09/01/25 12:28:02.859
• [5.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 09/01/25 12:28:02.915
  I0901 12:28:02.915741 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:28:02.924
  E0901 12:28:02.933712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:02.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:02.991
  STEP: Creating a ResourceQuota @ 09/01/25 12:28:03.003
  STEP: Getting a ResourceQuota @ 09/01/25 12:28:03.011
  STEP: Updating a ResourceQuota @ 09/01/25 12:28:03.025
  STEP: Verifying a ResourceQuota was modified @ 09/01/25 12:28:03.07
  STEP: Deleting a ResourceQuota @ 09/01/25 12:28:03.097
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 12:28:03.112
  I0901 12:28:03.123541 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3928" for this suite. @ 09/01/25 12:28:03.157
• [0.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:28:03.227
  I0901 12:28:03.228033 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/01/25 12:28:03.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:03.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:03.295
  STEP: getting /apis @ 09/01/25 12:28:03.305
  STEP: getting /apis/storage.k8s.io @ 09/01/25 12:28:03.314
  STEP: getting /apis/storage.k8s.io/v1 @ 09/01/25 12:28:03.316
  STEP: creating @ 09/01/25 12:28:03.319
  STEP: watching @ 09/01/25 12:28:03.359
  I0901 12:28:03.360003 16 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/01/25 12:28:03.373
  STEP: listing in namespace @ 09/01/25 12:28:03.38
  STEP: listing across namespaces @ 09/01/25 12:28:03.388
  STEP: patching @ 09/01/25 12:28:03.394
  STEP: updating @ 09/01/25 12:28:03.408
  I0901 12:28:03.418378 16 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0901 12:28:03.418588 16 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/01/25 12:28:03.418
  STEP: deleting a collection @ 09/01/25 12:28:03.449
  I0901 12:28:03.486200 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7071" for this suite. @ 09/01/25 12:28:03.494
• [0.279 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 09/01/25 12:28:03.507
  I0901 12:28:03.507760 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:28:03.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:03.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:03.542
  E0901 12:28:03.934406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:04.934710      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:05.936106      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:06.938532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:07.938404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:08.938420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:09.939451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:10.939658      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:11.657954 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9340" for this suite. @ 09/01/25 12:28:11.669
• [8.181 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/01/25 12:28:11.689
  I0901 12:28:11.689490 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:28:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:11.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:11.733
  STEP: create the container @ 09/01/25 12:28:11.743
  I0901 12:28:11.766073      16 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/01/25 12:28:11.766
  E0901 12:28:11.940686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:12.941828      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:13.941689      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 12:28:14.806
  STEP: the container should be terminated @ 09/01/25 12:28:14.818
  STEP: the termination message should be set @ 09/01/25 12:28:14.818
  I0901 12:28:14.819010 16 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 12:28:14.819
  I0901 12:28:14.880686 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8176" for this suite. @ 09/01/25 12:28:14.896
• [3.224 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:28:14.913
  I0901 12:28:14.913512 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:28:14.918
  E0901 12:28:14.944019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:14.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:15.004
  STEP: creating the pod @ 09/01/25 12:28:15.011
  STEP: submitting the pod to kubernetes @ 09/01/25 12:28:15.011
  STEP: verifying QOS class is set on the pod @ 09/01/25 12:28:15.037
  I0901 12:28:15.048871 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9658" for this suite. @ 09/01/25 12:28:15.073
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/01/25 12:28:15.094
  I0901 12:28:15.094911 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:28:15.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:15.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:15.173
  STEP: Setting up server cert @ 09/01/25 12:28:15.222
  E0901 12:28:15.943309      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:28:16.073
  STEP: Deploying the webhook pod @ 09/01/25 12:28:16.089
  STEP: Wait for the deployment to be ready @ 09/01/25 12:28:16.116
  I0901 12:28:16.141020 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:28:16.945489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:17.946989      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:18.175450 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 28, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 28, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 28, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 28, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:28:18.947628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:19.948726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:28:20.19
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:28:20.241
  E0901 12:28:20.949708      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:21.242461 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/01/25 12:28:21.265
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/01/25 12:28:21.334
  I0901 12:28:21.334503 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  I0901 12:28:21.498159 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3202" for this suite. @ 09/01/25 12:28:21.519
  STEP: Destroying namespace "webhook-markers-8570" for this suite. @ 09/01/25 12:28:21.537
• [6.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/01/25 12:28:21.563
  I0901 12:28:21.563413 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename events @ 09/01/25 12:28:21.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:21.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:21.604
  STEP: Create set of events @ 09/01/25 12:28:21.61
  I0901 12:28:21.631238 16 core_events.go:198] created test-event-1
  I0901 12:28:21.639323 16 core_events.go:198] created test-event-2
  I0901 12:28:21.647891 16 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 12:28:21.647
  STEP: delete collection of events @ 09/01/25 12:28:21.656
  I0901 12:28:21.656284 16 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 12:28:21.71
  I0901 12:28:21.710297 16 core_events.go:230] requesting list of events to confirm quantity
  I0901 12:28:21.746395 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6952" for this suite. @ 09/01/25 12:28:21.756
• [0.207 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/01/25 12:28:21.769
  I0901 12:28:21.770028 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 12:28:21.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:21.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:21.805
  I0901 12:28:21.810237 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 12:28:21.880188 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:28:21.891494 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-1 before test
  I0901 12:28:21.913035 16 predicates.go:958] cilium-jq2g6 from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913126 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:28:21.913153 16 predicates.go:958] cilium-node-init-24srs from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913170 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:28:21.913187 16 predicates.go:958] cilium-operator-66b866ccb5-tvdgj from kube-system started at 2025-09-01 11:44:58 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913202 16 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0901 12:28:21.913220 16 predicates.go:958] kube-apiserver-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913235 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:28:21.913252 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913266 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:28:21.913282 16 predicates.go:958] kube-proxy-sfcrg from kube-system started at 2025-09-01 10:45:37 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913296 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:28:21.913312 16 predicates.go:958] kube-scheduler-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.913327 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:28:21.913342 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8 from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:28:21.913356 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:28:21.913369 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:28:21.913390 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-2 before test
  I0901 12:28:21.940285 16 predicates.go:958] cilium-jb44h from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940359 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:28:21.940384 16 predicates.go:958] cilium-node-init-2jnhr from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940405 16 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 12:28:21.940428 16 predicates.go:958] coredns-674b8bbfcf-6wfq2 from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940445 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:28:21.940466 16 predicates.go:958] coredns-674b8bbfcf-xqczq from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940485 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:28:21.940502 16 predicates.go:958] kube-apiserver-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940518 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:28:21.940535 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940550 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:28:21.940566 16 predicates.go:958] kube-proxy-vkvcp from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940579 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:28:21.940595 16 predicates.go:958] kube-scheduler-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.940608 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:28:21.940625 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-q8n4b from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:28:21.940639 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:28:21.940653 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:28:21.940670 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-3 before test
  E0901 12:28:21.950322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:21.965249 16 predicates.go:958] cilium-7ffvq from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.965617 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:28:21.965867 16 predicates.go:958] cilium-node-init-r4zwt from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.965892 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:28:21.965911 16 predicates.go:958] kube-proxy-m96dg from kube-system started at 2025-09-01 10:47:04 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.965927 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:28:21.965945 16 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:20 +0000 UTC (1 container statuses recorded)
  I0901 12:28:21.965960 16 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 12:28:21.965981 16 predicates.go:958] sonobuoy-e2e-job-4eba01326b644eed from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:28:21.965996 16 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 12:28:21.966018 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:28:21.966035 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-bx8bz from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:28:21.966050 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:28:21.966064 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:28:21.966
  E0901 12:28:22.950447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:23.951257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:28:24.027
  STEP: Trying to apply a random label on the found node. @ 09/01/25 12:28:24.06
  STEP: verifying the node has the label kubernetes.io/e2e-19d4ce19-604e-4216-8ec3-a537ebe7842b 42 @ 09/01/25 12:28:24.094
  STEP: Trying to relaunch the pod, now with labels. @ 09/01/25 12:28:24.105
  E0901 12:28:24.951787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:25.952385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-19d4ce19-604e-4216-8ec3-a537ebe7842b off the node xoongeig7eeb-3 @ 09/01/25 12:28:26.16
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-19d4ce19-604e-4216-8ec3-a537ebe7842b @ 09/01/25 12:28:26.205
  I0901 12:28:26.227998 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-553" for this suite. @ 09/01/25 12:28:26.244
• [4.492 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 09/01/25 12:28:26.262
  I0901 12:28:26.262056 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:28:26.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:26.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:26.301
  I0901 12:28:26.319064      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/01/25 12:28:26.319
  I0901 12:28:26.328040      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/01/25 12:28:26.328
  I0901 12:28:26.334433      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/01/25 12:28:26.334
  I0901 12:28:26.339939      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/01/25 12:28:26.34
  I0901 12:28:26.350255      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:28:26.353635      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:28:26.354
  I0901 12:28:26.360640      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/01/25 12:28:26.36
  I0901 12:28:26.375973      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:28:26.378591      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:28:26.378
  I0901 12:28:26.384310      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/01/25 12:28:26.384
  I0901 12:28:26.401233      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/01/25 12:28:26.401
  I0901 12:28:26.404444      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:28:26.404
  I0901 12:28:26.409296      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:28:26.410648 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2439" for this suite. @ 09/01/25 12:28:26.417
• [0.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:28:26.439
  I0901 12:28:26.439060 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:28:26.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:26.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:26.479
  STEP: creating pod @ 09/01/25 12:28:26.485
  E0901 12:28:26.953604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:27.953837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:28.539949 16 pods.go:83] Pod pod-hostip-b37327c4-dec9-4b21-99a7-27c96ee0a192 has hostIP: 192.168.121.109
  I0901 12:28:28.540271 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5979" for this suite. @ 09/01/25 12:28:28.554
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/01/25 12:28:28.577
  I0901 12:28:28.578055 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:28:28.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:28.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:28.615
  STEP: Setting up server cert @ 09/01/25 12:28:28.658
  E0901 12:28:28.954567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:29.954836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:28:30.273
  STEP: Deploying the webhook pod @ 09/01/25 12:28:30.288
  STEP: Wait for the deployment to be ready @ 09/01/25 12:28:30.315
  I0901 12:28:30.342656 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:28:30.956337      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:31.955589      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:32.383892 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 28, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 28, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 28, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 28, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:28:32.956866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:33.957008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:28:34.397
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:28:34.459
  E0901 12:28:34.957663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:35.460939 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 12:28:35.48
  STEP: verifying the mutating webhook match conditions @ 09/01/25 12:28:35.503
  STEP: updating the mutating webhook match conditions @ 09/01/25 12:28:35.515
  STEP: verifying the mutating webhook match conditions @ 09/01/25 12:28:35.547
  I0901 12:28:35.693904 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-759" for this suite. @ 09/01/25 12:28:35.71
  STEP: Destroying namespace "webhook-markers-7690" for this suite. @ 09/01/25 12:28:35.733
• [7.180 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/01/25 12:28:35.758
  I0901 12:28:35.758352 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:28:35.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:35.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:35.801
  STEP: Creating the pod @ 09/01/25 12:28:35.81
  E0901 12:28:35.958356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:36.958783      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:37.959667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:38.431303 16 pod_client.go:173] Successfully updated pod "labelsupdate6a82fcdb-19ac-420c-a3f4-54a83c115a60"
  E0901 12:28:38.960239      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:39.960656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:28:40.501358 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3365" for this suite. @ 09/01/25 12:28:40.523
• [4.790 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/01/25 12:28:40.549
  I0901 12:28:40.549466 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:28:40.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:40.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:40.591
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/01/25 12:28:40.628
  E0901 12:28:40.960493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:41.960839      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:42.961603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:43.962872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:44.963208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:45.963536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:46.965462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:47.965428      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:48.965675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:49.966599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:50.967162      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:51.968032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:52.968429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:53.968863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:54.969958      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:55.970518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/01/25 12:28:56.873
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/01/25 12:28:56.886
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/01/25 12:28:56.918
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/01/25 12:28:56.918
  E0901 12:28:56.971793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/01/25 12:28:57.022
  E0901 12:28:57.975668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:58.976011      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:28:59.975996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/01/25 12:29:00.069
  E0901 12:29:00.978261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/01/25 12:29:01.092
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/01/25 12:29:01.114
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/01/25 12:29:01.114
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/01/25 12:29:01.204
  E0901 12:29:01.979409      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/01/25 12:29:02.227
  E0901 12:29:02.979774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:03.992308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/01/25 12:29:04.273
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/01/25 12:29:04.321
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/01/25 12:29:04.321
  I0901 12:29:04.391512 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3801" for this suite. @ 09/01/25 12:29:04.409
• [23.883 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/01/25 12:29:04.434
  I0901 12:29:04.434984 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/01/25 12:29:04.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:04.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:04.475
  STEP: Setting up the test @ 09/01/25 12:29:04.481
  STEP: Creating hostNetwork=false pod @ 09/01/25 12:29:04.482
  E0901 12:29:04.989943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:05.986272      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:06.986785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:08.004959      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/01/25 12:29:08.567
  E0901 12:29:08.994882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:09.994716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/01/25 12:29:10.638
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/01/25 12:29:10.638
  I0901 12:29:10.639348 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:10.639454 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:10.639818 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:29:10.819562 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:10.819676 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:10.820148 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:10.820196 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:10.820523 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:29:10.929886 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:10.929997 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:10.930067 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:10.930147 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:10.930298 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  E0901 12:29:10.995760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:29:11.072544 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.072646 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:11.072711 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.073091 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.073729 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 12:29:11.207254 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.207475 16 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/01/25 12:29:11.207
  I0901 12:29:11.207640 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.207669 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.207836 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0901 12:29:11.384023 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.384182 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:11.384261 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.384288 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.384456 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0901 12:29:11.533426 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.533700 16 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/01/25 12:29:11.533
  I0901 12:29:11.534539 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.534725 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.537292 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:29:11.709998 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.711079 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:11.711527 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.711575 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.712197 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:29:11.850011 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.850137 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:11.850188 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.850242 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.850395 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 12:29:11.993482 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:11.993613 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:11.993688 16 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-791 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:29:11.993707 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:29:11.993878 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-791/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  E0901 12:29:11.996760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:29:12.097553 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:29:12.097803 16 exec_util.go:112] Exec stderr: ""
  I0901 12:29:12.099075 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-791" for this suite. @ 09/01/25 12:29:12.114
• [7.701 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 09/01/25 12:29:12.137
  I0901 12:29:12.137396 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:29:12.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:12.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:12.189
  E0901 12:29:12.996728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:13.998387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:14.998191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:15.999089      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:29:16.287239 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3669" for this suite. @ 09/01/25 12:29:16.307
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/01/25 12:29:16.34
  I0901 12:29:16.340429 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 12:29:16.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:16.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:16.393
  I0901 12:29:16.495192 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1507" for this suite. @ 09/01/25 12:29:16.509
• [0.190 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/01/25 12:29:16.531
  I0901 12:29:16.531197 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:29:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:16.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:16.57
  STEP: create the rc @ 09/01/25 12:29:16.609
  I0901 12:29:16.625002      16 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0901 12:29:16.999928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:17.999452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:19.000358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:20.000552      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:21.002677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:22.129176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:23.050811      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:24.055396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:25.084357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:26.113766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:27.124329      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 12:29:28.112
  E0901 12:29:28.145688      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/01/25 12:29:28.705
  E0901 12:29:29.150317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:30.191456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:31.250936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:32.224530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:33.225920      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/01/25 12:29:33.722
  E0901 12:29:34.226704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:35.227098      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:36.228481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:37.227728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:38.228365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:39.228789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:40.229068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:41.229602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:42.230610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:43.231553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:44.232002      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:45.232272      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:46.232876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:47.232984      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:48.234182      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:49.235249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:50.235420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:51.235727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:52.236194      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:53.237687      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:54.238144      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:55.238688      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:56.238790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:57.239697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:58.240366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:29:59.241719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:00.242525      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:01.243010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:02.243789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:03.244357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:30:03.756
  I0901 12:30:04.039155 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:30:04.039346 16 delete.go:95] Deleting pod "simpletest.rc-2f9j7" in namespace "gc-6197"
  I0901 12:30:04.078361 16 delete.go:95] Deleting pod "simpletest.rc-2qhxn" in namespace "gc-6197"
  I0901 12:30:04.117933 16 delete.go:95] Deleting pod "simpletest.rc-2wkjn" in namespace "gc-6197"
  I0901 12:30:04.170143 16 delete.go:95] Deleting pod "simpletest.rc-44pq9" in namespace "gc-6197"
  I0901 12:30:04.223777 16 delete.go:95] Deleting pod "simpletest.rc-496nb" in namespace "gc-6197"
  E0901 12:30:04.250526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:04.283881 16 delete.go:95] Deleting pod "simpletest.rc-4gwwx" in namespace "gc-6197"
  I0901 12:30:04.337910 16 delete.go:95] Deleting pod "simpletest.rc-4v7rr" in namespace "gc-6197"
  I0901 12:30:04.451978 16 delete.go:95] Deleting pod "simpletest.rc-4wxjm" in namespace "gc-6197"
  I0901 12:30:04.559382 16 delete.go:95] Deleting pod "simpletest.rc-562mz" in namespace "gc-6197"
  I0901 12:30:04.716358 16 delete.go:95] Deleting pod "simpletest.rc-56bzm" in namespace "gc-6197"
  I0901 12:30:04.807519 16 delete.go:95] Deleting pod "simpletest.rc-585v8" in namespace "gc-6197"
  I0901 12:30:04.988419 16 delete.go:95] Deleting pod "simpletest.rc-58kj7" in namespace "gc-6197"
  I0901 12:30:05.237759 16 delete.go:95] Deleting pod "simpletest.rc-5bjs5" in namespace "gc-6197"
  E0901 12:30:05.257518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:05.396862 16 delete.go:95] Deleting pod "simpletest.rc-5dhkp" in namespace "gc-6197"
  I0901 12:30:05.466517 16 delete.go:95] Deleting pod "simpletest.rc-6462h" in namespace "gc-6197"
  I0901 12:30:05.540290 16 delete.go:95] Deleting pod "simpletest.rc-6bvcd" in namespace "gc-6197"
  I0901 12:30:05.694470 16 delete.go:95] Deleting pod "simpletest.rc-6g9gr" in namespace "gc-6197"
  I0901 12:30:05.797923 16 delete.go:95] Deleting pod "simpletest.rc-6m49h" in namespace "gc-6197"
  I0901 12:30:05.920921 16 delete.go:95] Deleting pod "simpletest.rc-75bch" in namespace "gc-6197"
  I0901 12:30:05.993307 16 delete.go:95] Deleting pod "simpletest.rc-7hlkd" in namespace "gc-6197"
  I0901 12:30:06.053605 16 delete.go:95] Deleting pod "simpletest.rc-7hqdz" in namespace "gc-6197"
  I0901 12:30:06.111210 16 delete.go:95] Deleting pod "simpletest.rc-7rvr8" in namespace "gc-6197"
  I0901 12:30:06.161349 16 delete.go:95] Deleting pod "simpletest.rc-829tc" in namespace "gc-6197"
  I0901 12:30:06.235627 16 delete.go:95] Deleting pod "simpletest.rc-8d4m9" in namespace "gc-6197"
  E0901 12:30:06.257596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:06.315438 16 delete.go:95] Deleting pod "simpletest.rc-8p7nb" in namespace "gc-6197"
  I0901 12:30:06.626838 16 delete.go:95] Deleting pod "simpletest.rc-8pkgf" in namespace "gc-6197"
  I0901 12:30:07.049502 16 delete.go:95] Deleting pod "simpletest.rc-9v2cm" in namespace "gc-6197"
  E0901 12:30:07.259368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:07.367804 16 delete.go:95] Deleting pod "simpletest.rc-bkjpz" in namespace "gc-6197"
  I0901 12:30:07.472690 16 delete.go:95] Deleting pod "simpletest.rc-bqsbk" in namespace "gc-6197"
  I0901 12:30:07.628070 16 delete.go:95] Deleting pod "simpletest.rc-c6dwt" in namespace "gc-6197"
  I0901 12:30:07.906695 16 delete.go:95] Deleting pod "simpletest.rc-c8rvg" in namespace "gc-6197"
  I0901 12:30:07.995478 16 delete.go:95] Deleting pod "simpletest.rc-cgjjd" in namespace "gc-6197"
  I0901 12:30:08.092241 16 delete.go:95] Deleting pod "simpletest.rc-ckc4b" in namespace "gc-6197"
  I0901 12:30:08.199915 16 delete.go:95] Deleting pod "simpletest.rc-cngvx" in namespace "gc-6197"
  E0901 12:30:08.260336      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:08.278527 16 delete.go:95] Deleting pod "simpletest.rc-czqqj" in namespace "gc-6197"
  I0901 12:30:08.661375 16 delete.go:95] Deleting pod "simpletest.rc-czt7n" in namespace "gc-6197"
  I0901 12:30:08.846409 16 delete.go:95] Deleting pod "simpletest.rc-d59qw" in namespace "gc-6197"
  I0901 12:30:08.962866 16 delete.go:95] Deleting pod "simpletest.rc-d9qf6" in namespace "gc-6197"
  I0901 12:30:09.033488 16 delete.go:95] Deleting pod "simpletest.rc-dcgwm" in namespace "gc-6197"
  I0901 12:30:09.114426 16 delete.go:95] Deleting pod "simpletest.rc-f57pf" in namespace "gc-6197"
  I0901 12:30:09.155925 16 delete.go:95] Deleting pod "simpletest.rc-fbfg4" in namespace "gc-6197"
  E0901 12:30:09.260990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:09.289300 16 delete.go:95] Deleting pod "simpletest.rc-fcnhx" in namespace "gc-6197"
  I0901 12:30:09.377323 16 delete.go:95] Deleting pod "simpletest.rc-fktn6" in namespace "gc-6197"
  I0901 12:30:09.618997 16 delete.go:95] Deleting pod "simpletest.rc-fpvgs" in namespace "gc-6197"
  I0901 12:30:09.883890 16 delete.go:95] Deleting pod "simpletest.rc-frk6g" in namespace "gc-6197"
  I0901 12:30:10.014697 16 delete.go:95] Deleting pod "simpletest.rc-gjcp8" in namespace "gc-6197"
  I0901 12:30:10.054350 16 delete.go:95] Deleting pod "simpletest.rc-gqlkc" in namespace "gc-6197"
  I0901 12:30:10.083536 16 delete.go:95] Deleting pod "simpletest.rc-gtq7n" in namespace "gc-6197"
  I0901 12:30:10.118974 16 delete.go:95] Deleting pod "simpletest.rc-hbhf5" in namespace "gc-6197"
  I0901 12:30:10.153755 16 delete.go:95] Deleting pod "simpletest.rc-hqp62" in namespace "gc-6197"
  I0901 12:30:10.193209 16 delete.go:95] Deleting pod "simpletest.rc-hrwgk" in namespace "gc-6197"
  I0901 12:30:10.251053 16 delete.go:95] Deleting pod "simpletest.rc-j9mgw" in namespace "gc-6197"
  E0901 12:30:10.261378      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:10.330279 16 delete.go:95] Deleting pod "simpletest.rc-jhnvr" in namespace "gc-6197"
  I0901 12:30:10.379343 16 delete.go:95] Deleting pod "simpletest.rc-jkqfn" in namespace "gc-6197"
  I0901 12:30:10.475800 16 delete.go:95] Deleting pod "simpletest.rc-jtl9k" in namespace "gc-6197"
  I0901 12:30:10.532420 16 delete.go:95] Deleting pod "simpletest.rc-kpw6j" in namespace "gc-6197"
  I0901 12:30:10.575903 16 delete.go:95] Deleting pod "simpletest.rc-l72pt" in namespace "gc-6197"
  I0901 12:30:10.709587 16 delete.go:95] Deleting pod "simpletest.rc-l7w77" in namespace "gc-6197"
  I0901 12:30:10.792492 16 delete.go:95] Deleting pod "simpletest.rc-lhszm" in namespace "gc-6197"
  I0901 12:30:10.959863 16 delete.go:95] Deleting pod "simpletest.rc-lnc2r" in namespace "gc-6197"
  I0901 12:30:11.072982 16 delete.go:95] Deleting pod "simpletest.rc-lzxsc" in namespace "gc-6197"
  I0901 12:30:11.115769 16 delete.go:95] Deleting pod "simpletest.rc-m8stz" in namespace "gc-6197"
  I0901 12:30:11.154914 16 delete.go:95] Deleting pod "simpletest.rc-mprpc" in namespace "gc-6197"
  I0901 12:30:11.248986 16 delete.go:95] Deleting pod "simpletest.rc-n7f78" in namespace "gc-6197"
  E0901 12:30:11.262581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:11.363569 16 delete.go:95] Deleting pod "simpletest.rc-ngsxh" in namespace "gc-6197"
  I0901 12:30:11.437338 16 delete.go:95] Deleting pod "simpletest.rc-nj7fj" in namespace "gc-6197"
  I0901 12:30:11.471264 16 delete.go:95] Deleting pod "simpletest.rc-nkt76" in namespace "gc-6197"
  I0901 12:30:11.514690 16 delete.go:95] Deleting pod "simpletest.rc-nlvcj" in namespace "gc-6197"
  I0901 12:30:11.586025 16 delete.go:95] Deleting pod "simpletest.rc-nqkfq" in namespace "gc-6197"
  I0901 12:30:11.721467 16 delete.go:95] Deleting pod "simpletest.rc-nvg5r" in namespace "gc-6197"
  I0901 12:30:11.876555 16 delete.go:95] Deleting pod "simpletest.rc-pmmrc" in namespace "gc-6197"
  I0901 12:30:12.085342 16 delete.go:95] Deleting pod "simpletest.rc-qq8z9" in namespace "gc-6197"
  I0901 12:30:12.172479 16 delete.go:95] Deleting pod "simpletest.rc-qsxkk" in namespace "gc-6197"
  I0901 12:30:12.246526 16 delete.go:95] Deleting pod "simpletest.rc-r6qp2" in namespace "gc-6197"
  E0901 12:30:12.264039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:12.363226 16 delete.go:95] Deleting pod "simpletest.rc-rb22d" in namespace "gc-6197"
  I0901 12:30:12.549896 16 delete.go:95] Deleting pod "simpletest.rc-rd79l" in namespace "gc-6197"
  I0901 12:30:12.902692 16 delete.go:95] Deleting pod "simpletest.rc-rjkhf" in namespace "gc-6197"
  E0901 12:30:13.271465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:13.337429 16 delete.go:95] Deleting pod "simpletest.rc-rvmxx" in namespace "gc-6197"
  I0901 12:30:13.434484 16 delete.go:95] Deleting pod "simpletest.rc-sc9c7" in namespace "gc-6197"
  I0901 12:30:13.490304 16 delete.go:95] Deleting pod "simpletest.rc-scb9m" in namespace "gc-6197"
  I0901 12:30:13.540906 16 delete.go:95] Deleting pod "simpletest.rc-sfr4m" in namespace "gc-6197"
  I0901 12:30:13.731900 16 delete.go:95] Deleting pod "simpletest.rc-srk6s" in namespace "gc-6197"
  I0901 12:30:14.148566 16 delete.go:95] Deleting pod "simpletest.rc-st47w" in namespace "gc-6197"
  E0901 12:30:14.270558      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:14.695311 16 delete.go:95] Deleting pod "simpletest.rc-t4rs2" in namespace "gc-6197"
  I0901 12:30:14.765435 16 delete.go:95] Deleting pod "simpletest.rc-tbfrt" in namespace "gc-6197"
  I0901 12:30:14.825620 16 delete.go:95] Deleting pod "simpletest.rc-tgxzq" in namespace "gc-6197"
  I0901 12:30:14.864623 16 delete.go:95] Deleting pod "simpletest.rc-vv66d" in namespace "gc-6197"
  I0901 12:30:14.945579 16 delete.go:95] Deleting pod "simpletest.rc-vvnbl" in namespace "gc-6197"
  I0901 12:30:15.042048 16 delete.go:95] Deleting pod "simpletest.rc-w6nrv" in namespace "gc-6197"
  I0901 12:30:15.200401 16 delete.go:95] Deleting pod "simpletest.rc-w7hmw" in namespace "gc-6197"
  E0901 12:30:15.272048      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:15.297091 16 delete.go:95] Deleting pod "simpletest.rc-wfsx4" in namespace "gc-6197"
  I0901 12:30:15.413635 16 delete.go:95] Deleting pod "simpletest.rc-wlxpb" in namespace "gc-6197"
  I0901 12:30:15.641228 16 delete.go:95] Deleting pod "simpletest.rc-x5k82" in namespace "gc-6197"
  I0901 12:30:15.724604 16 delete.go:95] Deleting pod "simpletest.rc-x94xc" in namespace "gc-6197"
  I0901 12:30:15.792821 16 delete.go:95] Deleting pod "simpletest.rc-xrbq2" in namespace "gc-6197"
  I0901 12:30:15.882783 16 delete.go:95] Deleting pod "simpletest.rc-xsqwg" in namespace "gc-6197"
  I0901 12:30:15.962633 16 delete.go:95] Deleting pod "simpletest.rc-zln9q" in namespace "gc-6197"
  I0901 12:30:16.055559 16 delete.go:95] Deleting pod "simpletest.rc-zndpc" in namespace "gc-6197"
  I0901 12:30:16.122602 16 delete.go:95] Deleting pod "simpletest.rc-zqvl9" in namespace "gc-6197"
  I0901 12:30:16.160716 16 delete.go:95] Deleting pod "simpletest.rc-ztw7f" in namespace "gc-6197"
  E0901 12:30:16.274474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:16.302400 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6197" for this suite. @ 09/01/25 12:30:16.422
• [59.921 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 09/01/25 12:30:16.453
  I0901 12:30:16.455811 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:30:16.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:16.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:16.596
  STEP: Setting up server cert @ 09/01/25 12:30:16.673
  E0901 12:30:17.275514      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:30:17.318
  STEP: Deploying the webhook pod @ 09/01/25 12:30:17.335
  STEP: Wait for the deployment to be ready @ 09/01/25 12:30:17.381
  I0901 12:30:17.430648 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:30:18.275818      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:19.276406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:19.475793 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 30, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 30, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 30, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 30, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:30:20.276488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:21.276852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:30:21.496
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:30:21.534
  E0901 12:30:22.276897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:22.535022 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 12:30:22.547
  I0901 12:30:22.689127 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-401" for this suite. @ 09/01/25 12:30:22.706
  STEP: Destroying namespace "webhook-markers-3170" for this suite. @ 09/01/25 12:30:22.729
• [6.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/01/25 12:30:22.768
  I0901 12:30:22.768372 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:30:22.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:22.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:22.817
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:30:22.825
  E0901 12:30:23.278222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:24.279268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:25.279512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:26.280647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:30:26.915
  I0901 12:30:26.923827 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-e173545b-16f8-4ff9-90f1-e503f451a82f container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:30:26.966
  I0901 12:30:27.004665 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9861" for this suite. @ 09/01/25 12:30:27.021
• [4.273 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/01/25 12:30:27.043
  I0901 12:30:27.044036 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 12:30:27.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:27.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:27.092
  I0901 12:30:27.100156 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 12:30:27.222642 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:30:27.235099 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-1 before test
  I0901 12:30:27.250272 16 predicates.go:958] cilium-jq2g6 from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250333 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:30:27.250355 16 predicates.go:958] cilium-node-init-24srs from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250371 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:30:27.250388 16 predicates.go:958] cilium-operator-66b866ccb5-tvdgj from kube-system started at 2025-09-01 11:44:58 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250406 16 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0901 12:30:27.250422 16 predicates.go:958] kube-apiserver-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250437 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:30:27.250453 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250467 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:30:27.250482 16 predicates.go:958] kube-proxy-sfcrg from kube-system started at 2025-09-01 10:45:37 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250496 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:30:27.250511 16 predicates.go:958] kube-scheduler-xoongeig7eeb-1 from kube-system started at 2025-09-01 11:02:06 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.250524 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:30:27.250570 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8 from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:30:27.250586 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:30:27.250600 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:30:27.250616 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-2 before test
  E0901 12:30:27.281609      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:30:27.357715 16 predicates.go:958] cilium-jb44h from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358164 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:30:27.358201 16 predicates.go:958] cilium-node-init-2jnhr from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358421 16 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 12:30:27.358450 16 predicates.go:958] coredns-674b8bbfcf-6wfq2 from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358823 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:30:27.358865 16 predicates.go:958] coredns-674b8bbfcf-xqczq from kube-system started at 2025-09-01 10:48:50 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358881 16 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:30:27.358898 16 predicates.go:958] kube-apiserver-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358913 16 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:30:27.358929 16 predicates.go:958] kube-controller-manager-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358945 16 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:30:27.358962 16 predicates.go:958] kube-proxy-vkvcp from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.358977 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:30:27.358993 16 predicates.go:958] kube-scheduler-xoongeig7eeb-2 from kube-system started at 2025-09-01 10:53:57 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.359007 16 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:30:27.359023 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-q8n4b from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:30:27.359037 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:30:27.359051 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:30:27.359095 16 predicates.go:120] 
  Logging pods the apiserver thinks is on node xoongeig7eeb-3 before test
  I0901 12:30:27.449232 16 predicates.go:958] cilium-7ffvq from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.449299 16 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:30:27.449325 16 predicates.go:958] cilium-node-init-r4zwt from kube-system started at 2025-09-01 10:48:01 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.449367 16 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:30:27.449386 16 predicates.go:958] kube-proxy-m96dg from kube-system started at 2025-09-01 10:47:04 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.449405 16 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:30:27.449422 16 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:20 +0000 UTC (1 container statuses recorded)
  I0901 12:30:27.449437 16 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 12:30:27.449828 16 predicates.go:958] sonobuoy-e2e-job-4eba01326b644eed from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:30:27.449903 16 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 12:30:27.449977 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:30:27.449997 16 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-bx8bz from sonobuoy started at 2025-09-01 11:08:27 +0000 UTC (2 container statuses recorded)
  I0901 12:30:27.450061 16 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:30:27.450080 16 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node xoongeig7eeb-1 @ 09/01/25 12:30:27.618
  STEP: verifying the node has the label node xoongeig7eeb-2 @ 09/01/25 12:30:27.66
  STEP: verifying the node has the label node xoongeig7eeb-3 @ 09/01/25 12:30:27.701
  I0901 12:30:27.779493 16 predicates.go:373] Pod cilium-7ffvq requesting resource cpu=0m on Node xoongeig7eeb-3
  I0901 12:30:27.779576 16 predicates.go:373] Pod cilium-jb44h requesting resource cpu=0m on Node xoongeig7eeb-2
  I0901 12:30:27.779596 16 predicates.go:373] Pod cilium-jq2g6 requesting resource cpu=0m on Node xoongeig7eeb-1
  I0901 12:30:27.779614 16 predicates.go:373] Pod cilium-node-init-24srs requesting resource cpu=100m on Node xoongeig7eeb-1
  I0901 12:30:27.779653 16 predicates.go:373] Pod cilium-node-init-2jnhr requesting resource cpu=100m on Node xoongeig7eeb-2
  I0901 12:30:27.779686 16 predicates.go:373] Pod cilium-node-init-r4zwt requesting resource cpu=100m on Node xoongeig7eeb-3
  I0901 12:30:27.779703 16 predicates.go:373] Pod cilium-operator-66b866ccb5-tvdgj requesting resource cpu=0m on Node xoongeig7eeb-1
  I0901 12:30:27.779720 16 predicates.go:373] Pod coredns-674b8bbfcf-6wfq2 requesting resource cpu=100m on Node xoongeig7eeb-2
  I0901 12:30:27.779753 16 predicates.go:373] Pod coredns-674b8bbfcf-xqczq requesting resource cpu=100m on Node xoongeig7eeb-2
  I0901 12:30:27.779774 16 predicates.go:373] Pod kube-apiserver-xoongeig7eeb-1 requesting resource cpu=250m on Node xoongeig7eeb-1
  I0901 12:30:27.779791 16 predicates.go:373] Pod kube-apiserver-xoongeig7eeb-2 requesting resource cpu=250m on Node xoongeig7eeb-2
  I0901 12:30:27.779807 16 predicates.go:373] Pod kube-controller-manager-xoongeig7eeb-1 requesting resource cpu=200m on Node xoongeig7eeb-1
  I0901 12:30:27.779822 16 predicates.go:373] Pod kube-controller-manager-xoongeig7eeb-2 requesting resource cpu=200m on Node xoongeig7eeb-2
  I0901 12:30:27.779838 16 predicates.go:373] Pod kube-proxy-m96dg requesting resource cpu=0m on Node xoongeig7eeb-3
  I0901 12:30:27.779854 16 predicates.go:373] Pod kube-proxy-sfcrg requesting resource cpu=0m on Node xoongeig7eeb-1
  I0901 12:30:27.779870 16 predicates.go:373] Pod kube-proxy-vkvcp requesting resource cpu=0m on Node xoongeig7eeb-2
  I0901 12:30:27.779886 16 predicates.go:373] Pod kube-scheduler-xoongeig7eeb-1 requesting resource cpu=100m on Node xoongeig7eeb-1
  I0901 12:30:27.779913 16 predicates.go:373] Pod kube-scheduler-xoongeig7eeb-2 requesting resource cpu=100m on Node xoongeig7eeb-2
  I0901 12:30:27.779930 16 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node xoongeig7eeb-3
  I0901 12:30:27.779946 16 predicates.go:373] Pod sonobuoy-e2e-job-4eba01326b644eed requesting resource cpu=0m on Node xoongeig7eeb-3
  I0901 12:30:27.779962 16 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-bx8bz requesting resource cpu=0m on Node xoongeig7eeb-3
  I0901 12:30:27.779979 16 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-q8n4b requesting resource cpu=0m on Node xoongeig7eeb-2
  I0901 12:30:27.779995 16 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8 requesting resource cpu=0m on Node xoongeig7eeb-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/01/25 12:30:27.78
  I0901 12:30:27.780089 16 predicates.go:383] Creating a pod which consumes cpu=525m on Node xoongeig7eeb-2
  I0901 12:30:27.807649 16 predicates.go:383] Creating a pod which consumes cpu=1050m on Node xoongeig7eeb-3
  I0901 12:30:27.829506 16 predicates.go:383] Creating a pod which consumes cpu=665m on Node xoongeig7eeb-1
  E0901 12:30:28.311420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:29.312642      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:30.312728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:31.313368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/01/25 12:30:32.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06.1861287890d4bc7e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3830/filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06 to xoongeig7eeb-1] @ 09/01/25 12:30:32.023
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06.18612878d911c159], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06.18612878dfb6e516], Reason = [Created], Message = [Created container: filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06.18612878e102a609], Reason = [Started], Message = [Started container filler-pod-772f8f6b-1ba9-48eb-947c-db802bab8f06] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a.186128788b6ddfc0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3830/filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a to xoongeig7eeb-2] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a.18612878e6bd417b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a.18612878f11b26cf], Reason = [Created], Message = [Created container: filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a.18612878f2deb427], Reason = [Started], Message = [Started container filler-pod-b71dc1e6-3b1c-4548-9952-019ddd27681a] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5.186128788eff968b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3830/filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5 to xoongeig7eeb-3] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5.18612878d2570015], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5.18612878da2ecbce], Reason = [Created], Message = [Created container: filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5.18612878dc904b0e], Reason = [Started], Message = [Started container filler-pod-e9dce4ca-bd6c-408c-b2bb-2eac15f91bc5] @ 09/01/25 12:30:32.024
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1861287985ff9da8], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/01/25 12:30:32.071
  E0901 12:30:32.313838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node xoongeig7eeb-2 @ 09/01/25 12:30:33.075
  STEP: verifying the node doesn't have the label node @ 09/01/25 12:30:33.111
  STEP: removing the label node off the node xoongeig7eeb-3 @ 09/01/25 12:30:33.121
  STEP: verifying the node doesn't have the label node @ 09/01/25 12:30:33.153
  STEP: removing the label node off the node xoongeig7eeb-1 @ 09/01/25 12:30:33.174
  STEP: verifying the node doesn't have the label node @ 09/01/25 12:30:33.21
  I0901 12:30:33.223481 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3830" for this suite. @ 09/01/25 12:30:33.239
• [6.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/01/25 12:30:33.263
  I0901 12:30:33.263046 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:30:33.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:33.313
  E0901 12:30:33.313819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:33.319
  STEP: Creating a test namespace @ 09/01/25 12:30:33.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:33.363
  STEP: Creating a service in the namespace @ 09/01/25 12:30:33.373
  STEP: Deleting the namespace @ 09/01/25 12:30:33.415
  STEP: Waiting for the namespace to be removed. @ 09/01/25 12:30:33.439
  E0901 12:30:34.314892      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:35.315924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:36.316162      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:37.316261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:38.316652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:39.317672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:40.318651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/01/25 12:30:40.451
  STEP: Verifying there is no service in the namespace @ 09/01/25 12:30:40.494
  I0901 12:30:40.503548 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2121" for this suite. @ 09/01/25 12:30:40.521
  STEP: Destroying namespace "nsdeletetest-7484" for this suite. @ 09/01/25 12:30:40.546
  I0901 12:30:40.560088 16 framework.go:370] Namespace nsdeletetest-7484 was already deleted
  STEP: Destroying namespace "nsdeletetest-5790" for this suite. @ 09/01/25 12:30:40.56
• [7.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/01/25 12:30:40.59
  I0901 12:30:40.591286 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 12:30:40.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:40.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:40.641
  STEP: Creating two CSIDrivers @ 09/01/25 12:30:40.654
  STEP: Getting "inline-driver-fc4b3872-57da-4787-8cb9-ba51cbf4ba4a" & "inline-driver-f476e0e1-3b66-4226-b35e-1d88b9e0a034" @ 09/01/25 12:30:40.693
  STEP: Patching the CSIDriver "inline-driver-f476e0e1-3b66-4226-b35e-1d88b9e0a034" @ 09/01/25 12:30:40.708
  STEP: Updating the CSIDriver "inline-driver-f476e0e1-3b66-4226-b35e-1d88b9e0a034" @ 09/01/25 12:30:40.757
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-256" @ 09/01/25 12:30:40.793
  STEP: Deleting CSIDriver "inline-driver-fc4b3872-57da-4787-8cb9-ba51cbf4ba4a" @ 09/01/25 12:30:40.802
  STEP: Confirm deletion of CSIDriver "inline-driver-fc4b3872-57da-4787-8cb9-ba51cbf4ba4a" @ 09/01/25 12:30:40.819
  STEP: Deleting CSIDriver "inline-driver-f476e0e1-3b66-4226-b35e-1d88b9e0a034" via DeleteCollection @ 09/01/25 12:30:40.833
  STEP: Confirm deletion of CSIDriver "inline-driver-f476e0e1-3b66-4226-b35e-1d88b9e0a034" @ 09/01/25 12:30:40.857
  I0901 12:30:40.864834 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-256" for this suite. @ 09/01/25 12:30:40.879
• [0.307 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/01/25 12:30:40.898
  I0901 12:30:40.898215 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:30:40.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:40.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:40.991
  STEP: creating a ServiceAccount @ 09/01/25 12:30:41.003
  STEP: watching for the ServiceAccount to be added @ 09/01/25 12:30:41.025
  STEP: patching the ServiceAccount @ 09/01/25 12:30:41.03
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/01/25 12:30:41.049
  STEP: deleting the ServiceAccount @ 09/01/25 12:30:41.058
  I0901 12:30:41.092917 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5215" for this suite. @ 09/01/25 12:30:41.103
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/01/25 12:30:41.12
  I0901 12:30:41.120509 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:30:41.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:41.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:41.166
  STEP: Creating configMap with name configmap-test-upd-d4b7df6b-0533-40e7-991c-91da0294ea89 @ 09/01/25 12:30:41.205
  STEP: Creating the pod @ 09/01/25 12:30:41.223
  E0901 12:30:41.319419      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:42.319579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:43.319774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-d4b7df6b-0533-40e7-991c-91da0294ea89 @ 09/01/25 12:30:43.319
  STEP: waiting to observe update in volume @ 09/01/25 12:30:43.34
  E0901 12:30:44.320092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:45.320656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:46.321787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:47.322349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:48.322784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:49.323318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:50.323806      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:51.324802      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:52.325046      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:53.325706      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:54.325897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:55.325938      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:56.327013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:57.327559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:58.328652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:30:59.329641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:00.329798      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:01.330194      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:02.330416      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:03.330640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:04.331456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:05.331569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:06.332229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:07.332618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:08.333511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:09.333956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:10.334344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:11.334688      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:12.335267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:13.335580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:14.336395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:15.336512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:16.337451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:17.338261      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:18.338999      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:19.338726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:20.339780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:21.339971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:22.341020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:23.341728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:24.342369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:25.343250      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:26.343522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:27.343586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:28.344087      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:29.344561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:30.345934      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:31.345953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:32.347334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:33.347245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:34.347595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:35.347855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:36.348672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:37.349539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:38.350002      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:39.350237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:40.350874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:41.351692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:42.352734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:43.352556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:44.353003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:45.353380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:46.354056      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:47.355522      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:48.356057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:49.357013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:50.357622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:51.358292      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:52.358376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:53.358787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:54.359318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:55.360257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:56.360040      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:57.360520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:58.361203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:31:59.362996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:00.362929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:00.592027 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1418" for this suite. @ 09/01/25 12:32:00.61
• [79.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/01/25 12:32:00.637
  I0901 12:32:00.637232 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:32:00.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:00.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:00.679
  STEP: create the container @ 09/01/25 12:32:00.684
  I0901 12:32:00.705487      16 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:32:00.706
  E0901 12:32:01.363481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:02.367946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:03.364667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 12:32:03.794
  STEP: the container should be terminated @ 09/01/25 12:32:03.805
  STEP: the termination message should be set @ 09/01/25 12:32:03.805
  I0901 12:32:03.805433 16 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/01/25 12:32:03.805
  I0901 12:32:03.862205 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7017" for this suite. @ 09/01/25 12:32:03.88
• [3.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 09/01/25 12:32:03.918
  I0901 12:32:03.918924 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:32:03.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:03.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:03.958
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/01/25 12:32:03.966
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/01/25 12:32:03.983
  E0901 12:32:04.365451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:05.365461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:06.366278      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:07.366766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:08.367785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:09.370134      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:10.370568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:11.371791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:12.372313      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:13.375487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:14.376256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:15.376596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:16.377203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:17.378726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:18.378844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:19.379304      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:20.379550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:21.379956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:22.380323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:23.381356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:24.382559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:25.382714      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:26.383988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:27.385555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/01/25 12:32:28.154
  I0901 12:32:28.165958 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6287" for this suite. @ 09/01/25 12:32:28.185
• [24.291 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 09/01/25 12:32:28.21
  I0901 12:32:28.210952 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:32:28.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:28.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:28.259
  STEP: creating Agnhost RC @ 09/01/25 12:32:28.27
  I0901 12:32:28.271349 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-6681 create -f -'
  E0901 12:32:28.386364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:28.682932 16 builder.go:146] stderr: ""
  I0901 12:32:28.683176 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 12:32:28.683
  E0901 12:32:29.387487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:29.694828 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:32:29.694904 16 framework.go:733] Found 0 / 1
  E0901 12:32:30.388236      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:30.696006 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:32:30.696313 16 framework.go:733] Found 1 / 1
  I0901 12:32:30.696367 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/01/25 12:32:30.696
  I0901 12:32:30.710147 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:32:30.710229 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:32:30.710709 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-6681 patch pod agnhost-primary-qldbv -p {"metadata":{"annotations":{"x":"y"}}}'
  I0901 12:32:30.971998 16 builder.go:146] stderr: ""
  I0901 12:32:30.972249 16 builder.go:147] stdout: "pod/agnhost-primary-qldbv patched\n"
  STEP: checking annotations @ 09/01/25 12:32:30.972
  I0901 12:32:30.983067 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:32:30.983217 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:32:30.983681 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6681" for this suite. @ 09/01/25 12:32:30.998
• [2.809 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 09/01/25 12:32:31.02
  I0901 12:32:31.021045 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:32:31.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:31.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:31.07
  STEP: creating service in namespace services-9239 @ 09/01/25 12:32:31.074
  STEP: creating service affinity-nodeport in namespace services-9239 @ 09/01/25 12:32:31.074
  I0901 12:32:31.176530 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:32:31.388190      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:32.389031      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:33.189422 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 32, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 32, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 32, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:32:33.390204      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:34.390854      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:35.241546 16 resource.go:361] Creating new exec pod
  E0901 12:32:35.390947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:36.391850      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:37.315613 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-9239 exec execpod-affinityr7znj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0901 12:32:37.392325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:37.738986 16 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport (10.233.29.14) 80 port [tcp/http] succeeded!\n"
  I0901 12:32:37.739640 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:32:37.740453 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-9239 exec execpod-affinityr7znj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.14 80'
  I0901 12:32:38.084618 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.14 80\nConnection to 10.233.29.14 80 port [tcp/http] succeeded!\n"
  I0901 12:32:38.084795 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:32:38.085580 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-9239 exec execpod-affinityr7znj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.88 32596'
  E0901 12:32:38.393524      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:38.415960 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.88 32596\nConnection to 192.168.121.88 32596 port [tcp/*] succeeded!\n"
  I0901 12:32:38.416264 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:32:38.416679 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-9239 exec execpod-affinityr7znj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.109 32596'
  I0901 12:32:38.761959 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.109 32596\nConnection to 192.168.121.109 32596 port [tcp/*] succeeded!\n"
  I0901 12:32:38.762647 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:32:38.763846 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-9239 exec execpod-affinityr7znj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/ ; done'
  E0901 12:32:39.394560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:39.423666 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32596/\n"
  I0901 12:32:39.423910 16 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r\naffinity-nodeport-85dffb5fc7-wbw8r"
  I0901 12:32:39.423966 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.423999 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424025 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424052 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424077 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424102 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424246 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424273 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424300 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424324 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424349 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424374 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424705 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424735 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.424790 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.425011 16 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-wbw8r
  I0901 12:32:39.425414 16 service.go:4352] Cleaning up the exec pod
  I0901 12:32:39.645813 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9239" for this suite. @ 09/01/25 12:32:39.665
• [8.669 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/01/25 12:32:39.692
  I0901 12:32:39.693484 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:32:39.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:39.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:39.734
  I0901 12:32:39.747669 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:32:40.395443      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:41.395486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:42.396454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 12:32:42.68
  I0901 12:32:42.683238 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-8692 --namespace=crd-publish-openapi-8692 create -f -'
  I0901 12:32:43.018771 16 builder.go:146] stderr: ""
  I0901 12:32:43.019083 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3722-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:32:43.019614 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-8692 --namespace=crd-publish-openapi-8692 delete e2e-test-crd-publish-openapi-3722-crds test-cr'
  I0901 12:32:43.351227 16 builder.go:146] stderr: ""
  I0901 12:32:43.351669 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3722-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0901 12:32:43.352187 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-8692 --namespace=crd-publish-openapi-8692 apply -f -'
  E0901 12:32:43.398039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:43.591780 16 builder.go:146] stderr: ""
  I0901 12:32:43.591922 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3722-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:32:43.592340 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-8692 --namespace=crd-publish-openapi-8692 delete e2e-test-crd-publish-openapi-3722-crds test-cr'
  I0901 12:32:43.805588 16 builder.go:146] stderr: ""
  I0901 12:32:43.805800 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3722-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/01/25 12:32:43.805
  I0901 12:32:43.806727 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=crd-publish-openapi-8692 explain e2e-test-crd-publish-openapi-3722-crds'
  I0901 12:32:43.991670 16 builder.go:146] stderr: ""
  I0901 12:32:43.991937 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3722-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0901 12:32:44.398053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:45.398961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:46.180363 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8692" for this suite. @ 09/01/25 12:32:46.219
• [6.551 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/01/25 12:32:46.242
  I0901 12:32:46.242583 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:32:46.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:46.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:46.286
  E0901 12:32:46.399966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:47.399493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:48.369678 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8421" for this suite. @ 09/01/25 12:32:48.383
  E0901 12:32:48.400092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/01/25 12:32:48.402
  I0901 12:32:48.402973 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:32:48.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:48.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:48.447
  STEP: creating a ConfigMap @ 09/01/25 12:32:48.458
  STEP: fetching the ConfigMap @ 09/01/25 12:32:48.47
  STEP: patching the ConfigMap @ 09/01/25 12:32:48.482
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/01/25 12:32:48.494
  STEP: deleting the ConfigMap by collection with a label selector @ 09/01/25 12:32:48.502
  STEP: listing all ConfigMaps in test namespace @ 09/01/25 12:32:48.52
  I0901 12:32:48.528084 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4349" for this suite. @ 09/01/25 12:32:48.542
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 09/01/25 12:32:48.557
  I0901 12:32:48.557651 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:32:48.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:48.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:48.601
  STEP: creating a replication controller @ 09/01/25 12:32:48.608
  I0901 12:32:48.609052 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 create -f -'
  I0901 12:32:49.109289 16 builder.go:146] stderr: ""
  I0901 12:32:49.109371 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 12:32:49.109
  I0901 12:32:49.110067 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 12:32:49.373382 16 builder.go:146] stderr: ""
  I0901 12:32:49.373516 16 builder.go:147] stdout: "update-demo-nautilus-rjsdg update-demo-nautilus-xhtpx "
  I0901 12:32:49.374247 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-rjsdg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0901 12:32:49.400509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:49.629619 16 builder.go:146] stderr: ""
  I0901 12:32:49.629738 16 builder.go:147] stdout: ""
  I0901 12:32:49.629795 16 kubectl.go:2505] update-demo-nautilus-rjsdg is created but not running
  E0901 12:32:50.401230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:51.402398      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:52.402552      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:53.403194      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:32:54.403340      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:54.634182 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 12:32:54.994321 16 builder.go:146] stderr: ""
  I0901 12:32:54.994415 16 builder.go:147] stdout: "update-demo-nautilus-rjsdg update-demo-nautilus-xhtpx "
  I0901 12:32:54.995297 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-rjsdg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 12:32:55.186448 16 builder.go:146] stderr: ""
  I0901 12:32:55.186529 16 builder.go:147] stdout: "true"
  I0901 12:32:55.186822 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-rjsdg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 12:32:55.379587 16 builder.go:146] stderr: ""
  I0901 12:32:55.379875 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 12:32:55.379921 16 kubectl.go:2396] validating pod update-demo-nautilus-rjsdg
  I0901 12:32:55.403648 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 12:32:55.404650 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 12:32:55.404771 16 kubectl.go:2523] update-demo-nautilus-rjsdg is verified up and running
  I0901 12:32:55.405265 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0901 12:32:55.408553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:55.610349 16 builder.go:146] stderr: ""
  I0901 12:32:55.610457 16 builder.go:147] stdout: "true"
  I0901 12:32:55.611058 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 12:32:55.809638 16 builder.go:146] stderr: ""
  I0901 12:32:55.809776 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 12:32:55.809844 16 kubectl.go:2396] validating pod update-demo-nautilus-xhtpx
  I0901 12:32:55.856669 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 12:32:55.856819 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 12:32:55.856852 16 kubectl.go:2523] update-demo-nautilus-xhtpx is verified up and running
  STEP: scaling down the replication controller @ 09/01/25 12:32:55.856
  I0901 12:32:55.879633 16 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0901 12:32:55.879958 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0901 12:32:56.404322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:57.128377 16 builder.go:146] stderr: ""
  I0901 12:32:57.128608 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 12:32:57.133
  I0901 12:32:57.138332 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 12:32:57.317163 16 builder.go:146] stderr: ""
  I0901 12:32:57.317257 16 builder.go:147] stdout: "update-demo-nautilus-xhtpx "
  I0901 12:32:57.318297 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0901 12:32:57.407722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:57.491305 16 builder.go:146] stderr: ""
  I0901 12:32:57.491398 16 builder.go:147] stdout: "true"
  I0901 12:32:57.491982 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 12:32:57.665011 16 builder.go:146] stderr: ""
  I0901 12:32:57.665429 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 12:32:57.665486 16 kubectl.go:2396] validating pod update-demo-nautilus-xhtpx
  I0901 12:32:57.682664 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 12:32:57.682826 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 12:32:57.682862 16 kubectl.go:2523] update-demo-nautilus-xhtpx is verified up and running
  STEP: scaling up the replication controller @ 09/01/25 12:32:57.682
  I0901 12:32:57.708340 16 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0901 12:32:57.709263 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0901 12:32:58.415987      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:32:58.987431 16 builder.go:146] stderr: ""
  I0901 12:32:58.987611 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 12:32:58.988
  I0901 12:32:58.990547 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 12:32:59.182237 16 builder.go:146] stderr: ""
  I0901 12:32:59.182322 16 builder.go:147] stdout: "update-demo-nautilus-wjhpk update-demo-nautilus-xhtpx "
  I0901 12:32:59.182684 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-wjhpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 12:32:59.338337 16 builder.go:146] stderr: ""
  I0901 12:32:59.338437 16 builder.go:147] stdout: ""
  I0901 12:32:59.338479 16 kubectl.go:2505] update-demo-nautilus-wjhpk is created but not running
  E0901 12:32:59.410372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:00.409361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:01.415460      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:02.413771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:03.426038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:04.345638 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0901 12:33:04.423510      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:04.629871 16 builder.go:146] stderr: ""
  I0901 12:33:04.629967 16 builder.go:147] stdout: "update-demo-nautilus-wjhpk update-demo-nautilus-xhtpx "
  I0901 12:33:04.630764 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-wjhpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 12:33:04.811670 16 builder.go:146] stderr: ""
  I0901 12:33:04.811849 16 builder.go:147] stdout: "true"
  I0901 12:33:04.812693 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-wjhpk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 12:33:05.003288 16 builder.go:146] stderr: ""
  I0901 12:33:05.003908 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 12:33:05.004236 16 kubectl.go:2396] validating pod update-demo-nautilus-wjhpk
  I0901 12:33:05.033680 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 12:33:05.033932 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 12:33:05.033994 16 kubectl.go:2523] update-demo-nautilus-wjhpk is verified up and running
  I0901 12:33:05.034570 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 12:33:05.232086 16 builder.go:146] stderr: ""
  I0901 12:33:05.232269 16 builder.go:147] stdout: "true"
  I0901 12:33:05.232533 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods update-demo-nautilus-xhtpx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 12:33:05.414888 16 builder.go:146] stderr: ""
  I0901 12:33:05.415005 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 12:33:05.415035 16 kubectl.go:2396] validating pod update-demo-nautilus-xhtpx
  E0901 12:33:05.422555      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:05.433260 16 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0901 12:33:05.433634 16 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 12:33:05.433708 16 kubectl.go:2523] update-demo-nautilus-xhtpx is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 12:33:05.433
  I0901 12:33:05.434361 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 delete --grace-period=0 --force -f -'
  I0901 12:33:05.607735 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:33:05.607855 16 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 12:33:05.608483 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get rc,svc -l name=update-demo --no-headers'
  I0901 12:33:06.023252 16 builder.go:146] stderr: "No resources found in kubectl-9364 namespace.\n"
  I0901 12:33:06.024654 16 builder.go:147] stdout: ""
  I0901 12:33:06.026606 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-9364 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 12:33:06.265071 16 builder.go:146] stderr: ""
  I0901 12:33:06.266204 16 builder.go:147] stdout: ""
  I0901 12:33:06.267092 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9364" for this suite. @ 09/01/25 12:33:06.287
• [17.752 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:33:06.313
  I0901 12:33:06.313269 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename ingress @ 09/01/25 12:33:06.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:06.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:06.366
  STEP: getting /apis @ 09/01/25 12:33:06.376
  STEP: getting /apis/networking.k8s.io @ 09/01/25 12:33:06.392
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 12:33:06.395
  STEP: creating @ 09/01/25 12:33:06.399
  E0901 12:33:06.423891      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting @ 09/01/25 12:33:06.45
  STEP: listing @ 09/01/25 12:33:06.46
  STEP: watching @ 09/01/25 12:33:06.471
  I0901 12:33:06.471657 16 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:33:06.475
  STEP: cluster-wide watching @ 09/01/25 12:33:06.485
  I0901 12:33:06.486063 16 ingress.go:198] starting watch
  STEP: patching @ 09/01/25 12:33:06.489
  STEP: updating @ 09/01/25 12:33:06.507
  I0901 12:33:06.534263 16 ingress.go:221] waiting for watch events with expected annotations
  I0901 12:33:06.534407 16 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 12:33:06.534
  STEP: updating /status @ 09/01/25 12:33:06.553
  STEP: get /status @ 09/01/25 12:33:06.581
  STEP: deleting @ 09/01/25 12:33:06.594
  STEP: deleting a collection @ 09/01/25 12:33:06.628
  I0901 12:33:06.670166 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1973" for this suite. @ 09/01/25 12:33:06.682
• [0.388 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:33:06.7
  I0901 12:33:06.701004 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:33:06.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:06.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:06.745
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:33:06.754
  E0901 12:33:07.424673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:08.425534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:09.425604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:10.425910      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:33:10.832
  I0901 12:33:10.846834 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-a8aa461c-c843-49ac-a759-4eafcda3539b container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:33:10.884
  I0901 12:33:10.933837 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-169" for this suite. @ 09/01/25 12:33:10.962
• [4.283 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/01/25 12:33:10.983
  I0901 12:33:10.983775 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 12:33:10.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:11.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:11.034
  STEP: Create set of pod templates @ 09/01/25 12:33:11.043
  I0901 12:33:11.057070 16 podtemplates.go:143] created test-podtemplate-1
  I0901 12:33:11.067494 16 podtemplates.go:143] created test-podtemplate-2
  I0901 12:33:11.080870 16 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/01/25 12:33:11.08
  STEP: delete collection of pod templates @ 09/01/25 12:33:11.089
  I0901 12:33:11.089446 16 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/01/25 12:33:11.126
  I0901 12:33:11.127054 16 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0901 12:33:11.134813 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6300" for this suite. @ 09/01/25 12:33:11.147
• [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/01/25 12:33:11.163
  I0901 12:33:11.163906 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:33:11.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:11.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:11.197
  STEP: creating a secret @ 09/01/25 12:33:11.203
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/01/25 12:33:11.217
  STEP: patching the secret @ 09/01/25 12:33:11.228
  STEP: deleting the secret using a LabelSelector @ 09/01/25 12:33:11.249
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/01/25 12:33:11.266
  I0901 12:33:11.272931 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-847" for this suite. @ 09/01/25 12:33:11.281
• [0.133 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:33:11.297
  I0901 12:33:11.297374 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:33:11.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:11.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:11.335
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/01/25 12:33:11.343
  I0901 12:33:11.376781 16 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:33:11.376
  E0901 12:33:11.426656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:12.427474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/01/25 12:33:13.403
  STEP: updating a scale subresource @ 09/01/25 12:33:13.415
  E0901 12:33:13.428067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/01/25 12:33:13.431
  STEP: Patch a scale subresource @ 09/01/25 12:33:13.448
  I0901 12:33:13.503021 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5067" for this suite. @ 09/01/25 12:33:13.527
• [2.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/01/25 12:33:13.547
  I0901 12:33:13.547974 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:33:13.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:13.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:13.604
  E0901 12:33:14.428935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:15.429317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:16.429444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:17.430511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:18.431276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:19.431153      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:20.431631      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:21.431975      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:22.432822      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:23.433198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:24.434104      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:25.435419      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:26.435679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:27.436346      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:28.437696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:29.437828      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:30.438022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:31.438422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:32.439070      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:33.439819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:34.441334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:35.441785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:36.442436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:37.443568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:37.861055 16 container_probe.go:91] Container started at 2025-09-01 12:33:14 +0000 UTC, pod became ready at 2025-09-01 12:33:36 +0000 UTC
  I0901 12:33:37.861531 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5897" for this suite. @ 09/01/25 12:33:37.883
• [24.366 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:33:37.913
  I0901 12:33:37.913845 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:33:37.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:37.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:37.966
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/01/25 12:33:37.976
  E0901 12:33:38.444669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:39.445564      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/01/25 12:33:40.043
  STEP: Then the orphan pod is adopted @ 09/01/25 12:33:40.066
  E0901 12:33:40.446414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:41.092683 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2190" for this suite. @ 09/01/25 12:33:41.107
• [3.220 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:33:41.134
  I0901 12:33:41.134422 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:33:41.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:41.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:41.184
  I0901 12:33:41.195435 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:33:41.447880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:42.447960      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:43.450506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:44.427934 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4832" for this suite. @ 09/01/25 12:33:44.448
  E0901 12:33:44.449432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
• [3.336 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/01/25 12:33:44.473
  I0901 12:33:44.473606 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:33:44.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:44.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:44.528
  STEP: Setting up server cert @ 09/01/25 12:33:44.578
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:33:45.022
  STEP: Deploying the webhook pod @ 09/01/25 12:33:45.04
  STEP: Wait for the deployment to be ready @ 09/01/25 12:33:45.08
  I0901 12:33:45.105353 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:33:45.449842      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:46.450694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:47.149424 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 33, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 33, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 33, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 33, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:33:47.451038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:48.451551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:33:49.162
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:33:49.223
  E0901 12:33:49.452267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:33:50.223968 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/01/25 12:33:50.239
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/01/25 12:33:50.243
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 12:33:50.243
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 12:33:50.243
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 12:33:50.246
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 12:33:50.247
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 12:33:50.253
  I0901 12:33:50.418980 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5254" for this suite. @ 09/01/25 12:33:50.441
  E0901 12:33:50.456032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-1218" for this suite. @ 09/01/25 12:33:50.48
• [6.025 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 09/01/25 12:33:50.501
  I0901 12:33:50.502469 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:33:50.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:50.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:50.547
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/01/25 12:33:50.555
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/01/25 12:33:50.57
  E0901 12:33:51.454993      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:52.455653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:53.456668      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:54.457916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:55.458404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:56.459095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/01/25 12:33:56.639
  I0901 12:33:56.651950 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-415" for this suite. @ 09/01/25 12:33:56.668
• [6.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:33:56.699
  I0901 12:33:56.699874 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:33:56.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:56.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:56.752
  STEP: Setting up data @ 09/01/25 12:33:56.76
  STEP: Creating pod pod-subpath-test-configmap-9jmn @ 09/01/25 12:33:56.783
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:33:56.783
  E0901 12:33:57.467037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:58.461666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:33:59.462903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:00.463063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:01.463474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:02.463857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:03.464267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:04.464691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:05.465835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:06.466390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:07.467068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:08.467835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:09.469713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:10.469371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:11.470283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:12.471369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:13.470712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:14.471885      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:15.471490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:16.471953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:17.472316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:18.472649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:19.472879      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:20.473367      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:34:21.037
  I0901 12:34:21.048464 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-subpath-test-configmap-9jmn container test-container-subpath-configmap-9jmn: <nil>
  STEP: delete the pod @ 09/01/25 12:34:21.071
  STEP: Deleting pod pod-subpath-test-configmap-9jmn @ 09/01/25 12:34:21.116
  I0901 12:34:21.116797 16 delete.go:62] Deleting pod "pod-subpath-test-configmap-9jmn" in namespace "subpath-8731"
  I0901 12:34:21.124476 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8731" for this suite. @ 09/01/25 12:34:21.136
• [24.458 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/01/25 12:34:21.157
  I0901 12:34:21.157576 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:34:21.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:34:21.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:34:21.195
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/01/25 12:34:21.2
  E0901 12:34:21.474672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:22.474396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:23.475043      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:24.476730      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:34:25.258
  I0901 12:34:25.269463 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-de5392f2-c6fe-4bd3-9741-29e35a0608b3 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:34:25.288
  I0901 12:34:25.333469 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4450" for this suite. @ 09/01/25 12:34:25.345
• [4.203 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 09/01/25 12:34:25.36
  I0901 12:34:25.360886 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:34:25.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:34:25.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:34:25.397
  STEP: Creating service test in namespace statefulset-3563 @ 09/01/25 12:34:25.402
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/01/25 12:34:25.409
  STEP: Creating stateful set ss in namespace statefulset-3563 @ 09/01/25 12:34:25.429
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3563 @ 09/01/25 12:34:25.439
  E0901 12:34:25.477143      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:25.489414 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 12:34:26.477393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:27.479153      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:28.478553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:29.478444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:30.478725      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:31.479080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:32.479691      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:33.479683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:34.480899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:35.459486 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/01/25 12:34:35.459
  E0901 12:34:35.481399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:35.558599 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:34:35.905059 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:34:35.905253 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:34:35.905305 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:34:35.925475 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0901 12:34:36.481812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:37.482361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:38.483264      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:39.483592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:40.484281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:41.484684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:42.485273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:43.485906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:44.485661      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:45.486018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:45.932579 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:34:45.932781 16 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:34:46.024958 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999998967s
  E0901 12:34:46.486408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:47.039444 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.949732257s
  E0901 12:34:47.487067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:48.056395 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.935726223s
  E0901 12:34:48.486965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:49.078440 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.918674293s
  E0901 12:34:49.487281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:50.093225 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.896216647s
  E0901 12:34:50.487664      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:51.111847 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.881661487s
  E0901 12:34:51.488543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:52.127200 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.862245174s
  E0901 12:34:52.488441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:53.142403 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.848377895s
  E0901 12:34:53.489500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:54.158198 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.832971245s
  E0901 12:34:54.490500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:55.174854 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 817.007237ms
  E0901 12:34:55.491414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3563 @ 09/01/25 12:34:56.176
  I0901 12:34:56.195288 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:34:56.493215      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:34:56.555175 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:34:56.555367 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:34:56.555646 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:34:56.566593 16 wait.go:44] Found 1 stateful pods, waiting for 3
  E0901 12:34:57.494063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:58.494920      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:34:59.496119      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:00.496796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:01.497895      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:02.498313      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:03.499225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:04.499686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:05.499992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:06.501053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:06.571608 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:35:06.571742 16 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:35:06.571828 16 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/01/25 12:35:06.572
  STEP: Scale down will halt with unhealthy stateful pod @ 09/01/25 12:35:06.572
  I0901 12:35:06.604002 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:35:06.984579 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:35:06.984943 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:35:06.985034 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:35:06.985783 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:35:07.268470 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:35:07.268673 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:35:07.268731 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:35:07.269446 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 12:35:07.502936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:07.679615 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:35:07.679746 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:35:07.679809 16 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:35:07.680049 16 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:35:07.688054 16 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0901 12:35:08.512155      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:09.527499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:10.517212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:11.517282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:12.519894      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:13.518601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:14.522606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:15.520455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:16.521284      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:17.522802      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:17.719143 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:35:17.722039 16 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:35:17.722844 16 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:35:17.819779 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999998627s
  E0901 12:35:18.522628      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:18.840549 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.975144952s
  E0901 12:35:19.522283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:19.855921 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.953389389s
  E0901 12:35:20.522664      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:20.876049 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.938344037s
  E0901 12:35:21.523990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:21.897069 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.918021779s
  E0901 12:35:22.524057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:22.909900 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.89690248s
  E0901 12:35:23.524719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:23.922613 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.884360513s
  E0901 12:35:24.525508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:24.941882 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.871770862s
  E0901 12:35:25.527476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:25.959731 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.852499277s
  E0901 12:35:26.526693      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:26.977020 16 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 834.280914ms
  E0901 12:35:27.527434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3563 @ 09/01/25 12:35:27.977
  I0901 12:35:27.993286 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:35:28.336022 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:35:28.336372 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:35:28.336441 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:35:28.337555 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:35:28.527858      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:28.654915 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:35:28.655043 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:35:28.655218 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:35:28.655825 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=statefulset-3563 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:35:29.040852 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:35:29.040951 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:35:29.040980 16 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:35:29.041021 16 rest.go:153] Scaling statefulset ss to 0
  E0901 12:35:29.528915      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:30.529286      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:31.529410      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:32.531794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:33.530262      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:34.532983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:35.531889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:36.531924      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:37.532530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:38.533435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/01/25 12:35:39.071
  I0901 12:35:39.072461 16 statefulset.go:138] Deleting all statefulset in ns statefulset-3563
  I0901 12:35:39.087259 16 rest.go:153] Scaling statefulset ss to 0
  I0901 12:35:39.169907 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:35:39.178484 16 rest.go:91] Deleting statefulset ss
  I0901 12:35:39.225531 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3563" for this suite. @ 09/01/25 12:35:39.24
• [73.901 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/01/25 12:35:39.263
  I0901 12:35:39.263368 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:35:39.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:39.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:39.305
  STEP: Setting up server cert @ 09/01/25 12:35:39.342
  E0901 12:35:39.532811      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:40.533491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:35:40.605
  STEP: Deploying the webhook pod @ 09/01/25 12:35:40.635
  STEP: Wait for the deployment to be ready @ 09/01/25 12:35:40.676
  I0901 12:35:40.699413 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:35:41.534696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:42.541505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:35:42.74
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:35:42.796
  E0901 12:35:43.536509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:43.797976 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/01/25 12:35:43.814
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:35:43.876
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/01/25 12:35:43.91
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:35:43.941
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/01/25 12:35:43.974
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:35:44.001
  I0901 12:35:44.165394 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9893" for this suite. @ 09/01/25 12:35:44.184
  STEP: Destroying namespace "webhook-markers-8448" for this suite. @ 09/01/25 12:35:44.201
• [4.954 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:35:44.22
  I0901 12:35:44.220276 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:35:44.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:44.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:44.258
  STEP: Counting existing ResourceQuota @ 09/01/25 12:35:44.267
  E0901 12:35:44.537684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:45.537867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:46.539008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:47.541129      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:48.540666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:35:49.283
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:35:49.297
  E0901 12:35:49.542036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:50.544491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/01/25 12:35:51.319
  STEP: Creating a NodePort Service @ 09/01/25 12:35:51.412
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/01/25 12:35:51.469
  STEP: Ensuring resource quota status captures service creation @ 09/01/25 12:35:51.535
  E0901 12:35:51.543451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:52.544680      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:53.546886      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/01/25 12:35:53.555
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:35:53.708
  E0901 12:35:54.546605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:55.548697      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:35:55.722536 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9989" for this suite. @ 09/01/25 12:35:55.744
• [11.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/01/25 12:35:55.763
  I0901 12:35:55.763190 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:35:55.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:55.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:55.808
  STEP: Create set of pods @ 09/01/25 12:35:55.817
  I0901 12:35:55.842280 16 pods.go:874] created test-pod-1
  I0901 12:35:55.857522 16 pods.go:874] created test-pod-2
  I0901 12:35:55.876142 16 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/01/25 12:35:55.876
  E0901 12:35:56.554324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:57.553838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:58.554185      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:35:59.554574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/01/25 12:35:59.983
  I0901 12:35:59.993587 16 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0901 12:36:00.554750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:00.997662 16 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0901 12:36:01.555368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:02.000911 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8956" for this suite. @ 09/01/25 12:36:02.015
• [6.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/01/25 12:36:02.041
  I0901 12:36:02.041678 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename aggregator @ 09/01/25 12:36:02.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:02.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:02.098
  I0901 12:36:02.109140 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Registering the sample API server. @ 09/01/25 12:36:02.112
  E0901 12:36:02.555690      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:03.555877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:04.123490 16 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0901 12:36:04.227630 16 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0901 12:36:04.556271      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:05.556962      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:06.375632 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:06.557281      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:07.558561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:08.391205 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:08.559269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:09.559412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:10.386916 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:10.560457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:11.560412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:12.389636 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:12.561416      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:13.561471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:14.390439 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:14.563330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:15.563947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:16.388795 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:16.563489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:17.563611      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:18.383167 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:18.564230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:19.564490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:20.384396 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:20.564654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:21.565162      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:22.388253 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:22.565352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:23.566367      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:24.390276 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:24.566931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:25.567606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:26.390890 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:26.568610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:27.568748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:28.390939 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:28.569945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:29.570245      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:30.390349 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:30.570985      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:31.570938      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:32.388080 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:36:32.571280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:33.571932      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:34.550298 16 aggregator.go:756] Waited 132.692443ms for the sample-apiserver to be ready to handle requests.
  E0901 12:36:34.572267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/01/25 12:36:34.688
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/01/25 12:36:34.697
  STEP: List APIServices @ 09/01/25 12:36:34.716
  I0901 12:36:34.728174 16 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/01/25 12:36:34.728
  I0901 12:36:34.760643 16 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/01/25 12:36:34.761
  I0901 12:36:34.779301 16 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 1, 12, 36, 34, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/01/25 12:36:34.781
  I0901 12:36:34.790545 16 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-01 12:36:34 +0000 UTC Passed all checks passed}
  I0901 12:36:34.790631 16 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:36:34.790668 16 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/01/25 12:36:34.79
  I0901 12:36:34.810617 16 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1475623526" @ 09/01/25 12:36:34.81
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/01/25 12:36:34.837
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/01/25 12:36:34.853
  STEP: Patch APIService Status @ 09/01/25 12:36:34.864
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/01/25 12:36:34.89
  I0901 12:36:34.929383 16 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-01 12:36:34 +0000 UTC Passed all checks passed}
  I0901 12:36:34.929473 16 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:36:34.929530 16 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0901 12:36:34.929557 16 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/01/25 12:36:34.929
  STEP: Confirm that the generated APIService has been deleted @ 09/01/25 12:36:34.952
  I0901 12:36:34.952639 16 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0901 12:36:34.962725 16 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0901 12:36:34.962869 16 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0901 12:36:35.263173 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7294" for this suite. @ 09/01/25 12:36:35.278
• [33.256 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/01/25 12:36:35.298
  I0901 12:36:35.298068 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename conformance-tests @ 09/01/25 12:36:35.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:35.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:35.331
  STEP: Getting node addresses @ 09/01/25 12:36:35.339
  I0901 12:36:35.339415 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0901 12:36:35.378574 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6068" for this suite. @ 09/01/25 12:36:35.387
• [0.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/01/25 12:36:35.405
  I0901 12:36:35.405288 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename fake-node @ 09/01/25 12:36:35.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:35.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:35.444
  STEP: Create "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.45
  STEP: Getting "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.459
  STEP: Patching "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.475
  STEP: Listing nodes with LabelSelector "e2e-fake-node-b6th4=patched" @ 09/01/25 12:36:35.497
  STEP: Updating "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.506
  STEP: Delete "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.561
  E0901 12:36:35.573034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of "e2e-fake-node-b6th4" @ 09/01/25 12:36:35.574
  I0901 12:36:35.583018 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-7841" for this suite. @ 09/01/25 12:36:35.596
• [0.219 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/01/25 12:36:35.624
  I0901 12:36:35.624283 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:36:35.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:35.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:35.66
  STEP: Creating configMap with name configmap-test-volume-cede3cb3-c80d-4293-a80f-a4d92888c495 @ 09/01/25 12:36:35.67
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:36:35.68
  E0901 12:36:36.574464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:37.575305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:38.575274      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:39.575493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:36:39.787
  I0901 12:36:39.803069 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-e5bed098-eaa8-427c-ab1f-5d063f3611a8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:36:39.878
  I0901 12:36:39.922250 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6900" for this suite. @ 09/01/25 12:36:39.934
• [4.331 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/01/25 12:36:39.955
  I0901 12:36:39.955978 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:36:39.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:39.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:39.994
  I0901 12:36:40.000567 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: creating the pod @ 09/01/25 12:36:40.002
  STEP: submitting the pod to kubernetes @ 09/01/25 12:36:40.002
  E0901 12:36:40.575480      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:41.575750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/01/25 12:36:42.059
  I0901 12:36:42.129806 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8612" for this suite. @ 09/01/25 12:36:42.142
• [2.204 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/01/25 12:36:42.161
  I0901 12:36:42.161060 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:36:42.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:42.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:42.205
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:36:42.208
  E0901 12:36:42.576731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:43.577146      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:44.576968      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:45.577416      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:36:46.271
  I0901 12:36:46.284292 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-15523203-f178-422c-9a37-9bcc19799397 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:36:46.315
  I0901 12:36:46.348362 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4600" for this suite. @ 09/01/25 12:36:46.356
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 09/01/25 12:36:46.38
  I0901 12:36:46.380247 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:36:46.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:46.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:46.414
  STEP: Creating service test in namespace statefulset-3877 @ 09/01/25 12:36:46.42
  STEP: Looking for a node to schedule stateful set and pod @ 09/01/25 12:36:46.437
  STEP: Creating pod with conflicting port in namespace statefulset-3877 @ 09/01/25 12:36:46.456
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3877 @ 09/01/25 12:36:46.473
  E0901 12:36:46.578361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:47.578962      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:48.580363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:49.580482      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3877 @ 09/01/25 12:36:50.506
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3877 @ 09/01/25 12:36:50.524
  I0901 12:36:50.567672 16 statefulset.go:884] Observed stateful pod in namespace: statefulset-3877, name: ss-0, uid: 5271aa60-ca7d-4c52-9468-6a852c3e246f, status phase: Pending. Waiting for statefulset controller to delete.
  E0901 12:36:50.580880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:50.621034 16 statefulset.go:884] Observed stateful pod in namespace: statefulset-3877, name: ss-0, uid: 5271aa60-ca7d-4c52-9468-6a852c3e246f, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:36:50.639383 16 statefulset.go:884] Observed stateful pod in namespace: statefulset-3877, name: ss-0, uid: 5271aa60-ca7d-4c52-9468-6a852c3e246f, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:36:50.653998 16 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3877
  STEP: Removing pod with conflicting port in namespace statefulset-3877 @ 09/01/25 12:36:50.654
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3877 and will be in running state @ 09/01/25 12:36:50.697
  E0901 12:36:51.581082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:52.582220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:36:52.719727 16 statefulset.go:138] Deleting all statefulset in ns statefulset-3877
  I0901 12:36:52.732473 16 rest.go:153] Scaling statefulset ss to 0
  E0901 12:36:53.582445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:54.583057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:55.583942      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:56.584906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:57.585233      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:58.585734      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:36:59.586074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:00.586937      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:01.587429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:02.587857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:37:02.784863 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:37:02.795845 16 rest.go:91] Deleting statefulset ss
  I0901 12:37:02.839593 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3877" for this suite. @ 09/01/25 12:37:02.851
• [16.511 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:37:02.891
  I0901 12:37:02.891813 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:37:02.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:02.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:02.931
  STEP: Creating a ForbidConcurrent cronjob @ 09/01/25 12:37:02.941
  STEP: Ensuring a job is scheduled @ 09/01/25 12:37:02.959
  E0901 12:37:03.588965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:04.589599      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:05.590053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:06.591703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:07.590945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:08.591374      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:09.592308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:10.593231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:11.592933      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:12.593683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:13.594785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:14.595907      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:15.596928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:16.596659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:17.596759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:18.597173      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:19.597954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:20.598923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:21.598893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:22.599615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:23.601425      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:24.601559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:25.601949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:26.602844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:27.603855      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:28.604645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:29.605182      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:30.606211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:31.606373      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:32.607355      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:33.606943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:34.607371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:35.607564      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:36.608100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:37.608389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:38.608654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:39.608952      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:40.609163      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:41.609615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:42.609985      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:43.611429      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:44.611528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:45.611694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:46.612695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:47.613219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:48.613560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:49.614746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:50.615092      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:51.615075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:52.615251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:53.616417      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:54.617378      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:55.617670      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:56.618100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:57.618377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:58.618621      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:37:59.620045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:00.620464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/01/25 12:38:00.975
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 12:38:01.009
  STEP: Ensuring no more jobs are scheduled @ 09/01/25 12:38:01.021
  STEP: Removing cronjob @ 09/01/25 12:38:01.03
  I0901 12:38:01.058562 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3008" for this suite. @ 09/01/25 12:38:01.074
• [58.202 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/01/25 12:38:01.095
  I0901 12:38:01.095707 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:38:01.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:01.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:01.15
  STEP: Creating a pod to test substitution in volume subpath @ 09/01/25 12:38:01.158
  E0901 12:38:01.620579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:02.621495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:03.623899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:04.622041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:38:05.21
  I0901 12:38:05.220982 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod var-expansion-9b25e8c7-aee8-4f23-9d2b-405095e2e8a2 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:38:05.248
  I0901 12:38:05.294086 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2583" for this suite. @ 09/01/25 12:38:05.308
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/01/25 12:38:05.327
  I0901 12:38:05.327076 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:38:05.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:05.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:05.359
  STEP: Setting up server cert @ 09/01/25 12:38:05.396
  E0901 12:38:05.623364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:06.624145      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:07.624805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:38:07.684
  STEP: Deploying the webhook pod @ 09/01/25 12:38:07.7
  STEP: Wait for the deployment to be ready @ 09/01/25 12:38:07.742
  I0901 12:38:07.769427 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:38:08.625234      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:09.625447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:38:09.811
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:38:09.854
  E0901 12:38:10.626451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:10.855516 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 12:38:10.87
  STEP: create a pod that should be denied by the webhook @ 09/01/25 12:38:10.933
  STEP: create a pod that causes the webhook to hang @ 09/01/25 12:38:10.978
  E0901 12:38:11.627296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:12.628300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:13.628066      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:14.629050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:15.632315      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:16.632506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:17.638031      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:18.635618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:19.636439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:20.636059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/01/25 12:38:21.013
  STEP: create a configmap that should be admitted by the webhook @ 09/01/25 12:38:21.052
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 12:38:21.093
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 12:38:21.121
  STEP: create a namespace that bypass the webhook @ 09/01/25 12:38:21.145
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/01/25 12:38:21.184
  I0901 12:38:21.372427 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5036" for this suite. @ 09/01/25 12:38:21.388
  STEP: Destroying namespace "webhook-markers-1680" for this suite. @ 09/01/25 12:38:21.404
  STEP: Destroying namespace "exempted-namespace-6120" for this suite. @ 09/01/25 12:38:21.424
• [16.112 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/01/25 12:38:21.439
  I0901 12:38:21.439286 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:38:21.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:21.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:21.476
  STEP: Creating configMap with name configmap-test-upd-c148b3b1-dc10-42fb-be97-47c9995c22af @ 09/01/25 12:38:21.487
  STEP: Creating the pod @ 09/01/25 12:38:21.496
  E0901 12:38:21.638260      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:22.640372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:23.641020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:24.642663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:25.641479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/01/25 12:38:25.648
  STEP: Waiting for pod with binary data @ 09/01/25 12:38:25.677
  I0901 12:38:25.701160 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4536" for this suite. @ 09/01/25 12:38:25.714
• [4.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/01/25 12:38:25.779
  I0901 12:38:25.779981 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:38:25.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:25.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:25.819
  STEP: Creating namespace "e2e-ns-vwjdt" @ 09/01/25 12:38:25.832
  I0901 12:38:25.857085 16 namespace.go:412] Namespace "e2e-ns-vwjdt-9850" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-vwjdt-9850" @ 09/01/25 12:38:25.858
  I0901 12:38:25.876426 16 namespace.go:435] Namespace "e2e-ns-vwjdt-9850" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-vwjdt-9850" @ 09/01/25 12:38:25.876
  I0901 12:38:25.904022 16 namespace.go:464] Namespace "e2e-ns-vwjdt-9850" has []v1.FinalizerName{"kubernetes"}
  I0901 12:38:25.904709 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6700" for this suite. @ 09/01/25 12:38:25.914
  STEP: Destroying namespace "e2e-ns-vwjdt-9850" for this suite. @ 09/01/25 12:38:25.926
• [0.164 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:38:25.944
  I0901 12:38:25.944196 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:38:25.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:25.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:25.971
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:38:26.03
  E0901 12:38:26.644045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:27.645531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/01/25 12:38:28.16
  I0901 12:38:28.206658 16 disruption.go:691] running pods: 0 < 3
  E0901 12:38:28.645914      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:29.646400      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:30.174088 16 disruption.go:691] running pods: 2 < 3
  E0901 12:38:30.646448      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:31.648285      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:32.181564 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8498" for this suite. @ 09/01/25 12:38:32.195
• [6.269 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 09/01/25 12:38:32.214
  I0901 12:38:32.214511 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:38:32.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:32.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:32.263
  STEP: starting the proxy server @ 09/01/25 12:38:32.271
  I0901 12:38:32.273701 16 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-26 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/01/25 12:38:32.431
  I0901 12:38:32.463733 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0901 12:38:32.467980 16 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:39317

  I0901 12:38:32.468533 16 kubectl.go:2232] kubectl proxy stderr: W0901 12:38:32.429166     821 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-26" for this suite. @ 09/01/25 12:38:32.477
• [0.289 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/01/25 12:38:32.504
  I0901 12:38:32.504231 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:38:32.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:32.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:32.542
  I0901 12:38:32.563009 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5847" for this suite. @ 09/01/25 12:38:32.578
• [0.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/01/25 12:38:32.599
  I0901 12:38:32.599483 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:38:32.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:32.643
  E0901 12:38:32.647723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:32.651
  STEP: Creating configMap with name configmap-test-volume-c5b791e8-784b-4241-84a0-bd0edeb6c904 @ 09/01/25 12:38:32.658
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:38:32.67
  E0901 12:38:33.648528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:34.648831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:35.648951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:36.650360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:38:36.73
  I0901 12:38:36.741843 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-dd31945d-e2b5-41d8-9d0c-c41a601e8dfe container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:38:36.764
  I0901 12:38:36.823175 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9515" for this suite. @ 09/01/25 12:38:36.837
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/01/25 12:38:36.868
  I0901 12:38:36.868350 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:38:36.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:36.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:36.921
  E0901 12:38:37.650635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:38.651751      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:39.031020 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6944" for this suite. @ 09/01/25 12:38:39.044
• [2.193 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:38:39.064
  I0901 12:38:39.064242 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:38:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:39.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:39.101
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:38:39.107
  E0901 12:38:39.652423      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:40.652812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:41.653010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:42.653266      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:38:43.17
  I0901 12:38:43.179364 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-4d50cfd9-2def-4c0c-8a01-03e3498de1e9 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:38:43.196
  I0901 12:38:43.225449 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4017" for this suite. @ 09/01/25 12:38:43.234
• [4.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/01/25 12:38:43.247
  I0901 12:38:43.247271 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:38:43.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:43.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:43.277
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:38:43.283
  E0901 12:38:43.653460      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:44.653790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:45.655059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:46.659188      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:38:47.332
  I0901 12:38:47.344207 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-a629a2b6-c434-4eb5-b2d5-ca7a3ae57d71 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:38:47.36
  I0901 12:38:47.396036 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7607" for this suite. @ 09/01/25 12:38:47.407
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/01/25 12:38:47.433
  I0901 12:38:47.433580 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 12:38:47.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:47.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:47.466
  STEP: Setting up server cert @ 09/01/25 12:38:47.514
  E0901 12:38:47.659353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:48.659513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:38:49.613
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:38:49.631
  STEP: Wait for the deployment to be ready @ 09/01/25 12:38:49.658
  E0901 12:38:49.659567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:49.678291 16 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 12:38:50.660460      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:51.660941      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:38:51.706
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:38:51.754
  E0901 12:38:52.661430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:52.755753 16 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 12:38:52.763737 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:38:53.662401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:54.662765      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/01/25 12:38:55.616
  STEP: v2 custom resource should be converted @ 09/01/25 12:38:55.636
  E0901 12:38:55.663656      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:38:56.309047 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2425" for this suite. @ 09/01/25 12:38:56.324
• [8.905 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/01/25 12:38:56.339
  I0901 12:38:56.339427 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-watch @ 09/01/25 12:38:56.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:56.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:56.387
  I0901 12:38:56.398296 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:38:56.664038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:57.665448      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:38:58.665983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/01/25 12:38:59.094
  I0901 12:38:59.110975 16 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:38:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:38:59Z]] name:name1 resourceVersion:39170 uid:538a7d84-a6d9-42f2-ae8b-5f6576b42e5d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:38:59.666372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:00.667167      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:01.667511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:02.667907      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:03.669027      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:04.669180      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:05.669946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:06.670075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:07.670730      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:08.670889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/01/25 12:39:09.111
  I0901 12:39:09.135343 16 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:39:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:39:09Z]] name:name2 resourceVersion:39202 uid:6a411b39-d068-4876-ac5e-3dfab42baa5b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:39:09.671076      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:10.671619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:11.672921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:12.673018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:13.673565      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:14.674215      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:15.675093      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:16.675871      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:17.676740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:18.677545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/01/25 12:39:19.136
  I0901 12:39:19.159739 16 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:38:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:39:19Z]] name:name1 resourceVersion:39225 uid:538a7d84-a6d9-42f2-ae8b-5f6576b42e5d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:39:19.677930      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:20.678021      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:21.678504      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:22.679375      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:23.679556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:24.680446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:25.680360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:26.680507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:27.680757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:28.681198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/01/25 12:39:29.16
  I0901 12:39:29.179673 16 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:39:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:39:29Z]] name:name2 resourceVersion:39248 uid:6a411b39-d068-4876-ac5e-3dfab42baa5b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:39:29.681719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:30.682349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:31.682362      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:32.683334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:33.683569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:34.684004      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:35.684242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:36.684507      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:37.684703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:38.685664      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/01/25 12:39:39.18
  I0901 12:39:39.205855 16 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:38:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:39:19Z]] name:name1 resourceVersion:39271 uid:538a7d84-a6d9-42f2-ae8b-5f6576b42e5d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:39:39.686314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:40.687799      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:41.688222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:42.688023      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:43.689095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:44.689267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:45.689610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:46.690094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:47.690493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:48.691200      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/01/25 12:39:49.206
  I0901 12:39:49.231976 16 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:39:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:39:29Z]] name:name2 resourceVersion:39294 uid:6a411b39-d068-4876-ac5e-3dfab42baa5b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:39:49.691568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:50.692171      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:51.692532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:52.693076      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:53.693383      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:54.693958      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:55.694916      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:56.695294      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:57.695418      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:58.696217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:39:59.696809      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:39:59.768756 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9375" for this suite. @ 09/01/25 12:39:59.788
• [63.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 09/01/25 12:39:59.823
  I0901 12:39:59.824020 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:39:59.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:39:59.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:39:59.874
  STEP: creating service in namespace services-6963 @ 09/01/25 12:39:59.883
  STEP: creating service affinity-nodeport-transition in namespace services-6963 @ 09/01/25 12:39:59.884
  I0901 12:39:59.998326 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:40:00.697538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:01.697747      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:40:02.062196 16 resource.go:361] Creating new exec pod
  E0901 12:40:02.698505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:03.699151      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:40:04.129197 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0901 12:40:04.578337 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.22.9) 80 port [tcp/http] succeeded!\n"
  I0901 12:40:04.578476 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:40:04.578915 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.22.9 80'
  E0901 12:40:04.700267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:40:04.870044 16 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.22.9 80\necho hostName\nConnection to 10.233.22.9 80 port [tcp/http] succeeded!\n"
  I0901 12:40:04.870170 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:40:04.870694 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.109 32116'
  I0901 12:40:05.156800 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.109 32116\nConnection to 192.168.121.109 32116 port [tcp/*] succeeded!\n"
  I0901 12:40:05.156890 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:40:05.157266 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 32116'
  I0901 12:40:05.507199 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 32116\nConnection to 192.168.121.188 32116 port [tcp/*] succeeded!\n"
  I0901 12:40:05.507327 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:40:05.535353 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/ ; done'
  E0901 12:40:05.700496      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:40:06.269944 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n"
  I0901 12:40:06.270072 16 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-zkshn\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-rmzb6\naffinity-nodeport-transition-7d57658b6c-rmzb6"
  I0901 12:40:06.270155 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270184 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270203 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.270242 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270285 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.270302 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270319 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270335 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270352 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.270368 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270384 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270399 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270415 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zkshn
  I0901 12:40:06.270430 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270447 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.270463 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rmzb6
  I0901 12:40:06.293925 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-6963 exec execpod-affinity6cvxw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/ ; done'
  E0901 12:40:06.701289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:40:06.893253 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.188:32116/\n"
  I0901 12:40:06.893386 16 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj\naffinity-nodeport-transition-7d57658b6c-bjhsj"
  I0901 12:40:06.893445 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893475 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893494 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893511 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893546 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893564 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893580 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893597 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893613 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893629 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893645 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893673 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893689 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893705 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893721 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893737 16 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bjhsj
  I0901 12:40:06.893878 16 service.go:4352] Cleaning up the exec pod
  I0901 12:40:07.066283 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6963" for this suite. @ 09/01/25 12:40:07.091
• [7.303 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/01/25 12:40:07.126
  I0901 12:40:07.126572 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:40:07.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:40:07.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:40:07.19
  STEP: creating the pod with failed condition @ 09/01/25 12:40:07.195
  E0901 12:40:07.701550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:08.701810      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:09.702569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:10.702753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:11.703805      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:12.705318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:13.705082      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:14.705448      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:15.706615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:16.707296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:17.707819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:18.708395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:19.708625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:20.710068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:21.709527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:22.710653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:23.710764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:24.711655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:25.712059      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:26.714036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:27.713662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:28.722641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:29.723026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:30.723919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:31.723877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:32.724379      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:33.724508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:34.724842      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:35.725718      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:36.725689      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:37.725763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:38.726358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:39.726859      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:40.727733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:41.728836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:42.729229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:43.729862      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:44.730326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:45.732219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:46.733698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:47.733852      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:48.733593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:49.734995      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:50.735307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:51.735516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:52.735619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:53.735949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:54.736752      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:55.737462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:56.738567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:57.739743      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:58.739529      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:40:59.739575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:00.740259      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:01.741032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:02.741722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:03.741897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:04.742877      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:05.742409      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:06.742622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:07.743080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:08.743206      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:09.744537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:10.744254      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:11.744904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:12.744602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:13.745526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:14.746248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:15.746888      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:16.747280      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:17.748077      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:18.748550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:19.748824      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:20.749593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:21.750256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:22.750757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:23.751063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:24.751971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:25.751665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:26.753035      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:27.753016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:28.754219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:29.754256      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:30.754692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:31.755237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:32.755491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:33.755614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:34.755863      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:35.756316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:36.756434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:37.756696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:38.757220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:39.758249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:40.758251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:41.759221      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:42.759926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:43.759972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:44.760058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:45.760463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:46.760578      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:47.761548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:48.761960      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:49.762313      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:50.762897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:51.763722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:52.764704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:53.764693      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:54.767037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:55.766049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:56.767303      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:57.767506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:58.769278      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:41:59.769543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:00.770566      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:01.770890      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:02.771084      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:03.772483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:04.772964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:05.773619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:06.773676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/01/25 12:42:07.22
  I0901 12:42:07.762781 16 pod_client.go:173] Successfully updated pod "var-expansion-0f7d9136-4ae5-4643-87ce-6c4e9b659b77"
  STEP: waiting for pod running @ 09/01/25 12:42:07.772
  E0901 12:42:07.776889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:08.777662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:09.778248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/01/25 12:42:09.82
  I0901 12:42:09.820525 16 delete.go:62] Deleting pod "var-expansion-0f7d9136-4ae5-4643-87ce-6c4e9b659b77" in namespace "var-expansion-2737"
  I0901 12:42:09.851771 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-0f7d9136-4ae5-4643-87ce-6c4e9b659b77" to be fully deleted
  E0901 12:42:10.778319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:11.778554      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:12.779647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:13.779973      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:14.780484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:15.780873      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:16.781441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:17.782487      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:18.782651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:19.783393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:20.783623      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:21.783430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:22.783758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:23.784345      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:24.784518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:25.785837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:26.786231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:27.786881      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:28.787198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:29.787684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:30.788876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:31.789230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:32.790241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:33.790586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:34.791033      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:35.791936      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:36.792491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:37.792849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:38.793582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:39.793858      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:40.794279      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:41.795212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:42.114629 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2737" for this suite. @ 09/01/25 12:42:42.145
• [155.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/01/25 12:42:42.17
  I0901 12:42:42.170243 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:42:42.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:42.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:42.221
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:42:42.232
  E0901 12:42:42.796491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:43.796003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:44.796631      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:45.796588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:42:46.3
  I0901 12:42:46.312489 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-7ab5d9af-983a-4c6f-9155-9476f11c3425 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:42:46.362
  I0901 12:42:46.402092 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2118" for this suite. @ 09/01/25 12:42:46.415
• [4.274 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/01/25 12:42:46.444
  I0901 12:42:46.444351 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename controllerrevisions @ 09/01/25 12:42:46.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:46.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:46.487
  STEP: Creating DaemonSet "e2e-wkhf5-daemon-set" @ 09/01/25 12:42:46.543
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:42:46.554
  I0901 12:42:46.653598 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 0
  I0901 12:42:46.653764 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:42:46.797758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:47.592161 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 0
  I0901 12:42:47.592228 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:42:47.798746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:48.588691 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 2
  I0901 12:42:48.588856 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:42:48.798303      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:49.579521 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 2
  I0901 12:42:49.579587 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:42:49.799193      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:50.585770 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 3
  I0901 12:42:50.585946 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-wkhf5-daemon-set
  STEP: Confirm DaemonSet "e2e-wkhf5-daemon-set" successfully created with "daemonset-name=e2e-wkhf5-daemon-set" label @ 09/01/25 12:42:50.594
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-wkhf5-daemon-set" @ 09/01/25 12:42:50.628
  I0901 12:42:50.652011 16 controller_revision.go:162] Located ControllerRevision: "e2e-wkhf5-daemon-set-69ddf74977"
  STEP: Patching ControllerRevision "e2e-wkhf5-daemon-set-69ddf74977" @ 09/01/25 12:42:50.658
  I0901 12:42:50.672844 16 controller_revision.go:173] e2e-wkhf5-daemon-set-69ddf74977 has been patched
  STEP: Create a new ControllerRevision @ 09/01/25 12:42:50.672
  I0901 12:42:50.686360 16 controller_revision.go:191] Created ControllerRevision: e2e-wkhf5-daemon-set-65cc7fbb57
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 12:42:50.686
  I0901 12:42:50.686595 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:42:50.691353 16 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-wkhf5-daemon-set-69ddf74977" @ 09/01/25 12:42:50.691
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 12:42:50.704
  I0901 12:42:50.704759 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:42:50.710106 16 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-wkhf5-daemon-set-65cc7fbb57" @ 09/01/25 12:42:50.715
  I0901 12:42:50.733385 16 controller_revision.go:220] e2e-wkhf5-daemon-set-65cc7fbb57 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/01/25 12:42:50.733
  I0901 12:42:50.744896      16 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 12:42:50.745
  I0901 12:42:50.745272 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0901 12:42:50.800162      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:51.745636 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:42:51.758949 16 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-wkhf5-daemon-set-65cc7fbb57=updated" @ 09/01/25 12:42:51.759
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 12:42:51.781
  I0901 12:42:51.781907 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:42:51.791545 16 controller_revision.go:265] Found 1 ControllerRevisions
  I0901 12:42:51.797915 16 controller_revision.go:246] ControllerRevision "e2e-wkhf5-daemon-set-57b6f54656" has revision 3
  E0901 12:42:51.800469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "e2e-wkhf5-daemon-set" @ 09/01/25 12:42:51.809
  STEP: deleting DaemonSet.extensions e2e-wkhf5-daemon-set in namespace controllerrevisions-3246, will wait for the garbage collector to delete the pods @ 09/01/25 12:42:51.809
  I0901 12:42:51.893938 16 resources.go:139] Deleting DaemonSet.extensions e2e-wkhf5-daemon-set took: 26.212599ms
  I0901 12:42:52.013323 16 resources.go:163] Terminating DaemonSet.extensions e2e-wkhf5-daemon-set pods took: 119.368466ms
  E0901 12:42:52.801469      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:53.802390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:42:54.632879 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wkhf5-daemon-set: 0
  I0901 12:42:54.633008 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-wkhf5-daemon-set
  I0901 12:42:54.646976 16 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40003"},"items":null}

  I0901 12:42:54.656573 16 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40003"},"items":null}

  I0901 12:42:54.707745 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3246" for this suite. @ 09/01/25 12:42:54.77
• [8.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/01/25 12:42:54.797
  I0901 12:42:54.798017 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:42:54.801
  E0901 12:42:54.803081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:54.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:54.848
  STEP: Creating configMap with name projected-configmap-test-volume-map-2a18b77b-d25a-4cb5-a5d2-69c56acd23dd @ 09/01/25 12:42:54.86
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:42:54.884
  E0901 12:42:55.803771      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:56.803927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:57.804267      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:42:58.805212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:42:59.013
  I0901 12:42:59.025345 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-configmaps-7fc12bd4-c580-4756-9074-b3564d03d454 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:42:59.058
  I0901 12:42:59.097555 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4098" for this suite. @ 09/01/25 12:42:59.113
• [4.336 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:42:59.135
  I0901 12:42:59.135095 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:42:59.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:59.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:59.17
  STEP: Setting up data @ 09/01/25 12:42:59.176
  STEP: Creating pod pod-subpath-test-projected-mcng @ 09/01/25 12:42:59.194
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:42:59.194
  E0901 12:42:59.805071      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:00.805538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:01.807613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:02.807561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:03.808006      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:04.808313      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:05.808539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:06.808860      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:07.809896      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:08.809974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:09.810563      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:10.810867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:11.811211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:12.811541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:13.812636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:14.813303      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:15.813387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:16.813971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:17.814633      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:18.815060      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:19.816906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:20.817371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:21.817834      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:22.818333      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:43:23.378
  I0901 12:43:23.390752 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-subpath-test-projected-mcng container test-container-subpath-projected-mcng: <nil>
  STEP: delete the pod @ 09/01/25 12:43:23.428
  STEP: Deleting pod pod-subpath-test-projected-mcng @ 09/01/25 12:43:23.476
  I0901 12:43:23.476844 16 delete.go:62] Deleting pod "pod-subpath-test-projected-mcng" in namespace "subpath-9535"
  I0901 12:43:23.487361 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9535" for this suite. @ 09/01/25 12:43:23.505
• [24.392 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/01/25 12:43:23.528
  I0901 12:43:23.529255 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:43:23.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:23.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:23.574
  E0901 12:43:23.819057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:24.819627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:25.670445 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5548" for this suite. @ 09/01/25 12:43:25.698
• [2.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/01/25 12:43:25.747
  I0901 12:43:25.747595 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:43:25.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:25.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:25.778
  STEP: Setting up server cert @ 09/01/25 12:43:25.812
  E0901 12:43:25.820237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:43:26.699
  STEP: Deploying the webhook pod @ 09/01/25 12:43:26.717
  STEP: Wait for the deployment to be ready @ 09/01/25 12:43:26.753
  I0901 12:43:26.785446 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:43:26.821359      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:27.822781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:28.820905 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 43, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 43, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 43, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 43, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:43:28.824551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:29.823989      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:30.825305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:43:30.828
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:43:30.886
  E0901 12:43:31.826311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:31.888856 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/01/25 12:43:31.904
  I0901 12:43:31.961841 16 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: create a configmap that should be updated by the webhook @ 09/01/25 12:43:32.094
  I0901 12:43:32.285441 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2716" for this suite. @ 09/01/25 12:43:32.298
  STEP: Destroying namespace "webhook-markers-2239" for this suite. @ 09/01/25 12:43:32.323
• [6.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/01/25 12:43:32.336
  I0901 12:43:32.336873 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:43:32.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:32.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:32.37
  I0901 12:43:32.431414 16 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0901 12:43:32.444577 16 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0901 12:43:32.506624 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:43:32.506703 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:43:32.827037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:33.466734 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:43:33.466828 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:43:33.826841      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:34.484607 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:43:34.484783 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  E0901 12:43:34.827029      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:35.467021 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:43:35.467132 16 fixtures.go:131] Node xoongeig7eeb-2 is running 0 daemon pod, expected 1
  E0901 12:43:35.827434      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:36.475882 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:43:36.476066 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0901 12:43:36.476540 16 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0901 12:43:36.504025 16 daemon_set.go:102] Updating DaemonSet daemon-set
  E0901 12:43:36.827488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:37.537073 16 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0901 12:43:37.568543 16 daemon_set.go:102] Updating DaemonSet daemon-set
  I0901 12:43:37.568639 16 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0901 12:43:37.620318 16 daemon_set.go:1193] Wrong image for pod: daemon-set-9gkg7. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0901 12:43:37.620903 16 daemon_set.go:1198] Pod daemon-set-9gkg7 is not available
  E0901 12:43:37.828181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:38.828293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:39.830037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:40.829667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:41.830866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:42.831222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:43.831212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:44.586440 16 daemon_set.go:1198] Pod daemon-set-7mf6c is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:43:44.637
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1119, will wait for the garbage collector to delete the pods @ 09/01/25 12:43:44.638
  I0901 12:43:44.727173 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 28.740488ms
  I0901 12:43:44.827695 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.589184ms
  E0901 12:43:44.831198      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:45.831792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:46.833009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:47.441241 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:43:47.441377 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:43:47.455973 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40406"},"items":null}

  I0901 12:43:47.473191 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40406"},"items":null}

  I0901 12:43:47.517538 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1119" for this suite. @ 09/01/25 12:43:47.594
• [15.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 09/01/25 12:43:47.613
  I0901 12:43:47.613874 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:43:47.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:47.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:47.648
  STEP: Creating service test in namespace statefulset-1279 @ 09/01/25 12:43:47.654
  STEP: Creating statefulset ss in namespace statefulset-1279 @ 09/01/25 12:43:47.664
  I0901 12:43:47.699723 16 wait.go:44] Found 0 stateful pods, waiting for 1
  E0901 12:43:47.833263      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:48.833229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:49.833572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:50.834190      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:51.834402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:52.834619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:53.834964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:54.835605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:55.835602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:56.836709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:43:57.702289 16 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/01/25 12:43:57.72
  STEP: updating a scale subresource @ 09/01/25 12:43:57.77
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 12:43:57.781
  STEP: Patch a scale subresource @ 09/01/25 12:43:57.788
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 12:43:57.804
  I0901 12:43:57.812284 16 statefulset.go:138] Deleting all statefulset in ns statefulset-1279
  I0901 12:43:57.829430 16 rest.go:153] Scaling statefulset ss to 0
  E0901 12:43:57.836760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:58.837714      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:43:59.838530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:00.839070      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:01.839673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:02.840209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:03.840463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:04.840661      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:05.841925      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:06.841893      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:07.841927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:07.869294 16 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:44:07.880297 16 rest.go:91] Deleting statefulset ss
  I0901 12:44:07.927510 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1279" for this suite. @ 09/01/25 12:44:07.95
• [20.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:44:07.97
  I0901 12:44:07.971056 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:44:07.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:08.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:08.017
  I0901 12:44:08.083849 16 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/01/25 12:44:08.099
  I0901 12:44:08.135564 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:08.135653 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/01/25 12:44:08.135
  I0901 12:44:08.210882 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:08.211178 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:08.842395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:09.196794 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:09.196986 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:09.842673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:10.201001 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:10.201152 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:10.843379      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:11.201010 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 12:44:11.201173 16 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/01/25 12:44:11.214
  I0901 12:44:11.282378 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:11.282561 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/01/25 12:44:11.282
  I0901 12:44:11.329545 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:11.329619 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:11.843576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:12.329466 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:12.329718 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:12.844657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:13.326772 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:13.326862 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:13.845203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:14.327445 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:14.327533 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:44:14.845748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:15.330879 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 12:44:15.331020 16 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:44:15.352
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8446, will wait for the garbage collector to delete the pods @ 09/01/25 12:44:15.352
  I0901 12:44:15.433023 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.59976ms
  I0901 12:44:15.534070 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.027607ms
  E0901 12:44:15.845389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:16.748275 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:44:16.748367 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:44:16.758708 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40655"},"items":null}

  I0901 12:44:16.766703 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40655"},"items":null}

  E0901 12:44:16.846219      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:16.849878 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8446" for this suite. @ 09/01/25 12:44:16.883
• [8.934 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/01/25 12:44:16.906
  I0901 12:44:16.906920 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:44:16.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:16.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:16.944
  STEP: Creating Indexed job @ 09/01/25 12:44:16.95
  STEP: Ensuring job reaches completions @ 09/01/25 12:44:16.962
  E0901 12:44:17.871662      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:18.872653      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:19.873045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:20.873511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:21.873678      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:22.874436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:23.875415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:24.876022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:25.883735      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:26.878676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/01/25 12:44:27.064
  I0901 12:44:27.084196 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8659" for this suite. @ 09/01/25 12:44:27.101
• [10.223 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/01/25 12:44:27.13
  I0901 12:44:27.130881 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:44:27.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:27.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:27.203
  I0901 12:44:27.240385 16 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0901 12:44:27.879992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:28.883608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:29.902536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:30.889240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:31.889781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:32.263589 16 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:44:32.265
  I0901 12:44:32.267414 16 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/01/25 12:44:32.308
  I0901 12:44:32.361447 16 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6823",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c95f1fd-b864-48c6-a723-028843956491",
      ResourceVersion: (string) (len=5) "40798",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:44:32.417897 16 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6823",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8c51e55-3d8a-42f7-b5a0-65265e0269e6",
      ResourceVersion: (string) (len=5) "40810",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "6c95f1fd-b864-48c6-a723-028843956491",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 63 39 35 66 31  66 64 2d 62 38 36 34 2d  |\"6c95f1fd-b864-|
              00000120  34 38 63 36 2d 61 37 32  33 2d 30 32 38 38 34 33  |48c6-a723-028843|
              00000130  39 35 36 34 39 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |956491\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:44:32.439545 16 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0901 12:44:32.440535 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6823",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4d9f68a-4271-4517-b537-ba64e965a265",
      ResourceVersion: (string) (len=5) "40800",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "6c95f1fd-b864-48c6-a723-028843956491",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 63 39 35 66 31 66  |"uid\":\"6c95f1f|
              00000040  64 2d 62 38 36 34 2d 34  38 63 36 2d 61 37 32 33  |d-b864-48c6-a723|
              00000050  2d 30 32 38 38 34 33 39  35 36 34 39 31 5c 22 7d  |-028843956491\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:44:32.458663 16 deployment.go:68] Pod "test-cleanup-controller-7wt42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7wt42",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6823",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d97dcbb-26da-4636-9f8b-f8ba94bc5057",
      ResourceVersion: (string) (len=5) "40782",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "e4d9f68a-4271-4517-b537-ba64e965a265",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 34 64 39 66 36 38 61  |uid\":\"e4d9f68a|
              00000080  2d 34 32 37 31 2d 34 35  31 37 2d 62 35 33 37 2d  |-4271-4517-b537-|
              00000090  62 61 36 34 65 39 36 35  61 32 36 35 5c 22 7d 22  |ba64e965a265\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 5c 22 7d 22 3a 7b  |.233.66.13\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zr9s8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zr9s8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=12) "10.233.66.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892327468,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://997ca4779be0661b308e6b5329db20c60614c62970b0621670a5960456a08409",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zr9s8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:44:32.475499 16 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-67tnh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-67tnh",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-6823",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2eae68d-d531-41dd-b5c8-c03243af59b4",
      ResourceVersion: (string) (len=5) "40812",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "f8c51e55-3d8a-42f7-b5a0-65265e0269e6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  63 35 31 65 35 35 2d 33  |d\":\"f8c51e55-3|
              00000090  64 38 61 2d 34 32 66 37  2d 62 35 61 30 2d 36 35  |d8a-42f7-b5a0-65|
              000000a0  32 36 35 65 30 32 36 39  65 36 5c 22 7d 22 3a 7b  |265e0269e6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kx6p6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kx6p6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kx6p6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:44:32.488500 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6823" for this suite. @ 09/01/25 12:44:32.502
• [5.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/01/25 12:44:32.528
  I0901 12:44:32.528588 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:44:32.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:32.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:32.569
  I0901 12:44:32.578486 16 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0901 12:44:32.596015 16 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0901 12:44:32.613142 16 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0901 12:44:32.890089      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:33.890535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:34.655248 16 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0901 12:44:34.666258 16 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0901 12:44:34.699496 16 deployment.go:314] Updating deployment test-recreate-deployment
  I0901 12:44:34.700007 16 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0901 12:44:34.889073 16 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4864",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4e07a81-6705-4ea6-88fd-4865fa1ab47b",
      ResourceVersion: (string) (len=5) "40890",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0901 12:44:34.890684      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:34.912256 16 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4864",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9720ecc-dde3-44de-a7c4-328b005a8058",
      ResourceVersion: (string) (len=5) "40887",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e4e07a81-6705-4ea6-88fd-4865fa1ab47b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 34 65 30 37 61  38 31 2d 36 37 30 35 2d  |\"e4e07a81-6705-|
              00000120  34 65 61 36 2d 38 38 66  64 2d 34 38 36 35 66 61  |4ea6-88fd-4865fa|
              00000130  31 61 62 34 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ab47b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:44:34.922736 16 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0901 12:44:34.925888 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4864",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdb1a3e7-92fd-4098-b470-3fe9165ce131",
      ResourceVersion: (string) (len=5) "40877",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e4e07a81-6705-4ea6-88fd-4865fa1ab47b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 34 65 30 37 61  38 31 2d 36 37 30 35 2d  |\"e4e07a81-6705-|
              00000120  34 65 61 36 2d 38 38 66  64 2d 34 38 36 35 66 61  |4ea6-88fd-4865fa|
              00000130  31 61 62 34 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ab47b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:44:34.944930 16 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-b6948" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-b6948",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-4864",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2248c795-a803-41ec-ae30-8df17e235ca7",
      ResourceVersion: (string) (len=5) "40889",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "c9720ecc-dde3-44de-a7c4-328b005a8058",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  37 32 30 65 63 63 2d 64  |d\":\"c9720ecc-d|
              00000090  64 65 33 2d 34 34 64 65  2d 61 37 63 34 2d 33 32  |de3-44de-a7c4-32|
              000000a0  38 62 30 30 35 61 38 30  35 38 5c 22 7d 22 3a 7b  |8b005a8058\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7bjjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7bjjv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7bjjv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:44:34.957393 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4864" for this suite. @ 09/01/25 12:44:34.974
• [2.467 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/01/25 12:44:34.998
  I0901 12:44:34.998609 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:44:35.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:35.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:35.043
  STEP: create the container @ 09/01/25 12:44:35.052
  I0901 12:44:35.075819      16 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:44:35.076
  E0901 12:44:35.891652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:36.892203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:37.892050      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 12:44:38.126
  STEP: the container should be terminated @ 09/01/25 12:44:38.135
  STEP: the termination message should be set @ 09/01/25 12:44:38.135
  I0901 12:44:38.135703 16 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 12:44:38.135
  I0901 12:44:38.173586 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1833" for this suite. @ 09/01/25 12:44:38.183
• [3.205 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/01/25 12:44:38.206
  I0901 12:44:38.206392 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:44:38.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:38.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:38.242
  STEP: Creating pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654 @ 09/01/25 12:44:38.248
  E0901 12:44:38.892352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:39.892543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:44:40.286
  I0901 12:44:40.295613 16 container_probe.go:1748] Initial restart count of pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 is 0
  I0901 12:44:40.305816 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:40.893994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:41.894676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:42.318344 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:42.896074      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:43.897301      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:44.329014 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:44.897491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:45.897768      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:46.341595 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:46.897902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:47.902474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:48.352232 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:48.898713      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:49.898905      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:50.364984 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:50.899356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:51.901447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:52.379583 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:52.901448      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:53.900671      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:54.392210 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:54.901515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:55.901536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:56.407213 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:56.902898      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:57.902964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:44:58.422483 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:44:58.903603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:59.903957      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:00.438265 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:00.904489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:01.905251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:02.453076 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:02.905517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:03.906387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:04.465390 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:04.906847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:05.907331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:06.476594 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:06.908224      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:07.908471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:08.496622 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:08.909557      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:09.909642      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:10.510889 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:10.910251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:11.910232      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:12.525796 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:12.911401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:13.912065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:14.539874 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:14.913953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:15.912981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:16.554204 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:16.913486      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:17.914005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:18.565365 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:18.914675      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:19.915241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:20.579551 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:20.915907      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:21.916619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:22.599212 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:22.916774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:23.917755      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:24.611945 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:24.918330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:25.919096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:26.640412 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:26.919710      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:27.920295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:28.652268 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  E0901 12:45:28.920578      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:29.921423      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:30.664309 16 container_probe.go:1758] Get pod busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 in namespace container-probe-5654
  I0901 12:45:30.664444 16 container_probe.go:1762] Restart count of pod container-probe-5654/busybox-5ce9d95c-4f7f-4f72-9e80-5ebf49f9c030 is now 1 (50.368744417s elapsed)
  STEP: deleting the pod @ 09/01/25 12:45:30.664
  I0901 12:45:30.699575 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5654" for this suite. @ 09/01/25 12:45:30.715
• [52.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/01/25 12:45:30.74
  I0901 12:45:30.740889 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:45:30.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:30.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:30.775
  STEP: Setting up server cert @ 09/01/25 12:45:30.824
  E0901 12:45:30.922088      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:31.923093      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:45:32.537
  STEP: Deploying the webhook pod @ 09/01/25 12:45:32.552
  STEP: Wait for the deployment to be ready @ 09/01/25 12:45:32.602
  I0901 12:45:32.628183 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 12:45:32.924022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:33.924422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:45:34.668
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:45:34.713
  E0901 12:45:34.925328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:35.714194 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 12:45:35.729
  STEP: create a pod @ 09/01/25 12:45:35.794
  E0901 12:45:35.925857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:36.926270      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/01/25 12:45:37.855
  I0901 12:45:37.856014 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=webhook-4172 attach --namespace=webhook-4172 to-be-attached-pod -i -c=container1'
  E0901 12:45:37.927043      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:38.117470 16 builder.go:135] rc: 1
  I0901 12:45:38.263611 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4172" for this suite. @ 09/01/25 12:45:38.284
  STEP: Destroying namespace "webhook-markers-7152" for this suite. @ 09/01/25 12:45:38.3
• [7.575 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/01/25 12:45:38.316
  I0901 12:45:38.316328 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:45:38.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:38.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:38.35
  I0901 12:45:38.403541 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1842" for this suite. @ 09/01/25 12:45:38.41
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 09/01/25 12:45:38.425
  I0901 12:45:38.425179 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:45:38.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:38.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:38.46
  STEP: Creating a ResourceQuota with best effort scope @ 09/01/25 12:45:38.468
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:45:38.48
  E0901 12:45:38.927973      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:39.929022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/01/25 12:45:40.491
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:45:40.505
  E0901 12:45:40.929018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:41.929356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/01/25 12:45:42.514
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/01/25 12:45:42.56
  E0901 12:45:42.929454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:43.930527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/01/25 12:45:44.577
  E0901 12:45:44.931622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:45.931948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 12:45:46.595
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:45:46.636
  E0901 12:45:46.935181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:47.935573      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/01/25 12:45:48.645
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/01/25 12:45:48.674
  E0901 12:45:48.935536      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:49.936344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/01/25 12:45:50.691
  E0901 12:45:50.937518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:51.937795      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 12:45:52.703
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:45:52.739
  E0901 12:45:52.938518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:53.939860      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:54.751403 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6070" for this suite. @ 09/01/25 12:45:54.77
• [16.368 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/01/25 12:45:54.793
  I0901 12:45:54.794385 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:45:54.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:54.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:54.836
  E0901 12:45:54.940406      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:55.941191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:56.941682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:57.942005      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:58.942976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:58.981380 16 security_context.go:619] Got logs for pod "busybox-privileged-false-6ab889f9-8270-4924-b037-7f154adc3db5": "ip: RTNETLINK answers: Operation not permitted\n"
  I0901 12:45:58.981598 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6777" for this suite. @ 09/01/25 12:45:58.996
• [4.220 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/01/25 12:45:59.013
  I0901 12:45:59.013626 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:45:59.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:59.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:59.066
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 12:45:59.074
  E0901 12:45:59.947210      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:00.947752      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:01.948879      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:02.948471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:03.146
  I0901 12:46:03.155853 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-f366cb93-a63c-488c-b187-6867136dab79 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:03.173
  I0901 12:46:03.210442 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4732" for this suite. @ 09/01/25 12:46:03.22
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/01/25 12:46:03.247
  I0901 12:46:03.248413 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:46:03.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:03.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:03.287
  I0901 12:46:03.312650      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:46:03.323431 16 endpointslice.go:1045] Endpoints addresses: [192.168.121.188 192.168.121.88] , ports: [6443]
  I0901 12:46:03.323877 16 endpointslice.go:1075] EndpointSlices addresses: [192.168.121.188 192.168.121.88] , ports: [6443]
  I0901 12:46:03.324604 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9555" for this suite. @ 09/01/25 12:46:03.34
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/01/25 12:46:03.359
  I0901 12:46:03.360369 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:46:03.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:03.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:03.399
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/01/25 12:46:03.406
  I0901 12:46:03.409375 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:46:03.949009      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:04.950088      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:05.785181 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:46:05.951019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:06.951540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:07.951627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:08.952803      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:09.954039      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:10.954216      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:11.954556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:12.955030      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:13.955083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:14.955524      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:15.294057 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5146" for this suite. @ 09/01/25 12:46:15.336
• [11.998 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:46:15.358
  I0901 12:46:15.358308 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:46:15.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:15.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:15.406
  STEP: Creating configMap configmap-3361/configmap-test-2fccc3db-1026-4579-bb14-fe46d7c4c9ec @ 09/01/25 12:46:15.414
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:46:15.427
  E0901 12:46:15.956060      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:16.956660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:17.957452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:18.957080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:19.497
  I0901 12:46:19.506212 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-configmaps-cc163966-7b36-44a2-aeb9-1936177a3480 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:46:19.568
  I0901 12:46:19.618029 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3361" for this suite. @ 09/01/25 12:46:19.645
• [4.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/01/25 12:46:19.671
  I0901 12:46:19.671361 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:46:19.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:19.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:19.716
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 12:46:19.723
  E0901 12:46:19.957592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:20.957731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:21.958176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:22.958377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:23.774
  I0901 12:46:23.784902 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-75c3dc60-80c3-4ef9-9661-d2b3a464ad23 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:23.809
  I0901 12:46:23.867365 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9121" for this suite. @ 09/01/25 12:46:23.886
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/01/25 12:46:23.912
  I0901 12:46:23.912807 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:46:23.916
  E0901 12:46:23.958592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:23.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:23.972
  STEP: Creating a pod to test override arguments @ 09/01/25 12:46:23.983
  E0901 12:46:24.958741      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:25.959154      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:26.959395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:27.960102      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:28.062
  I0901 12:46:28.072791 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod client-containers-27eef9be-3fe0-442a-ab33-f185b73788d0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:28.093
  I0901 12:46:28.155649 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7747" for this suite. @ 09/01/25 12:46:28.172
• [4.285 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 09/01/25 12:46:28.198
  I0901 12:46:28.199059 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:46:28.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:28.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:28.266
  STEP: creating service nodeport-test with type=NodePort in namespace services-4189 @ 09/01/25 12:46:28.274
  I0901 12:46:28.513905 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:46:28.960571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:29.961370      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:30.523721 16 resource.go:361] Creating new exec pod
  E0901 12:46:30.962420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:31.962723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:32.608732 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 12:46:32.909527 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.50.226) 80 port [tcp/http] succeeded!\n"
  I0901 12:46:32.910554 16 builder.go:147] stdout: ""
  E0901 12:46:32.963726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:33.610568 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 12:46:33.930060 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.50.226) 80 port [tcp/http] succeeded!\n"
  I0901 12:46:33.930429 16 builder.go:147] stdout: "nodeport-test-6d8768f5bb-fq6vk"
  I0901 12:46:33.930865 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.226 80'
  E0901 12:46:33.963957      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:34.196010 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.226 80\nConnection to 10.233.50.226 80 port [tcp/http] succeeded!\n"
  I0901 12:46:34.196172 16 builder.go:147] stdout: ""
  I0901 12:46:34.934358 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.226 80'
  E0901 12:46:34.964559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:35.251329 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.226 80\nConnection to 10.233.50.226 80 port [tcp/http] succeeded!\n"
  I0901 12:46:35.251644 16 builder.go:147] stdout: ""
  I0901 12:46:35.931400 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.226 80'
  E0901 12:46:35.965399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:36.273350 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.226 80\nConnection to 10.233.50.226 80 port [tcp/http] succeeded!\n"
  I0901 12:46:36.273446 16 builder.go:147] stdout: ""
  I0901 12:46:36.932017 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.226 80'
  E0901 12:46:36.966170      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:37.214866 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.226 80\nConnection to 10.233.50.226 80 port [tcp/http] succeeded!\n"
  I0901 12:46:37.214986 16 builder.go:147] stdout: "nodeport-test-6d8768f5bb-fq6vk"
  I0901 12:46:37.215635 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.109 31052'
  I0901 12:46:37.496513 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.109 31052\nConnection to 192.168.121.109 31052 port [tcp/*] succeeded!\n"
  I0901 12:46:37.496647 16 builder.go:147] stdout: "nodeport-test-6d8768f5bb-zhts2"
  I0901 12:46:37.497474 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-4189 exec execpodkpxkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 31052'
  I0901 12:46:37.760725 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 31052\nConnection to 192.168.121.188 31052 port [tcp/*] succeeded!\n"
  I0901 12:46:37.760831 16 builder.go:147] stdout: "nodeport-test-6d8768f5bb-fq6vk"
  I0901 12:46:37.761532 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4189" for this suite. @ 09/01/25 12:46:37.774
• [9.589 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 09/01/25 12:46:37.787
  I0901 12:46:37.787724 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:46:37.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:37.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:37.823
  STEP: Creating resourceQuota "e2e-rq-status-2v9gx" @ 09/01/25 12:46:37.842
  I0901 12:46:37.861320 16 resource_quota.go:1106] Resource quota "e2e-rq-status-2v9gx" reports spec: hard cpu limit of 500m
  I0901 12:46:37.861472 16 resource_quota.go:1108] Resource quota "e2e-rq-status-2v9gx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2v9gx" /status @ 09/01/25 12:46:37.861
  STEP: Confirm /status for "e2e-rq-status-2v9gx" resourceQuota via watch @ 09/01/25 12:46:37.89
  I0901 12:46:37.893888 16 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList(nil)
  I0901 12:46:37.894051 16 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 12:46:37.894135 16 resource_quota.go:1145] ResourceQuota "e2e-rq-status-2v9gx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/01/25 12:46:37.902
  I0901 12:46:37.915445 16 resource_quota.go:1156] Resource quota "e2e-rq-status-2v9gx" reports spec: hard cpu limit of 1
  I0901 12:46:37.915510 16 resource_quota.go:1157] Resource quota "e2e-rq-status-2v9gx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2v9gx" /status @ 09/01/25 12:46:37.915
  STEP: Confirm /status for "e2e-rq-status-2v9gx" resourceQuota via watch @ 09/01/25 12:46:37.927
  I0901 12:46:37.929569 16 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 12:46:37.929694 16 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0901 12:46:37.929738 16 resource_quota.go:1189] ResourceQuota "e2e-rq-status-2v9gx" /status was patched
  STEP: Get "e2e-rq-status-2v9gx" /status @ 09/01/25 12:46:37.929
  I0901 12:46:37.938861 16 resource_quota.go:1200] Resourcequota "e2e-rq-status-2v9gx" reports status: hard cpu of 1
  I0901 12:46:37.938938 16 resource_quota.go:1202] Resourcequota "e2e-rq-status-2v9gx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2v9gx" /status before checking Spec is unchanged @ 09/01/25 12:46:37.945
  I0901 12:46:37.964879 16 resource_quota.go:1222] Resourcequota "e2e-rq-status-2v9gx" reports status: hard cpu of 2
  I0901 12:46:37.964974 16 resource_quota.go:1224] Resourcequota "e2e-rq-status-2v9gx" reports status: hard memory of 2Gi
  E0901 12:46:37.965956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:37.967212 16 resource_quota.go:1233] observed resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0901 12:46:37.967291 16 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-2v9gx" in namespace "resourcequota-5966" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0901 12:46:37.976694 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:46:38.966986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:39.967883      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:40.968073      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:41.968351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:42.970476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:42.977824 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c4fe78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c4fea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c4fef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:46:43.971214      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:44.971826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:45.973184      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:46.973616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:47.974206      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:47.977625 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:46:48.975216      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:49.975663      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:50.976610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:51.976736      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:52.977672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:52.985641 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:46:53.977947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:54.978385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:55.978885      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:56.979177      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:57.979523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:57.983033 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc8d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:46:58.980097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:59.987253      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:00.985657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:01.986946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:02.982534 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c266c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:02.986640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:04.000036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:04.988096      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:05.988622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:06.988888      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:07.985084 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c268a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c268d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:07.989001      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:08.989900      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:09.990667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:10.992664      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:11.991945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:12.977437 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26b40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:12.992565      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:13.992979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:14.993380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:15.994903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:16.994331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:17.980744 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:17.994786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:18.995377      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:19.995439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:20.995482      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:21.996019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:22.979749 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edcca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edccd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edcd08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:22.996681      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:23.997483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:24.997775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:25.998197      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:26.998638      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:27.979060 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edce88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edceb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edcf00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:27.999315      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:28.999971      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:30.001075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:31.000953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:32.001192      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:33.002306      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:33.013386 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c270c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:34.002508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:35.002762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:36.004569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:37.004072      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:37.980495 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd1e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:38.004654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:39.005548      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:40.006369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:41.007228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:42.007984      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:42.979371 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:43.008440      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:44.009452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:45.010323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:46.010011      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:47.010574      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:47.980633 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:48.010792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:49.011572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:50.011904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:51.012550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:52.013928      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:52.980480 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c274d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:53.013758      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:54.014028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:55.014801      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:56.015407      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:57.015579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:57.987177 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edd9f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edda28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edda58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:47:58.016332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:59.017254      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:00.017718      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:01.018213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:02.018348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:02.976977 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000eddbd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000eddc08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000eddc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:03.019060      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:04.020299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:05.020889      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:06.021324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:07.021709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:07.981420 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c277e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27818), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:08.021903      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:09.021750      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:10.022644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:11.023411      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:12.023455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:13.015209 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c279b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c279e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:13.024315      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:14.025293      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:15.025539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:16.026631      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:17.026945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:17.980102 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc0f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:18.027324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:19.027447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:20.028276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:21.028322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:22.029289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:22.980758 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c261b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c261e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:23.030209      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:24.031231      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:25.031785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:26.032586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:27.033013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:27.977542 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c263c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c263f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:28.034220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:29.034021      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:30.034449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:31.035667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:32.035746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:32.982315 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:33.036450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:34.038176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:35.038394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:36.038929      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:37.039604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:37.980540 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c266a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c266d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:38.040240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:39.041255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:40.041717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:41.042024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:42.042927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:42.985409 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c268b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c268e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:43.042866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:44.043477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:45.043694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:46.044338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:47.044426      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:47.982014 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:48.045301      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:49.045561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:50.045856      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:51.046866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:52.047547      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:52.983404 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:53.048943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:54.049164      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:55.049530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:56.050232      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:57.051069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:57.984463 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc8e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edc918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:48:58.051614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:59.052392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:00.053003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:01.053608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:02.054338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:02.982623 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c26f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:03.055287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:04.055669      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:05.055909      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:06.056505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:07.058172      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:07.979800 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edca50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edca80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edcab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:08.059024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:09.059208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:10.059534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:11.060686      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:12.061287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:13.001992 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:13.063063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:14.062875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:15.063707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:16.064234      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:17.064531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:17.978801 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27488), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c274b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:18.064961      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:19.065635      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:20.065921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:21.066481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:22.067043      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:22.980889 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c276c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c276f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c27728), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:23.068748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:24.068430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:25.068762      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:26.069356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:27.070252      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:27.977414 16 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2v9gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2v9gx", GenerateName:"", Namespace:"resourcequota-5966", SelfLink:"", UID:"61cca794-10bb-40d2-ae85-cb05cd48f165", ResourceVersion:"41768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2v9gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edce40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edce70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 46, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000edcea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:49:28.070729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:29.071232      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:30.071566      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:31.071967      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:32.073100      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:32.979998 16 resource_quota.go:1264] ResourceQuota "e2e-rq-status-2v9gx" Spec was unchanged and /status reset
  I0901 12:49:32.980741 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5966" for this suite. @ 09/01/25 12:49:32.996
• [175.229 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/01/25 12:49:33.021
  I0901 12:49:33.021404 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:49:33.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:33.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:33.07
  E0901 12:49:33.073551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 12:49:33.078
  E0901 12:49:34.074440      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:35.075424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:36.075069      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:37.075717      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:49:37.143
  I0901 12:49:37.153469 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-4b3be5e0-ce04-4c0f-b02b-026748f93289 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:49:37.204
  I0901 12:49:37.254020 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6865" for this suite. @ 09/01/25 12:49:37.267
• [4.271 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/01/25 12:49:37.292
  I0901 12:49:37.292727 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename certificates @ 09/01/25 12:49:37.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:37.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:37.344
  E0901 12:49:38.075887      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/01/25 12:49:38.785
  STEP: getting /apis/certificates.k8s.io @ 09/01/25 12:49:38.795
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/01/25 12:49:38.796
  STEP: creating @ 09/01/25 12:49:38.799
  STEP: getting @ 09/01/25 12:49:38.841
  STEP: listing @ 09/01/25 12:49:38.848
  STEP: watching @ 09/01/25 12:49:38.856
  I0901 12:49:38.857173 16 certificates.go:316] starting watch
  STEP: patching @ 09/01/25 12:49:38.864
  STEP: updating @ 09/01/25 12:49:38.894
  I0901 12:49:38.906250 16 certificates.go:332] waiting for watch events with expected annotations
  I0901 12:49:38.906433 16 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/01/25 12:49:38.907
  STEP: patching /approval @ 09/01/25 12:49:38.916
  STEP: updating /approval @ 09/01/25 12:49:38.934
  STEP: getting /status @ 09/01/25 12:49:38.965
  STEP: patching /status @ 09/01/25 12:49:38.975
  STEP: updating /status @ 09/01/25 12:49:38.991
  STEP: deleting @ 09/01/25 12:49:39.01
  STEP: deleting a collection @ 09/01/25 12:49:39.041
  E0901 12:49:39.076791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:39.078535 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8192" for this suite. @ 09/01/25 12:49:39.089
• [1.812 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 09/01/25 12:49:39.106
  I0901 12:49:39.106218 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:49:39.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:39.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:39.151
  STEP: validating api versions @ 09/01/25 12:49:39.158
  I0901 12:49:39.159035 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5130 api-versions'
  I0901 12:49:39.350441 16 builder.go:146] stderr: ""
  I0901 12:49:39.350575 16 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0901 12:49:39.350811 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5130" for this suite. @ 09/01/25 12:49:39.363
• [0.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:49:39.385
  I0901 12:49:39.385199 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:49:39.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:39.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:39.429
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:49:39.438
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:49:39.439
  STEP: creating a pod to probe DNS @ 09/01/25 12:49:39.439
  STEP: submitting the pod to kubernetes @ 09/01/25 12:49:39.439
  E0901 12:49:40.077366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:41.078395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:49:41.491
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:49:41.499
  I0901 12:49:41.558523 16 dns_common.go:546] DNS probes using dns-6016/dns-test-c3883d28-a7b6-4d7d-9447-242aa31bd5ac succeeded

  STEP: deleting the pod @ 09/01/25 12:49:41.559
  I0901 12:49:41.589172 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6016" for this suite. @ 09/01/25 12:49:41.613
• [2.245 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/01/25 12:49:41.63
  I0901 12:49:41.630378 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename init-container @ 09/01/25 12:49:41.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:41.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:41.708
  STEP: creating the pod @ 09/01/25 12:49:41.715
  I0901 12:49:41.715431 16 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0901 12:49:42.078542      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:43.078475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:44.079319      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:45.079948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:45.778582 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6277" for this suite. @ 09/01/25 12:49:45.794
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/01/25 12:49:45.828
  I0901 12:49:45.828458 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:49:45.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:45.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:45.873
  STEP: Creating configMap with name projected-configmap-test-volume-map-a34659f3-012e-4990-b5b4-ffa0eddf802f @ 09/01/25 12:49:45.882
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:49:45.893
  E0901 12:49:46.080018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:47.080455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:48.081493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:49.082191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:49:49.937
  I0901 12:49:49.945652 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-configmaps-aa614b24-2e15-4478-90f1-aa6993d4f915 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:49:49.966
  I0901 12:49:50.001293 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6785" for this suite. @ 09/01/25 12:49:50.011
• [4.200 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/01/25 12:49:50.03
  I0901 12:49:50.030212 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:49:50.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:50.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:50.071
  E0901 12:49:50.083709      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:49:50.086
  E0901 12:49:51.083560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:52.083699      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:53.083981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:54.084322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:49:54.148
  I0901 12:49:54.155936 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downward-api-f37ee68a-b411-4275-a4c8-704f959a3675 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:49:54.174
  I0901 12:49:54.213310 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1570" for this suite. @ 09/01/25 12:49:54.224
• [4.208 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/01/25 12:49:54.238
  I0901 12:49:54.238478 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:49:54.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:54.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:54.269
  STEP: Creating secret with name secret-test-f334d216-483d-4091-a57e-f0bd15d5872d @ 09/01/25 12:49:54.275
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:49:54.291
  E0901 12:49:55.085489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:56.086395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:57.086791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:58.087572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:49:58.357
  I0901 12:49:58.365350 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-b3bed075-86b9-4f28-9deb-fbec0f6c578b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:49:58.384
  I0901 12:49:58.426650 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9977" for this suite. @ 09/01/25 12:49:58.438
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/01/25 12:49:58.462
  I0901 12:49:58.462682 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:49:58.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:58.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:58.506
  E0901 12:49:59.088038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:00.089229      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:01.089959      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:02.091057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:03.092576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:04.093311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:50:04.693
  I0901 12:50:04.703255 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod client-envvars-0585c024-0185-48f8-bce9-789935338e28 container env3cont: <nil>
  STEP: delete the pod @ 09/01/25 12:50:04.734
  I0901 12:50:04.785212 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2744" for this suite. @ 09/01/25 12:50:04.8
• [6.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 09/01/25 12:50:04.823
  I0901 12:50:04.823529 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:50:04.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:04.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:04.876
  STEP: Creating a ResourceQuota @ 09/01/25 12:50:04.886
  STEP: Getting a ResourceQuota @ 09/01/25 12:50:04.904
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/01/25 12:50:04.916
  STEP: Patching the ResourceQuota @ 09/01/25 12:50:04.927
  STEP: Deleting a Collection of ResourceQuotas @ 09/01/25 12:50:04.938
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 12:50:05.012
  I0901 12:50:05.019855 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2698" for this suite. @ 09/01/25 12:50:05.03
• [0.228 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/01/25 12:50:05.051
  I0901 12:50:05.051757 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:50:05.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:05.091
  E0901 12:50:05.093996      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:05.1
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:50:05.107
  E0901 12:50:06.094951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:07.095326      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:08.095641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:09.095956      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:50:09.168
  I0901 12:50:09.177605 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-c34bfaba-6e86-4759-8c18-113ca08e36ed container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:50:09.195
  I0901 12:50:09.235900 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4315" for this suite. @ 09/01/25 12:50:09.248
• [4.211 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/01/25 12:50:09.275
  I0901 12:50:09.275357 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:50:09.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:09.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:09.307
  I0901 12:50:09.346316 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:50:10.096475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:11.096783      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:12.097695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:13.098083      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:14.099240      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:15.099911      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:16.100242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:17.100618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:18.100972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:19.101341      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:20.101790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:21.102704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:22.102797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:23.102913      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:24.103053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:25.103332      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:26.103544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:27.103644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:28.104498      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:29.105262      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:30.106230      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:31.106501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:32.106790      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:33.107213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:34.107947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:35.108537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:36.108902      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:37.109625      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:38.109775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:39.110530      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:40.111357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:41.111934      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:42.112268      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:43.112827      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:44.113479      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:45.113954      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:46.114372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:47.115461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:48.116520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:49.121947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:50.119528      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:51.119512      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:52.120674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:53.121517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:54.122740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:55.142364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:56.128661      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:57.129300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:58.129497      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:59.130499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:00.131384      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:01.132224      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:02.132498      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:03.132786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:04.132865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:05.133382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:06.134387      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:07.135361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:08.135644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:09.136032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:09.366773 16 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:51:09.382
  I0901 12:51:09.382931 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:51:09.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:09.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:09.444
  STEP: Finding an available node @ 09/01/25 12:51:09.456
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:51:09.457
  E0901 12:51:10.137242      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:11.137436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:51:11.519
  I0901 12:51:11.552380 16 preemption.go:717] found a healthy node: xoongeig7eeb-3
  STEP: Adding a custom resource @ 09/01/25 12:51:11.573
  E0901 12:51:12.137737      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:13.137746      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:14.139032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:15.139203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:16.139665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:17.139733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:17.756899 16 preemption.go:836] pods created so far: [1 1 1]
  I0901 12:51:17.756980 16 preemption.go:837] length of pods created so far: 3
  E0901 12:51:18.140720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:19.140618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:19.784884 16 preemption.go:854] pods created so far: [2 2 1]
  E0901 12:51:20.141531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:21.142088      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:22.142430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:23.143302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:24.143341      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:25.143687      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:26.144869      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 12:51:26.788
  STEP: Removing a custom resource @ 09/01/25 12:51:27
  STEP: Removing a custom resource @ 09/01/25 12:51:27.031
  STEP: Removing a custom resource @ 09/01/25 12:51:27.066
  I0901 12:51:27.102626 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8176" for this suite. @ 09/01/25 12:51:27.121
  I0901 12:51:27.140330 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:51:27.145754      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-6929" for this suite. @ 09/01/25 12:51:27.222
• [77.968 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/01/25 12:51:27.246
  I0901 12:51:27.247090 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename ingressclass @ 09/01/25 12:51:27.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:27.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:27.303
  STEP: getting /apis @ 09/01/25 12:51:27.314
  STEP: getting /apis/networking.k8s.io @ 09/01/25 12:51:27.328
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 12:51:27.331
  STEP: creating @ 09/01/25 12:51:27.34
  STEP: getting @ 09/01/25 12:51:27.377
  STEP: listing @ 09/01/25 12:51:27.386
  STEP: watching @ 09/01/25 12:51:27.394
  I0901 12:51:27.394991 16 ingressclass.go:348] starting watch
  STEP: patching @ 09/01/25 12:51:27.397
  STEP: updating @ 09/01/25 12:51:27.414
  I0901 12:51:27.432602 16 ingressclass.go:364] waiting for watch events with expected annotations
  I0901 12:51:27.432713 16 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/01/25 12:51:27.433
  STEP: deleting a collection @ 09/01/25 12:51:27.488
  I0901 12:51:27.540566 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2714" for this suite. @ 09/01/25 12:51:27.553
• [0.326 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/01/25 12:51:27.573
  I0901 12:51:27.573672 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename events @ 09/01/25 12:51:27.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:27.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:27.679
  STEP: Create set of events @ 09/01/25 12:51:27.686
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 12:51:27.726
  STEP: delete a list of events @ 09/01/25 12:51:27.734
  I0901 12:51:27.734776 16 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 12:51:27.793
  I0901 12:51:27.804797 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5828" for this suite. @ 09/01/25 12:51:27.818
• [0.266 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/01/25 12:51:27.84
  I0901 12:51:27.840398 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 12:51:27.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:27.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:27.887
  STEP: Setting up server cert @ 09/01/25 12:51:27.895
  E0901 12:51:28.146461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:29.148308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:51:29.529
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:51:29.545
  STEP: Wait for the deployment to be ready @ 09/01/25 12:51:29.58
  I0901 12:51:29.609618 16 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 12:51:30.149866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:31.149651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:51:31.663
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:51:31.714
  E0901 12:51:32.150880      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:32.715378 16 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 12:51:32.725434 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:51:33.151781      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:34.152425      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:35.154808      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/01/25 12:51:35.551
  STEP: Create a v2 custom resource @ 09/01/25 12:51:35.6
  STEP: List CRs in v1 @ 09/01/25 12:51:35.834
  STEP: List CRs in v2 @ 09/01/25 12:51:35.849
  E0901 12:51:36.154168      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:36.518679 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7570" for this suite. @ 09/01/25 12:51:36.528
• [8.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:51:36.554
  I0901 12:51:36.554094 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:51:36.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:36.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:36.612
  E0901 12:51:37.154527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:38.154819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/01/25 12:51:38.724
  I0901 12:51:38.724913 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6140 pod-service-account-842882f6-b065-4494-8f98-8a1d9b60c567 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/01/25 12:51:39.088
  I0901 12:51:39.089577 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6140 pod-service-account-842882f6-b065-4494-8f98-8a1d9b60c567 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0901 12:51:39.155616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/01/25 12:51:39.413
  I0901 12:51:39.414349 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6140 pod-service-account-842882f6-b065-4494-8f98-8a1d9b60c567 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0901 12:51:39.766878 16 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-6140"
  I0901 12:51:39.777338 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6140" for this suite. @ 09/01/25 12:51:39.791
• [3.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/01/25 12:51:39.82
  I0901 12:51:39.820412 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:51:39.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:39.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:39.873
  STEP: Creating pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661 @ 09/01/25 12:51:39.881
  E0901 12:51:40.156036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:41.157275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:51:41.933
  I0901 12:51:41.943784 16 container_probe.go:1748] Initial restart count of pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 is 0
  I0901 12:51:41.951594 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:42.159042      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:43.158468      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:43.966433 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:44.159766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:45.160106      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:45.975472 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:46.161186      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:47.161446      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:47.989190 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:48.162538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:49.162247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:49.999945 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:50.163023      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:51.164476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:52.015096 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:52.164979      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:53.166241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:54.027340 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:54.167017      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:55.167792      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:56.041962 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:56.167983      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:57.168545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:58.052063 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:51:58.168665      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:59.168704      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:00.068661 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:00.169415      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:01.170404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:02.081482 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:02.170683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:03.171086      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:04.094507 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:04.171766      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:05.172569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:06.106344 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:06.173411      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:07.173782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:08.124275 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:08.174447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:09.175308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:10.145485 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:10.175358      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:11.175594      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:12.161061 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:12.176882      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:13.177041      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:14.174664 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:14.177945      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:15.178411      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:16.178519      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:16.182757 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:17.179422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:18.179395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:18.197537 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:19.180330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:20.181408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:20.209435 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:21.181968      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:22.182767      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:22.225496 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:23.182666      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:24.182793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:24.237189 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:25.183307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:26.183509      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:26.246946 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:27.183753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:28.184543      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:28.258539 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:29.184641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:30.185316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:30.276577 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:31.185441      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:32.185511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:32.291244 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:33.185899      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:34.186220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:34.305177 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:35.187291      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:36.187657      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:36.320927 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:37.188584      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:38.189189      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:38.332595 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:39.190299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:40.191241      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:40.345623 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:41.191679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:42.192867      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:42.357779 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:43.194227      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:44.193988      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:44.368262 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:45.194408      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:46.195214      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:46.379050 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:47.195490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:48.196308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:48.392713 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:49.196008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:50.196373      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:50.403210 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:51.196831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:52.197453      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:52.417239 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:53.197935      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:54.198013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:54.448097 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:55.198435      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:56.199257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:56.461018 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:57.199423      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:58.199994      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:58.474515 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:52:59.200953      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:00.203003      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:00.487910 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:01.203217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:02.203654      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:02.497914 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:03.203951      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:04.203992      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:04.511784 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:05.204644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:06.205535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:06.524301 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:07.205703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:08.206095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:08.538322 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:09.206390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:10.206740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:10.552302 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:11.206826      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:12.207356      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:12.564774 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:13.208593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:14.209369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:14.581193 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:15.210570      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:16.210660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:16.595257 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:17.210969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:18.211366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:18.608788 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:19.212007      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:20.212720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:20.624172 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:21.213057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:22.213972      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:22.639006 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:23.214095      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:24.214436      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:24.652586 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:25.215176      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:26.216014      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:26.666388 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:27.216184      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:28.217008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:28.675355 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:29.218273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:30.218526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:30.687900 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:31.219556      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:32.220614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:32.711079 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:33.220682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:34.220847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:34.725251 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:35.222437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:36.222485      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:36.739233 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:37.222673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:38.223023      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:38.751807 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:39.224081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:40.224739      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:40.766876 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:41.225658      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:42.225787      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:42.783477 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:43.226562      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:44.227297      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:44.796254 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:45.227650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:46.228605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:46.808709 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:47.229070      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:48.231085      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:48.822657 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:49.230035      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:50.230980      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:50.832788 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:51.231743      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:52.232081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:52.848880 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:53.233323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:54.234025      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:54.859429 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:55.234568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:56.235350      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:56.874902 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:57.237569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:58.237295      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:58.886746 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:53:59.237843      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:00.238308      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:00.903988 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:01.238728      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:02.239546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:02.954345 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:03.240097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:04.240420      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:05.004163 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:05.240703      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:06.241614      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:07.015072 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:07.242301      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:08.242655      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:09.025180 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:09.244257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:10.244288      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:11.038924 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:11.244402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:12.244712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:13.055384 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:13.245248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:14.245238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:15.067015 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:15.247475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:16.246897      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:17.081433 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:17.247302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:18.247649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:19.092316 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:19.248571      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:20.248812      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:21.106038 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:21.249299      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:22.250194      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:23.122577 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:23.250844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:24.251064      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:25.134295 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:25.251397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:26.252195      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:27.147709 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:27.253481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:28.254238      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:29.158364 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:29.255381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:30.255573      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:31.172006 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:31.255974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:32.256780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:33.181585 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:33.256966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:34.257350      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:35.197319 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:35.257383      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:36.258077      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:37.208278 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:37.258246      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:38.258958      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:39.222391 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:39.259595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:40.260193      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:41.234853 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:41.261220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:42.262032      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:43.248802 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:43.262618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:44.263396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:45.259548 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:45.263371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:46.263777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:47.264774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:47.273540 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:48.265775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:49.267393      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:49.285636 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:50.267475      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:51.267363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:51.297800 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:52.267722      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:53.268338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:53.310070 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:54.268658      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:55.268357      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:55.320839 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:56.268828      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:57.269310      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:57.332487 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:54:58.269926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:59.269906      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:59.341937 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:00.270478      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:01.271305      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:01.354453 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:02.271323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:03.271419      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:03.364850 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:04.272964      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:05.273967      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:05.378620 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:06.274354      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:07.275342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:07.387543 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:08.275955      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:09.276437      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:09.404532 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:10.276695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:11.277481      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:11.426800 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:12.277946      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:13.278244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:13.441052 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:14.278399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:15.278652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:15.453089 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:16.279036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:17.279466      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:17.465623 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:18.279450      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:19.280330      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:19.479212 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:20.280611      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:21.281619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:21.494091 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:22.281888      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:23.282213      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:23.507175 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:24.283324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:25.283309      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:25.518914 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:26.283613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:27.283957      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:27.529668 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:28.284745      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:29.284844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:29.543979 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:30.285466      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:31.286289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:31.555412 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:32.286925      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:33.287776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:33.568998 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:34.288024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:35.288523      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:35.602800 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:36.288837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:37.289211      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:37.616649 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:38.289608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:39.290508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:39.630683 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:40.290560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:41.290672      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:41.640181 16 container_probe.go:1758] Get pod test-grpc-ec7a6594-71a8-43b3-aee3-5616cdcc4977 in namespace container-probe-5661
  E0901 12:55:42.291348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:43.291463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/01/25 12:55:43.641
  I0901 12:55:43.678368 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5661" for this suite. @ 09/01/25 12:55:43.697
• [243.891 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 09/01/25 12:55:43.713
  I0901 12:55:43.713602 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:55:43.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:43.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:43.754
  STEP: Counting existing ResourceQuota @ 09/01/25 12:55:43.76
  E0901 12:55:44.291650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:45.292272      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:46.292963      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:47.294212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:48.294141      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:55:48.774
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:55:48.797
  E0901 12:55:49.294976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:50.295002      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:50.815428 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3531" for this suite. @ 09/01/25 12:55:50.834
• [7.144 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 09/01/25 12:55:50.859
  I0901 12:55:50.859694 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:55:50.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:50.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:50.91
  STEP: creating service endpoint-test2 in namespace services-202 @ 09/01/25 12:55:50.918
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-202 to expose endpoints map[] @ 09/01/25 12:55:50.964
  I0901 12:55:50.971053      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:55:50.971195 16 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0901 12:55:51.296016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:51.982534      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:55:52.003544 16 service.go:4645] successfully validated that service endpoint-test2 in namespace services-202 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-202 @ 09/01/25 12:55:52.003
  E0901 12:55:52.296070      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:53.296769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-202 to expose endpoints map[pod1:[80]] @ 09/01/25 12:55:54.06
  I0901 12:55:54.076629      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:55:54.086335 16 service.go:4645] successfully validated that service endpoint-test2 in namespace services-202 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/01/25 12:55:54.086
  I0901 12:55:54.086546 16 resource.go:361] Creating new exec pod
  E0901 12:55:54.297626      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:55.297347      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:56.135310 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0901 12:55:56.298137      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:56.541626 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.26.83) 80 port [tcp/http] succeeded!\n"
  I0901 12:55:56.541714 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:55:56.542574 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.26.83 80'
  I0901 12:55:56.822936 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.26.83 80\nConnection to 10.233.26.83 80 port [tcp/http] succeeded!\n"
  I0901 12:55:56.823033 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-202 @ 09/01/25 12:55:56.823
  E0901 12:55:57.299075      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:58.299774      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-202 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/01/25 12:55:58.887
  I0901 12:55:58.916441      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:55:58.931728 16 service.go:4645] successfully validated that service endpoint-test2 in namespace services-202 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/01/25 12:55:58.934
  I0901 12:55:59.033998 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0901 12:55:59.300604      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:59.346209 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.26.83) 80 port [tcp/http] succeeded!\n"
  I0901 12:55:59.346290 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:55:59.346685 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.26.83 80'
  I0901 12:55:59.635974 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.26.83 80\nConnection to 10.233.26.83 80 port [tcp/http] succeeded!\n"
  I0901 12:55:59.636225 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-202 @ 09/01/25 12:55:59.636
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-202 to expose endpoints map[pod2:[80]] @ 09/01/25 12:55:59.67
  I0901 12:55:59.689802      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:55:59.704616 16 service.go:4645] successfully validated that service endpoint-test2 in namespace services-202 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/01/25 12:55:59.704
  I0901 12:55:59.711820 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 12:56:00.112266 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.26.83) 80 port [tcp/http] succeeded!\n"
  I0901 12:56:00.112395 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:56:00.112734 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-202 exec execpodfq7lm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.26.83 80'
  E0901 12:56:00.301608      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:00.419493 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.26.83 80\nConnection to 10.233.26.83 80 port [tcp/http] succeeded!\n"
  I0901 12:56:00.419574 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-202 @ 09/01/25 12:56:00.419
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-202 to expose endpoints map[] @ 09/01/25 12:56:00.465
  I0901 12:56:00.478856      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0901 12:56:01.302976      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:01.505772      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:56:01.521627 16 service.go:4645] successfully validated that service endpoint-test2 in namespace services-202 exposes endpoints map[]
  I0901 12:56:01.597656 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-202" for this suite. @ 09/01/25 12:56:01.629
• [10.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/01/25 12:56:01.647
  I0901 12:56:01.647586 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:56:01.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:01.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:01.687
  I0901 12:56:01.694723 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:56:02.302947      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:03.303583      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:04.304068      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:04.550297      16 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:56:04.550636      16 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:56:04.550671      16 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:56:04.550699      16 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:56:04.550725      16 warnings.go:110] "Warning: unknown field \"gamma\""
  I0901 12:56:05.170171 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8995" for this suite. @ 09/01/25 12:56:05.181
• [3.554 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:56:05.202
  I0901 12:56:05.202783 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 12:56:05.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:05.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:05.254
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/01/25 12:56:05.262
  STEP: Watching for error events or started pod @ 09/01/25 12:56:05.285
  E0901 12:56:05.305287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:06.305249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/01/25 12:56:07.306
  E0901 12:56:07.307682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:08.306825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:09.307320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/01/25 12:56:09.337
  STEP: Getting logs from the pod @ 09/01/25 12:56:09.337
  STEP: Checking that the sysctl is actually updated @ 09/01/25 12:56:09.38
  I0901 12:56:09.381406 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1622" for this suite. @ 09/01/25 12:56:09.396
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/01/25 12:56:09.417
  I0901 12:56:09.417408 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename prestop @ 09/01/25 12:56:09.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:09.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:09.467
  STEP: Creating server pod server in namespace prestop-7372 @ 09/01/25 12:56:09.478
  STEP: Waiting for pods to come up. @ 09/01/25 12:56:09.504
  E0901 12:56:10.307502      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:11.307820      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7372 @ 09/01/25 12:56:11.539
  E0901 12:56:12.308078      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:13.308607      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/01/25 12:56:13.584
  E0901 12:56:14.309089      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:15.310067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:16.309950      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:17.310727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:18.311220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:18.640301 16 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/01/25 12:56:18.642
  I0901 12:56:18.683191 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7372" for this suite. @ 09/01/25 12:56:18.694
• [9.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 09/01/25 12:56:18.73
  I0901 12:56:18.730633 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:56:18.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:18.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:18.767
  I0901 12:56:18.775348 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 create -f -'
  I0901 12:56:19.302845 16 builder.go:146] stderr: ""
  I0901 12:56:19.302955 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0901 12:56:19.304049 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 create -f -'
  E0901 12:56:19.311776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:19.684376 16 builder.go:146] stderr: ""
  I0901 12:56:19.684472 16 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 12:56:19.684
  E0901 12:56:20.312019      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:20.700362 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:56:20.700679 16 framework.go:733] Found 0 / 1
  E0901 12:56:21.312851      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:21.695948 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:56:21.696072 16 framework.go:733] Found 1 / 1
  I0901 12:56:21.696587 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 12:56:21.704949 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:56:21.705046 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:56:21.705665 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 describe pod agnhost-primary-k2ssr'
  I0901 12:56:21.935438 16 builder.go:146] stderr: ""
  I0901 12:56:21.935725 16 builder.go:147] stdout: "Name:             agnhost-primary-k2ssr\nNamespace:        kubectl-3847\nPriority:         0\nService Account:  default\nNode:             xoongeig7eeb-3/192.168.121.109\nStart Time:       Mon, 01 Sep 2025 12:56:19 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.204\nIPs:\n  IP:           10.233.66.204\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://2e01446e83d558b38fa250406a8b29e41ea5c244ed645aed514343309f8814b8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 01 Sep 2025 12:56:20 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-x6jcj (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-x6jcj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-3847/agnhost-primary-k2ssr to xoongeig7eeb-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0901 12:56:21.936400 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 describe rc agnhost-primary'
  I0901 12:56:22.167844 16 builder.go:146] stderr: ""
  I0901 12:56:22.168508 16 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3847\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-k2ssr\n"
  I0901 12:56:22.168990 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 describe service agnhost-primary'
  E0901 12:56:22.312759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:22.396030 16 builder.go:146] stderr: ""
  I0901 12:56:22.396255 16 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3847\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.51.122\nIPs:                      10.233.51.122\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.66.204:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0901 12:56:22.414805 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 describe node xoongeig7eeb-1'
  I0901 12:56:22.665360 16 builder.go:146] stderr: ""
  I0901 12:56:22.666063 16 builder.go:147] stdout: "Name:               xoongeig7eeb-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=xoongeig7eeb-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 01 Sep 2025 10:45:25 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  xoongeig7eeb-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 01 Sep 2025 12:56:14 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 01 Sep 2025 10:48:53 +0000   Mon, 01 Sep 2025 10:48:53 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Mon, 01 Sep 2025 12:53:34 +0000   Mon, 01 Sep 2025 11:02:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 01 Sep 2025 12:53:34 +0000   Mon, 01 Sep 2025 11:02:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 01 Sep 2025 12:53:34 +0000   Mon, 01 Sep 2025 11:02:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 01 Sep 2025 12:53:34 +0000   Mon, 01 Sep 2025 11:02:36 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.188\n  Hostname:    xoongeig7eeb-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8133124Ki\n  pods:               256\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283460Ki\n  pods:               256\nSystem Info:\n  Machine ID:                 ab261d00b17a4cf8b02030c048bc84f4\n  System UUID:                ab261d00-b17a-4cf8-b020-30c048bc84f4\n  Boot ID:                    bab3375c-f9fd-476a-949d-7d2cf263c95c\n  Kernel Version:             6.14.0-29-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.33.3\n  Kubelet Version:            v1.33.4\n  Kube-Proxy Version:         \nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-jq2g6                                               100m (6%)     0 (0%)      10Mi (0%)        0 (0%)         128m\n  kube-system                 cilium-node-init-24srs                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         128m\n  kube-system                 cilium-operator-66b866ccb5-tvdgj                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  kube-system                 kube-apiserver-xoongeig7eeb-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         130m\n  kube-system                 kube-controller-manager-xoongeig7eeb-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         130m\n  kube-system                 kube-proxy-sfcrg                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         130m\n  kube-system                 kube-scheduler-xoongeig7eeb-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         130m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b07fcac5058e4b67-vjpf8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         107m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                750m (46%)  0 (0%)\n  memory             110Mi (3%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0901 12:56:22.666735 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-3847 describe namespace kubectl-3847'
  I0901 12:56:22.868145 16 builder.go:146] stderr: ""
  I0901 12:56:22.868498 16 builder.go:147] stdout: "Name:         kubectl-3847\nLabels:       e2e-framework=kubectl\n              e2e-run=10ad96ef-022b-4393-8852-e8e7d8ffe2e4\n              kubernetes.io/metadata.name=kubectl-3847\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0901 12:56:22.869047 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3847" for this suite. @ 09/01/25 12:56:22.884
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/01/25 12:56:22.909
  I0901 12:56:22.909289 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:56:22.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:22.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:22.977
  I0901 12:56:23.009585 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  W0901 12:56:23.011565      16 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000a6b670 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0901 12:56:23.313769      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:24.314966      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:25.315010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:25.794645      16 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:56:25.794698      16 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:56:25.794737      16 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:56:25.794758      16 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:56:25.794775      16 warnings.go:110] "Warning: unknown field \"gamma\""
  E0901 12:56:26.315329      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:26.398387 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7790" for this suite. @ 09/01/25 12:56:26.415
• [3.523 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:56:26.432
  I0901 12:56:26.432838 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:56:26.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:26.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:26.485
  STEP: Creating secret with name secret-test-81fd7f95-1fb5-42dd-a4ff-576188b3679b @ 09/01/25 12:56:26.496
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:56:26.511
  E0901 12:56:27.316524      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:28.317520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:29.318780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:30.318622      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:56:30.571
  I0901 12:56:30.580516 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-secrets-0569fb16-b734-4478-b48d-00ec0f1e4926 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:56:30.6
  I0901 12:56:30.650537 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6868" for this suite. @ 09/01/25 12:56:30.66
• [4.245 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/01/25 12:56:30.68
  I0901 12:56:30.680421 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:56:30.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:30.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:30.715
  STEP: getting /apis @ 09/01/25 12:56:30.721
  STEP: getting /apis/discovery.k8s.io @ 09/01/25 12:56:30.732
  STEP: getting /apis/discovery.k8s.iov1 @ 09/01/25 12:56:30.735
  STEP: creating @ 09/01/25 12:56:30.738
  STEP: getting @ 09/01/25 12:56:30.77
  STEP: listing @ 09/01/25 12:56:30.778
  STEP: watching @ 09/01/25 12:56:30.787
  I0901 12:56:30.787649 16 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:56:30.791
  STEP: cluster-wide watching @ 09/01/25 12:56:30.798
  I0901 12:56:30.798841 16 endpointslice.go:459] starting watch
  STEP: patching @ 09/01/25 12:56:30.801
  STEP: updating @ 09/01/25 12:56:30.816
  I0901 12:56:30.838946 16 endpointslice.go:482] waiting for watch events with expected annotations
  I0901 12:56:30.839163 16 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/01/25 12:56:30.839
  STEP: deleting a collection @ 09/01/25 12:56:30.885
  I0901 12:56:30.938411 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3688" for this suite. @ 09/01/25 12:56:30.965
• [0.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 09/01/25 12:56:30.987
  I0901 12:56:30.987371 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:56:30.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:31.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:31.026
  I0901 12:56:31.034641 16 proxy.go:430] Creating pod...
  E0901 12:56:31.319442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:32.320517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:33.081756 16 proxy.go:454] Creating service...
  I0901 12:56:33.150734 16 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=DELETE
  I0901 12:56:33.161234 16 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:56:33.161336 16 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=OPTIONS
  I0901 12:56:33.171910 16 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:56:33.172301 16 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=PATCH
  I0901 12:56:33.182051 16 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:56:33.182653 16 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=POST
  I0901 12:56:33.189334 16 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:56:33.189440 16 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=PUT
  I0901 12:56:33.197928 16 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:56:33.198020 16 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=DELETE
  I0901 12:56:33.210849 16 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:56:33.210929 16 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0901 12:56:33.226885 16 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:56:33.227313 16 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=PATCH
  I0901 12:56:33.238187 16 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:56:33.238273 16 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=POST
  I0901 12:56:33.250535 16 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:56:33.250603 16 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=PUT
  I0901 12:56:33.260928 16 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:56:33.261019 16 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=GET
  I0901 12:56:33.266495 16 proxy.go:530] http.Client request:GET StatusCode:301
  I0901 12:56:33.266667 16 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=GET
  I0901 12:56:33.276169 16 proxy.go:530] http.Client request:GET StatusCode:301
  I0901 12:56:33.276230 16 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/pods/agnhost/proxy?method=HEAD
  I0901 12:56:33.281552 16 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0901 12:56:33.281677 16 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2428/services/e2e-proxy-test-service/proxy?method=HEAD
  I0901 12:56:33.291264 16 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0901 12:56:33.291643 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2428" for this suite. @ 09/01/25 12:56:33.304
• [2.331 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 09/01/25 12:56:33.318
  I0901 12:56:33.318481 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:56:33.320427      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:56:33.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:33.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:33.365
  STEP: Creating a test headless service @ 09/01/25 12:56:33.371
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7376 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7376;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7376 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7376;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7376.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7376.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7376.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7376.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7376.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7376.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7376.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7376.svc;check="$$(dig +notcp +noall +answer +search 48.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.48_udp@PTR;check="$$(dig +tcp +noall +answer +search 48.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.48_tcp@PTR;sleep 1; done
   @ 09/01/25 12:56:33.407
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7376 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7376;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7376 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7376;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7376.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7376.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7376.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7376.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7376.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7376.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7376.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7376.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7376.svc;check="$$(dig +notcp +noall +answer +search 48.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.48_udp@PTR;check="$$(dig +tcp +noall +answer +search 48.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.48_tcp@PTR;sleep 1; done
   @ 09/01/25 12:56:33.407
  STEP: creating a pod to probe DNS @ 09/01/25 12:56:33.407
  STEP: submitting the pod to kubernetes @ 09/01/25 12:56:33.407
  E0901 12:56:34.322759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:35.323738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:56:35.454
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:56:35.464
  I0901 12:56:35.474509 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.482387 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.489499 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7376 from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.497452 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7376 from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.506405 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.514012 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.520431 16 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.527777 16 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.571359 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.579730 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.586523 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7376 from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.593507 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7376 from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.602528 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.615039 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.624710 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.634030 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7376.svc from pod dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef: the server could not find the requested resource (get pods dns-test-f481633c-e742-464f-9028-7cabd31ea9ef)
  I0901 12:56:35.667067 16 dns_common.go:506] Lookups using dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-7376 agnhost_tcp@dns-test-service.dns-7376 agnhost_udp@dns-test-service.dns-7376.svc agnhost_tcp@dns-test-service.dns-7376.svc agnhost_udp@_http._tcp.dns-test-service.dns-7376.svc agnhost_tcp@_http._tcp.dns-test-service.dns-7376.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7376 jessie_tcp@dns-test-service.dns-7376 jessie_udp@dns-test-service.dns-7376.svc jessie_tcp@dns-test-service.dns-7376.svc jessie_udp@_http._tcp.dns-test-service.dns-7376.svc jessie_tcp@_http._tcp.dns-test-service.dns-7376.svc]

  I0901 12:56:35.681066 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:56:35.696600 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:56:35.713231 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:56:36.324789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:37.325412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:38.325602      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:39.326513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:40.326785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:40.743036 16 dns_common.go:546] DNS probes using dns-7376/dns-test-f481633c-e742-464f-9028-7cabd31ea9ef succeeded

  STEP: deleting the pod @ 09/01/25 12:56:40.744
  STEP: deleting the test service @ 09/01/25 12:56:40.8
  STEP: deleting the test headless service @ 09/01/25 12:56:40.894
  I0901 12:56:40.931524 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7376" for this suite. @ 09/01/25 12:56:40.979
• [7.680 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/01/25 12:56:41
  I0901 12:56:41.000861 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename job @ 09/01/25 12:56:41.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:41.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:41.034
  STEP: Creating an indexed job with successPolicy @ 09/01/25 12:56:41.04
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/01/25 12:56:41.055
  E0901 12:56:41.327698      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:42.328545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:43.328541      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:44.329247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/01/25 12:56:45.089
  STEP: Verifying that the job status to ensure correct final state @ 09/01/25 12:56:45.107
  I0901 12:56:45.116669 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2941" for this suite. @ 09/01/25 12:56:45.126
• [4.142 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:56:45.144
  I0901 12:56:45.144835 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:56:45.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:45.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:45.178
  STEP: Performing setup for networking test in namespace pod-network-test-5237 @ 09/01/25 12:56:45.184
  STEP: creating a selector @ 09/01/25 12:56:45.184
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:56:45.184
  I0901 12:56:45.184587 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 12:56:45.330545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:46.330955      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:47.331521      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:48.332440      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:49.332846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:50.333375      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:51.333585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:52.333965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:53.334735      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:54.335328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:55.335503      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:56.335991      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:57.337205      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:58.337607      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:59.338037      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 12:56:59.469
  E0901 12:57:00.338170      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:01.340835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:01.532949 16 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:57:01.533355 16 networking.go:42] Breadth first check of 10.233.65.40 on host 192.168.121.188...
  I0901 12:57:01.545412 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.222:9080/dial?request=hostname&protocol=udp&host=10.233.65.40&port=8081&tries=1'] Namespace:pod-network-test-5237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:57:01.545505 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:57:01.545662 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.222%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.40%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:57:01.732918 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:57:01.733475 16 utils.go:355] Waiting for responses: map[]
  I0901 12:57:01.733519 16 utils.go:359] reached 10.233.65.40 after 0/1 tries
  I0901 12:57:01.733674 16 networking.go:42] Breadth first check of 10.233.64.67 on host 192.168.121.88...
  I0901 12:57:01.748325 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.222:9080/dial?request=hostname&protocol=udp&host=10.233.64.67&port=8081&tries=1'] Namespace:pod-network-test-5237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:57:01.748375 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:57:01.748454 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.222%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.67%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:57:01.845536 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:57:01.845641 16 utils.go:355] Waiting for responses: map[]
  I0901 12:57:01.845719 16 utils.go:359] reached 10.233.64.67 after 0/1 tries
  I0901 12:57:01.845745 16 networking.go:42] Breadth first check of 10.233.66.76 on host 192.168.121.109...
  I0901 12:57:01.858955 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.222:9080/dial?request=hostname&protocol=udp&host=10.233.66.76&port=8081&tries=1'] Namespace:pod-network-test-5237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:57:01.859010 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:57:01.859165 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.222%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.76%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:57:01.963365 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 12:57:01.963478 16 utils.go:355] Waiting for responses: map[]
  I0901 12:57:01.963570 16 utils.go:359] reached 10.233.66.76 after 0/1 tries
  I0901 12:57:01.963653 16 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 12:57:01.964066 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5237" for this suite. @ 09/01/25 12:57:01.98
• [16.856 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 09/01/25 12:57:02.001
  I0901 12:57:02.001344 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:57:02.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:02.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:02.05
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 12:57:02.06
  I0901 12:57:02.061857 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5086 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 12:57:02.255318 16 builder.go:146] stderr: ""
  I0901 12:57:02.255393 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/01/25 12:57:02.255
  E0901 12:57:02.339226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:03.339449      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:04.340338      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:05.340981      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:06.341534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 12:57:07.306
  I0901 12:57:07.308043 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5086 get pod e2e-test-httpd-pod -o json'
  E0901 12:57:07.342235      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:07.801439 16 builder.go:146] stderr: ""
  I0901 12:57:07.802613 16 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-01T12:57:02Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5086\",\n        \"resourceVersion\": \"44385\",\n        \"uid\": \"e9a962db-684a-437e-b000-1f5448578e11\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-knhqr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"xoongeig7eeb-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-knhqr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:57:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:57:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:57:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:57:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:57:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://61194547e1ebc4f9421b3983d920e3ae8dcc89d947a3bb69c52ef17eb580dc72\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-01T12:57:03Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-knhqr\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.121.109\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.109\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.77\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.77\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-01T12:57:02Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/01/25 12:57:07.802
  I0901 12:57:07.803211 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5086 replace -f -'
  I0901 12:57:08.215692 16 builder.go:146] stderr: ""
  I0901 12:57:08.217202 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/01/25 12:57:08.217
  I0901 12:57:08.230518 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-5086 delete pods e2e-test-httpd-pod'
  E0901 12:57:08.349323      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:09.344316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:09.850602 16 builder.go:146] stderr: ""
  I0901 12:57:09.850840 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 12:57:09.851960 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5086" for this suite. @ 09/01/25 12:57:09.87
• [7.897 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/01/25 12:57:09.899
  I0901 12:57:09.899162 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:57:09.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:09.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:09.948
  STEP: creating the pdb @ 09/01/25 12:57:09.956
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:09.971
  E0901 12:57:10.344197      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:11.370337      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/01/25 12:57:11.99
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:12.023
  E0901 12:57:12.352759      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:13.353539      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/01/25 12:57:14.037
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:14.069
  E0901 12:57:14.354624      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:15.354649      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/01/25 12:57:16.103
  I0901 12:57:16.115601 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-604" for this suite. @ 09/01/25 12:57:16.146
• [6.270 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:57:16.173
  I0901 12:57:16.173910 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:57:16.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:16.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:16.282
  STEP: Creating a kubernetes client @ 09/01/25 12:57:16.298
  I0901 12:57:16.299288 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename disruption-2 @ 09/01/25 12:57:16.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:16.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:16.353
  E0901 12:57:16.354517      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:16.379
  E0901 12:57:17.356569      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:18.357477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:18.406
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:57:18.436
  STEP: listing a collection of PDBs across all namespaces @ 09/01/25 12:57:18.456
  STEP: listing a collection of PDBs in namespace disruption-1345 @ 09/01/25 12:57:18.468
  STEP: deleting a collection of PDBs @ 09/01/25 12:57:18.569
  STEP: Waiting for the PDB collection to be deleted @ 09/01/25 12:57:18.603
  I0901 12:57:18.614589 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-97" for this suite. @ 09/01/25 12:57:18.625
  I0901 12:57:18.650800 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1345" for this suite. @ 09/01/25 12:57:18.727
• [2.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/01/25 12:57:18.748
  I0901 12:57:18.748571 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename security-context @ 09/01/25 12:57:18.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:18.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:18.782
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 12:57:18.788
  E0901 12:57:19.367065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:20.367272      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:21.367396      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:22.368049      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:57:22.841
  I0901 12:57:22.851281 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod security-context-f7364d43-35f8-469f-a2c8-5f0f738e1f8c container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:57:22.881
  I0901 12:57:22.934161 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3446" for this suite. @ 09/01/25 12:57:22.96
• [4.229 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/01/25 12:57:22.977
  I0901 12:57:22.978007 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:57:22.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:23.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:23.014
  STEP: creating the pod @ 09/01/25 12:57:23.02
  STEP: waiting for pod running @ 09/01/25 12:57:23.045
  E0901 12:57:23.368412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:24.369424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/01/25 12:57:25.075
  I0901 12:57:25.089705 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3139 PodName:var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:57:25.089808 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:57:25.089982 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-3139/pods/var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0901 12:57:25.227802 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 09/01/25 12:57:25.227
  I0901 12:57:25.238741 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3139 PodName:var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:57:25.238858 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:57:25.239525 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-3139/pods/var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  E0901 12:57:25.369586      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:25.369808 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 09/01/25 12:57:25.37
  I0901 12:57:25.904449 16 pod_client.go:173] Successfully updated pod "var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92"
  STEP: waiting for annotated pod running @ 09/01/25 12:57:25.904
  STEP: deleting the pod gracefully @ 09/01/25 12:57:25.921
  I0901 12:57:25.921752 16 delete.go:62] Deleting pod "var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92" in namespace "var-expansion-3139"
  I0901 12:57:25.941229 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-819ea29f-7740-482f-8379-5d31d5bf2a92" to be fully deleted
  E0901 12:57:26.370483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:27.370965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:28.371689      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:29.372477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:30.372927      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:31.373365      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:32.374202      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:33.374943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:34.375471      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:35.375783      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:36.376621      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:37.377477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:38.378275      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:39.378793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:40.379760      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:41.380424      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:42.381291      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:43.381678      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:44.381740      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:45.382314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:46.383062      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:47.383572      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:48.384292      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:49.384904      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:50.385857      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:51.386606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:52.387312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:53.388022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:54.388727      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:55.388770      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:56.389616      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:57.389644      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:58.390700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:59.391411      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:00.189656 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3139" for this suite. @ 09/01/25 12:58:00.204
• [37.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/01/25 12:58:00.232
  I0901 12:58:00.233009 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:58:00.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:00.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:00.278
  STEP: Creating the pod @ 09/01/25 12:58:00.286
  E0901 12:58:00.393012      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:01.393849      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:02.394452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:02.914588 16 pod_client.go:173] Successfully updated pod "annotationupdate68599897-fa3f-49dc-a9c1-90f99c5a9451"
  E0901 12:58:03.395474      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:04.395414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:04.957703 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6628" for this suite. @ 09/01/25 12:58:04.968
• [4.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/01/25 12:58:04.996
  I0901 12:58:04.996518 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:58:05.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:05.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:05.047
  STEP: getting /apis @ 09/01/25 12:58:05.072
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 12:58:05.08
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 12:58:05.082
  STEP: creating @ 09/01/25 12:58:05.085
  STEP: getting @ 09/01/25 12:58:05.129
  STEP: listing @ 09/01/25 12:58:05.138
  STEP: watching @ 09/01/25 12:58:05.144
  I0901 12:58:05.144268 16 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/01/25 12:58:05.146
  STEP: updating @ 09/01/25 12:58:05.162
  I0901 12:58:05.212609 16 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 12:58:05.212
  STEP: patching /status @ 09/01/25 12:58:05.218
  STEP: updating /status @ 09/01/25 12:58:05.245
  STEP: deleting @ 09/01/25 12:58:05.263
  STEP: deleting a collection @ 09/01/25 12:58:05.285
  I0901 12:58:05.319020 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6569" for this suite. @ 09/01/25 12:58:05.327
• [0.345 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 09/01/25 12:58:05.342
  I0901 12:58:05.342855 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:58:05.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:05.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:05.374
  STEP: Creating a test headless service @ 09/01/25 12:58:05.38
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8444.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-8444.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 12:58:05.387
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8444.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8444.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 12:58:05.387
  STEP: creating a pod to probe DNS @ 09/01/25 12:58:05.387
  STEP: submitting the pod to kubernetes @ 09/01/25 12:58:05.387
  E0901 12:58:05.395822      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:06.396980      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:07.397593      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:58:07.442
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:58:07.453
  I0901 12:58:07.522722 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-8444/dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1: the server could not find the requested resource (get pods dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1)
  I0901 12:58:07.522845 16 dns_common.go:506] Lookups using dns-8444/dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1 failed for: [jessie_hosts@dns-querier-2]

  I0901 12:58:07.543688 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:58:07.568826 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:58:07.592200 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:58:08.397990      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:09.398232      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:10.398696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:11.398931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:12.399364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:12.510718 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-8444/dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1: the server could not find the requested resource (get pods dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1)
  I0901 12:58:12.510855 16 dns_common.go:506] Lookups using dns-8444/dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1 failed for: [jessie_hosts@dns-querier-2]

  I0901 12:58:12.536736 16 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:58:12.559826 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:58:12.584777 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:58:13.400322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:14.400645      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:15.401361      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:16.401558      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:17.402311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:17.502860 16 dns_common.go:546] DNS probes using dns-8444/dns-test-3b06a7dd-ac4f-4f76-b2ab-67194e75dfb1 succeeded

  STEP: deleting the pod @ 09/01/25 12:58:17.503
  STEP: deleting the test headless service @ 09/01/25 12:58:17.552
  I0901 12:58:17.581856 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8444" for this suite. @ 09/01/25 12:58:17.597
• [12.279 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 09/01/25 12:58:17.624
  I0901 12:58:17.624389 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:58:17.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:17.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:17.682
  STEP: Setting up server cert @ 09/01/25 12:58:17.757
  E0901 12:58:18.402500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:19.403499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:58:19.816
  STEP: Deploying the webhook pod @ 09/01/25 12:58:19.826
  STEP: Wait for the deployment to be ready @ 09/01/25 12:58:19.854
  I0901 12:58:19.890026 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:58:20.403463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:21.405337      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:58:21.926
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:58:21.97
  E0901 12:58:22.404225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:22.974536 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 12:58:22.982
  I0901 12:58:23.092383 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9323" for this suite. @ 09/01/25 12:58:23.12
  STEP: Destroying namespace "webhook-markers-9979" for this suite. @ 09/01/25 12:58:23.135
• [5.527 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 09/01/25 12:58:23.151
  I0901 12:58:23.151647 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 12:58:23.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:23.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:23.181
  STEP: creating a Service @ 09/01/25 12:58:23.194
  STEP: watching for the Service to be added @ 09/01/25 12:58:23.229
  I0901 12:58:23.233667 16 service.go:3456] Found Service test-service-k4f98 in namespace services-3222 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32075}]
  I0901 12:58:23.233802 16 service.go:3463] Service test-service-k4f98 created
  STEP: Getting /status @ 09/01/25 12:58:23.233
  I0901 12:58:23.243860 16 service.go:3474] Service test-service-k4f98 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/01/25 12:58:23.243
  STEP: watching for the Service to be patched @ 09/01/25 12:58:23.254
  I0901 12:58:23.257812 16 service.go:3497] observed Service test-service-k4f98 in namespace services-3222 with annotations: map[] & LoadBalancer: {[]}
  I0901 12:58:23.257921 16 service.go:3500] Found Service test-service-k4f98 in namespace services-3222 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000fbf300 []}]}
  I0901 12:58:23.257959 16 service.go:3507] Service test-service-k4f98 has service status patched
  STEP: updating the ServiceStatus @ 09/01/25 12:58:23.258
  I0901 12:58:23.273745 16 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/01/25 12:58:23.273
  I0901 12:58:23.276745 16 service.go:3538] Observed Service test-service-k4f98 in namespace services-3222 with annotations: map[] & Conditions: []
  I0901 12:58:23.276841 16 service.go:3549] Observed Service test-service-k4f98 in namespace services-3222 with annotations: map[patchedstatus:true] & Conditions: []
  I0901 12:58:23.276961 16 service.go:3545] Found Service test-service-k4f98 in namespace services-3222 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 12:58:23.277036 16 service.go:3556] Service test-service-k4f98 has service status updated
  STEP: patching the service @ 09/01/25 12:58:23.277
  STEP: watching for the Service to be patched @ 09/01/25 12:58:23.297
  I0901 12:58:23.300613 16 service.go:3579] observed Service test-service-k4f98 in namespace services-3222 with labels: map[test-service-static:true]
  I0901 12:58:23.300732 16 service.go:3579] observed Service test-service-k4f98 in namespace services-3222 with labels: map[test-service-static:true]
  I0901 12:58:23.300846 16 service.go:3579] observed Service test-service-k4f98 in namespace services-3222 with labels: map[test-service-static:true]
  I0901 12:58:23.301101 16 service.go:3582] Found Service test-service-k4f98 in namespace services-3222 with labels: map[test-service:patched test-service-static:true]
  I0901 12:58:23.301220 16 service.go:3589] Service test-service-k4f98 patched
  STEP: deleting the service @ 09/01/25 12:58:23.301
  STEP: watching for the Service to be deleted @ 09/01/25 12:58:23.343
  I0901 12:58:23.346803 16 service.go:3613] Observed event: ADDED
  I0901 12:58:23.346931 16 service.go:3613] Observed event: MODIFIED
  I0901 12:58:23.346979 16 service.go:3613] Observed event: MODIFIED
  I0901 12:58:23.347461 16 service.go:3613] Observed event: MODIFIED
  I0901 12:58:23.347617 16 service.go:3609] Found Service test-service-k4f98 in namespace services-3222 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0901 12:58:23.347670 16 service.go:3618] Service test-service-k4f98 deleted
  I0901 12:58:23.347930 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3222" for this suite. @ 09/01/25 12:58:23.355
• [0.214 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/01/25 12:58:23.366
  I0901 12:58:23.366282 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:58:23.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:23.4
  E0901 12:58:23.406028      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:23.409
  STEP: Setting up server cert @ 09/01/25 12:58:23.445
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:58:24.093
  STEP: Deploying the webhook pod @ 09/01/25 12:58:24.107
  STEP: Wait for the deployment to be ready @ 09/01/25 12:58:24.147
  I0901 12:58:24.169583 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:58:24.407488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:25.421815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:26.210458 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 58, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 58, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 58, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 58, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:58:26.418180      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:27.418349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:58:28.225
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:58:28.283
  E0901 12:58:28.419026      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:29.285277 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:58:29.302542 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 12:58:29.421273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1498-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 12:58:29.841
  STEP: Creating a custom resource while v1 is storage version @ 09/01/25 12:58:29.931
  E0901 12:58:30.420832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:31.421559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/01/25 12:58:32.234
  STEP: Patching the custom resource while v2 is storage version @ 09/01/25 12:58:32.289
  E0901 12:58:32.422652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:33.198868 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6218" for this suite. @ 09/01/25 12:58:33.222
  STEP: Destroying namespace "webhook-markers-681" for this suite. @ 09/01/25 12:58:33.244
• [9.901 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:58:33.269
  I0901 12:58:33.269316 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:58:33.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:33.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:33.318
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 12:58:33.393
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:58:33.408
  E0901 12:58:33.422463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:33.475324 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:33.475840 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:58:34.423351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:34.453717 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:34.453824 16 fixtures.go:131] Node xoongeig7eeb-1 is running 0 daemon pod, expected 1
  E0901 12:58:35.424022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:35.439949 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:58:35.440203 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/01/25 12:58:35.451
  I0901 12:58:35.540903 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:35.541023 16 fixtures.go:131] Node xoongeig7eeb-3 is running 0 daemon pod, expected 1
  E0901 12:58:36.424488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:36.508455 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:36.515230 16 fixtures.go:131] Node xoongeig7eeb-3 is running 0 daemon pod, expected 1
  E0901 12:58:37.425613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:37.518275 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:37.519075 16 fixtures.go:131] Node xoongeig7eeb-3 is running 0 daemon pod, expected 1
  E0901 12:58:38.424986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:38.569712 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:58:38.569795 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:58:38.577
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2441, will wait for the garbage collector to delete the pods @ 09/01/25 12:58:38.577
  I0901 12:58:38.662448 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 24.719759ms
  I0901 12:58:38.763694 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.224337ms
  E0901 12:58:39.425838      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:40.171609 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:40.171693 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:58:40.181838 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45131"},"items":null}

  I0901 12:58:40.190479 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45131"},"items":null}

  I0901 12:58:40.230406 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2441" for this suite. @ 09/01/25 12:58:40.24
• [6.995 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:58:40.266
  I0901 12:58:40.266994 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:58:40.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:40.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:40.311
  E0901 12:58:40.427317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:41.427094      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:42.428532      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:43.428444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:44.369268 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4852" for this suite. @ 09/01/25 12:58:44.386
• [4.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/01/25 12:58:44.409
  I0901 12:58:44.410749 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:58:44.415
  E0901 12:58:44.428692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:44.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:44.465
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:58:44.476
  E0901 12:58:45.429545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:46.430402      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:47.432316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:48.431549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:58:48.55
  I0901 12:58:48.565254 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-dbea569d-cfa9-4d44-9085-1a728211ccdd container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:58:48.596
  I0901 12:58:48.645020 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3212" for this suite. @ 09/01/25 12:58:48.659
• [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/01/25 12:58:48.679
  I0901 12:58:48.679538 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:58:48.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:48.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:48.721
  STEP: Creating configMap with name cm-test-opt-del-eefa7ef0-cd48-41cf-87a3-acbbc7b8971f @ 09/01/25 12:58:48.757
  STEP: Creating configMap with name cm-test-opt-upd-c52a1a6f-f850-4271-94e1-1db32df93ca0 @ 09/01/25 12:58:48.77
  STEP: Creating the pod @ 09/01/25 12:58:48.779
  E0901 12:58:49.432169      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:50.433098      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-eefa7ef0-cd48-41cf-87a3-acbbc7b8971f @ 09/01/25 12:58:50.915
  STEP: Updating configmap cm-test-opt-upd-c52a1a6f-f850-4271-94e1-1db32df93ca0 @ 09/01/25 12:58:50.935
  STEP: Creating configMap with name cm-test-opt-create-5ef1df41-4c1f-41ff-9c11-0f62b08c7570 @ 09/01/25 12:58:50.951
  STEP: waiting to observe update in volume @ 09/01/25 12:58:50.966
  E0901 12:58:51.433362      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:52.433557      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:53.111917 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6325" for this suite. @ 09/01/25 12:58:53.125
• [4.460 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/01/25 12:58:53.139
  I0901 12:58:53.139925 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:58:53.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:53.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:53.18
  STEP: Setting up data @ 09/01/25 12:58:53.187
  STEP: Creating pod pod-subpath-test-downwardapi-n2bb @ 09/01/25 12:58:53.208
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:58:53.208
  E0901 12:58:53.434187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:54.434057      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:55.434865      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:56.435392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:57.436366      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:58.436501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:59.437753      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:00.439399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:01.444970      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:02.439413      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:03.440255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:04.441000      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:05.441461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:06.441513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:07.442401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:08.442700      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:09.443652      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:10.444249      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:11.444397      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:12.444738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:13.445405      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:14.446560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:15.446962      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:16.446944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:17.395
  I0901 12:59:17.405941 16 output.go:207] Trying to get logs from node xoongeig7eeb-1 pod pod-subpath-test-downwardapi-n2bb container test-container-subpath-downwardapi-n2bb: <nil>
  E0901 12:59:17.447178      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/01/25 12:59:17.468
  STEP: Deleting pod pod-subpath-test-downwardapi-n2bb @ 09/01/25 12:59:17.507
  I0901 12:59:17.507799 16 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-n2bb" in namespace "subpath-6809"
  I0901 12:59:17.518023 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6809" for this suite. @ 09/01/25 12:59:17.533
• [24.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 09/01/25 12:59:17.559
  I0901 12:59:17.559570 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:59:17.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:17.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:17.614
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 12:59:17.62
  I0901 12:59:17.620822 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4445 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 12:59:17.833354 16 builder.go:146] stderr: ""
  I0901 12:59:17.833452 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/01/25 12:59:17.833
  I0901 12:59:17.834190 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4445 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0901 12:59:18.045516 16 builder.go:146] stderr: ""
  I0901 12:59:18.045610 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 12:59:18.045
  I0901 12:59:18.054255 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-4445 delete pods e2e-test-httpd-pod'
  E0901 12:59:18.448372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:19.449282      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:20.056686 16 builder.go:146] stderr: ""
  I0901 12:59:20.056925 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 12:59:20.058401 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4445" for this suite. @ 09/01/25 12:59:20.075
• [2.537 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/01/25 12:59:20.097
  I0901 12:59:20.097486 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename pv @ 09/01/25 12:59:20.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:20.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:20.147
  STEP: Creating initial PV and PVC @ 09/01/25 12:59:20.155
  I0901 12:59:20.155739 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6772" @ 09/01/25 12:59:20.194
  STEP: Listing PVCs in namespace "pv-6772" @ 09/01/25 12:59:20.201
  STEP: Reading "pvc-rcggg" Status @ 09/01/25 12:59:20.211
  STEP: Reading "pv-6772-jhj7n" Status @ 09/01/25 12:59:20.227
  STEP: Patching "pvc-rcggg" Status @ 09/01/25 12:59:20.25
  STEP: Patching "pv-6772-jhj7n" Status @ 09/01/25 12:59:20.266
  STEP: Updating "pvc-rcggg" Status @ 09/01/25 12:59:20.303
  STEP: Updating "pv-6772-jhj7n" Status @ 09/01/25 12:59:20.357
  I0901 12:59:20.379210 16 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 12:59:20.379285 16 pv.go:205] Deleting PersistentVolumeClaim "pvc-rcggg"
  I0901 12:59:20.392210 16 pv.go:193] Deleting PersistentVolume "pv-6772-jhj7n"
  I0901 12:59:20.403592 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6772" for this suite. @ 09/01/25 12:59:20.412
• [0.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/01/25 12:59:20.428
  I0901 12:59:20.429017 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:59:20.431
  E0901 12:59:20.449785      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:20.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:20.477
  STEP: Creating secret with name s-test-opt-del-8c60abd8-3a42-49c2-b1f8-a0bcab5a8143 @ 09/01/25 12:59:20.529
  STEP: Creating secret with name s-test-opt-upd-9a839b56-a372-4681-b988-14a34c0d0741 @ 09/01/25 12:59:20.541
  STEP: Creating the pod @ 09/01/25 12:59:20.553
  E0901 12:59:21.450540      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:22.451325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-8c60abd8-3a42-49c2-b1f8-a0bcab5a8143 @ 09/01/25 12:59:22.706
  STEP: Updating secret s-test-opt-upd-9a839b56-a372-4681-b988-14a34c0d0741 @ 09/01/25 12:59:22.726
  STEP: Creating secret with name s-test-opt-create-9a258fd2-dc6a-4497-bf6e-92032e28a759 @ 09/01/25 12:59:22.746
  STEP: waiting to observe update in volume @ 09/01/25 12:59:22.759
  E0901 12:59:23.451738      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:24.452872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:25.453595      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:26.454458      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:27.455353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:28.459201      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:29.458545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:30.458756      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:31.458999      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:32.459600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:33.460568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:34.460905      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:35.461269      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:36.462038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:37.462701      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:38.462257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:39.462918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:40.463368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:41.463526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:42.464640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:43.465456      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:44.466465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:45.466870      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:46.467169      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:47.467795      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:48.468179      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:49.468846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:50.469712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:51.470627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:52.471208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:53.472063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:54.472445      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:55.473212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:56.473546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:57.475097      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:58.475442      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:59.476328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:00.476191      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:01.476550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:02.477799      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:03.477944      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:04.478553      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:05.479463      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:06.480289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:07.480102      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:08.480465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:09.481847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:10.482320      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:11.482560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:12.483091      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:13.483874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:14.484375      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:15.484538      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:16.484763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:17.485318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:18.485352      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:19.485537      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:20.485819      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:21.485815      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:22.486010      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:23.486974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:24.487581      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:25.488561      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:26.488058      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:27.489380      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:28.489846      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:29.490081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:30.490385      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:31.492331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:32.492782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:33.492289      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:34.493712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:35.493836      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:36.494351      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:37.494477      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:38.495484      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:39.497492      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:40.496587      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:41.497322      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:42.497382      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:43.498368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:44.498404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:45.499307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:46.499457      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:47.500527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:48.500764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:49.502294      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:50.501986      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:51.502364      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:52.503237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:53.503302      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:54.347480 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5373" for this suite. @ 09/01/25 13:00:54.363
• [93.961 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 09/01/25 13:00:54.393
  I0901 13:00:54.393657 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 13:00:54.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:54.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:54.444
  STEP: creating service multiprotocol-test in namespace services-1015 @ 09/01/25 13:00:54.458
  E0901 13:00:54.504546      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating pod pod1 in namespace services-1015 @ 09/01/25 13:00:54.507
  STEP: Creating pod pod1 in namespace services-1015 @ 09/01/25 13:00:54.507
  E0901 13:00:55.504217      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:56.504919      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1015 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/01/25 13:00:56.617
  I0901 13:00:56.641057      16 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 13:00:56.656799 16 service.go:4729] successfully validated that service multiprotocol-test in namespace services-1015 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/01/25 13:00:56.656
  I0901 13:00:56.657070 16 resource.go:361] Creating new exec pod
  E0901 13:00:57.505413      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:58.505965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:59.506617      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:00.507324      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:00.708760 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80'
  I0901 13:01:01.073435 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.110 80\nConnection to 10.233.37.110 80 port [tcp/http] succeeded!\n"
  I0901 13:01:01.073533 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 13:01:01.073873 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.37.110 80'
  E0901 13:01:01.507913      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:02.509018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:03.363497 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.37.110 80\n"
  I0901 13:01:03.364815 16 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/01/25 13:01:03.365
  I0901 13:01:03.399183 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80'
  E0901 13:01:03.508835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:03.921936 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.110 80\nConnection to 10.233.37.110 80 port [tcp/http] succeeded!\n"
  I0901 13:01:03.922872 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 13:01:03.923752 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.37.110 80'
  E0901 13:01:04.509627      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:05.510078      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:06.275527 16 builder.go:146] stderr: "+ + nc -v -u -w 2 10.233.37.110 80\necho hostName\n"
  I0901 13:01:06.275671 16 builder.go:147] stdout: ""
  I0901 13:01:06.276054 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.37.110 80'
  E0901 13:01:06.510585      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:07.511588      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:08.512580      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:08.606383 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.37.110 80\n"
  I0901 13:01:08.606528 16 builder.go:147] stdout: ""
  I0901 13:01:08.608074 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.37.110 80'
  E0901 13:01:09.513016      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:10.513226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:10.979770 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.37.110 80\n"
  I0901 13:01:10.979993 16 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/01/25 13:01:10.981
  I0901 13:01:11.017422 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.37.110 80'
  E0901 13:01:11.514372      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:12.515247      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:13.321995 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.37.110 80\n"
  I0901 13:01:13.322206 16 builder.go:147] stdout: "pod1"
  I0901 13:01:13.323266 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80'
  E0901 13:01:13.516430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:14.516732      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:15.517965      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:15.678323 16 builder.go:135] rc: 1
  I0901 13:01:15.678983 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.37.110 80
  nc: connect to 10.233.37.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 13:01:15.680610 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80'
  E0901 13:01:16.518615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:17.518455      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:18.024215 16 builder.go:135] rc: 1
  I0901 13:01:18.024439 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.37.110 80
  nc: connect to 10.233.37.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 13:01:18.025242 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80'
  E0901 13:01:18.518810      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:19.520255      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:20.358979 16 builder.go:135] rc: 1
  I0901 13:01:20.359524 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=services-1015 exec execpodhw9v7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.37.110 80
  nc: connect to 10.233.37.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 13:01:20.359938 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1015" for this suite. @ 09/01/25 13:01:20.374
• [25.999 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/01/25 13:01:20.392
  I0901 13:01:20.393052 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 13:01:20.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:20.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:20.438
  STEP: apply creating a deployment @ 09/01/25 13:01:20.444
  I0901 13:01:20.478757 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-16" for this suite. @ 09/01/25 13:01:20.488
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/01/25 13:01:20.503
  I0901 13:01:20.503912 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/01/25 13:01:20.506
  E0901 13:01:20.519667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:20.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:20.545
  STEP: Setting up server cert @ 09/01/25 13:01:20.551
  E0901 13:01:21.519764      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 13:01:21.561
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 13:01:21.575
  STEP: Wait for the deployment to be ready @ 09/01/25 13:01:21.609
  I0901 13:01:21.637029 16 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 13:01:22.520707      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:23.521674      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:23.672314 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 13, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 1, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 1, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 13:01:24.522169      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:25.522969      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:01:25.698
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:01:25.875
  E0901 13:01:26.523318      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:26.876644 16 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/01/25 13:01:26.893
  I0901 13:01:26.893312 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Creating a custom resource conversion webhook @ 09/01/25 13:01:27.432
  E0901 13:01:27.523353      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:28.523934      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:29.529291      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/01/25 13:01:29.831
  STEP: Registering informers with field selectors @ 09/01/25 13:01:29.848
  STEP: Creating custom resources @ 09/01/25 13:01:29.848
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/01/25 13:01:29.929
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/01/25 13:01:29.939
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/01/25 13:01:29.948
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/01/25 13:01:29.959
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/01/25 13:01:29.969
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 13:01:29.975
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/01/25 13:01:29.975
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/01/25 13:01:29.975
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 13:01:29.975
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/01/25 13:01:29.975
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/01/25 13:01:30.016
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/01/25 13:01:30.059
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/01/25 13:01:30.069
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/01/25 13:01:30.078
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 13:01:30.084
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/01/25 13:01:30.085
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/01/25 13:01:30.085
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 13:01:30.085
  E0901 13:01:30.525499      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:30.744859 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-1448" for this suite. @ 09/01/25 13:01:30.756
• [10.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 09/01/25 13:01:30.782
  I0901 13:01:30.782394 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 13:01:30.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:30.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:30.832
  STEP: creating all guestbook components @ 09/01/25 13:01:30.838
  I0901 13:01:30.838819 16 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0901 13:01:30.839288 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  I0901 13:01:31.352737 16 builder.go:146] stderr: ""
  I0901 13:01:31.354299 16 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0901 13:01:31.354500 16 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0901 13:01:31.356774 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  E0901 13:01:31.526034      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:31.743373 16 builder.go:146] stderr: ""
  I0901 13:01:31.743602 16 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0901 13:01:31.743776 16 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0901 13:01:31.745479 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  I0901 13:01:32.129725 16 builder.go:146] stderr: ""
  I0901 13:01:32.129831 16 builder.go:147] stdout: "service/frontend created\n"
  I0901 13:01:32.130162 16 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0901 13:01:32.131593 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  I0901 13:01:32.380741 16 builder.go:146] stderr: ""
  I0901 13:01:32.380853 16 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0901 13:01:32.381085 16 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 13:01:32.381540 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  E0901 13:01:32.526679      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:32.685195 16 builder.go:146] stderr: ""
  I0901 13:01:32.685421 16 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0901 13:01:32.685629 16 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 13:01:32.686093 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 create -f -'
  E0901 13:01:33.551331      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:33.583933 16 builder.go:146] stderr: ""
  I0901 13:01:33.584072 16 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/01/25 13:01:33.584
  I0901 13:01:33.584305 16 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0901 13:01:34.540273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:35.535789      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:36.535921      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:37.536518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:38.537748      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:38.637393 16 kubectl.go:2279] Waiting for frontend to serve content.
  I0901 13:01:38.689263 16 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0901 13:01:38.743499 16 kubectl.go:2289] Verifying that added entry can be retrieved.
  I0901 13:01:38.779556 16 kubectl.go:2302] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0901 13:01:39.537363      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:40.537237      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:41.538045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:42.538568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:43.538876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 09/01/25 13:01:43.814
  I0901 13:01:43.815181 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  I0901 13:01:44.144347 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:44.144632 16 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 13:01:44.145
  I0901 13:01:44.146596 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  I0901 13:01:44.397825 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:44.397995 16 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 13:01:44.398
  I0901 13:01:44.400401 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  E0901 13:01:44.539508      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:44.663714 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:44.663809 16 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 13:01:44.664
  I0901 13:01:44.664879 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  I0901 13:01:44.833558 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:44.833721 16 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 13:01:44.834
  I0901 13:01:44.835010 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  I0901 13:01:45.138777 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:45.139255 16 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 13:01:45.139
  I0901 13:01:45.139957 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3635607080 --namespace=kubectl-8163 delete --grace-period=0 --force -f -'
  I0901 13:01:45.517551 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:01:45.517668 16 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0901 13:01:45.520089 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8163" for this suite. @ 09/01/25 13:01:45.548
  E0901 13:01:45.550615      16 retrywatcher.go:169] "Watch failed" err="context canceled"
• [14.794 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/01/25 13:01:45.623
  I0901 13:01:45.625091 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename apf @ 09/01/25 13:01:45.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:45.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:45.713
  STEP: getting /apis @ 09/01/25 13:01:45.733
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 13:01:45.746
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 13:01:45.749
  STEP: creating @ 09/01/25 13:01:45.752
  STEP: getting @ 09/01/25 13:01:45.803
  STEP: listing @ 09/01/25 13:01:45.813
  STEP: watching @ 09/01/25 13:01:45.826
  I0901 13:01:45.826596 16 flowcontrol.go:394] starting watch
  STEP: patching @ 09/01/25 13:01:45.831
  STEP: updating @ 09/01/25 13:01:45.848
  I0901 13:01:45.947264 16 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 13:01:45.947
  STEP: patching /status @ 09/01/25 13:01:45.962
  STEP: updating /status @ 09/01/25 13:01:45.99
  STEP: deleting @ 09/01/25 13:01:46.032
  STEP: deleting a collection @ 09/01/25 13:01:46.119
  I0901 13:01:46.227704 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5441" for this suite. @ 09/01/25 13:01:46.241
• [0.643 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/01/25 13:01:46.262
  I0901 13:01:46.262671 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename webhook @ 09/01/25 13:01:46.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:46.371
  STEP: Setting up server cert @ 09/01/25 13:01:46.457
  E0901 13:01:46.542847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 13:01:47.525
  E0901 13:01:47.543682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 09/01/25 13:01:47.545
  STEP: Wait for the deployment to be ready @ 09/01/25 13:01:47.585
  I0901 13:01:47.602969 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 13:01:48.544651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:49.545432      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:01:49.656
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:01:49.71
  E0901 13:01:50.545641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:50.713986 16 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 13:01:50.732457 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7105-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 13:01:51.276
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 13:01:51.33
  E0901 13:01:51.546603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:52.547251      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:53.547647      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:54.169040 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1095" for this suite. @ 09/01/25 13:01:54.189
  STEP: Destroying namespace "webhook-markers-5503" for this suite. @ 09/01/25 13:01:54.21
• [7.974 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/01/25 13:01:54.234
  I0901 13:01:54.234598 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename projected @ 09/01/25 13:01:54.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:54.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:54.284
  STEP: Creating secret with name projected-secret-test-49b86cab-b002-4e6a-b45a-1239503ec9c7 @ 09/01/25 13:01:54.294
  STEP: Creating a pod to test consume secrets @ 09/01/25 13:01:54.309
  E0901 13:01:54.550008      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:55.549974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:56.550872      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:57.551605      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:01:58.376
  I0901 13:01:58.387716 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-projected-secrets-3fba787f-b3f2-4101-9cda-81364d03d7e7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 13:01:58.458
  I0901 13:01:58.498056 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9372" for this suite. @ 09/01/25 13:01:58.515
• [4.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/01/25 13:01:58.54
  I0901 13:01:58.540260 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 13:01:58.545
  E0901 13:01:58.551931      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:01:58.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:01:58.579
  STEP: Creating pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281 @ 09/01/25 13:01:58.59
  E0901 13:01:59.552099      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:00.553013      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 13:02:00.667
  I0901 13:02:00.679876 16 container_probe.go:1748] Initial restart count of pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 is 0
  I0901 13:02:00.690578 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:01.553373      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:02.553868      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:02.703594 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:03.554244      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:04.554641      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:04.719328 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:05.555535      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:06.556207      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:06.731724 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:07.556272      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:08.556491      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:08.746950 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:09.556514      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:10.557534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:10.758959 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:11.557780      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:12.558024      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:12.769038 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:13.558610      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:14.558744      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:14.787468 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:15.559623      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:16.559742      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:16.796147 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:17.560490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:18.561248      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:18.810051 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:19.562181      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:20.562777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:20.819458 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:21.563513      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:22.563394      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:22.833497 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:23.563454      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:24.564257      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:24.856612 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:25.564763      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:26.565619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:26.882487 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:27.566476      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:28.566444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:28.897930 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:29.566773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:30.567567      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:30.911462 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:31.568866      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:32.569344      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:32.925781 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:33.569607      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:34.570430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:34.939048 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:35.570847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:36.572325      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:36.954787 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:37.572314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:38.572560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:38.967857 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:39.573283      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:40.573591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:40.986062 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:41.575646      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:42.575685      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:42.995054 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:43.576203      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:44.576495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:45.009769 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:45.576835      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:46.577568      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:47.025310 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:47.579212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:48.579004      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:49.045970 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:49.579379      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:50.579603      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:51.057856 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:51.580591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:52.580386      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:53.074817 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:53.581378      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:54.581682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:55.091639 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:55.582462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:56.582596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:57.106359 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:57.583045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:58.583775      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:59.131590 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:02:59.584395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:00.584591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:01.146509 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:01.584803      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:02.585371      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:03.166021 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:03.586276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:04.586439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:05.182715 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:05.587501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:06.587943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:07.200993 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:07.589187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:08.590287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:09.213233 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:09.590381      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:10.590678      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:11.227085 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:11.591831      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:12.592465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:13.237063 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  E0901 13:03:13.593307      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:14.593389      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:15.250332 16 container_probe.go:1758] Get pod test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 in namespace container-probe-7281
  I0901 13:03:15.250497 16 container_probe.go:1762] Restart count of pod container-probe-7281/test-grpc-d86e4cb6-4935-40e0-b199-1b54a5f569a2 is now 1 (1m14.570496444s elapsed)
  STEP: deleting the pod @ 09/01/25 13:03:15.25
  I0901 13:03:15.287847 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7281" for this suite. @ 09/01/25 13:03:15.307
• [76.785 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/01/25 13:03:15.325
  I0901 13:03:15.325793 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 13:03:15.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:15.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:15.367
  STEP: Creating Pod @ 09/01/25 13:03:15.38
  E0901 13:03:15.594562      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:16.596438      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/01/25 13:03:17.422
  I0901 13:03:17.422688 16 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3152 PodName:pod-sharedvolume-7202efad-95c6-4b9e-a706-f884a88dc83a ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 13:03:17.422773 16 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 13:03:17.422872 16 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/emptydir-3152/pods/pod-sharedvolume-7202efad-95c6-4b9e-a706-f884a88dc83a/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  E0901 13:03:17.457838      16 websocket.go:297] Unknown stream id 1, discarding message
  I0901 13:03:17.559291 16 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0901 13:03:17.559393 16 exec_util.go:112] Exec stderr: ""
  I0901 13:03:17.559835 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3152" for this suite. @ 09/01/25 13:03:17.575
  E0901 13:03:17.597178      16 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.272 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/01/25 13:03:17.602
  I0901 13:03:17.602421 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename taint-single-pod @ 09/01/25 13:03:17.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:17.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:17.649
  I0901 13:03:17.657683 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 13:03:18.597489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:19.597793      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:20.598733      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:21.599399      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:22.599575      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:23.600296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:24.600601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:25.601461      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:26.601723      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:27.602064      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:28.602782      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:29.603369      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:30.603801      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:31.605080      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:32.605395      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:33.605500      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:34.605829      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:35.606233      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:36.606452      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:37.606676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:38.607226      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:39.607549      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:40.607681      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:41.608038      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:42.608410      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:43.609401      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:44.609439      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:45.610220      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:46.610706      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:47.611036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:48.611228      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:49.612314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:50.612640      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:51.613592      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:52.614493      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:53.614576      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:54.616063      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:55.620777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:56.618036      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:57.621246      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:58.619797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:59.620596      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:00.623813      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:01.623594      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:02.642368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:03.631020      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:04.633606      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:05.632797      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:06.632527      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:07.634392      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:08.633153      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:09.634489      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:10.635172      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:11.635511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:12.635511      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:13.636506      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:14.636712      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:15.637490      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:16.637752      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:17.638726      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:17.658669 16 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 13:04:17.675631 16 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/01/25 13:04:17.676
  I0901 13:04:17.915356 16 taints.go:294] Pod is running on xoongeig7eeb-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 13:04:17.915
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 13:04:17.961
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/01/25 13:04:17.975
  I0901 13:04:17.975763 16 taints.go:313] Pod wasn't evicted. Proceeding
  I0901 13:04:17.975828 16 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 13:04:18.024
  STEP: Waiting some time to make sure that toleration time passed. @ 09/01/25 13:04:18.046
  E0901 13:04:18.639060      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:19.639488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:20.639876      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:21.640462      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:22.640650      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:23.640786      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:24.641949      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:25.642677      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:26.643636      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:27.644582      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:28.644804      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:29.645407      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:30.645646      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:31.645833      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:32.646646      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:33.646874      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:34.647754      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:35.647534      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:36.648384      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:37.648550      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:38.649483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:39.649497      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:40.650520      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:41.650743      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:42.651776      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:43.652093      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:44.652695      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:45.653943      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:46.654692      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:47.655773      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:48.656053      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:49.657296      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:50.658501      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:51.658515      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:52.658879      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:53.659579      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:54.660488      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:55.660829      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:56.661101      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:57.661270      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:58.661724      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:59.662426      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:00.662847      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:01.662736      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:02.663875      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:03.664317      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:04.664720      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:05.664978      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:06.665545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:07.665721      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:08.666342      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:09.666544      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:10.667483      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:11.668215      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:12.668923      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:13.669613      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:14.669926      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:15.670618      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:16.670974      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:17.671495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:18.671701      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:19.672172      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:20.673187      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:21.673676      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:22.674791      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:23.675444      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:24.677304      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:25.677109      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:26.677526      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:27.677777      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:28.678225      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:29.678505      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:30.678651      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:31.678854      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:32.679273      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:33.048260 16 taints.go:329] Pod wasn't evicted. Test successful
  I0901 13:05:33.049299 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6417" for this suite. @ 09/01/25 13:05:33.076
• [135.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/01/25 13:05:33.109
  I0901 13:05:33.109532 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 13:05:33.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:33.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:33.168
  I0901 13:05:33.178389 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  E0901 13:05:33.679531      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:34.229452 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7962" for this suite. @ 09/01/25 13:05:34.25
• [1.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/01/25 13:05:34.28
  I0901 13:05:34.280823 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 13:05:34.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:34.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:34.325
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 13:05:34.335
  E0901 13:05:34.680987      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:35.681190      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:36.681518      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:37.684390      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:05:38.408
  I0901 13:05:38.420612 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-37972f6d-9d5f-472c-b3d3-15ec9d965472 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 13:05:38.496
  I0901 13:05:38.546085 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3872" for this suite. @ 09/01/25 13:05:38.601
• [4.342 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/01/25 13:05:38.625
  I0901 13:05:38.625434 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 13:05:38.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:38.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:38.662
  E0901 13:05:38.683404      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-4scr8" on node "xoongeig7eeb-1" @ 09/01/25 13:05:38.695
  STEP: Get VolumeAttachment "va-e2e-4scr8" on node "xoongeig7eeb-1" @ 09/01/25 13:05:38.707
  STEP: Patch VolumeAttachment "va-e2e-4scr8" on node "xoongeig7eeb-1" @ 09/01/25 13:05:38.712
  STEP: List VolumeAttachments with "va-e2e-4scr8=patched" label @ 09/01/25 13:05:38.723
  STEP: Delete VolumeAttachment "va-e2e-4scr8" on node "xoongeig7eeb-1" @ 09/01/25 13:05:38.733
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4scr8" on node "xoongeig7eeb-1" @ 09/01/25 13:05:38.752
  STEP: Create VolumeAttachment "va-e2e-78m7v" on node "xoongeig7eeb-2" @ 09/01/25 13:05:38.794
  STEP: Update the VolumeAttachment "va-e2e-78m7v" on node "xoongeig7eeb-2" with label "va-e2e=updated" @ 09/01/25 13:05:38.806
  STEP: Create VolumeAttachment "va-e2e-cqrvx" on node "xoongeig7eeb-3" @ 09/01/25 13:05:38.902
  STEP: Update the VolumeAttachment "va-e2e-cqrvx" on node "xoongeig7eeb-3" with label "va-e2e=updated" @ 09/01/25 13:05:38.912
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 13:05:38.972
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 13:05:39.009
  I0901 13:05:39.018578 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1100" for this suite. @ 09/01/25 13:05:39.038
• [0.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/01/25 13:05:39.06
  I0901 13:05:39.060489 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 13:05:39.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:39.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:39.108
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 13:05:39.113
  E0901 13:05:39.684376      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:40.684412      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:41.684673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:42.685560      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:05:43.177
  I0901 13:05:43.186050 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-032e146c-af0c-4d1e-95fc-a5653af44a4b container client-container: <nil>
  STEP: delete the pod @ 09/01/25 13:05:43.204
  I0901 13:05:43.253141 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6419" for this suite. @ 09/01/25 13:05:43.267
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/01/25 13:05:43.289
  I0901 13:05:43.289346 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename subpath @ 09/01/25 13:05:43.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:43.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:43.332
  STEP: Setting up data @ 09/01/25 13:05:43.34
  STEP: Creating pod pod-subpath-test-secret-crds @ 09/01/25 13:05:43.369
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 13:05:43.369
  E0901 13:05:43.685706      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:44.686081      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:45.686368      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:46.687384      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:47.687731      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:48.688316      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:49.688430      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:50.688757      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:51.689222      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:52.690422      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:53.690796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:54.691794      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:55.693177      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:56.693314      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:57.695941      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:58.698694      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:59.696948      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:00.696894      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:01.697208      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:02.698029      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:03.698466      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:04.699559      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:05.700465      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:06.701287      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:06:07.57
  I0901 13:06:07.583993 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod pod-subpath-test-secret-crds container test-container-subpath-secret-crds: <nil>
  STEP: delete the pod @ 09/01/25 13:06:07.62
  STEP: Deleting pod pod-subpath-test-secret-crds @ 09/01/25 13:06:07.673
  I0901 13:06:07.673736 16 delete.go:62] Deleting pod "pod-subpath-test-secret-crds" in namespace "subpath-2317"
  I0901 13:06:07.684335 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 13:06:07.702212      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "subpath-2317" for this suite. @ 09/01/25 13:06:07.703
• [24.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/01/25 13:06:07.725
  I0901 13:06:07.725986 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename deployment @ 09/01/25 13:06:07.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:07.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:07.763
  STEP: creating a Deployment @ 09/01/25 13:06:07.778
  I0901 13:06:07.778146 16 deployment.go:506] Creating simple deployment test-deployment-krncx
  I0901 13:06:07.812009 16 deployment.go:223] deployment "test-deployment-krncx" doesn't have the required revision set
  E0901 13:06:08.702837      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:09.703065      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/01/25 13:06:09.864
  I0901 13:06:09.878302 16 deployment.go:531] Deployment test-deployment-krncx has Conditions: [{Available True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-krncx-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/01/25 13:06:09.878
  I0901 13:06:09.919348 16 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 6, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 6, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 6, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 6, 7, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-krncx-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/01/25 13:06:09.919
  I0901 13:06:09.925671 16 deployment.go:578] Observed &Deployment event: ADDED
  I0901 13:06:09.925822 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-krncx-6fb4c74686"}
  I0901 13:06:09.926268 16 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 13:06:09.926389 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-krncx-6fb4c74686"}
  I0901 13:06:09.926436 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 13:06:09.926870 16 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 13:06:09.927556 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 13:06:09.927753 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-krncx-6fb4c74686" is progressing.}
  I0901 13:06:09.928209 16 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 13:06:09.928952 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 13:06:09.929023 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-krncx-6fb4c74686" has successfully progressed.}
  I0901 13:06:09.929457 16 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 13:06:09.929786 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 13:06:09.930013 16 deployment.go:574] Observed Deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-krncx-6fb4c74686" has successfully progressed.}
  I0901 13:06:09.930394 16 deployment.go:571] Found Deployment test-deployment-krncx in namespace deployment-2786 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 13:06:09.930995 16 deployment.go:582] Deployment test-deployment-krncx has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 13:06:09.931
  I0901 13:06:09.931611 16 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 13:06:09.956216 16 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/01/25 13:06:09.956
  I0901 13:06:09.965461 16 deployment.go:615] Observed &Deployment event: ADDED
  I0901 13:06:09.965579 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-krncx-6fb4c74686"}
  I0901 13:06:09.965860 16 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 13:06:09.965960 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-krncx-6fb4c74686"}
  I0901 13:06:09.966006 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 13:06:09.966389 16 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 13:06:09.966878 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 13:06:09.967035 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:07 +0000 UTC 2025-09-01 13:06:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-krncx-6fb4c74686" is progressing.}
  I0901 13:06:09.967369 16 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 13:06:09.969320 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 13:06:09.969402 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-krncx-6fb4c74686" has successfully progressed.}
  I0901 13:06:09.969711 16 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 13:06:09.969888 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 13:06:09.970008 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 13:06:09 +0000 UTC 2025-09-01 13:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-krncx-6fb4c74686" has successfully progressed.}
  I0901 13:06:09.970051 16 deployment.go:611] Observed deployment test-deployment-krncx in namespace deployment-2786 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 13:06:09.970401 16 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 13:06:09.971592 16 deployment.go:608] Found deployment test-deployment-krncx in namespace deployment-2786 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0901 13:06:09.972005 16 deployment.go:619] Deployment test-deployment-krncx has a patched status
  I0901 13:06:09.985620 16 deployment.go:632] Deployment "test-deployment-krncx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-krncx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2786",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7325bf4c-094b-4ee4-9089-25dc4614c7c5",
      ResourceVersion: (string) (len=5) "47212",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892328767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-krncx-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 13:06:10.005367 16 deployment.go:40] New ReplicaSet "test-deployment-krncx-6fb4c74686" of Deployment "test-deployment-krncx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-krncx-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2786",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71ece41d-3801-423c-8a4d-54c36d411395",
      ResourceVersion: (string) (len=5) "47204",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892328767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-krncx",
          UID: (types.UID) (len=36) "7325bf4c-094b-4ee4-9089-25dc4614c7c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 33 32  |k:{\"uid\":\"732|
              00000120  35 62 66 34 63 2d 30 39  34 62 2d 34 65 65 34 2d  |5bf4c-094b-4ee4-|
              00000130  39 30 38 39 2d 32 35 64  63 34 36 31 34 63 37 63  |9089-25dc4614c7c|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 13:06:10.025875 16 deployment.go:68] Pod "test-deployment-krncx-6fb4c74686-sglcn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-krncx-6fb4c74686-sglcn",
      GenerateName: (string) (len=33) "test-deployment-krncx-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2786",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28f615db-5aaa-4a7c-8c19-a595575e37fd",
      ResourceVersion: (string) (len=5) "47203",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892328767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-krncx-6fb4c74686",
          UID: (types.UID) (len=36) "71ece41d-3801-423c-8a4d-54c36d411395",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 31 65 63 65 34 31  64 2d 33 38 30 31 2d 34  |"71ece41d-3801-4|
              000000a0  32 33 63 2d 38 61 34 64  2d 35 34 63 33 36 64 34  |23c-8a4d-54c36d4|
              000000b0  31 31 33 39 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |11395\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  37 5c 22 7d 22 3a 7b 22  |.233.66.7\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vn7b5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vn7b5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "xoongeig7eeb-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892328767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.109",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.109"
        }
      },
      PodIP: (string) (len=11) "10.233.66.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.66.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892328767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892328768,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://aa4a81672a2c1bb9e7307efc8f37c37b651f33f3b77204791b6a701fccc1d332",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vn7b5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 13:06:10.043184 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2786" for this suite. @ 09/01/25 13:06:10.058
• [2.358 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/01/25 13:06:10.085
  I0901 13:06:10.085992 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename gc @ 09/01/25 13:06:10.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:10.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:10.135
  STEP: create the rc @ 09/01/25 13:06:10.157
  I0901 13:06:10.172092      16 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0901 13:06:10.704516      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:11.716472      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:12.733859      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:13.832349      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:15.015716      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:16.158648      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:17.100360      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:18.109584      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 13:06:18.292
  STEP: wait for the rc to be deleted @ 09/01/25 13:06:18.333
  E0901 13:06:19.128022      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:20.154918      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:20.317720 16 garbage_collector.go:678] 97 pods remaining
  I0901 13:06:20.317836 16 garbage_collector.go:685] 91 pods has nil DeletionTimestamp
  I0901 13:06:20.317855 16 garbage_collector.go:686] 
  I0901 13:06:20.613918 16 garbage_collector.go:678] 94 pods remaining
  I0901 13:06:20.613991 16 garbage_collector.go:685] 88 pods has nil DeletionTimestamp
  I0901 13:06:20.614163 16 garbage_collector.go:686] 
  E0901 13:06:21.155844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:21.709796 16 garbage_collector.go:678] 89 pods remaining
  I0901 13:06:21.712724 16 garbage_collector.go:685] 76 pods has nil DeletionTimestamp
  I0901 13:06:21.712749 16 garbage_collector.go:686] 
  E0901 13:06:22.161206      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:22.763579 16 garbage_collector.go:678] 80 pods remaining
  I0901 13:06:22.763646 16 garbage_collector.go:685] 58 pods has nil DeletionTimestamp
  I0901 13:06:22.763677 16 garbage_collector.go:686] 
  E0901 13:06:23.160047      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:23.837691 16 garbage_collector.go:678] 74 pods remaining
  I0901 13:06:23.837964 16 garbage_collector.go:685] 45 pods has nil DeletionTimestamp
  I0901 13:06:23.837996 16 garbage_collector.go:686] 
  E0901 13:06:24.191300      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:24.945008 16 garbage_collector.go:678] 70 pods remaining
  I0901 13:06:24.945336 16 garbage_collector.go:685] 25 pods has nil DeletionTimestamp
  I0901 13:06:24.945359 16 garbage_collector.go:686] 
  E0901 13:06:25.213844      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:25.591893 16 garbage_collector.go:678] 63 pods remaining
  I0901 13:06:25.592171 16 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0901 13:06:25.592209 16 garbage_collector.go:686] 
  E0901 13:06:26.214772      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:26.777357 16 garbage_collector.go:678] 56 pods remaining
  I0901 13:06:26.777459 16 garbage_collector.go:685] 1 pods has nil DeletionTimestamp
  I0901 13:06:26.777480 16 garbage_collector.go:686] 
  E0901 13:06:27.215447      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:27.698517 16 garbage_collector.go:678] 51 pods remaining
  I0901 13:06:27.698660 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:27.698698 16 garbage_collector.go:686] 
  E0901 13:06:28.327545      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:28.683233 16 garbage_collector.go:678] 43 pods remaining
  I0901 13:06:28.683300 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:28.683316 16 garbage_collector.go:686] 
  E0901 13:06:29.327276      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:29.356374 16 garbage_collector.go:678] 38 pods remaining
  I0901 13:06:29.356585 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:29.356606 16 garbage_collector.go:686] 
  E0901 13:06:30.327705      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:30.358062 16 garbage_collector.go:678] 27 pods remaining
  I0901 13:06:30.358168 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:30.358193 16 garbage_collector.go:686] 
  E0901 13:06:31.328294      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:31.364580 16 garbage_collector.go:678] 22 pods remaining
  I0901 13:06:31.365328 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:31.365367 16 garbage_collector.go:686] 
  E0901 13:06:32.328311      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:32.353314 16 garbage_collector.go:678] 9 pods remaining
  I0901 13:06:32.353386 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:32.353405 16 garbage_collector.go:686] 
  E0901 13:06:33.328451      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:33.373704 16 garbage_collector.go:678] 2 pods remaining
  I0901 13:06:33.373787 16 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 13:06:33.373808 16 garbage_collector.go:686] 
  E0901 13:06:34.328682      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 13:06:34.352
  I0901 13:06:34.723249 16 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 13:06:34.724281 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2950" for this suite. @ 09/01/25 13:06:34.737
• [24.671 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 09/01/25 13:06:34.757
  I0901 13:06:34.757081 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename services @ 09/01/25 13:06:34.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:34.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:34.827
  I0901 13:06:34.842771 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2153" for this suite. @ 09/01/25 13:06:34.856
• [0.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/01/25 13:06:34.917
  I0901 13:06:34.917635 16 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3635607080
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 13:06:34.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:35.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:35.018
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 13:06:35.026
  E0901 13:06:35.328822      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:36.329825      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:37.330494      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:38.330683      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:39.331710      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:40.331659      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:41.332591      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:42.332696      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:43.333334      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:44.336414      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:45.334729      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:46.335563      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:47.335784      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:48.338600      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:49.338312      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:50.339067      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:51.339796      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:52.339719      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:53.342832      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:54.340348      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:55.340667      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:56.341551      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:57.341328      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:58.341660      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:59.346045      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:00.347495      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:01.367619      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:02.357464      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:03.357673      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:04.358018      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:07:05.288
  I0901 13:07:05.302412 16 output.go:207] Trying to get logs from node xoongeig7eeb-3 pod downwardapi-volume-d9eea726-f6f3-4243-b6c1-425fb7f1372c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 13:07:05.35
  E0901 13:07:05.358601      16 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:05.408932 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4702" for this suite. @ 09/01/25 13:07:05.426
• [30.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0901 13:07:05.448803 16 suites.go:34] Running AfterSuite actions on node 1
  I0901 13:07:05.448966 16 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.226 seconds]
------------------------------

Ran 419 of 6730 Specs in 7066.044 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6311 Skipped
PASS

Ginkgo ran 1 suite in 1h57m48.444423234s
Test Suite Passed
