  I0901 11:09:25.372020      17 e2e.go:109] Starting e2e run "697499b5-95b0-4c8e-895f-fd360306875f" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756724963 - will randomize all specs

Will run 424 of 7132 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0901 11:09:25.914929 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:09:25.925047 17 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0901 11:09:26.015369 17 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0901 11:09:26.029498 17 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0901 11:09:26.031072 17 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  I0901 11:09:26.031122 17 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0901 11:09:26.031205 17 e2e.go:245] e2e test version: v1.34.0
  I0901 11:09:26.036456 17 e2e.go:254] kube-apiserver version: v1.34.0
  I0901 11:09:26.036737 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:09:26.052584 17 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.138 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/01/25 11:09:26.362
  I0901 11:09:26.362793 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename chunking @ 09/01/25 11:09:26.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:26.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:26.408
  STEP: creating a large number of resources @ 09/01/25 11:09:26.417
  STEP: retrieving those results in paged fashion several times @ 09/01/25 11:09:44.086
  I0901 11:09:44.129346 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0901 11:09:44.174812 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 11:09:44.223571 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:09:44.274640 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:09:44.321369 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:09:44.372447 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 11:09:44.423223 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:09:44.473377 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:09:44.521533 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:09:44.572543 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:09:44.626229 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:09:44.676778 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:09:44.723515 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:09:44.771868 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:09:44.822679 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:09:44.873323 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:09:44.922534 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:09:44.971018 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 11:09:45.022053 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:09:45.071875 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:09:45.129329 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:09:45.177642 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 11:09:45.219792 17 chunking.go:98] Retrieved 17/17 results with rv 4591 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5MSwic3RhcnQiOiIvdGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:09:45.274236 17 chunking.go:98] Retrieved 9/17 results with rv 4591 and continue 
  I0901 11:09:45.333446 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0901 11:09:45.371823 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 11:09:45.421964 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:09:45.472563 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:09:45.524768 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:09:45.571562 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 11:09:45.622450 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:09:45.674206 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:09:45.724089 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:09:45.772378 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:09:45.821779 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:09:45.873637 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:09:45.933464 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:09:45.974951 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:09:46.023636 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:09:46.076255 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:09:46.121585 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:09:46.172891 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 11:09:46.222201 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:09:46.280729 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:09:46.321686 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:09:46.373352 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 11:09:46.422445 17 chunking.go:98] Retrieved 17/17 results with rv 4594 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:09:46.472933 17 chunking.go:98] Retrieved 9/17 results with rv 4594 and continue 
  I0901 11:09:46.531224 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0901 11:09:46.575191 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 11:09:46.622602 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 11:09:46.673174 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 11:09:46.722752 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 11:09:46.774328 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 11:09:46.822398 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 11:09:46.872415 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 11:09:46.921734 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 11:09:46.973454 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 11:09:47.023041 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 11:09:47.078619 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 11:09:47.123521 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 11:09:47.174357 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 11:09:47.222675 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 11:09:47.272504 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 11:09:47.326365 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 11:09:47.373206 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 11:09:47.421204 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 11:09:47.472139 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 11:09:47.521271 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 11:09:47.571159 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 11:09:47.622959 17 chunking.go:98] Retrieved 17/17 results with rv 4598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDU5OCwic3RhcnQiOiIvdGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 11:09:47.672499 17 chunking.go:98] Retrieved 9/17 results with rv 4598 and continue 
  STEP: retrieving those results all at once @ 09/01/25 11:09:47.672
  I0901 11:09:47.747251 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3033" for this suite. @ 09/01/25 11:09:47.787
• [21.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/01/25 11:09:47.842
  I0901 11:09:47.842997 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:09:47.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:47.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:47.892
  I0901 11:09:47.914168 17 deployment.go:1215] Creating deployment "webserver-deployment"
  I0901 11:09:47.935373 17 deployment.go:1219] Waiting for observed generation 1
  I0901 11:09:49.958799 17 deployment.go:1224] Waiting for all required pods to come up
  I0901 11:09:49.978012 17 resource.go:64] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/01/25 11:09:49.978
  I0901 11:10:10.523833 17 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0901 11:10:10.547724 17 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0901 11:10:10.577452 17 deployment.go:314] Updating deployment webserver-deployment
  I0901 11:10:10.577617 17 deployment.go:1243] Waiting for observed generation 2
  I0901 11:10:12.606515 17 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0901 11:10:12.617513 17 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0901 11:10:12.628521 17 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 11:10:12.664469 17 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0901 11:10:12.665004 17 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0901 11:10:12.676366 17 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 11:10:12.699007 17 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0901 11:10:12.699266 17 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0901 11:10:12.730394 17 deployment.go:314] Updating deployment webserver-deployment
  I0901 11:10:12.730499 17 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0901 11:10:12.777800 17 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0901 11:10:12.790716 17 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0901 11:10:12.806803 17 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26d631b9-68dd-4394-aa7b-5a1665253780",
      ResourceVersion: (string) (len=4) "5265",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321787,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321787,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-76fc67f65c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:10:12.890704 17 deployment.go:40] New ReplicaSet "webserver-deployment-76fc67f65c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-76fc67f65c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
      ResourceVersion: (string) (len=4) "5269",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "26d631b9-68dd-4394-aa7b-5a1665253780",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 36 64 36 33 31  62 39 2d 36 38 64 64 2d  |\"26d631b9-68dd-|
              00000120  34 33 39 34 2d 61 61 37  62 2d 35 61 31 36 36 35  |4394-aa7b-5a1665|
              00000130  32 35 33 37 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |253780\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:10:12.893329 17 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0901 11:10:12.894135 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
      ResourceVersion: (string) (len=4) "5266",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321787,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "26d631b9-68dd-4394-aa7b-5a1665253780",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 36 64 36 33 31  62 39 2d 36 38 64 64 2d  |\"26d631b9-68dd-|
              00000120  34 33 39 34 2d 61 61 37  62 2d 35 61 31 36 36 35  |4394-aa7b-5a1665|
              00000130  32 35 33 37 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |253780\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:10:12.948348 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-8qf5c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-8qf5c",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "802beda4-f1db-4eb7-b721-1002834ecb64",
      ResourceVersion: (string) (len=4) "5174",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 34 2e 31 32  31 5c 22 7d 22 3a 7b 22  |33.64.121\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9kph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9kph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.57",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.57"
        }
      },
      PodIP: (string) (len=13) "10.233.64.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321808,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://199828b17ccb174811bfde59ea155243e3e677ce3fb9f736d01036e328b1ae45",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x9kph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:12.966750 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-9x72t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-9x72t",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0c91eb4-dc3b-46a1-8669-8a7a440402ce",
      ResourceVersion: (string) (len=4) "5271",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gc4lc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gc4lc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:12.972692 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-bcdrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-bcdrr",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccf30455-c305-4542-82cc-a29c2f3f726f",
      ResourceVersion: (string) (len=4) "5159",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 34 2e 32 33  37 5c 22 7d 22 3a 7b 22  |33.64.237\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mzw2l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mzw2l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.57",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.57"
        }
      },
      PodIP: (string) (len=13) "10.233.64.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321806,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a7a633de16b72c3f8a2a1cbe4ad07d42e574d20e0b53702ab64a0885683ce607",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mzw2l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:12.984416 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-c45cs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-c45cs",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35d797df-4ea5-4aee-8009-bc8176a30fe6",
      ResourceVersion: (string) (len=4) "5133",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 34 2e 31 31  5c 22 7d 22 3a 7b 22 2e  |33.64.11\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kcgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kcgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.57",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.57"
        }
      },
      PodIP: (string) (len=12) "10.233.64.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321804,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://25994d6eb78d885ad793711b3f545c1df59ef5bba1015404d4b76f7211c749f8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9kcgf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.003943 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-fz2bm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-fz2bm",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2ba775d-e911-4dde-8302-207042668607",
      ResourceVersion: (string) (len=4) "5137",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321787,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321787,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 35 2e 33 36  5c 22 7d 22 3a 7b 22 2e  |33.65.36\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6p7vj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6p7vj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.40",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.40"
        }
      },
      PodIP: (string) (len=12) "10.233.65.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321804,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://404e854440520382a2b17a1af67c7034d0e6a3802f9beb80e975386d26e7a3ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6p7vj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.013439 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-n7gnk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-n7gnk",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6aaf6ce0-fa78-446d-8fe3-ebe2ed6d8314",
      ResourceVersion: (string) (len=4) "5153",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 35 2e 31 36  36 5c 22 7d 22 3a 7b 22  |33.65.166\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4qzx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4qzx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.40",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.40"
        }
      },
      PodIP: (string) (len=13) "10.233.65.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321806,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://425272314c9261269c9d5c2ad63ac20c39fc503fccd1617f6e1e03f8372f4112",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b4qzx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.026622 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-spws9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-spws9",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bd6d07e-56e8-4cd2-a43c-e45a45260227",
      ResourceVersion: (string) (len=4) "5192",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 31 34  5c 22 7d 22 3a 7b 22 2e  |33.66.14\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nd8xr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nd8xr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321809,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321809,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321809,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=12) "10.233.66.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321809,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://788f4e17a5f208dcd21a3b24bffab0e7913188051bcc94ff52fe89fc64ea7af3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nd8xr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.037244 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-t454l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-t454l",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ced6f8c1-4e03-4fe6-9caf-40729bc7fd86",
      ResourceVersion: (string) (len=4) "5276",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zm8g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zm8g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.046934 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-vc9xl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-vc9xl",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ff3194d-efab-4b19-a9de-b338f5d326df",
      ResourceVersion: (string) (len=4) "5156",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 31 38  33 5c 22 7d 22 3a 7b 22  |33.66.183\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fv5hg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fv5hg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=13) "10.233.66.183",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.183"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321805,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://4e856d1e2d528e1497c20ba86016fc3c801d0221f231fcc28d185e7b992e81d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fv5hg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.061710 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-vsrj5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-vsrj5",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4095b81-538e-475d-bf63-90f2218a0577",
      ResourceVersion: (string) (len=4) "5166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 33 38  5c 22 7d 22 3a 7b 22 2e  |33.66.38\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mtkds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mtkds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=12) "10.233.66.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321807,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://47dac85d734b4f7c51d77e95a1e6aa1b74ca32864bfc4c09303bf1970b5f8fd3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mtkds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.077836 17 deployment.go:68] Pod "webserver-deployment-6bc58496c7-xxngc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-xxngc",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b869c636-316b-4697-a9ec-24c5cda791a5",
      ResourceVersion: (string) (len=4) "5278",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "06d86251-7e00-43f2-9d2b-5d046b03fcb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  64 38 36 32 35 31 2d 37  |d\":\"06d86251-7|
              00000090  65 30 30 2d 34 33 66 32  2d 39 64 32 62 2d 35 64  |e00-43f2-9d2b-5d|
              000000a0  30 34 36 62 30 33 66 63  62 37 5c 22 7d 22 3a 7b  |046b03fcb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsccw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsccw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.086846 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-bqzj7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-bqzj7",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4294e74-624f-4096-99cb-d661c4548f99",
      ResourceVersion: (string) (len=4) "5248",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7rvp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7rvp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w7rvp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.095177 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-d2sx7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-d2sx7",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2069b891-1087-4baa-9089-329eeac1c837",
      ResourceVersion: (string) (len=4) "5281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k58dx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k58dx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.105684 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-flvxz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-flvxz",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a22625d-f3c2-448f-be1b-d4ed0cbb59e2",
      ResourceVersion: (string) (len=4) "5218",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wvsqk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wvsqk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.57",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.57"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wvsqk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.110653 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-jpqbp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-jpqbp",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfce0a0f-a02f-4455-994c-b3573505467d",
      ResourceVersion: (string) (len=4) "5224",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wv55n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wv55n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.40",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.40"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wv55n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.116787 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-kl8t9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-kl8t9",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff0abc81-e593-4b22-b56b-5dbb435d1269",
      ResourceVersion: (string) (len=4) "5223",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xk5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xk5g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6xk5g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.120801 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-nsjf5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-nsjf5",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "512f43ae-859f-4d43-8ae3-2fa931c33aa7",
      ResourceVersion: (string) (len=4) "5241",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjbjj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjbjj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321810,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.40",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.40"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321810,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bjbjj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.124868 17 deployment.go:68] Pod "webserver-deployment-76fc67f65c-zkn5f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-zkn5f",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-2445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48640019-09bb-4cff-ab20-5858d5e71daf",
      ResourceVersion: (string) (len=4) "5282",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "972826aa-9926-4e93-932b-c281a62f92bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  32 38 32 36 61 61 2d 39  |d\":\"972826aa-9|
              00000090  39 32 36 2d 34 65 39 33  2d 39 33 32 62 2d 63 32  |926-4e93-932b-c2|
              000000a0  38 31 61 36 32 66 39 32  62 62 5c 22 7d 22 3a 7b  |81a62f92bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7gz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7gz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:10:13.143479 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2445" for this suite. @ 09/01/25 11:10:13.203
• [25.438 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:10:13.283
  I0901 11:10:13.283429 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:10:13.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:10:13.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:10:13.698
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 11:10:13.708
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 11:10:13.708
  STEP: creating a pod to probe DNS @ 09/01/25 11:10:13.708
  STEP: submitting the pod to kubernetes @ 09/01/25 11:10:13.708
  STEP: retrieving the pod @ 09/01/25 11:11:08.312
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:11:08.323
  I0901 11:11:08.379198 17 dns_common.go:546] DNS probes using dns-2857/dns-test-370b59ab-3e5f-493d-8c74-1cc111031b22 succeeded

  STEP: deleting the pod @ 09/01/25 11:11:08.379
  I0901 11:11:08.411614 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2857" for this suite. @ 09/01/25 11:11:08.421
• [55.153 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/01/25 11:11:08.437
  I0901 11:11:08.437417 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename hostport @ 09/01/25 11:11:08.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:11:08.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:11:08.479
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/01/25 11:11:08.521
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.15 on the node which pod1 resides and expect scheduled @ 09/01/25 11:11:20.62
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.15 but use UDP protocol on the node which pod2 resides @ 09/01/25 11:11:22.665
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/01/25 11:11:26.797
  I0901 11:11:26.800449 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.15 http://127.0.0.1:54323/hostname] Namespace:hostport-2342 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:11:26.800680 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:11:26.804805 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2342/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.15+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.15, port: 54323 @ 09/01/25 11:11:27.068
  I0901 11:11:27.068961 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.15:54323/hostname] Namespace:hostport-2342 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:11:27.069035 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:11:27.069141 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2342/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.15%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.15, port: 54323 UDP @ 09/01/25 11:11:27.235
  I0901 11:11:27.235886 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.15 54323] Namespace:hostport-2342 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:11:27.235922 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:11:27.236072 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-2342/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.15+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0901 11:11:32.370526 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2342" for this suite. @ 09/01/25 11:11:32.393
• [23.982 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/01/25 11:11:32.421
  I0901 11:11:32.421835 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:11:32.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:11:32.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:11:32.478
  STEP: Creating service test in namespace statefulset-7378 @ 09/01/25 11:11:32.488
  I0901 11:11:32.509936      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/01/25 11:11:32.511
  I0901 11:11:32.553642 17 wait.go:44] Found 0 stateful pods, waiting for 3
  I0901 11:11:42.575752 17 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:11:42.575840 17 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:11:42.575862 17 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:11:42.629343 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-7378 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:11:43.280143 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:11:43.280248 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:11:43.280339 17 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 11:11:53.316
  I0901 11:11:53.365094 17 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 11:11:53.367
  STEP: Updating Pods in reverse ordinal order @ 09/01/25 11:12:03.396
  I0901 11:12:03.410225 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-7378 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:12:03.770902 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:12:03.771084 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:12:03.771129 17 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:12:13.825412 17 wait.go:158] Waiting for StatefulSet statefulset-7378/ss2 to complete update
  I0901 11:12:13.832179 17 wait.go:165] Waiting for Pod statefulset-7378/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0901 11:12:13.832624 17 wait.go:165] Waiting for Pod statefulset-7378/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0901 11:12:23.860924 17 wait.go:158] Waiting for StatefulSet statefulset-7378/ss2 to complete update
  I0901 11:12:23.861013 17 wait.go:165] Waiting for Pod statefulset-7378/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0901 11:12:33.827967 17 wait.go:158] Waiting for StatefulSet statefulset-7378/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/01/25 11:12:43.825
  I0901 11:12:43.826077 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-7378 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:12:44.146629 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:12:44.146732 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:12:44.146761 17 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:12:54.208927 17 statefulset.go:2504] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/01/25 11:13:04.247
  I0901 11:13:04.261521 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-7378 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:13:04.595711 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:13:04.595830 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:13:04.595890 17 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:13:14.637683 17 wait.go:158] Waiting for StatefulSet statefulset-7378/ss2 to complete update
  I0901 11:13:24.654888 17 statefulset.go:136] Deleting all statefulset in ns statefulset-7378
  I0901 11:13:24.671340 17 rest.go:153] Scaling statefulset ss2 to 0
  I0901 11:13:34.721586 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:13:34.735907 17 rest.go:91] Deleting statefulset ss2
  I0901 11:13:34.784176 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7378" for this suite. @ 09/01/25 11:13:34.801
• [122.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/01/25 11:13:34.829
  I0901 11:13:34.829529 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:13:34.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:13:34.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:13:34.89
  STEP: Creating secret with name s-test-opt-del-0428554e-ff9e-4700-a7b7-6f92548a61d7 @ 09/01/25 11:13:34.923
  STEP: Creating secret with name s-test-opt-upd-6b62ac53-5dc7-4044-afe6-4a216e8a7098 @ 09/01/25 11:13:34.934
  STEP: Creating the pod @ 09/01/25 11:13:34.952
  STEP: Deleting secret s-test-opt-del-0428554e-ff9e-4700-a7b7-6f92548a61d7 @ 09/01/25 11:13:37.109
  STEP: Updating secret s-test-opt-upd-6b62ac53-5dc7-4044-afe6-4a216e8a7098 @ 09/01/25 11:13:37.125
  STEP: Creating secret with name s-test-opt-create-fdbeb62f-025c-417e-a7ab-ee0800bf2567 @ 09/01/25 11:13:37.142
  STEP: waiting to observe update in volume @ 09/01/25 11:13:37.159
  I0901 11:13:39.270979 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6844" for this suite. @ 09/01/25 11:13:39.284
• [4.480 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/01/25 11:13:39.311
  I0901 11:13:39.311212 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:13:39.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:13:39.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:13:39.369
  STEP: Creating configMap with name projected-configmap-test-volume-7e477f65-a696-4ad1-b9c6-e0bc34589a34 @ 09/01/25 11:13:39.38
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:13:39.395
  STEP: Saw pod success @ 09/01/25 11:13:43.496
  I0901 11:13:43.507821 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-projected-configmaps-956998e9-560e-4d19-948a-07b1ab3d590c container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:13:43.565
  I0901 11:13:43.624396 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3786" for this suite. @ 09/01/25 11:13:43.638
• [4.348 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:170
  STEP: Creating a kubernetes client @ 09/01/25 11:13:43.659
  I0901 11:13:43.659174 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:13:43.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:13:43.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:13:43.717
  STEP: Discovering how many secrets are in namespace by default @ 09/01/25 11:13:43.726
  STEP: Counting existing ResourceQuota @ 09/01/25 11:13:48.739
  STEP: Creating a ResourceQuota @ 09/01/25 11:13:53.759
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:13:53.781
  I0901 11:13:55.823142 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0012f6000>: 
          metadata:
            creationTimestamp: "2025-09-01T11:13:53Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:13:53Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:13:53Z"
            name: test-quota
            namespace: resourcequota-4214
            resourceVersion: "6733"
            uid: c832fcad-7eaa-48ec-a3b2-1a8dacef6310
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Secret @ 09/01/25 11:13:55.824
  STEP: Ensuring resource quota status captures secret creation @ 09/01/25 11:13:55.859
  I0901 11:13:55.877397 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00136bb80>: 
          metadata:
            creationTimestamp: "2025-09-01T11:13:53Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:13:53Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:13:53Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:secrets: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T11:13:55Z"
            name: test-quota
            namespace: resourcequota-4214
            resourceVersion: "6739"
            uid: c832fcad-7eaa-48ec-a3b2-1a8dacef6310
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "1"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a secret @ 09/01/25 11:13:55.88
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:13:55.911
  I0901 11:13:55.944491 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005effb80>: 
          metadata:
            creationTimestamp: "2025-09-01T11:13:53Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:13:53Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:13:55Z"
            name: test-quota
            namespace: resourcequota-4214
            resourceVersion: "6743"
            uid: c832fcad-7eaa-48ec-a3b2-1a8dacef6310
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 11:13:55.947903 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4214" for this suite. @ 09/01/25 11:13:55.967
• [12.337 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/01/25 11:13:55.996
  I0901 11:13:55.996450 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 11:13:56.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:13:56.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:13:56.04
  STEP: Waiting for pod completion @ 09/01/25 11:13:56.07
  I0901 11:14:00.137762 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4755" for this suite. @ 09/01/25 11:14:00.153
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/01/25 11:14:00.186
  I0901 11:14:00.186949 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:14:00.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:00.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:00.271
  I0901 11:14:22.526273 17 container_probe.go:92] Container started at 2025-09-01 11:14:01 +0000 UTC, pod became ready at 2025-09-01 11:14:22 +0000 UTC
  I0901 11:14:22.527244 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5915" for this suite. @ 09/01/25 11:14:22.545
• [22.386 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1725
  STEP: Creating a kubernetes client @ 09/01/25 11:14:22.573
  I0901 11:14:22.573866 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:14:22.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:22.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:22.629
  STEP: creating Agnhost RC @ 09/01/25 11:14:22.639
  I0901 11:14:22.640526 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1920 create -f -'
  I0901 11:14:23.033848 17 builder.go:156] stderr: ""
  I0901 11:14:23.033933 17 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 11:14:23.033
  I0901 11:14:24.053387 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:14:24.053463 17 framework.go:738] Found 0 / 1
  I0901 11:14:25.048589 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:14:25.048717 17 framework.go:738] Found 1 / 1
  I0901 11:14:25.048821 17 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/01/25 11:14:25.048
  I0901 11:14:25.059667 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:14:25.059873 17 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 11:14:25.060428 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1920 patch pod agnhost-primary-g6v5p -p {"metadata":{"annotations":{"x":"y"}}}'
  I0901 11:14:25.311661 17 builder.go:156] stderr: ""
  I0901 11:14:25.311891 17 builder.go:157] stdout: "pod/agnhost-primary-g6v5p patched\n"
  STEP: checking annotations @ 09/01/25 11:14:25.311
  I0901 11:14:25.324403 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:14:25.324482 17 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 11:14:25.324857 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1920" for this suite. @ 09/01/25 11:14:25.34
• [2.787 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/01/25 11:14:25.362
  I0901 11:14:25.363201 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:14:25.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:25.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:25.412
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 11:14:25.421
  STEP: Saw pod success @ 09/01/25 11:14:29.501
  I0901 11:14:29.521907 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-3feeb16b-de15-428b-8602-5a9be59eddaa container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:14:29.545
  I0901 11:14:29.629885 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1610" for this suite. @ 09/01/25 11:14:29.646
• [4.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/01/25 11:14:29.673
  I0901 11:14:29.674128 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:14:29.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:29.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:29.716
  STEP: Creating the pod @ 09/01/25 11:14:29.723
  I0901 11:14:32.362473 17 pod_client.go:186] Successfully updated pod "annotationupdated0f083a8-dd1a-4504-9724-b7fc9008fb96"
  I0901 11:14:34.402687 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8009" for this suite. @ 09/01/25 11:14:34.417
• [4.767 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:370
  STEP: Creating a kubernetes client @ 09/01/25 11:14:34.44
  I0901 11:14:34.440886 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:14:34.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:14:34.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:14:34.485
  STEP: creating a replication controller @ 09/01/25 11:14:34.495
  I0901 11:14:34.496198 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 create -f -'
  I0901 11:14:34.858594 17 builder.go:156] stderr: ""
  I0901 11:14:34.858711 17 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:14:34.858
  I0901 11:14:34.859647 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:35.097943 17 builder.go:156] stderr: ""
  I0901 11:14:35.098121 17 builder.go:157] stdout: "update-demo-nautilus-mxct8 update-demo-nautilus-t6cqf "
  I0901 11:14:35.099130 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:35.301118 17 builder.go:156] stderr: ""
  I0901 11:14:35.301322 17 builder.go:157] stdout: ""
  I0901 11:14:35.301370 17 kubectl.go:2537] update-demo-nautilus-mxct8 is created but not running
  I0901 11:14:40.306122 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:40.755033 17 builder.go:156] stderr: ""
  I0901 11:14:40.755150 17 builder.go:157] stdout: "update-demo-nautilus-mxct8 update-demo-nautilus-t6cqf "
  I0901 11:14:40.755444 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:40.940337 17 builder.go:156] stderr: ""
  I0901 11:14:40.940448 17 builder.go:157] stdout: ""
  I0901 11:14:40.940762 17 kubectl.go:2537] update-demo-nautilus-mxct8 is created but not running
  I0901 11:14:45.942059 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:46.437854 17 builder.go:156] stderr: ""
  I0901 11:14:46.437978 17 builder.go:157] stdout: "update-demo-nautilus-mxct8 update-demo-nautilus-t6cqf "
  I0901 11:14:46.438898 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:46.676488 17 builder.go:156] stderr: ""
  I0901 11:14:46.676931 17 builder.go:157] stdout: ""
  I0901 11:14:46.676963 17 kubectl.go:2537] update-demo-nautilus-mxct8 is created but not running
  I0901 11:14:51.678255 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:51.857890 17 builder.go:156] stderr: ""
  I0901 11:14:51.857980 17 builder.go:157] stdout: "update-demo-nautilus-mxct8 update-demo-nautilus-t6cqf "
  I0901 11:14:51.858580 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:52.008038 17 builder.go:156] stderr: ""
  I0901 11:14:52.008144 17 builder.go:157] stdout: ""
  I0901 11:14:52.008169 17 kubectl.go:2537] update-demo-nautilus-mxct8 is created but not running
  I0901 11:14:57.009508 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:57.236581 17 builder.go:156] stderr: ""
  I0901 11:14:57.237957 17 builder.go:157] stdout: "update-demo-nautilus-mxct8 update-demo-nautilus-t6cqf "
  I0901 11:14:57.238374 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:57.409892 17 builder.go:156] stderr: ""
  I0901 11:14:57.410009 17 builder.go:157] stdout: "true"
  I0901 11:14:57.410554 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-mxct8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:14:57.607675 17 builder.go:156] stderr: ""
  I0901 11:14:57.607780 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:14:57.607894 17 kubectl.go:2428] validating pod update-demo-nautilus-mxct8
  I0901 11:14:57.623724 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:14:57.623882 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:14:57.623915 17 kubectl.go:2555] update-demo-nautilus-mxct8 is verified up and running
  I0901 11:14:57.624592 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:57.788719 17 builder.go:156] stderr: ""
  I0901 11:14:57.788812 17 builder.go:157] stdout: "true"
  I0901 11:14:57.789469 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:14:57.981213 17 builder.go:156] stderr: ""
  I0901 11:14:57.981517 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:14:57.982188 17 kubectl.go:2428] validating pod update-demo-nautilus-t6cqf
  I0901 11:14:58.003692 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:14:58.003854 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:14:58.003904 17 kubectl.go:2555] update-demo-nautilus-t6cqf is verified up and running
  STEP: scaling down the replication controller @ 09/01/25 11:14:58.004
  I0901 11:14:58.023491 17 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0901 11:14:58.023787 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0901 11:14:59.240197 17 builder.go:156] stderr: ""
  I0901 11:14:59.240584 17 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:14:59.24
  I0901 11:14:59.241104 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:14:59.402997 17 builder.go:156] stderr: ""
  I0901 11:14:59.403077 17 builder.go:157] stdout: "update-demo-nautilus-t6cqf "
  I0901 11:14:59.403441 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:14:59.581905 17 builder.go:156] stderr: ""
  I0901 11:14:59.582208 17 builder.go:157] stdout: "true"
  I0901 11:14:59.582470 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:14:59.734988 17 builder.go:156] stderr: ""
  I0901 11:14:59.735071 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:14:59.735098 17 kubectl.go:2428] validating pod update-demo-nautilus-t6cqf
  I0901 11:14:59.744892 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:14:59.745004 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:14:59.745031 17 kubectl.go:2555] update-demo-nautilus-t6cqf is verified up and running
  STEP: scaling up the replication controller @ 09/01/25 11:14:59.745
  I0901 11:14:59.757352 17 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0901 11:14:59.757534 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0901 11:15:00.964944 17 builder.go:156] stderr: ""
  I0901 11:15:00.965048 17 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:15:00.965
  I0901 11:15:00.965573 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:15:01.144930 17 builder.go:156] stderr: ""
  I0901 11:15:01.145013 17 builder.go:157] stdout: "update-demo-nautilus-9j8sv update-demo-nautilus-t6cqf "
  I0901 11:15:01.145329 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-9j8sv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:15:01.322257 17 builder.go:156] stderr: ""
  I0901 11:15:01.322571 17 builder.go:157] stdout: ""
  I0901 11:15:01.322668 17 kubectl.go:2537] update-demo-nautilus-9j8sv is created but not running
  I0901 11:15:06.323755 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:15:06.489840 17 builder.go:156] stderr: ""
  I0901 11:15:06.489957 17 builder.go:157] stdout: "update-demo-nautilus-9j8sv update-demo-nautilus-t6cqf "
  I0901 11:15:06.490629 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-9j8sv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:15:06.656576 17 builder.go:156] stderr: ""
  I0901 11:15:06.656681 17 builder.go:157] stdout: ""
  I0901 11:15:06.656747 17 kubectl.go:2537] update-demo-nautilus-9j8sv is created but not running
  I0901 11:15:11.657873 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:15:11.830255 17 builder.go:156] stderr: ""
  I0901 11:15:11.830485 17 builder.go:157] stdout: "update-demo-nautilus-9j8sv update-demo-nautilus-t6cqf "
  I0901 11:15:11.831029 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-9j8sv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:15:12.014317 17 builder.go:156] stderr: ""
  I0901 11:15:12.014666 17 builder.go:157] stdout: "true"
  I0901 11:15:12.015056 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-9j8sv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:15:12.178585 17 builder.go:156] stderr: ""
  I0901 11:15:12.179003 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:15:12.179037 17 kubectl.go:2428] validating pod update-demo-nautilus-9j8sv
  I0901 11:15:12.197177 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:15:12.197375 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:15:12.197460 17 kubectl.go:2555] update-demo-nautilus-9j8sv is verified up and running
  I0901 11:15:12.197783 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:15:12.355181 17 builder.go:156] stderr: ""
  I0901 11:15:12.355264 17 builder.go:157] stdout: "true"
  I0901 11:15:12.355960 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods update-demo-nautilus-t6cqf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:15:12.521153 17 builder.go:156] stderr: ""
  I0901 11:15:12.521239 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:15:12.521267 17 kubectl.go:2428] validating pod update-demo-nautilus-t6cqf
  I0901 11:15:12.533002 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:15:12.533699 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:15:12.533786 17 kubectl.go:2555] update-demo-nautilus-t6cqf is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 11:15:12.533
  I0901 11:15:12.534100 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 delete --grace-period=0 --force -f -'
  I0901 11:15:12.713117 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:12.713444 17 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-3622 namespace\n"
  I0901 11:15:12.714040 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get rc,svc -l name=update-demo --no-headers'
  I0901 11:15:12.997425 17 builder.go:156] stderr: "No resources found in kubectl-3622 namespace.\n"
  I0901 11:15:12.997526 17 builder.go:157] stdout: ""
  I0901 11:15:12.998066 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-3622 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 11:15:13.331720 17 builder.go:156] stderr: ""
  I0901 11:15:13.331806 17 builder.go:157] stdout: ""
  I0901 11:15:13.332398 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3622" for this suite. @ 09/01/25 11:15:13.347
• [38.921 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:413
  STEP: Creating a kubernetes client @ 09/01/25 11:15:13.361
  I0901 11:15:13.361823 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:15:13.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:13.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:13.403
  STEP: creating all guestbook components @ 09/01/25 11:15:13.408
  I0901 11:15:13.408723 17 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0901 11:15:13.409379 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:13.914172 17 builder.go:156] stderr: ""
  I0901 11:15:13.914538 17 builder.go:157] stdout: "service/agnhost-replica created\n"
  I0901 11:15:13.914642 17 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0901 11:15:13.915626 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:14.280498 17 builder.go:156] stderr: ""
  I0901 11:15:14.280790 17 builder.go:157] stdout: "service/agnhost-primary created\n"
  I0901 11:15:14.281555 17 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0901 11:15:14.282193 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:14.653507 17 builder.go:156] stderr: ""
  I0901 11:15:14.653633 17 builder.go:157] stdout: "service/frontend created\n"
  I0901 11:15:14.653832 17 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0901 11:15:14.655116 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:14.911937 17 builder.go:156] stderr: ""
  I0901 11:15:14.912017 17 builder.go:157] stdout: "deployment.apps/frontend created\n"
  I0901 11:15:14.913875 17 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 11:15:14.915066 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:15.265467 17 builder.go:156] stderr: ""
  I0901 11:15:15.265619 17 builder.go:157] stdout: "deployment.apps/agnhost-primary created\n"
  I0901 11:15:15.265885 17 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 11:15:15.266695 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 create -f -'
  I0901 11:15:16.147745 17 builder.go:156] stderr: ""
  I0901 11:15:16.147869 17 builder.go:157] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/01/25 11:15:16.147
  I0901 11:15:16.148070 17 kubectl.go:2307] Waiting for all frontend pods to be Running.
  I0901 11:15:31.243951 17 kubectl.go:2311] Waiting for frontend to serve content.
  I0901 11:15:31.296564 17 kubectl.go:2316] Trying to add a new entry to the guestbook.
  I0901 11:15:31.345482 17 kubectl.go:2321] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/01/25 11:15:31.38
  I0901 11:15:31.381165 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:31.631199 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:31.631325 17 builder.go:157] stdout: "service \"agnhost-replica\" force deleted from kubectl-1648 namespace\n"
  STEP: using delete to clean up resources @ 09/01/25 11:15:31.631
  I0901 11:15:31.632747 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:31.829493 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:31.829905 17 builder.go:157] stdout: "service \"agnhost-primary\" force deleted from kubectl-1648 namespace\n"
  STEP: using delete to clean up resources @ 09/01/25 11:15:31.83
  I0901 11:15:31.830756 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:32.041159 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:32.041336 17 builder.go:157] stdout: "service \"frontend\" force deleted from kubectl-1648 namespace\n"
  STEP: using delete to clean up resources @ 09/01/25 11:15:32.042
  I0901 11:15:32.043228 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:32.222877 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:32.223184 17 builder.go:157] stdout: "deployment.apps \"frontend\" force deleted from kubectl-1648 namespace\n"
  STEP: using delete to clean up resources @ 09/01/25 11:15:32.223
  I0901 11:15:32.223811 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:32.515369 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:32.515484 17 builder.go:157] stdout: "deployment.apps \"agnhost-primary\" force deleted from kubectl-1648 namespace\n"
  STEP: using delete to clean up resources @ 09/01/25 11:15:32.515
  I0901 11:15:32.516790 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1648 delete --grace-period=0 --force -f -'
  I0901 11:15:33.058408 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:15:33.058529 17 builder.go:157] stdout: "deployment.apps \"agnhost-replica\" force deleted from kubectl-1648 namespace\n"
  I0901 11:15:33.060492 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1648" for this suite. @ 09/01/25 11:15:33.093
• [19.827 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/01/25 11:15:33.19
  I0901 11:15:33.190643 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:15:33.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:33.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:33.277
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:15:33.312
  STEP: Saw pod success @ 09/01/25 11:15:37.404
  I0901 11:15:37.410725 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-baffe710-b969-451c-b3ce-fc93055b19ff container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:15:37.442
  I0901 11:15:37.476578 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9620" for this suite. @ 09/01/25 11:15:37.485
• [4.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/01/25 11:15:37.519
  I0901 11:15:37.519564 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:15:37.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:37.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:37.562
  I0901 11:15:37.569673 17 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:15:37.595151 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 11:15:37.602759 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-1 before test
  I0901 11:15:37.626901 17 predicates.go:958] cilium-node-init-8rnck from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.626991 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:15:37.627240 17 predicates.go:958] cilium-pvcjx from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.627412 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:15:37.627530 17 predicates.go:958] coredns-66bc5c9577-pxnpq from kube-system started at 2025-09-01 10:48:12 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.627631 17 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 11:15:37.627740 17 predicates.go:958] kube-apiserver-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.627762 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:15:37.627834 17 predicates.go:958] kube-controller-manager-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.627853 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:15:37.627912 17 predicates.go:958] kube-proxy-2mpj6 from kube-system started at 2025-09-01 10:45:03 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.627934 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:15:37.628041 17 predicates.go:958] kube-scheduler-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.628060 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:15:37.628126 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:15:37.628192 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:15:37.628209 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:15:37.628225 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-2 before test
  I0901 11:15:37.639004 17 predicates.go:958] cilium-4ll4d from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639103 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:15:37.639211 17 predicates.go:958] cilium-node-init-nz8p9 from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639233 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:15:37.639339 17 predicates.go:958] kube-apiserver-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639411 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:15:37.639430 17 predicates.go:958] kube-controller-manager-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639494 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:15:37.639522 17 predicates.go:958] kube-proxy-mrff2 from kube-system started at 2025-09-01 10:46:06 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639537 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:15:37.639606 17 predicates.go:958] kube-scheduler-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.639622 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:15:37.639706 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-n85nx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:15:37.639734 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:15:37.639749 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:15:37.639763 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-3 before test
  I0901 11:15:37.649137 17 predicates.go:958] cilium-lsnls from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649189 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:15:37.649212 17 predicates.go:958] cilium-node-init-78w5b from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649228 17 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 11:15:37.649246 17 predicates.go:958] cilium-operator-79974c855d-57ngp from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649261 17 predicates.go:960] 	Container cilium-operator ready: true, restart count 4
  I0901 11:15:37.649311 17 predicates.go:958] coredns-66bc5c9577-9wl8q from kube-system started at 2025-09-01 11:02:55 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649332 17 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0901 11:15:37.649349 17 predicates.go:958] kube-proxy-4srgk from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649363 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 2
  I0901 11:15:37.649380 17 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:15:37.649393 17 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:15:37.649415 17 predicates.go:958] sonobuoy-e2e-job-a32e027bfe084d7f from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:15:37.649429 17 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 11:15:37.649443 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:15:37.649459 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-s5ckg from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:15:37.649473 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:15:37.649489 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 11:15:37.649
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 11:15:41.704
  STEP: Trying to apply a random label on the found node. @ 09/01/25 11:15:41.742
  STEP: verifying the node has the label kubernetes.io/e2e-7aefd149-c2f9-4b99-9378-206cc3f7ed33 42 @ 09/01/25 11:15:41.764
  STEP: Trying to relaunch the pod, now with labels. @ 09/01/25 11:15:41.779
  STEP: removing the label kubernetes.io/e2e-7aefd149-c2f9-4b99-9378-206cc3f7ed33 off the node wohnahxathu9-2 @ 09/01/25 11:15:43.82
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7aefd149-c2f9-4b99-9378-206cc3f7ed33 @ 09/01/25 11:15:43.848
  I0901 11:15:43.855910 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1623" for this suite. @ 09/01/25 11:15:43.864
• [6.363 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/01/25 11:15:43.882
  I0901 11:15:43.882581 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 11:15:43.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:43.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:43.916
  STEP: Create set of pod templates @ 09/01/25 11:15:43.924
  I0901 11:15:43.935778 17 podtemplates.go:143] created test-podtemplate-1
  I0901 11:15:43.947798 17 podtemplates.go:143] created test-podtemplate-2
  I0901 11:15:43.959983 17 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/01/25 11:15:43.96
  STEP: delete collection of pod templates @ 09/01/25 11:15:43.965
  I0901 11:15:43.965800 17 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/01/25 11:15:43.999
  I0901 11:15:43.999427 17 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0901 11:15:44.006567 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4610" for this suite. @ 09/01/25 11:15:44.015
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3431
  STEP: Creating a kubernetes client @ 09/01/25 11:15:44.029
  I0901 11:15:44.029772 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:15:44.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:44.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:44.061
  STEP: creating a Service @ 09/01/25 11:15:44.077
  STEP: watching for the Service to be added @ 09/01/25 11:15:44.122
  I0901 11:15:44.128264 17 service.go:3483] Found Service test-service-nkdbc in namespace services-2671 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32688}]
  I0901 11:15:44.128678 17 service.go:3490] Service test-service-nkdbc created
  STEP: Getting /status @ 09/01/25 11:15:44.128
  I0901 11:15:44.140716 17 service.go:3501] Service test-service-nkdbc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/01/25 11:15:44.142
  STEP: watching for the Service to be patched @ 09/01/25 11:15:44.157
  I0901 11:15:44.159855 17 service.go:3524] observed Service test-service-nkdbc in namespace services-2671 with annotations: map[] & LoadBalancer: {[]}
  I0901 11:15:44.160090 17 service.go:3527] Found Service test-service-nkdbc in namespace services-2671 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00104ce30 []}]}
  I0901 11:15:44.160136 17 service.go:3534] Service test-service-nkdbc has service status patched
  STEP: updating the ServiceStatus @ 09/01/25 11:15:44.16
  I0901 11:15:44.191209 17 service.go:3554] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/01/25 11:15:44.192
  I0901 11:15:44.195974 17 service.go:3565] Observed Service test-service-nkdbc in namespace services-2671 with annotations: map[] & Conditions: []
  I0901 11:15:44.196687 17 service.go:3576] Observed Service test-service-nkdbc in namespace services-2671 with annotations: map[patchedstatus:true] & Conditions: []
  I0901 11:15:44.197501 17 service.go:3572] Found Service test-service-nkdbc in namespace services-2671 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:15:44.197602 17 service.go:3583] Service test-service-nkdbc has service status updated
  STEP: patching the service @ 09/01/25 11:15:44.197
  STEP: watching for the Service to be patched @ 09/01/25 11:15:44.23
  I0901 11:15:44.237088 17 service.go:3606] observed Service test-service-nkdbc in namespace services-2671 with labels: map[test-service-static:true]
  I0901 11:15:44.237720 17 service.go:3606] observed Service test-service-nkdbc in namespace services-2671 with labels: map[test-service-static:true]
  I0901 11:15:44.237758 17 service.go:3606] observed Service test-service-nkdbc in namespace services-2671 with labels: map[test-service-static:true]
  I0901 11:15:44.237911 17 service.go:3609] Found Service test-service-nkdbc in namespace services-2671 with labels: map[test-service:patched test-service-static:true]
  I0901 11:15:44.237974 17 service.go:3616] Service test-service-nkdbc patched
  STEP: deleting the service @ 09/01/25 11:15:44.238
  STEP: watching for the Service to be deleted @ 09/01/25 11:15:44.347
  I0901 11:15:44.351679 17 service.go:3640] Observed event: ADDED
  I0901 11:15:44.352387 17 service.go:3640] Observed event: MODIFIED
  I0901 11:15:44.352914 17 service.go:3640] Observed event: MODIFIED
  I0901 11:15:44.353559 17 service.go:3640] Observed event: MODIFIED
  I0901 11:15:44.354184 17 service.go:3636] Found Service test-service-nkdbc in namespace services-2671 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0901 11:15:44.354228 17 service.go:3645] Service test-service-nkdbc deleted
  I0901 11:15:44.354530 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2671" for this suite. @ 09/01/25 11:15:44.366
• [0.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:85
  STEP: Creating a kubernetes client @ 09/01/25 11:15:44.387
  I0901 11:15:44.387173 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:15:44.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:44.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:44.433
  STEP: Counting existing ResourceQuota @ 09/01/25 11:15:44.439
  STEP: Creating a ResourceQuota @ 09/01/25 11:15:49.454
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:15:49.473
  I0901 11:15:51.497211 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002c3a8c0>: 
          metadata:
            creationTimestamp: "2025-09-01T11:15:49Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:15:49Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:15:49Z"
            name: test-quota
            namespace: resourcequota-3814
            resourceVersion: "7568"
            uid: ebcafab1-d257-4f9f-b676-e4529415a7a0
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 11:15:51.498157 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3814" for this suite. @ 09/01/25 11:15:51.511
• [7.141 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/01/25 11:15:51.53
  I0901 11:15:51.530082 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 11:15:51.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:51.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:51.561
  STEP: Creating two CSIDrivers @ 09/01/25 11:15:51.567
  STEP: Getting "inline-driver-ab8fc3d0-cf7b-4819-8e49-c5383c5f487b" & "inline-driver-9983c063-3c7c-4f57-a207-f8141f510aa0" @ 09/01/25 11:15:51.602
  STEP: Patching the CSIDriver "inline-driver-9983c063-3c7c-4f57-a207-f8141f510aa0" @ 09/01/25 11:15:51.615
  STEP: Updating the CSIDriver "inline-driver-9983c063-3c7c-4f57-a207-f8141f510aa0" @ 09/01/25 11:15:51.629
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8155" @ 09/01/25 11:15:51.644
  STEP: Deleting CSIDriver "inline-driver-ab8fc3d0-cf7b-4819-8e49-c5383c5f487b" @ 09/01/25 11:15:51.651
  STEP: Confirm deletion of CSIDriver "inline-driver-ab8fc3d0-cf7b-4819-8e49-c5383c5f487b" @ 09/01/25 11:15:51.663
  STEP: Deleting CSIDriver "inline-driver-9983c063-3c7c-4f57-a207-f8141f510aa0" via DeleteCollection @ 09/01/25 11:15:51.669
  STEP: Confirm deletion of CSIDriver "inline-driver-9983c063-3c7c-4f57-a207-f8141f510aa0" @ 09/01/25 11:15:51.683
  I0901 11:15:51.689059 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8155" for this suite. @ 09/01/25 11:15:51.698
• [0.180 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:15:51.711
  I0901 11:15:51.711226 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:15:51.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:51.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:51.754
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 11:15:51.763
  STEP: Saw pod success @ 09/01/25 11:15:55.839
  I0901 11:15:55.851827 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-451f2c02-6d16-4126-8a11-8ab3f8bcb5a4 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:15:55.882
  I0901 11:15:55.917097 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6651" for this suite. @ 09/01/25 11:15:55.927
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1007
  STEP: Creating a kubernetes client @ 09/01/25 11:15:55.944
  I0901 11:15:55.944190 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:15:55.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:55.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:55.987
  STEP: Creating a ResourceQuota @ 09/01/25 11:15:55.997
  STEP: Getting a ResourceQuota @ 09/01/25 11:15:56.012
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/01/25 11:15:56.021
  STEP: Patching the ResourceQuota @ 09/01/25 11:15:56.031
  STEP: Deleting a Collection of ResourceQuotas @ 09/01/25 11:15:56.054
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 11:15:56.078
  I0901 11:15:56.087513 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8355" for this suite. @ 09/01/25 11:15:56.1
• [0.172 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/01/25 11:15:56.117
  I0901 11:15:56.117220 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename server-version @ 09/01/25 11:15:56.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:56.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:56.155
  STEP: Request ServerVersion @ 09/01/25 11:15:56.161
  STEP: Confirm major version @ 09/01/25 11:15:56.163
  I0901 11:15:56.164156 17 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/01/25 11:15:56.164
  I0901 11:15:56.164235 17 server_version.go:58] cleanMinorVersion: 34
  I0901 11:15:56.164274 17 server_version.go:62] Minor version: 34
  I0901 11:15:56.164483 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-398" for this suite. @ 09/01/25 11:15:56.196
• [0.094 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/01/25 11:15:56.211
  I0901 11:15:56.212032 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:15:56.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:15:56.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:15:56.253
  STEP: Creating pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456 @ 09/01/25 11:15:56.285
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:16:00.366
  I0901 11:16:00.375700 17 container_probe.go:1749] Initial restart count of pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is 0
  I0901 11:16:00.383772 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:02.396706 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:04.405542 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:06.419137 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:08.429329 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:10.437881 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:12.452425 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:14.460361 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:16.469098 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:18.478351 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:18.478456 17 container_probe.go:1763] Restart count of pod container-probe-6456/liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is now 1 (18.102603673s elapsed)
  I0901 11:16:20.488733 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:22.499673 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:24.508058 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:26.520078 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:28.528631 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:30.543571 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:32.554797 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:34.566054 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:36.575054 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:38.584936 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:38.585057 17 container_probe.go:1763] Restart count of pod container-probe-6456/liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is now 2 (38.209212945s elapsed)
  I0901 11:16:40.596359 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:42.609364 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:44.621891 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:46.631950 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:48.640880 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:50.651176 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:52.672808 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:54.685259 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:56.696416 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:58.705570 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:16:58.705656 17 container_probe.go:1763] Restart count of pod container-probe-6456/liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is now 3 (58.329812001s elapsed)
  I0901 11:17:00.738951 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:02.750826 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:04.761597 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:06.771420 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:08.783491 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:10.801798 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:12.813480 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:14.826003 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:16.840470 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:18.853824 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:18.853950 17 container_probe.go:1763] Restart count of pod container-probe-6456/liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is now 4 (1m18.478101883s elapsed)
  I0901 11:17:20.864264 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:22.879370 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:24.888954 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:26.914960 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:28.933589 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:30.944016 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:32.960169 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:34.970930 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:36.983145 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:38.996651 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:41.009733 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:43.020648 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:45.030548 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:47.047875 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:49.060333 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:51.078381 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:53.095263 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:55.107181 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:57.116498 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:17:59.126708 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:01.136870 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:03.147579 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:05.156427 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:07.164614 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:09.175427 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:11.184811 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:13.204352 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:15.223554 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:17.239682 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:19.261098 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:21.269419 17 container_probe.go:1759] Get pod liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c in namespace container-probe-6456
  I0901 11:18:21.269554 17 container_probe.go:1763] Restart count of pod container-probe-6456/liveness-fe5ccd6f-49c6-4e57-8ef6-2658de61a55c is now 5 (2m20.893675059s elapsed)
  STEP: deleting the pod @ 09/01/25 11:18:21.27
  I0901 11:18:21.301247 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6456" for this suite. @ 09/01/25 11:18:21.314
• [145.121 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/01/25 11:18:21.333
  I0901 11:18:21.333870 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:18:21.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:21.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:21.397
  I0901 11:18:21.405983 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: creating the pod @ 09/01/25 11:18:21.407
  STEP: submitting the pod to kubernetes @ 09/01/25 11:18:21.408
  I0901 11:18:27.566882 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2045" for this suite. @ 09/01/25 11:18:27.579
• [6.259 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/01/25 11:18:27.595
  I0901 11:18:27.595789 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:18:27.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:27.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:27.626
  STEP: Creating pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136 @ 09/01/25 11:18:27.632
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:18:29.671
  I0901 11:18:29.679934 17 container_probe.go:1749] Initial restart count of pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 is 0
  I0901 11:18:29.686316 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:31.696001 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:33.703864 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:35.713901 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:37.723439 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:39.734146 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:41.742917 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:43.753608 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:45.763321 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:47.773247 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:49.787388 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:51.797605 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:53.805908 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:55.816130 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:57.834133 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:18:59.843209 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:01.853112 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:03.865134 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:05.880475 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:07.890250 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:09.905784 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:11.926554 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:13.937737 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:15.948072 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:17.956656 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:19.965463 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:21.975081 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:24.000045 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:26.017214 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:28.036479 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:30.049706 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:32.064517 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:34.077651 17 container_probe.go:1759] Get pod test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 in namespace container-probe-3136
  I0901 11:19:34.077790 17 container_probe.go:1763] Restart count of pod container-probe-3136/test-grpc-850d6dc6-28b9-4d33-a219-9e192d95f456 is now 1 (1m4.397588626s elapsed)
  STEP: deleting the pod @ 09/01/25 11:19:34.078
  I0901 11:19:34.114072 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3136" for this suite. @ 09/01/25 11:19:34.126
• [66.542 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/01/25 11:19:34.139
  I0901 11:19:34.139955 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:19:34.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:34.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:34.182
  STEP: Creating service test in namespace statefulset-8013 @ 09/01/25 11:19:34.197
  I0901 11:19:34.217454      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/01/25 11:19:34.217
  I0901 11:19:34.250649 17 wait.go:44] Found 0 stateful pods, waiting for 3
  I0901 11:19:44.261985 17 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:19:44.262062 17 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:19:44.262087 17 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 11:19:44.298
  I0901 11:19:44.326755 17 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 11:19:44.327
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/01/25 11:19:54.352
  STEP: Performing a canary update @ 09/01/25 11:19:54.352
  I0901 11:19:54.381973 17 statefulset.go:2504] Updating stateful set ss2
  I0901 11:19:54.400618 17 wait.go:74] Waiting for Pod statefulset-8013/ss2-2 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/01/25 11:20:04.407
  I0901 11:20:04.525956 17 wait.go:44] Found 2 stateful pods, waiting for 3
  I0901 11:20:14.526669 17 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:20:14.526744 17 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:20:14.526768 17 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/01/25 11:20:14.548
  I0901 11:20:14.574353 17 statefulset.go:2504] Updating stateful set ss2
  I0901 11:20:14.607899 17 wait.go:74] Waiting for Pod statefulset-8013/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0901 11:20:24.629570 17 statefulset.go:2504] Updating stateful set ss2
  I0901 11:20:24.648737 17 wait.go:56] Waiting for StatefulSet statefulset-8013/ss2 to complete update
  I0901 11:20:24.648828 17 wait.go:63] Waiting for Pod statefulset-8013/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0901 11:20:34.665676 17 statefulset.go:136] Deleting all statefulset in ns statefulset-8013
  I0901 11:20:34.681389 17 rest.go:153] Scaling statefulset ss2 to 0
  I0901 11:20:44.747597 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:20:44.760399 17 rest.go:91] Deleting statefulset ss2
  I0901 11:20:44.801065 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8013" for this suite. @ 09/01/25 11:20:44.817
• [70.691 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:20:44.832
  I0901 11:20:44.832131 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:20:44.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:44.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:44.869
  STEP: Creating secret with name secret-test-0ba12c4a-56f6-44fe-9a8a-0bb0016a4995 @ 09/01/25 11:20:44.941
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:20:44.951
  STEP: Saw pod success @ 09/01/25 11:20:49.018
  I0901 11:20:49.033942 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-936a6322-9eb0-44d4-a853-8d8ff7afafc7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:20:49.073
  I0901 11:20:49.153020 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5757" for this suite. @ 09/01/25 11:20:49.213
  STEP: Destroying namespace "secret-namespace-92" for this suite. @ 09/01/25 11:20:49.244
• [4.436 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/01/25 11:20:49.268
  I0901 11:20:49.268620 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:20:49.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:49.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:49.303
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:20:49.312
  STEP: Saw pod success @ 09/01/25 11:20:53.39
  I0901 11:20:53.400779 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-a3e63107-10a5-483b-b896-1c06e5eb60f7 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:20:53.426
  I0901 11:20:53.463711 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5566" for this suite. @ 09/01/25 11:20:53.478
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/01/25 11:20:53.505
  I0901 11:20:53.505428 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 11:20:53.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:53.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:53.571
  STEP: Creating 50 configmaps @ 09/01/25 11:20:53.578
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:20:54.096
  I0901 11:20:54.132134 17 resource.go:64] Pod name wrapped-volume-race-d9f03249-f46a-4220-a128-f9d3a46206c5: Found 0 pods out of 5
  I0901 11:20:59.157172 17 resource.go:64] Pod name wrapped-volume-race-d9f03249-f46a-4220-a128-f9d3a46206c5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:20:59.157
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:20:59.251
  I0901 11:20:59.294073 17 resource.go:64] Pod name wrapped-volume-race-b7dfb3bb-04d8-4960-8fd6-c53ad8ca9328: Found 0 pods out of 5
  I0901 11:21:04.331100 17 resource.go:64] Pod name wrapped-volume-race-b7dfb3bb-04d8-4960-8fd6-c53ad8ca9328: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:21:04.333
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 11:21:04.39
  I0901 11:21:04.424354 17 resource.go:64] Pod name wrapped-volume-race-d6fed276-f782-4d07-839a-324433ebf043: Found 0 pods out of 5
  I0901 11:21:09.458633 17 resource.go:64] Pod name wrapped-volume-race-d6fed276-f782-4d07-839a-324433ebf043: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 11:21:09.458
  STEP: deleting ReplicationController wrapped-volume-race-d6fed276-f782-4d07-839a-324433ebf043 in namespace emptydir-wrapper-5333, will wait for the garbage collector to delete the pods @ 09/01/25 11:21:09.548
  I0901 11:21:09.640589 17 resources.go:139] Deleting ReplicationController wrapped-volume-race-d6fed276-f782-4d07-839a-324433ebf043 took: 28.441512ms
  I0901 11:21:09.842248 17 resources.go:163] Terminating ReplicationController wrapped-volume-race-d6fed276-f782-4d07-839a-324433ebf043 pods took: 201.636976ms
  STEP: deleting ReplicationController wrapped-volume-race-b7dfb3bb-04d8-4960-8fd6-c53ad8ca9328 in namespace emptydir-wrapper-5333, will wait for the garbage collector to delete the pods @ 09/01/25 11:21:12.443
  I0901 11:21:12.550946 17 resources.go:139] Deleting ReplicationController wrapped-volume-race-b7dfb3bb-04d8-4960-8fd6-c53ad8ca9328 took: 29.058001ms
  I0901 11:21:12.652149 17 resources.go:163] Terminating ReplicationController wrapped-volume-race-b7dfb3bb-04d8-4960-8fd6-c53ad8ca9328 pods took: 101.454091ms
  STEP: deleting ReplicationController wrapped-volume-race-d9f03249-f46a-4220-a128-f9d3a46206c5 in namespace emptydir-wrapper-5333, will wait for the garbage collector to delete the pods @ 09/01/25 11:21:14.853
  I0901 11:21:14.944007 17 resources.go:139] Deleting ReplicationController wrapped-volume-race-d9f03249-f46a-4220-a128-f9d3a46206c5 took: 19.846114ms
  I0901 11:21:15.145075 17 resources.go:163] Terminating ReplicationController wrapped-volume-race-d9f03249-f46a-4220-a128-f9d3a46206c5 pods took: 201.051376ms
  STEP: Cleaning up the configMaps @ 09/01/25 11:21:17.346
  I0901 11:21:18.101049 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5333" for this suite. @ 09/01/25 11:21:18.114
• [24.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/01/25 11:21:18.13
  I0901 11:21:18.130509 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename events @ 09/01/25 11:21:18.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:18.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:18.168
  STEP: Create set of events @ 09/01/25 11:21:18.176
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 11:21:18.218
  STEP: delete a list of events @ 09/01/25 11:21:18.228
  I0901 11:21:18.228467 17 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 11:21:18.291
  I0901 11:21:18.299804 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-201" for this suite. @ 09/01/25 11:21:18.313
• [0.200 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/01/25 11:21:18.331
  I0901 11:21:18.331903 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 11:21:18.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:18.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:18.393
  I0901 11:21:20.493448 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-729" for this suite. @ 09/01/25 11:21:20.515
• [2.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:21:20.55
  I0901 11:21:20.550197 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:21:20.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:20.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:20.603
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:21:20.613
  STEP: Saw pod success @ 09/01/25 11:21:24.701
  I0901 11:21:24.711773 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-0208e1cf-f19e-4a87-b372-7a5f4b882026 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:21:24.783
  I0901 11:21:24.821117 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4649" for this suite. @ 09/01/25 11:21:24.835
• [4.312 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/01/25 11:21:24.862
  I0901 11:21:24.863008 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:21:24.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:24.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:24.909
  STEP: referencing a single matching pod @ 09/01/25 11:21:35.105
  I0901 11:21:35.129845      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/01/25 11:21:35.13
  I0901 11:21:35.150408      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/01/25 11:21:35.15
  I0901 11:21:35.233885      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/01/25 11:21:35.234
  I0901 11:21:35.305950 17 endpointslice.go:952] EndpointSlice for Service endpointslice-2111/example-named-port not found
  I0901 11:21:37.325819      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:21:37.327053 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2111" for this suite. @ 09/01/25 11:21:37.346
• [12.511 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:648
  STEP: Creating a kubernetes client @ 09/01/25 11:21:37.374
  I0901 11:21:37.375489 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:21:37.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:37.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:37.43
  STEP: creating @ 09/01/25 11:21:41.654
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/01/25 11:21:41.691
  I0901 11:21:45.744691 17 util.go:162] Waiting up to 2m0s to get response from 10.233.62.218:80
  I0901 11:21:45.745842 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=endpointslice-15 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.233.62.218:80/hostname'
  I0901 11:21:46.227892 17 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.233.62.218:80/hostname\n"
  I0901 11:21:46.228024 17 builder.go:157] stdout: "pod1-handle-http-request"
  I0901 11:21:46.228155 17 util.go:162] Waiting up to 2m0s to get response from 10.233.62.218:81
  I0901 11:21:46.228941 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=endpointslice-15 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.233.62.218:81/hostname'
  I0901 11:21:46.522895 17 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.233.62.218:81/hostname\n"
  I0901 11:21:46.523125 17 builder.go:157] stdout: "pod2-handle-http-request"
  I0901 11:21:46.524368 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-15" for this suite. @ 09/01/25 11:21:46.542
• [9.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:464
  STEP: Creating a kubernetes client @ 09/01/25 11:21:46.566
  I0901 11:21:46.566920 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 11:21:46.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:46.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:46.611
  I0901 11:21:52.727350 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1092" for this suite. @ 09/01/25 11:21:52.747
• [6.206 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/01/25 11:21:52.781
  I0901 11:21:52.785204 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:21:52.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:52.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:52.838
  STEP: create the deployment @ 09/01/25 11:21:52.844
  I0901 11:21:52.865518      17 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 11:21:52.865
  STEP: delete the deployment @ 09/01/25 11:21:53.094
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/01/25 11:21:53.111
  STEP: Gathering metrics @ 09/01/25 11:21:53.776
  I0901 11:21:54.101958 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:21:54.103735 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9974" for this suite. @ 09/01/25 11:21:54.133
• [1.377 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/01/25 11:21:54.157
  I0901 11:21:54.157568 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:21:54.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:54.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:54.22
  STEP: Creating a test externalName service @ 09/01/25 11:21:54.227
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:21:54.247
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:21:54.248
  STEP: creating a pod to probe DNS @ 09/01/25 11:21:54.248
  STEP: submitting the pod to kubernetes @ 09/01/25 11:21:54.248
  STEP: retrieving the pod @ 09/01/25 11:21:56.348
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:21:56.361
  I0901 11:21:56.399643 17 dns_common.go:571] DNS probes using dns-test-a259330a-3714-4e41-b656-4d3cae1c3263 succeeded

  STEP: changing the externalName to bar.example.com @ 09/01/25 11:21:56.399
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:21:56.425
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:21:56.426
  STEP: creating a second pod to probe DNS @ 09/01/25 11:21:56.426
  STEP: submitting the pod to kubernetes @ 09/01/25 11:21:56.427
  STEP: retrieving the pod @ 09/01/25 11:22:16.585
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:22:16.596
  I0901 11:22:16.622700 17 dns_common.go:571] DNS probes using dns-test-a46bb534-3078-48ad-803e-6395391cc717 succeeded

  STEP: changing the service to type=ClusterIP @ 09/01/25 11:22:16.622
  I0901 11:22:16.652733      17 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:22:16.652
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9640.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9640.svc.cluster.local; sleep 1; done
   @ 09/01/25 11:22:16.652
  STEP: creating a third pod to probe DNS @ 09/01/25 11:22:16.652
  STEP: submitting the pod to kubernetes @ 09/01/25 11:22:16.662
  STEP: retrieving the pod @ 09/01/25 11:22:46.928
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:22:46.937
  I0901 11:22:46.969436 17 dns_common.go:571] DNS probes using dns-test-eca80260-c833-4a77-afaf-2d756569a410 succeeded

  STEP: deleting the pod @ 09/01/25 11:22:46.969
  STEP: deleting the pod @ 09/01/25 11:22:47.019
  STEP: deleting the pod @ 09/01/25 11:22:47.084
  STEP: deleting the test externalName service @ 09/01/25 11:22:47.126
  I0901 11:22:47.230031 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9640" for this suite. @ 09/01/25 11:22:47.251
• [53.119 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/01/25 11:22:47.276
  I0901 11:22:47.276361 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:22:47.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:47.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:47.32
  I0901 11:22:47.325455 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: creating the pod @ 09/01/25 11:22:47.326
  STEP: submitting the pod to kubernetes @ 09/01/25 11:22:47.327
  STEP: waiting for the container to be running @ 09/01/25 11:22:51.392
  I0901 11:22:51.446919 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1425" for this suite. @ 09/01/25 11:22:51.458
• [4.203 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/01/25 11:22:51.481
  I0901 11:22:51.482040 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:22:51.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:51.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:51.522
  STEP: Creating Pod @ 09/01/25 11:22:51.53
  STEP: Reading file content from the nginx-container @ 09/01/25 11:22:53.573
  I0901 11:22:53.574027 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9865 PodName:pod-sharedvolume-68d93cd3-e443-473b-8f52-caeba58f8a54 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:22:53.574074 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:22:53.574197 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/emptydir-9865/pods/pod-sharedvolume-68d93cd3-e443-473b-8f52-caeba58f8a54/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0901 11:22:53.696335 17 exec_util.go:112] Exec stderr: ""
  I0901 11:22:53.697783 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9865" for this suite. @ 09/01/25 11:22:53.71
• [2.241 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:337
  STEP: Creating a kubernetes client @ 09/01/25 11:22:53.723
  I0901 11:22:53.723217 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:22:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:22:53.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:22:53.761
  STEP: Counting existing ResourceQuota @ 09/01/25 11:23:10.793
  STEP: Creating a ResourceQuota @ 09/01/25 11:23:15.807
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:23:15.827
  I0901 11:23:17.861940 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0022248c0>: 
          metadata:
            creationTimestamp: "2025-09-01T11:23:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:23:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:23:15Z"
            name: test-quota
            namespace: resourcequota-9928
            resourceVersion: "10146"
            uid: ca8b2bab-989f-4f1e-8e5f-821e23408dc8
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ConfigMap @ 09/01/25 11:23:17.862
  STEP: Ensuring resource quota status captures configMap creation @ 09/01/25 11:23:17.935
  I0901 11:23:17.946214 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002224dc0>: 
          metadata:
            creationTimestamp: "2025-09-01T11:23:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:23:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:23:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:configmaps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T11:23:17Z"
            name: test-quota
            namespace: resourcequota-9928
            resourceVersion: "10150"
            uid: ca8b2bab-989f-4f1e-8e5f-821e23408dc8
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "2"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ConfigMap @ 09/01/25 11:23:17.949
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:23:17.962
  I0901 11:23:19.995786 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0024d2a00>: 
          metadata:
            creationTimestamp: "2025-09-01T11:23:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T11:23:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T11:23:17Z"
            name: test-quota
            namespace: resourcequota-9928
            resourceVersion: "10154"
            uid: ca8b2bab-989f-4f1e-8e5f-821e23408dc8
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 11:23:19.997445 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9928" for this suite. @ 09/01/25 11:23:20.018
• [26.312 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/01/25 11:23:20.035
  I0901 11:23:20.035735 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:23:20.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:20.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:20.081
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:23:20.087
  STEP: Saw pod success @ 09/01/25 11:23:24.142
  I0901 11:23:24.156415 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-ce8c2743-4f47-461b-841a-cf41708160ca container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:23:24.211
  I0901 11:23:24.256091 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6703" for this suite. @ 09/01/25 11:23:24.264
• [4.291 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/01/25 11:23:24.331
  I0901 11:23:24.331630 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 11:23:24.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:24.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:24.384
  I0901 11:23:24.390093 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:23:27.880378 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-636" for this suite. @ 09/01/25 11:23:27.889
• [3.578 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/01/25 11:23:27.911
  I0901 11:23:27.911527 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 11:23:27.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:27.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:27.953
  STEP: Create VolumeAttachment "va-e2e-zrfcn" on node "wohnahxathu9-2" @ 09/01/25 11:23:27.991
  STEP: Patch VolumeAttachment "va-e2e-zrfcn" on node "wohnahxathu9-2" @ 09/01/25 11:23:28.007
  STEP: Reading "va-e2e-zrfcn" Status @ 09/01/25 11:23:28.018
  STEP: Patching "va-e2e-zrfcn" Status @ 09/01/25 11:23:28.026
  I0901 11:23:28.036998 17 volume_attachment.go:224] "va-e2e-zrfcn" Status.Attached: true
  STEP: Updating "va-e2e-zrfcn" Status @ 09/01/25 11:23:28.037
  I0901 11:23:28.053335 17 volume_attachment.go:240] "va-e2e-zrfcn" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-zrfcn" on node "wohnahxathu9-2" @ 09/01/25 11:23:28.053
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zrfcn" on node "wohnahxathu9-2" @ 09/01/25 11:23:28.065
  I0901 11:23:28.072715 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3740" for this suite. @ 09/01/25 11:23:28.092
• [0.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/01/25 11:23:28.111
  I0901 11:23:28.111426 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 11:23:28.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:28.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:28.142
  STEP: Creating LimitRange "e2e-limitrange-65cnk" in namespace "limitrange-6962" @ 09/01/25 11:23:28.152
  STEP: Creating another limitRange in another namespace @ 09/01/25 11:23:28.169
  I0901 11:23:28.191470 17 limit_range.go:299] Namespace "e2e-limitrange-65cnk-4534" created
  I0901 11:23:28.191544 17 limit_range.go:300] Creating LimitRange "e2e-limitrange-65cnk" in namespace "e2e-limitrange-65cnk-4534"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-65cnk" @ 09/01/25 11:23:28.201
  I0901 11:23:28.208208 17 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-65cnk" in "limitrange-6962" namespace @ 09/01/25 11:23:28.208
  I0901 11:23:28.222323 17 limit_range.go:335] LimitRange "e2e-limitrange-65cnk" has been patched
  STEP: Delete LimitRange "e2e-limitrange-65cnk" by Collection with labelSelector: "e2e-limitrange-65cnk=patched" @ 09/01/25 11:23:28.222
  STEP: Confirm that the limitRange "e2e-limitrange-65cnk" has been deleted @ 09/01/25 11:23:28.246
  I0901 11:23:28.246880 17 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0901 11:23:28.258512 17 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-65cnk=patched"
  I0901 11:23:28.258661 17 limit_range.go:344] LimitRange "e2e-limitrange-65cnk" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-65cnk" @ 09/01/25 11:23:28.259
  I0901 11:23:28.362724 17 limit_range.go:350] Found 1 limitRange
  I0901 11:23:28.363107 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6962" for this suite. @ 09/01/25 11:23:28.379
  STEP: Destroying namespace "e2e-limitrange-65cnk-4534" for this suite. @ 09/01/25 11:23:28.397
• [0.303 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1158
  STEP: Creating a kubernetes client @ 09/01/25 11:23:28.415
  I0901 11:23:28.415684 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:23:28.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:28.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:28.451
  STEP: Creating a suspended job @ 09/01/25 11:23:28.466
  STEP: Patching the Job @ 09/01/25 11:23:28.476
  STEP: Watching for Job to be patched @ 09/01/25 11:23:28.502
  I0901 11:23:28.506428 17 job.go:1410] Event ADDED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-job-label:e2e-6fv7q] and annotations: map[]
  I0901 11:23:28.506524 17 job.go:1413] Event MODIFIED found for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[]
  STEP: Updating the job @ 09/01/25 11:23:28.506
  STEP: Watching for Job to be updated @ 09/01/25 11:23:28.525
  I0901 11:23:28.528784 17 job.go:1413] Event MODIFIED found for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:28.529221 17 job.go:1236] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/01/25 11:23:28.529
  I0901 11:23:28.535806 17 job.go:1243] Job: e2e-6fv7q as labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q]
  STEP: Waiting for job to complete @ 09/01/25 11:23:28.535
  STEP: Delete a job collection with a labelselector @ 09/01/25 11:23:36.603
  STEP: Watching for Job to be deleted @ 09/01/25 11:23:36.629
  I0901 11:23:36.633813 17 job.go:1410] Event MODIFIED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:36.633894 17 job.go:1410] Event MODIFIED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:36.633993 17 job.go:1410] Event MODIFIED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:36.634419 17 job.go:1410] Event MODIFIED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:36.634896 17 job.go:1410] Event MODIFIED observed for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  I0901 11:23:36.634937 17 job.go:1413] Event DELETED found for Job e2e-6fv7q in namespace job-7327 with labels: map[e2e-6fv7q:patched e2e-job-label:e2e-6fv7q] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/01/25 11:23:36.635
  I0901 11:23:36.644954 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7327" for this suite. @ 09/01/25 11:23:36.653
• [8.257 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:52
  STEP: Creating a kubernetes client @ 09/01/25 11:23:36.676
  I0901 11:23:36.676778 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-watch @ 09/01/25 11:23:36.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:23:36.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:23:36.73
  I0901 11:23:36.736462 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Creating first CR  @ 09/01/25 11:23:39.392
  I0901 11:23:39.404822 17 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:23:39Z]] name:name1 resourceVersion:10389 uid:fa7cd84c-cf9a-46c6-9764-be64dfb37d6e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/01/25 11:23:49.406
  I0901 11:23:49.432584 17 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:23:49Z]] name:name2 resourceVersion:10437 uid:1893ae38-a01b-4c6f-92e7-06fb70537a5c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/01/25 11:23:59.435
  I0901 11:23:59.449529 17 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:23:59Z]] name:name1 resourceVersion:10460 uid:fa7cd84c-cf9a-46c6-9764-be64dfb37d6e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/01/25 11:24:09.45
  I0901 11:24:09.470854 17 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:24:09Z]] name:name2 resourceVersion:10483 uid:1893ae38-a01b-4c6f-92e7-06fb70537a5c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/01/25 11:24:19.471
  I0901 11:24:19.496562 17 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:23:59Z]] name:name1 resourceVersion:10506 uid:fa7cd84c-cf9a-46c6-9764-be64dfb37d6e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/01/25 11:24:29.497
  I0901 11:24:29.527266 17 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T11:23:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T11:24:09Z]] name:name2 resourceVersion:10529 uid:1893ae38-a01b-4c6f-92e7-06fb70537a5c] num:map[num1:9223372036854775807 num2:1000000]]}
  I0901 11:24:40.057799 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5579" for this suite. @ 09/01/25 11:24:40.08
• [63.432 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/01/25 11:24:40.109
  I0901 11:24:40.109477 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:24:40.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:40.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:40.169
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:24:40.179
  STEP: Saw pod success @ 09/01/25 11:24:44.297
  I0901 11:24:44.306009 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-aa874f2b-2800-434d-803d-3edca83184d8 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:24:44.365
  I0901 11:24:44.396234 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2943" for this suite. @ 09/01/25 11:24:44.407
• [4.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1294
  STEP: Creating a kubernetes client @ 09/01/25 11:24:44.427
  I0901 11:24:44.427856 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:24:44.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:44.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:44.473
  STEP: creating service nodeport-test with type=NodePort in namespace services-9892 @ 09/01/25 11:24:44.486
  I0901 11:24:44.568352 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:24:46.580024 17 resource.go:344] Creating new exec pod
  I0901 11:24:48.667793 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 11:24:49.032191 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.15.145) 80 port [tcp/http] succeeded!\n"
  I0901 11:24:49.032361 17 builder.go:157] stdout: ""
  I0901 11:24:49.668794 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 11:24:49.965337 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.15.145) 80 port [tcp/http] succeeded!\n"
  I0901 11:24:49.965508 17 builder.go:157] stdout: ""
  I0901 11:24:50.667893 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 11:24:50.977009 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.15.145) 80 port [tcp/http] succeeded!\n"
  I0901 11:24:50.977096 17 builder.go:157] stdout: "nodeport-test-d676c4ddf-zqmc7"
  I0901 11:24:50.977431 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.145 80'
  I0901 11:24:51.243832 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.145 80\nConnection to 10.233.15.145 80 port [tcp/http] succeeded!\n"
  I0901 11:24:51.243955 17 builder.go:157] stdout: "nodeport-test-d676c4ddf-t2q2p"
  I0901 11:24:51.244415 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.57 30481'
  I0901 11:24:51.561835 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.57 30481\nConnection to 192.168.121.57 30481 port [tcp/*] succeeded!\n"
  I0901 11:24:51.561938 17 builder.go:157] stdout: "nodeport-test-d676c4ddf-zqmc7"
  I0901 11:24:51.562351 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-9892 exec execpodrdw6f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.15 30481'
  I0901 11:24:51.853959 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.15 30481\nConnection to 192.168.121.15 30481 port [tcp/*] succeeded!\n"
  I0901 11:24:51.854441 17 builder.go:157] stdout: "nodeport-test-d676c4ddf-t2q2p"
  I0901 11:24:51.855172 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9892" for this suite. @ 09/01/25 11:24:51.866
• [7.452 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:115
  STEP: Creating a kubernetes client @ 09/01/25 11:24:51.879
  I0901 11:24:51.879780 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:24:51.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:51.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:51.917
  STEP: Setting up server cert @ 09/01/25 11:24:51.955
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:24:53.307
  STEP: Deploying the webhook pod @ 09/01/25 11:24:53.325
  STEP: Wait for the deployment to be ready @ 09/01/25 11:24:53.356
  I0901 11:24:53.373134 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0901 11:24:55.397577 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 24, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 24, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 24, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 24, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:24:57.433
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:24:57.474
  I0901 11:24:58.474606 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/01/25 11:24:58.488
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/01/25 11:24:58.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 11:24:58.491
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 11:24:58.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 11:24:58.495
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 11:24:58.495
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 11:24:58.499
  I0901 11:24:58.635107 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7764" for this suite. @ 09/01/25 11:24:58.65
  STEP: Destroying namespace "webhook-markers-88" for this suite. @ 09/01/25 11:24:58.678
• [6.824 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/01/25 11:24:58.703
  I0901 11:24:58.703952 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:24:58.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:24:58.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:24:58.747
  STEP: Setting up data @ 09/01/25 11:24:58.761
  STEP: Creating pod pod-subpath-test-configmap-cv69 @ 09/01/25 11:24:58.804
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:24:58.804
  STEP: Saw pod success @ 09/01/25 11:25:22.998
  I0901 11:25:23.008399 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-subpath-test-configmap-cv69 container test-container-subpath-configmap-cv69: <nil>
  STEP: delete the pod @ 09/01/25 11:25:23.042
  STEP: Deleting pod pod-subpath-test-configmap-cv69 @ 09/01/25 11:25:23.092
  I0901 11:25:23.092224 17 delete.go:78] Deleting pod "pod-subpath-test-configmap-cv69" in namespace "subpath-5855"
  I0901 11:25:23.104600 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5855" for this suite. @ 09/01/25 11:25:23.117
• [24.440 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/01/25 11:25:23.143
  I0901 11:25:23.143816 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:25:23.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:23.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:23.199
  STEP: Creating projection with secret that has name projected-secret-test-7d98d84f-6704-4ee6-acd4-8b307e61f667 @ 09/01/25 11:25:23.206
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:25:23.218
  STEP: Saw pod success @ 09/01/25 11:25:27.304
  I0901 11:25:27.314856 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-secrets-a6718026-7ba5-4762-9d00-430601c47cd4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:25:27.333
  I0901 11:25:27.365426 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6428" for this suite. @ 09/01/25 11:25:27.38
• [4.257 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1565
  STEP: Creating a kubernetes client @ 09/01/25 11:25:27.4
  I0901 11:25:27.400793 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:25:27.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:27.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:27.429
  STEP: creating Agnhost RC @ 09/01/25 11:25:27.437
  I0901 11:25:27.437690 17 kubectl.go:1572] namespace kubectl-1352
  I0901 11:25:27.438022 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1352 create -f -'
  I0901 11:25:27.801979 17 builder.go:156] stderr: ""
  I0901 11:25:27.802069 17 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 11:25:27.802
  I0901 11:25:28.810344 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:25:28.810455 17 framework.go:738] Found 0 / 1
  I0901 11:25:29.811185 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:25:29.811385 17 framework.go:738] Found 0 / 1
  I0901 11:25:30.810608 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:25:30.810683 17 framework.go:738] Found 1 / 1
  I0901 11:25:30.810729 17 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 11:25:30.819012 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 11:25:30.819104 17 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 11:25:30.819132 17 kubectl.go:1579] wait on agnhost-primary startup in kubectl-1352 
  I0901 11:25:30.819397 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1352 logs agnhost-primary-4n7wz agnhost-primary'
  I0901 11:25:31.031123 17 builder.go:156] stderr: ""
  I0901 11:25:31.031226 17 builder.go:157] stdout: "Paused\nSignals registered\n"
  STEP: exposing RC @ 09/01/25 11:25:31.031
  I0901 11:25:31.031651 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1352 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0901 11:25:31.228490 17 builder.go:156] stderr: ""
  I0901 11:25:31.228897 17 builder.go:157] stdout: "service/rm2 exposed\n"
  I0901 11:25:31.244568 17 utils.go:1116] Service rm2 in namespace kubectl-1352 found.
  STEP: exposing service @ 09/01/25 11:25:33.263
  I0901 11:25:33.264005 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-1352 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0901 11:25:33.453065 17 builder.go:156] stderr: ""
  I0901 11:25:33.453180 17 builder.go:157] stdout: "service/rm3 exposed\n"
  I0901 11:25:33.461126 17 utils.go:1116] Service rm3 in namespace kubectl-1352 found.
  I0901 11:25:35.481896 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1352" for this suite. @ 09/01/25 11:25:35.49
• [8.126 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/01/25 11:25:35.527
  I0901 11:25:35.527972 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:25:35.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:35.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:35.561
  STEP: Creating ServiceAccount "e2e-sa-9k5tj"  @ 09/01/25 11:25:35.569
  I0901 11:25:35.583346 17 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9k5tj"  @ 09/01/25 11:25:35.583
  I0901 11:25:35.605552 17 service_accounts.go:867] AutomountServiceAccountToken: true
  I0901 11:25:35.605795 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2946" for this suite. @ 09/01/25 11:25:35.639
• [0.129 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/01/25 11:25:35.657
  I0901 11:25:35.657509 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:25:35.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:35.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:35.696
  STEP: Creating a ResourceQuota @ 09/01/25 11:25:35.7
  STEP: Getting a ResourceQuota @ 09/01/25 11:25:35.711
  STEP: Updating a ResourceQuota @ 09/01/25 11:25:35.718
  STEP: Verifying a ResourceQuota was modified @ 09/01/25 11:25:35.731
  STEP: Deleting a ResourceQuota @ 09/01/25 11:25:35.738
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 11:25:35.749
  I0901 11:25:35.757926 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7969" for this suite. @ 09/01/25 11:25:35.773
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:109
  STEP: Creating a kubernetes client @ 09/01/25 11:25:35.79
  I0901 11:25:35.790969 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:25:35.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:35.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:35.826
  STEP: Looking for a node to schedule job pod @ 09/01/25 11:25:35.832
  STEP: Creating a job @ 09/01/25 11:25:35.875
  STEP: Ensuring job fails @ 09/01/25 11:25:35.891
  I0901 11:25:41.954200 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8952" for this suite. @ 09/01/25 11:25:41.964
• [6.193 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/01/25 11:25:41.984
  I0901 11:25:41.984229 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:25:41.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:42.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:42.039
  STEP: creating a watch on configmaps with a certain label @ 09/01/25 11:25:42.047
  STEP: creating a new configmap @ 09/01/25 11:25:42.056
  STEP: modifying the configmap once @ 09/01/25 11:25:42.068
  STEP: changing the label value of the configmap @ 09/01/25 11:25:42.104
  STEP: Expecting to observe a delete notification for the watched object @ 09/01/25 11:25:42.125
  I0901 11:25:42.125549 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11051 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:25:42.125813 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11055 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:25:42.125982 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11057 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/01/25 11:25:42.126
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/01/25 11:25:42.143
  STEP: changing the label value of the configmap back @ 09/01/25 11:25:52.144
  STEP: modifying the configmap a third time @ 09/01/25 11:25:52.166
  STEP: deleting the configmap @ 09/01/25 11:25:52.193
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/01/25 11:25:52.207
  I0901 11:25:52.207630 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11118 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:25:52.207914 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11119 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:25:52.208163 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1961  2b15dda4-2859-492d-8489-1ce62b7ad047 11120 0 2025-09-01 11:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 11:25:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:25:52.208376 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1961" for this suite. @ 09/01/25 11:25:52.244
• [10.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/01/25 11:25:52.267
  I0901 11:25:52.267916 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:25:52.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:52.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:52.332
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 11:25:52.337
  STEP: Saw pod success @ 09/01/25 11:25:56.396
  I0901 11:25:56.404118 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-29b2d642-59bb-42e9-a149-4aca5f6bd643 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:25:56.43
  I0901 11:25:56.459168 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1613" for this suite. @ 09/01/25 11:25:56.469
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:564
  STEP: Creating a kubernetes client @ 09/01/25 11:25:56.485
  I0901 11:25:56.485507 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:25:56.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:56.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:56.571
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/01/25 11:25:56.576
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/01/25 11:25:56.592
  STEP: Ensure that the job reaches completions @ 09/01/25 11:26:00.623
  STEP: Verifying that the job status to ensure correct final state @ 09/01/25 11:26:00.642
  I0901 11:26:00.651016 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6405" for this suite. @ 09/01/25 11:26:00.665
• [4.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/01/25 11:26:00.684
  I0901 11:26:00.684956 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:26:00.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:00.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:00.74
  STEP: creating secret secrets-9757/secret-test-c4b58b30-ba22-4b1c-82bd-adf11d678c93 @ 09/01/25 11:26:00.75
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:26:00.763
  STEP: Saw pod success @ 09/01/25 11:26:04.854
  I0901 11:26:04.865166 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-7265ead3-d097-4dbf-bc6f-6cc0e9bd8273 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:26:04.887
  I0901 11:26:04.930236 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9757" for this suite. @ 09/01/25 11:26:04.942
• [4.274 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/01/25 11:26:04.96
  I0901 11:26:04.960209 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename discovery @ 09/01/25 11:26:04.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:04.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:05.006
  STEP: Setting up server cert @ 09/01/25 11:26:05.022
  STEP: Requesting APIResourceList from "/api/v1" @ 09/01/25 11:26:06.125
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/01/25 11:26:06.131
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/01/25 11:26:06.135
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/01/25 11:26:06.138
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/01/25 11:26:06.14
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/01/25 11:26:06.143
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/01/25 11:26:06.146
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/01/25 11:26:06.15
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/01/25 11:26:06.153
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/01/25 11:26:06.155
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/01/25 11:26:06.16
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/01/25 11:26:06.168
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/01/25 11:26:06.171
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/01/25 11:26:06.174
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/01/25 11:26:06.178
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/01/25 11:26:06.182
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/01/25 11:26:06.187
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/01/25 11:26:06.191
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/01/25 11:26:06.196
  I0901 11:26:06.200364 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5020" for this suite. @ 09/01/25 11:26:06.218
• [1.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/01/25 11:26:06.245
  I0901 11:26:06.246083 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:26:06.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:06.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:06.295
  STEP: Creating projection with secret that has name projected-secret-test-map-701638c8-c6de-4812-9a23-049a4a368672 @ 09/01/25 11:26:06.302
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:26:06.317
  STEP: Saw pod success @ 09/01/25 11:26:10.373
  I0901 11:26:10.379595 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-secrets-cda7c0a1-c317-483e-85f2-799efeeacd94 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:26:10.399
  I0901 11:26:10.444578 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6856" for this suite. @ 09/01/25 11:26:10.454
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/01/25 11:26:10.47
  I0901 11:26:10.470884 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename events @ 09/01/25 11:26:10.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:10.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:10.505
  STEP: Create set of events @ 09/01/25 11:26:10.51
  I0901 11:26:10.526365 17 core_events.go:198] created test-event-1
  I0901 11:26:10.536346 17 core_events.go:198] created test-event-2
  I0901 11:26:10.547234 17 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 11:26:10.547
  STEP: delete collection of events @ 09/01/25 11:26:10.552
  I0901 11:26:10.552960 17 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 11:26:10.598
  I0901 11:26:10.599109 17 core_events.go:230] requesting list of events to confirm quantity
  I0901 11:26:10.606487 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9769" for this suite. @ 09/01/25 11:26:10.616
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/01/25 11:26:10.635
  I0901 11:26:10.635910 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:26:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:10.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:10.68
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/01/25 11:26:10.69
  I0901 11:26:10.692752 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/01/25 11:26:20.974
  I0901 11:26:20.976222 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:26:23.533671 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:26:33.325583 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3998" for this suite. @ 09/01/25 11:26:33.351
• [22.736 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/01/25 11:26:33.374
  I0901 11:26:33.374180 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:26:33.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:33.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:33.42
  I0901 11:26:33.428141 17 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:26:33.465586 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 11:26:33.476581 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-1 before test
  I0901 11:26:33.491743 17 predicates.go:958] cilium-node-init-8rnck from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.491861 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:26:33.491885 17 predicates.go:958] cilium-pvcjx from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.491901 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:26:33.491922 17 predicates.go:958] coredns-66bc5c9577-pxnpq from kube-system started at 2025-09-01 10:48:12 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.491937 17 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 11:26:33.491953 17 predicates.go:958] kube-apiserver-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.491967 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:26:33.491982 17 predicates.go:958] kube-controller-manager-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.491996 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:26:33.492011 17 predicates.go:958] kube-proxy-2mpj6 from kube-system started at 2025-09-01 10:45:03 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.492025 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:26:33.492040 17 predicates.go:958] kube-scheduler-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.492054 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:26:33.492093 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:26:33.492108 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:26:33.492122 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:26:33.492137 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-2 before test
  I0901 11:26:33.519562 17 predicates.go:958] cilium-4ll4d from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.519684 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:26:33.519709 17 predicates.go:958] cilium-node-init-nz8p9 from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.519793 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:26:33.519853 17 predicates.go:958] kube-apiserver-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.519870 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:26:33.519892 17 predicates.go:958] kube-controller-manager-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.520170 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:26:33.520223 17 predicates.go:958] kube-proxy-mrff2 from kube-system started at 2025-09-01 10:46:06 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.520243 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:26:33.520259 17 predicates.go:958] kube-scheduler-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.520440 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:26:33.520480 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-n85nx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:26:33.520547 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:26:33.520566 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:26:33.520582 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-3 before test
  I0901 11:26:33.534925 17 predicates.go:958] cilium-lsnls from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.534994 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:26:33.535016 17 predicates.go:958] cilium-node-init-78w5b from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.535036 17 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 11:26:33.535053 17 predicates.go:958] cilium-operator-79974c855d-57ngp from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.535068 17 predicates.go:960] 	Container cilium-operator ready: true, restart count 4
  I0901 11:26:33.535087 17 predicates.go:958] coredns-66bc5c9577-9wl8q from kube-system started at 2025-09-01 11:02:55 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.535377 17 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0901 11:26:33.535465 17 predicates.go:958] kube-proxy-4srgk from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.535534 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 2
  I0901 11:26:33.535564 17 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:26:33.535760 17 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:26:33.535855 17 predicates.go:958] sonobuoy-e2e-job-a32e027bfe084d7f from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:26:33.535877 17 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 11:26:33.535890 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:26:33.535960 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-s5ckg from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:26:33.535975 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:26:33.535988 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node wohnahxathu9-1 @ 09/01/25 11:26:33.635
  STEP: verifying the node has the label node wohnahxathu9-2 @ 09/01/25 11:26:33.671
  STEP: verifying the node has the label node wohnahxathu9-3 @ 09/01/25 11:26:33.759
  I0901 11:26:33.811112 17 predicates.go:373] Pod cilium-4ll4d requesting resource cpu=0m on Node wohnahxathu9-2
  I0901 11:26:33.811675 17 predicates.go:373] Pod cilium-lsnls requesting resource cpu=0m on Node wohnahxathu9-3
  I0901 11:26:33.811708 17 predicates.go:373] Pod cilium-node-init-78w5b requesting resource cpu=100m on Node wohnahxathu9-3
  I0901 11:26:33.811725 17 predicates.go:373] Pod cilium-node-init-8rnck requesting resource cpu=100m on Node wohnahxathu9-1
  I0901 11:26:33.811923 17 predicates.go:373] Pod cilium-node-init-nz8p9 requesting resource cpu=100m on Node wohnahxathu9-2
  I0901 11:26:33.812434 17 predicates.go:373] Pod cilium-operator-79974c855d-57ngp requesting resource cpu=0m on Node wohnahxathu9-3
  I0901 11:26:33.812462 17 predicates.go:373] Pod cilium-pvcjx requesting resource cpu=0m on Node wohnahxathu9-1
  I0901 11:26:33.812631 17 predicates.go:373] Pod coredns-66bc5c9577-9wl8q requesting resource cpu=100m on Node wohnahxathu9-3
  I0901 11:26:33.812861 17 predicates.go:373] Pod coredns-66bc5c9577-pxnpq requesting resource cpu=100m on Node wohnahxathu9-1
  I0901 11:26:33.813338 17 predicates.go:373] Pod kube-apiserver-wohnahxathu9-1 requesting resource cpu=250m on Node wohnahxathu9-1
  I0901 11:26:33.813372 17 predicates.go:373] Pod kube-apiserver-wohnahxathu9-2 requesting resource cpu=250m on Node wohnahxathu9-2
  I0901 11:26:33.813649 17 predicates.go:373] Pod kube-controller-manager-wohnahxathu9-1 requesting resource cpu=200m on Node wohnahxathu9-1
  I0901 11:26:33.813673 17 predicates.go:373] Pod kube-controller-manager-wohnahxathu9-2 requesting resource cpu=200m on Node wohnahxathu9-2
  I0901 11:26:33.813689 17 predicates.go:373] Pod kube-proxy-2mpj6 requesting resource cpu=0m on Node wohnahxathu9-1
  I0901 11:26:33.813708 17 predicates.go:373] Pod kube-proxy-4srgk requesting resource cpu=0m on Node wohnahxathu9-3
  I0901 11:26:33.813723 17 predicates.go:373] Pod kube-proxy-mrff2 requesting resource cpu=0m on Node wohnahxathu9-2
  I0901 11:26:33.813738 17 predicates.go:373] Pod kube-scheduler-wohnahxathu9-1 requesting resource cpu=100m on Node wohnahxathu9-1
  I0901 11:26:33.813753 17 predicates.go:373] Pod kube-scheduler-wohnahxathu9-2 requesting resource cpu=100m on Node wohnahxathu9-2
  I0901 11:26:33.813788 17 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node wohnahxathu9-3
  I0901 11:26:33.813820 17 predicates.go:373] Pod sonobuoy-e2e-job-a32e027bfe084d7f requesting resource cpu=0m on Node wohnahxathu9-3
  I0901 11:26:33.813847 17 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z requesting resource cpu=0m on Node wohnahxathu9-1
  I0901 11:26:33.813874 17 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-637529a452854b3f-n85nx requesting resource cpu=0m on Node wohnahxathu9-2
  I0901 11:26:33.813902 17 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-637529a452854b3f-s5ckg requesting resource cpu=0m on Node wohnahxathu9-3
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/01/25 11:26:33.813
  I0901 11:26:33.813995 17 predicates.go:383] Creating a pod which consumes cpu=595m on Node wohnahxathu9-1
  I0901 11:26:33.842187 17 predicates.go:383] Creating a pod which consumes cpu=665m on Node wohnahxathu9-2
  I0901 11:26:33.870356 17 predicates.go:383] Creating a pod which consumes cpu=980m on Node wohnahxathu9-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/01/25 11:26:40.01
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866.186124fbe68daaec], Reason = [Scheduled], Message = [Successfully assigned sched-pred-398/filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866 to wohnahxathu9-3] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866.186124fc2a504715], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10.1"] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866.186124fcdacd60bf], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10.1" in 2.96s (2.96s including waiting). Image size: 742092 bytes.] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866.186124fce665f6da], Reason = [Created], Message = [Created container: filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866.186124fce848b547], Reason = [Started], Message = [Started container filler-pod-4c63b567-b5d1-43ea-9c10-baa5285f5866] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6284ed11-ce81-4722-a47f-663c246f5993.186124fbe04af272], Reason = [Scheduled], Message = [Successfully assigned sched-pred-398/filler-pod-6284ed11-ce81-4722-a47f-663c246f5993 to wohnahxathu9-1] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6284ed11-ce81-4722-a47f-663c246f5993.186124fc1eabe9a8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6284ed11-ce81-4722-a47f-663c246f5993.186124fc2d9d5373], Reason = [Created], Message = [Created container: filler-pod-6284ed11-ce81-4722-a47f-663c246f5993] @ 09/01/25 11:26:40.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6284ed11-ce81-4722-a47f-663c246f5993.186124fc300f2e65], Reason = [Started], Message = [Started container filler-pod-6284ed11-ce81-4722-a47f-663c246f5993] @ 09/01/25 11:26:40.023
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4.186124fbe5638d8f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-398/filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4 to wohnahxathu9-2] @ 09/01/25 11:26:40.023
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4.186124fc54e7763a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/01/25 11:26:40.023
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4.186124fc5c5d63d3], Reason = [Created], Message = [Created container: filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4] @ 09/01/25 11:26:40.023
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4.186124fc5e8367a3], Reason = [Started], Message = [Started container filler-pod-953b952a-d2b4-4f49-b322-7326aae4f7e4] @ 09/01/25 11:26:40.023
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186124fd505615da], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. no new claims to deallocate, preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/01/25 11:26:40.055
  STEP: removing the label node off the node wohnahxathu9-1 @ 09/01/25 11:26:41.059
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:26:41.104
  STEP: removing the label node off the node wohnahxathu9-2 @ 09/01/25 11:26:41.119
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:26:41.17
  STEP: removing the label node off the node wohnahxathu9-3 @ 09/01/25 11:26:41.226
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:26:41.266
  I0901 11:26:41.283551 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-398" for this suite. @ 09/01/25 11:26:41.295
• [7.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:918
  STEP: Creating a kubernetes client @ 09/01/25 11:26:41.312
  I0901 11:26:41.313111 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:26:41.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:26:41.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:26:41.363
  STEP: Creating service test in namespace statefulset-8246 @ 09/01/25 11:26:41.37
  I0901 11:26:41.383271      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-8246 @ 09/01/25 11:26:41.383
  I0901 11:26:41.413587 17 wait.go:44] Found 0 stateful pods, waiting for 1
  I0901 11:26:51.414962 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/01/25 11:26:51.451
  STEP: updating a scale subresource @ 09/01/25 11:26:51.461
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 11:26:51.48
  STEP: Patch a scale subresource @ 09/01/25 11:26:51.498
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 11:26:51.547
  I0901 11:26:51.558361 17 statefulset.go:136] Deleting all statefulset in ns statefulset-8246
  I0901 11:26:51.571645 17 rest.go:153] Scaling statefulset ss to 0
  I0901 11:27:01.610004 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:27:01.626536 17 rest.go:91] Deleting statefulset ss
  I0901 11:27:01.680645 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8246" for this suite. @ 09/01/25 11:27:01.696
• [20.402 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/01/25 11:27:01.715
  I0901 11:27:01.715450 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context @ 09/01/25 11:27:01.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:01.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:01.754
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 11:27:01.761
  STEP: Saw pod success @ 09/01/25 11:27:05.821
  I0901 11:27:05.838227 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod security-context-9512bf7b-36a8-484f-be95-3a4aa8e8f2ab container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:27:05.888
  I0901 11:27:05.925999 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4223" for this suite. @ 09/01/25 11:27:05.944
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/01/25 11:27:05.962
  I0901 11:27:05.962233 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:27:05.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:06.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:06.007
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:27:06.013
  STEP: Saw pod success @ 09/01/25 11:27:10.068
  I0901 11:27:10.079117 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-eb93b7f1-cb49-4508-9460-badd8f993ddf container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:27:10.144
  I0901 11:27:10.197232 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9537" for this suite. @ 09/01/25 11:27:10.215
• [4.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/01/25 11:27:10.241
  I0901 11:27:10.241199 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:27:10.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:10.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:10.282
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 11:27:10.288
  STEP: Saw pod success @ 09/01/25 11:27:14.339
  I0901 11:27:14.352267 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-f723df0f-62a5-4dbf-9b20-af935ac45249 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:27:14.376
  I0901 11:27:14.417596 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2150" for this suite. @ 09/01/25 11:27:14.43
• [4.209 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/01/25 11:27:14.455
  I0901 11:27:14.455711 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 11:27:14.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:14.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:14.498
  STEP: Create VolumeAttachment "va-e2e-zfgpb" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.528
  STEP: Get VolumeAttachment "va-e2e-zfgpb" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.543
  STEP: Patch VolumeAttachment "va-e2e-zfgpb" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.552
  STEP: List VolumeAttachments with "va-e2e-zfgpb=patched" label @ 09/01/25 11:27:14.57
  STEP: Delete VolumeAttachment "va-e2e-zfgpb" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.579
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zfgpb" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.594
  STEP: Create VolumeAttachment "va-e2e-jzgj4" on node "wohnahxathu9-3" @ 09/01/25 11:27:14.631
  STEP: Update the VolumeAttachment "va-e2e-jzgj4" on node "wohnahxathu9-3" with label "va-e2e=updated" @ 09/01/25 11:27:14.64
  STEP: Create VolumeAttachment "va-e2e-qft8g" on node "wohnahxathu9-1" @ 09/01/25 11:27:14.729
  STEP: Update the VolumeAttachment "va-e2e-qft8g" on node "wohnahxathu9-1" with label "va-e2e=updated" @ 09/01/25 11:27:14.744
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 11:27:14.769
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 11:27:14.806
  I0901 11:27:14.817997 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9338" for this suite. @ 09/01/25 11:27:14.835
• [0.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1074
  STEP: Creating a kubernetes client @ 09/01/25 11:27:14.853
  I0901 11:27:14.853143 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:27:14.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:27:14.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:27:14.886
  STEP: Creating resourceQuota "e2e-rq-status-jcf2s" @ 09/01/25 11:27:14.901
  I0901 11:27:14.923822 17 resource_quota.go:1110] Resource quota "e2e-rq-status-jcf2s" reports spec: hard cpu limit of 500m
  I0901 11:27:14.923983 17 resource_quota.go:1112] Resource quota "e2e-rq-status-jcf2s" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-jcf2s" /status @ 09/01/25 11:27:14.924
  STEP: Confirm /status for "e2e-rq-status-jcf2s" resourceQuota via watch @ 09/01/25 11:27:14.943
  I0901 11:27:14.946106 17 resource_quota.go:1139] observed resourceQuota "e2e-rq-status-jcf2s" in namespace "resourcequota-5015" with hard status: v1.ResourceList(nil)
  I0901 11:27:14.946377 17 resource_quota.go:1142] Found resourceQuota "e2e-rq-status-jcf2s" in namespace "resourcequota-5015" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 11:27:14.946448 17 resource_quota.go:1149] ResourceQuota "e2e-rq-status-jcf2s" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/01/25 11:27:14.953
  I0901 11:27:14.971357 17 resource_quota.go:1160] Resource quota "e2e-rq-status-jcf2s" reports spec: hard cpu limit of 1
  I0901 11:27:14.972730 17 resource_quota.go:1161] Resource quota "e2e-rq-status-jcf2s" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-jcf2s" /status @ 09/01/25 11:27:14.972
  STEP: Confirm /status for "e2e-rq-status-jcf2s" resourceQuota via watch @ 09/01/25 11:27:14.987
  I0901 11:27:14.990774 17 resource_quota.go:1183] observed resourceQuota "e2e-rq-status-jcf2s" in namespace "resourcequota-5015" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 11:27:14.991099 17 resource_quota.go:1186] Found resourceQuota "e2e-rq-status-jcf2s" in namespace "resourcequota-5015" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0901 11:27:14.991566 17 resource_quota.go:1193] ResourceQuota "e2e-rq-status-jcf2s" /status was patched
  STEP: Get "e2e-rq-status-jcf2s" /status @ 09/01/25 11:27:14.991
  I0901 11:27:15.002493 17 resource_quota.go:1204] Resourcequota "e2e-rq-status-jcf2s" reports status: hard cpu of 1
  I0901 11:27:15.002607 17 resource_quota.go:1206] Resourcequota "e2e-rq-status-jcf2s" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-jcf2s" /status before checking Spec is unchanged @ 09/01/25 11:27:15.012
  I0901 11:27:15.025351 17 resource_quota.go:1226] Resourcequota "e2e-rq-status-jcf2s" reports status: hard cpu of 2
  I0901 11:27:15.025459 17 resource_quota.go:1228] Resourcequota "e2e-rq-status-jcf2s" reports status: hard memory of 2Gi
  I0901 11:27:15.028190 17 resource_quota.go:1240] Found resourceQuota "e2e-rq-status-jcf2s" in namespace "resourcequota-5015" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0901 11:27:15.035161 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c0dea8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c0ded8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c0df08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:20.036391 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a661e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:25.039185 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a663a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a663f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:30.043977 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049060a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049060d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:35.041231 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049062a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:40.047977 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049064b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049064f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:45.045032 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a665a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a665e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:50.046447 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049066a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049066d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:27:55.051823 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:00.046553 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a668a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:05.046944 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049068b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:10.040438 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:15.050851 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:20.052476 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:25.044979 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906ba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906bd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004906c00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:30.051433 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66e88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:35.064531 17 resource_quota.go:1271] ResourceQuota "e2e-rq-status-jcf2s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jcf2s", GenerateName:"", Namespace:"resourcequota-5015", SelfLink:"", UID:"d646bc9d-b166-444d-aee7-d8b1f2e40a99", ResourceVersion:"11762", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jcf2s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67110), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 27, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a671a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0901 11:28:40.043866 17 resource_quota.go:1268] ResourceQuota "e2e-rq-status-jcf2s" Spec was unchanged and /status reset
  I0901 11:28:40.045253 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5015" for this suite. @ 09/01/25 11:28:40.063
• [85.253 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/01/25 11:28:40.107
  I0901 11:28:40.107381 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:28:40.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:40.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:40.155
  STEP: creating a Pod with a static label @ 09/01/25 11:28:40.172
  STEP: watching for Pod to be ready @ 09/01/25 11:28:40.197
  I0901 11:28:40.200760 17 pods.go:947] observed Pod pod-test in namespace pods-871 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0901 11:28:40.213128 17 pods.go:947] observed Pod pod-test in namespace pods-871 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  }]
  I0901 11:28:40.271150 17 pods.go:947] observed Pod pod-test in namespace pods-871 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  }]
  I0901 11:28:41.409527 17 pods.go:950] Found Pod pod-test in namespace pods-871 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:41 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  } {Ready 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:41 +0000 UTC  } {ContainersReady 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:41 +0000 UTC  } {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:28:40 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/01/25 11:28:41.419
  STEP: getting the Pod and ensuring that it's patched @ 09/01/25 11:28:41.461
  STEP: replacing the Pod's status Ready condition to False @ 09/01/25 11:28:41.471
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/01/25 11:28:41.52
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/01/25 11:28:41.521
  STEP: watching for the Pod to be deleted @ 09/01/25 11:28:41.573
  I0901 11:28:41.579664 17 pods.go:1060] observed event type MODIFIED
  I0901 11:28:42.450358 17 pods.go:1060] observed event type MODIFIED
  I0901 11:28:43.482006 17 pods.go:1060] observed event type MODIFIED
  I0901 11:28:43.679211 17 pods.go:1060] observed event type MODIFIED
  I0901 11:28:44.488134 17 pods.go:1060] observed event type MODIFIED
  I0901 11:28:44.511219 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-871" for this suite. @ 09/01/25 11:28:44.527
• [4.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/01/25 11:28:44.541
  I0901 11:28:44.541950 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename init-container @ 09/01/25 11:28:44.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:44.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:44.576
  STEP: creating the pod @ 09/01/25 11:28:44.583
  I0901 11:28:44.583183 17 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0901 11:28:48.091548 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6309" for this suite. @ 09/01/25 11:28:48.112
• [3.598 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/01/25 11:28:48.14
  I0901 11:28:48.141081 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:28:48.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:48.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:48.188
  STEP: Creating replication controller my-hostname-basic-b2f48b4c-bd0b-42f7-833d-3821e4f9c9ad @ 09/01/25 11:28:48.2
  I0901 11:28:48.235839 17 resource.go:64] Pod name my-hostname-basic-b2f48b4c-bd0b-42f7-833d-3821e4f9c9ad: Found 0 pods out of 1
  I0901 11:28:53.265703 17 resource.go:64] Pod name my-hostname-basic-b2f48b4c-bd0b-42f7-833d-3821e4f9c9ad: Found 1 pods out of 1
  I0901 11:28:53.265809 17 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-b2f48b4c-bd0b-42f7-833d-3821e4f9c9ad" are running
  I0901 11:28:53.281230 17 rc.go:525] Pod "my-hostname-basic-b2f48b4c-bd0b-42f7-833d-3821e4f9c9ad-j46sb" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:28:49 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:28:48 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:28:49 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:28:49 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 11:28:48 +0000 UTC Reason: Message:}])
  I0901 11:28:53.281390 17 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 11:28:53.281
  I0901 11:28:53.329946 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1135" for this suite. @ 09/01/25 11:28:53.339
• [5.216 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1659
  STEP: Creating a kubernetes client @ 09/01/25 11:28:53.357
  I0901 11:28:53.357763 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:28:53.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:53.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:53.392
  STEP: creating the pod @ 09/01/25 11:28:53.402
  I0901 11:28:53.403651 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 create -f -'
  I0901 11:28:53.997843 17 builder.go:156] stderr: ""
  I0901 11:28:53.997948 17 builder.go:157] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/01/25 11:28:56.059
  I0901 11:28:56.060795 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 label pods pause testing-label=testing-label-value'
  I0901 11:28:56.378820 17 builder.go:156] stderr: ""
  I0901 11:28:56.378901 17 builder.go:157] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/01/25 11:28:56.378
  I0901 11:28:56.379574 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 get pod pause -L testing-label'
  I0901 11:28:56.546521 17 builder.go:156] stderr: ""
  I0901 11:28:56.546631 17 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/01/25 11:28:56.546
  I0901 11:28:56.547249 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 label pods pause testing-label-'
  I0901 11:28:56.744988 17 builder.go:156] stderr: ""
  I0901 11:28:56.745127 17 builder.go:157] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/01/25 11:28:56.745
  I0901 11:28:56.745770 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 get pod pause -L testing-label'
  I0901 11:28:56.939005 17 builder.go:156] stderr: ""
  I0901 11:28:56.939112 17 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/01/25 11:28:56.939
  I0901 11:28:56.940047 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 delete --grace-period=0 --force -f -'
  I0901 11:28:57.146622 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:28:57.147374 17 builder.go:157] stdout: "pod \"pause\" force deleted from kubectl-4671 namespace\n"
  I0901 11:28:57.148328 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 get rc,svc -l name=pause --no-headers'
  I0901 11:28:57.411478 17 builder.go:156] stderr: "No resources found in kubectl-4671 namespace.\n"
  I0901 11:28:57.411663 17 builder.go:157] stdout: ""
  I0901 11:28:57.412398 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4671 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 11:28:57.647500 17 builder.go:156] stderr: ""
  I0901 11:28:57.647620 17 builder.go:157] stdout: ""
  I0901 11:28:57.647927 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4671" for this suite. @ 09/01/25 11:28:57.667
• [4.341 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/01/25 11:28:57.698
  I0901 11:28:57.698869 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename events @ 09/01/25 11:28:57.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:57.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:57.744
  STEP: creating a test event @ 09/01/25 11:28:57.753
  STEP: listing all events in all namespaces @ 09/01/25 11:28:57.766
  STEP: patching the test event @ 09/01/25 11:28:57.803
  STEP: fetching the test event @ 09/01/25 11:28:57.818
  STEP: updating the test event @ 09/01/25 11:28:57.825
  STEP: getting the test event @ 09/01/25 11:28:57.847
  STEP: deleting the test event @ 09/01/25 11:28:57.853
  STEP: listing all events in all namespaces @ 09/01/25 11:28:57.873
  I0901 11:28:57.902137 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-931" for this suite. @ 09/01/25 11:28:57.911
• [0.229 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/01/25 11:28:57.931
  I0901 11:28:57.931258 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:28:57.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:28:57.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:28:57.979
  STEP: Creating configMap configmap-2274/configmap-test-4af19a49-9e7e-422b-80ea-d5bee858a67d @ 09/01/25 11:28:57.986
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:28:57.999
  STEP: Saw pod success @ 09/01/25 11:29:02.057
  I0901 11:29:02.067886 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-configmaps-e921a7f9-50d3-426b-a415-9a0a3a222829 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:29:02.127
  I0901 11:29:02.178081 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2274" for this suite. @ 09/01/25 11:29:02.202
• [4.314 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/01/25 11:29:02.246
  I0901 11:29:02.246174 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:29:02.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:02.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:02.29
  I0901 11:29:06.349560 17 delete.go:78] Deleting pod "var-expansion-7e0ff3d4-cef7-4895-af5e-3c6d2212072d" in namespace "var-expansion-1331"
  I0901 11:29:06.371161 17 delete.go:86] Wait up to 5m0s for pod "var-expansion-7e0ff3d4-cef7-4895-af5e-3c6d2212072d" to be fully deleted
  I0901 11:29:08.411161 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1331" for this suite. @ 09/01/25 11:29:08.449
• [6.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1547
  STEP: Creating a kubernetes client @ 09/01/25 11:29:08.481
  I0901 11:29:08.481614 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:29:08.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:08.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:08.545
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-503 @ 09/01/25 11:29:08.557
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 11:29:08.608
  STEP: creating service externalsvc in namespace services-503 @ 09/01/25 11:29:08.613
  I0901 11:29:08.689216 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:29:10.722015 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 29, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 29, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 29, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 29, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-8664db8f97\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 09/01/25 11:29:12.759
  I0901 11:29:12.827372 17 resource.go:344] Creating new exec pod
  I0901 11:29:16.893887 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-503 exec execpodfnscl -- /bin/sh -x -c nslookup nodeport-service.services-503.svc.cluster.local'
  I0901 11:29:17.437189 17 builder.go:156] stderr: "+ nslookup nodeport-service.services-503.svc.cluster.local\n"
  I0901 11:29:17.437475 17 builder.go:157] stdout: ";; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\nServer:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-503.svc.cluster.local\tcanonical name = externalsvc.services-503.svc.cluster.local.\nName:\texternalsvc.services-503.svc.cluster.local\nAddress: 10.233.28.67\n;; Got recursion not available from 10.233.0.10\n\n"
  I0901 11:29:17.525520 17 service.go:1558] Cleaning up the NodePort to ExternalName test service
  I0901 11:29:17.607093 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-503" for this suite. @ 09/01/25 11:29:17.657
• [9.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1113
  STEP: Creating a kubernetes client @ 09/01/25 11:29:17.684
  I0901 11:29:17.684436 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:29:17.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:17.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:17.724
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:29:17.73
  I0901 11:29:17.731470 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-678 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 11:29:17.948144 17 builder.go:156] stderr: ""
  I0901 11:29:17.948233 17 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/01/25 11:29:17.948
  I0901 11:29:17.948767 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-678 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.37.0-1"}]}} --dry-run=server'
  I0901 11:29:18.178659 17 builder.go:156] stderr: ""
  I0901 11:29:18.178863 17 builder.go:157] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:29:18.178
  I0901 11:29:18.188450 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-678 delete pods e2e-test-httpd-pod'
  I0901 11:29:19.932873 17 builder.go:156] stderr: ""
  I0901 11:29:19.933159 17 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-678 namespace\n"
  I0901 11:29:19.933892 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-678" for this suite. @ 09/01/25 11:29:19.951
• [2.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/01/25 11:29:19.971
  I0901 11:29:19.971807 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 11:29:19.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:20.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:20.011
  I0901 11:29:22.104130 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5727" for this suite. @ 09/01/25 11:29:22.115
• [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/01/25 11:29:22.14
  I0901 11:29:22.140840 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:29:22.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:22.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:22.174
  I0901 11:29:22.182683 17 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0901 11:29:22.200360 17 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0901 11:29:22.224787 17 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0901 11:29:24.262556 17 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0901 11:29:24.274697 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 29, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 29, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 29, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 29, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-8574476ffd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:29:26.285819 17 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0901 11:29:26.317265 17 deployment.go:314] Updating deployment test-recreate-deployment
  I0901 11:29:26.317462 17 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0901 11:29:26.577073 17 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5761",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2e5a80d-2dd3-4911-9ba1-0d274fa069f5",
      ResourceVersion: (string) (len=5) "12466",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68d5bd4dd9\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:29:26.608832 17 deployment.go:40] New ReplicaSet "test-recreate-deployment-68d5bd4dd9" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5761",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ef0d4af-3982-4065-89f0-46ad9f57c378",
      ResourceVersion: (string) (len=5) "12463",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a2e5a80d-2dd3-4911-9ba1-0d274fa069f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 32 65 35 61 38  30 64 2d 32 64 64 33 2d  |\"a2e5a80d-2dd3-|
              00000120  34 39 31 31 2d 39 62 61  31 2d 30 64 32 37 34 66  |4911-9ba1-0d274f|
              00000130  61 30 36 39 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a069f5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:29:26.617058 17 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0901 11:29:26.618374 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-8574476ffd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5761",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d0347b9-9890-4595-bb01-bb11ed28858a",
      ResourceVersion: (string) (len=5) "12453",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a2e5a80d-2dd3-4911-9ba1-0d274fa069f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 32 65 35 61 38  30 64 2d 32 64 64 33 2d  |\"a2e5a80d-2dd3-|
              00000120  34 39 31 31 2d 39 62 61  31 2d 30 64 32 37 34 66  |4911-9ba1-0d274f|
              00000130  61 30 36 39 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a069f5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:29:26.635679 17 deployment.go:68] Pod "test-recreate-deployment-68d5bd4dd9-q5dmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68d5bd4dd9-q5dmk",
      GenerateName: (string) (len=36) "test-recreate-deployment-68d5bd4dd9-",
      Namespace: (string) (len=15) "deployment-5761",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90553722-c5eb-458d-b592-9481c7e0bc64",
      ResourceVersion: (string) (len=5) "12465",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
          UID: (types.UID) (len=36) "2ef0d4af-3982-4065-89f0-46ad9f57c378",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 65  66 30 64 34 61 66 2d 33  |d\":\"2ef0d4af-3|
              00000090  39 38 32 2d 34 30 36 35  2d 38 39 66 30 2d 34 36  |982-4065-89f0-46|
              000000a0  61 64 39 66 35 37 63 33  37 38 5c 22 7d 22 3a 7b  |ad9f57c378\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7kskw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7kskw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7kskw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:29:26.652646 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5761" for this suite. @ 09/01/25 11:29:26.664
• [4.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/01/25 11:29:26.693
  I0901 11:29:26.693468 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:29:26.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:26.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:26.733
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:29:26.739
  STEP: Saw pod success @ 09/01/25 11:29:30.808
  I0901 11:29:30.824602 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-23c39374-b6fa-4f64-a7d5-685935297927 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:29:30.849
  I0901 11:29:30.896579 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1791" for this suite. @ 09/01/25 11:29:30.913
• [4.243 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:432
  STEP: Creating a kubernetes client @ 09/01/25 11:29:30.938
  I0901 11:29:30.938491 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename proxy @ 09/01/25 11:29:30.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:30.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:30.988
  I0901 11:29:30.997706 17 proxy.go:439] Creating pod...
  I0901 11:29:35.067438 17 proxy.go:463] Creating service...
  I0901 11:29:35.100093 17 proxy.go:500] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=DELETE
  I0901 11:29:35.121361 17 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 11:29:35.121712 17 proxy.go:500] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=OPTIONS
  I0901 11:29:35.134268 17 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 11:29:35.134402 17 proxy.go:500] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=PATCH
  I0901 11:29:35.144943 17 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 11:29:35.145496 17 proxy.go:500] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=POST
  I0901 11:29:35.152319 17 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 11:29:35.152387 17 proxy.go:500] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=PUT
  I0901 11:29:35.159624 17 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 11:29:35.160085 17 proxy.go:511] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=DELETE
  I0901 11:29:35.170711 17 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 11:29:35.170969 17 proxy.go:511] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0901 11:29:35.180846 17 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 11:29:35.181370 17 proxy.go:511] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=PATCH
  I0901 11:29:35.191948 17 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 11:29:35.192439 17 proxy.go:511] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=POST
  I0901 11:29:35.205928 17 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 11:29:35.206486 17 proxy.go:511] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=PUT
  I0901 11:29:35.220386 17 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 11:29:35.220809 17 proxy.go:531] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=GET
  I0901 11:29:35.228479 17 proxy.go:539] http.Client request:GET StatusCode:301
  I0901 11:29:35.228695 17 proxy.go:531] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=GET
  I0901 11:29:35.239738 17 proxy.go:539] http.Client request:GET StatusCode:301
  I0901 11:29:35.239812 17 proxy.go:531] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/pods/agnhost/proxy?method=HEAD
  I0901 11:29:35.252957 17 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0901 11:29:35.253021 17 proxy.go:531] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-5355/services/e2e-proxy-test-service/proxy?method=HEAD
  I0901 11:29:35.265981 17 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0901 11:29:35.266468 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5355" for this suite. @ 09/01/25 11:29:35.275
• [4.350 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/01/25 11:29:35.289
  I0901 11:29:35.289843 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:29:35.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:35.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:35.325
  STEP: Creating configMap with name configmap-test-upd-39be210d-4094-4390-90bd-f367ac6c31ef @ 09/01/25 11:29:35.379
  STEP: Creating the pod @ 09/01/25 11:29:35.388
  STEP: Waiting for pod with text data @ 09/01/25 11:29:39.458
  STEP: Waiting for pod with binary data @ 09/01/25 11:29:39.479
  I0901 11:29:39.497321 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9579" for this suite. @ 09/01/25 11:29:39.51
• [4.241 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/01/25 11:29:39.532
  I0901 11:29:39.532446 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/01/25 11:29:39.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:39.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:39.565
  STEP: getting /apis @ 09/01/25 11:29:39.572
  STEP: getting /apis/storage.k8s.io @ 09/01/25 11:29:39.582
  STEP: getting /apis/storage.k8s.io/v1 @ 09/01/25 11:29:39.584
  STEP: creating @ 09/01/25 11:29:39.586
  STEP: watching @ 09/01/25 11:29:39.626
  I0901 11:29:39.626761 17 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/01/25 11:29:39.65
  STEP: listing in namespace @ 09/01/25 11:29:39.657
  STEP: listing across namespaces @ 09/01/25 11:29:39.664
  STEP: patching @ 09/01/25 11:29:39.67
  STEP: updating @ 09/01/25 11:29:39.688
  I0901 11:29:39.699079 17 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0901 11:29:39.699842 17 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/01/25 11:29:39.701
  STEP: deleting a collection @ 09/01/25 11:29:39.73
  I0901 11:29:39.764350 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8386" for this suite. @ 09/01/25 11:29:39.774
• [0.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1064
  STEP: Creating a kubernetes client @ 09/01/25 11:29:39.792
  I0901 11:29:39.792432 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:29:39.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:39.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:39.825
  STEP: Creating a job @ 09/01/25 11:29:39.867
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/01/25 11:29:39.88
  STEP: patching /status @ 09/01/25 11:29:43.917
  STEP: updating /status @ 09/01/25 11:29:43.934
  STEP: get /status @ 09/01/25 11:29:43.958
  I0901 11:29:43.966629 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4220" for this suite. @ 09/01/25 11:29:43.975
• [4.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/01/25 11:29:43.993
  I0901 11:29:43.993853 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:29:43.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:44.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:44.03
  STEP: create the deployment @ 09/01/25 11:29:44.036
  I0901 11:29:44.050764      17 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 11:29:44.051
  STEP: delete the deployment @ 09/01/25 11:29:44.56
  STEP: wait for all rs to be garbage collected @ 09/01/25 11:29:44.582
  STEP: expected 0 rs, got 1 rs @ 09/01/25 11:29:44.71
  STEP: expected 0 pods, got 2 pods @ 09/01/25 11:29:44.782
  STEP: Gathering metrics @ 09/01/25 11:29:45.149
  I0901 11:29:45.755482 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:29:45.756171 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-76" for this suite. @ 09/01/25 11:29:45.776
• [1.802 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/01/25 11:29:45.797
  I0901 11:29:45.797982 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context @ 09/01/25 11:29:45.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:45.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:45.828
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 11:29:45.833
  STEP: Saw pod success @ 09/01/25 11:29:49.996
  I0901 11:29:50.014604 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod security-context-d3768033-8e87-46eb-8101-0e3e606fd1d7 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:29:50.036
  I0901 11:29:50.104461 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3412" for this suite. @ 09/01/25 11:29:50.123
• [4.392 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:311
  STEP: Creating a kubernetes client @ 09/01/25 11:29:50.189
  I0901 11:29:50.189873 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:29:50.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:50.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:50.381
  STEP: Setting up server cert @ 09/01/25 11:29:50.558
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:29:52.39
  STEP: Deploying the webhook pod @ 09/01/25 11:29:52.405
  STEP: Wait for the deployment to be ready @ 09/01/25 11:29:52.431
  I0901 11:29:52.453915 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:29:54.489
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:29:54.526
  I0901 11:29:55.526851 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 11:29:55.538474 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-382-7983-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 11:29:56.073
  STEP: Creating a custom resource while v1 is storage version @ 09/01/25 11:29:56.117
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/01/25 11:29:58.394
  STEP: Patching the custom resource while v2 is storage version @ 09/01/25 11:29:58.438
  I0901 11:29:59.355038 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-382" for this suite. @ 09/01/25 11:29:59.37
  STEP: Destroying namespace "webhook-markers-7922" for this suite. @ 09/01/25 11:29:59.389
• [9.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:762
  STEP: Creating a kubernetes client @ 09/01/25 11:29:59.412
  I0901 11:29:59.412511 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:29:59.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:59.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:59.46
  STEP: Setting up server cert @ 09/01/25 11:29:59.505
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:30:01.258
  STEP: Deploying the webhook pod @ 09/01/25 11:30:01.269
  STEP: Wait for the deployment to be ready @ 09/01/25 11:30:01.308
  I0901 11:30:01.325771 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0901 11:30:03.376365 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:30:05.388
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:30:05.419
  I0901 11:30:06.420479 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 11:30:06.436
  STEP: verifying the mutating webhook match conditions @ 09/01/25 11:30:06.476
  STEP: updating the mutating webhook match conditions @ 09/01/25 11:30:06.495
  STEP: verifying the mutating webhook match conditions @ 09/01/25 11:30:06.531
  I0901 11:30:06.661730 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6655" for this suite. @ 09/01/25 11:30:06.676
  STEP: Destroying namespace "webhook-markers-8111" for this suite. @ 09/01/25 11:30:06.714
• [7.331 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/01/25 11:30:06.744
  I0901 11:30:06.744588 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:30:06.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:30:06.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:30:06.79
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 11:30:06.798
  STEP: Saw pod success @ 09/01/25 11:30:10.877
  I0901 11:30:10.883722 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-a5a5d324-847f-4746-aa67-76461acf48eb container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:30:10.908
  I0901 11:30:10.951071 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3022" for this suite. @ 09/01/25 11:30:10.96
• [4.233 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/01/25 11:30:10.978
  I0901 11:30:10.978176 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption @ 09/01/25 11:30:10.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:30:11.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:30:11.012
  STEP: creating the pdb @ 09/01/25 11:30:11.017
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:30:11.028
  STEP: updating the pdb @ 09/01/25 11:30:13.038
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:30:13.062
  STEP: patching the pdb @ 09/01/25 11:30:13.07
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:30:13.095
  STEP: Waiting for the pdb to be deleted @ 09/01/25 11:30:15.118
  I0901 11:30:15.123565 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2316" for this suite. @ 09/01/25 11:30:15.136
• [4.176 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:840
  STEP: Creating a kubernetes client @ 09/01/25 11:30:15.154
  I0901 11:30:15.154214 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:30:15.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:30:15.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:30:15.184
  STEP: Setting up server cert @ 09/01/25 11:30:15.229
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:30:15.577
  STEP: Deploying the webhook pod @ 09/01/25 11:30:15.591
  STEP: Wait for the deployment to be ready @ 09/01/25 11:30:15.615
  I0901 11:30:15.636552 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:30:17.662
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:30:17.684
  I0901 11:30:18.684340 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 11:30:18.694
  I0901 11:30:18.807467 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8827" for this suite. @ 09/01/25 11:30:18.82
  STEP: Destroying namespace "webhook-markers-6243" for this suite. @ 09/01/25 11:30:18.85
• [3.716 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:30:18.87
  I0901 11:30:18.870327 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename aggregator @ 09/01/25 11:30:18.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:30:18.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:30:18.909
  I0901 11:30:18.914951 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Registering the sample API server. @ 09/01/25 11:30:18.919
  I0901 11:30:20.371676 17 helpers.go:191] Found ClusterRoles; assuming RBAC is enabled.
  I0901 11:30:20.438042 17 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0901 11:30:22.543769 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:24.558846 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:26.559332 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:28.573869 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:30.557950 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:32.561697 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:34.554232 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:36.558137 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:38.558384 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:40.553542 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:42.562032 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:44.553414 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:46.563319 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:48.560574 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:30:50.745398 17 aggregator.go:756] Waited 160.639203ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/01/25 11:30:50.869
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/01/25 11:30:50.878
  STEP: List APIServices @ 09/01/25 11:30:50.899
  I0901 11:30:50.926540 17 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/01/25 11:30:50.926
  I0901 11:30:50.965596 17 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/01/25 11:30:50.965
  I0901 11:30:50.988202 17 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 50, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/01/25 11:30:50.988
  I0901 11:30:51.002697 17 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-01 11:30:50 +0000 UTC Passed all checks passed}
  I0901 11:30:51.002848 17 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 11:30:51.002891 17 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/01/25 11:30:51.003
  I0901 11:30:51.031228 17 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1665915258" @ 09/01/25 11:30:51.031
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/01/25 11:30:51.067
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/01/25 11:30:51.088
  STEP: Patch APIService Status @ 09/01/25 11:30:51.1
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/01/25 11:30:51.13
  I0901 11:30:51.143141 17 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-01 11:30:50 +0000 UTC Passed all checks passed}
  I0901 11:30:51.143255 17 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 11:30:51.143359 17 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0901 11:30:51.143392 17 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/01/25 11:30:51.143
  STEP: Confirm that the generated APIService has been deleted @ 09/01/25 11:30:51.168
  I0901 11:30:51.168477 17 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0901 11:30:51.179076 17 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0901 11:30:51.179171 17 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0901 11:30:51.597126 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7107" for this suite. @ 09/01/25 11:30:51.605
• [32.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:195
  STEP: Creating a kubernetes client @ 09/01/25 11:30:51.62
  I0901 11:30:51.620503 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:30:51.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:30:51.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:30:51.732
  STEP: Setting up server cert @ 09/01/25 11:30:51.789
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:30:52.749
  STEP: Deploying the webhook pod @ 09/01/25 11:30:52.807
  STEP: Wait for the deployment to be ready @ 09/01/25 11:30:52.854
  I0901 11:30:52.870603 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0901 11:30:54.901517 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 30, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 30, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:30:56.91
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:30:56.934
  I0901 11:30:57.936937 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 11:30:57.95
  I0901 11:30:58.001536 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create a pod that should be denied by the webhook @ 09/01/25 11:30:58.135
  STEP: create a pod that causes the webhook to hang @ 09/01/25 11:30:58.165
  STEP: create a configmap that should be denied by the webhook @ 09/01/25 11:31:08.187
  STEP: create a configmap that should be admitted by the webhook @ 09/01/25 11:31:08.27
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 11:31:08.323
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 11:31:08.353
  STEP: create a namespace that bypass the webhook @ 09/01/25 11:31:08.369
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/01/25 11:31:08.393
  I0901 11:31:08.553432 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3099" for this suite. @ 09/01/25 11:31:08.594
  STEP: Destroying namespace "webhook-markers-6876" for this suite. @ 09/01/25 11:31:08.63
  STEP: Destroying namespace "exempted-namespace-3625" for this suite. @ 09/01/25 11:31:08.651
• [17.048 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/01/25 11:31:08.668
  I0901 11:31:08.668182 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:31:08.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:31:08.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:31:08.746
  STEP: Creating a test headless service @ 09/01/25 11:31:08.753
  I0901 11:31:08.768327      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 89.11.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.11.89_udp@PTR;check="$$(dig +tcp +noall +answer +search 89.11.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.11.89_tcp@PTR;sleep 1; done
   @ 09/01/25 11:31:08.812
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5432.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5432.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 89.11.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.11.89_udp@PTR;check="$$(dig +tcp +noall +answer +search 89.11.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.11.89_tcp@PTR;sleep 1; done
   @ 09/01/25 11:31:08.812
  STEP: creating a pod to probe DNS @ 09/01/25 11:31:08.812
  STEP: submitting the pod to kubernetes @ 09/01/25 11:31:08.812
  STEP: retrieving the pod @ 09/01/25 11:31:12.886
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:31:12.894
  I0901 11:31:13.014402 17 dns_common.go:546] DNS probes using dns-5432/dns-test-08227717-b90d-4c77-8bc4-cc9304279c62 succeeded

  STEP: deleting the pod @ 09/01/25 11:31:13.014
  STEP: deleting the test service @ 09/01/25 11:31:13.042
  STEP: deleting the test headless service @ 09/01/25 11:31:13.092
  I0901 11:31:13.143176 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5432" for this suite. @ 09/01/25 11:31:13.154
• [4.509 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/01/25 11:31:13.177
  I0901 11:31:13.177541 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 11:31:13.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:31:13.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:31:13.268
  STEP: Creating a suspended cronjob @ 09/01/25 11:31:13.281
  STEP: Ensuring no jobs are scheduled @ 09/01/25 11:31:13.311
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/01/25 11:36:13.312
  STEP: Removing cronjob @ 09/01/25 11:36:13.322
  I0901 11:36:13.337857 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4699" for this suite. @ 09/01/25 11:36:13.349
• [300.189 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/01/25 11:36:13.368
  I0901 11:36:13.369054 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption @ 09/01/25 11:36:13.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:13.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:13.415
  STEP: Creating a kubernetes client @ 09/01/25 11:36:13.43
  I0901 11:36:13.431737 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption-2 @ 09/01/25 11:36:13.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:13.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:13.472
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:36:13.49
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:36:13.519
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:36:15.544
  STEP: listing a collection of PDBs across all namespaces @ 09/01/25 11:36:17.554
  STEP: listing a collection of PDBs in namespace disruption-8254 @ 09/01/25 11:36:17.563
  STEP: deleting a collection of PDBs @ 09/01/25 11:36:17.581
  STEP: Waiting for the PDB collection to be deleted @ 09/01/25 11:36:17.612
  I0901 11:36:17.620353 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6699" for this suite. @ 09/01/25 11:36:17.631
  I0901 11:36:17.646547 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8254" for this suite. @ 09/01/25 11:36:17.733
• [4.382 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/01/25 11:36:17.75
  I0901 11:36:17.750648 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:36:17.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:17.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:17.789
  STEP: creating the pod @ 09/01/25 11:36:17.795
  STEP: submitting the pod to kubernetes @ 09/01/25 11:36:17.795
  I0901 11:36:17.818508      17 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 09/01/25 11:36:19.845
  STEP: updating the pod @ 09/01/25 11:36:19.852
  I0901 11:36:20.382383 17 pod_client.go:186] Successfully updated pod "pod-update-activedeadlineseconds-11339ddf-5660-47a7-8078-4160717e9138"
  I0901 11:36:24.420682 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7501" for this suite. @ 09/01/25 11:36:24.432
• [6.698 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/01/25 11:36:24.451
  I0901 11:36:24.451396 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:36:24.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:24.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:24.491
  STEP: creating the pod with failed condition @ 09/01/25 11:36:24.498
  STEP: updating the pod @ 09/01/25 11:38:24.52
  I0901 11:38:25.058902 17 pod_client.go:186] Successfully updated pod "var-expansion-dd523687-f1b6-405f-82ad-9eb753c34a68"
  STEP: waiting for pod running @ 09/01/25 11:38:25.06
  STEP: deleting the pod gracefully @ 09/01/25 11:38:27.101
  I0901 11:38:27.101870 17 delete.go:78] Deleting pod "var-expansion-dd523687-f1b6-405f-82ad-9eb753c34a68" in namespace "var-expansion-4486"
  I0901 11:38:27.131475 17 delete.go:86] Wait up to 5m0s for pod "var-expansion-dd523687-f1b6-405f-82ad-9eb753c34a68" to be fully deleted
  I0901 11:38:59.362213 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4486" for this suite. @ 09/01/25 11:38:59.374
• [154.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2267
  STEP: Creating a kubernetes client @ 09/01/25 11:38:59.39
  I0901 11:38:59.390597 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:38:59.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:38:59.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:38:59.436
  STEP: creating service in namespace services-6830 @ 09/01/25 11:38:59.445
  STEP: creating service affinity-nodeport in namespace services-6830 @ 09/01/25 11:38:59.445
  I0901 11:38:59.532397 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:39:01.547052 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 38, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 38, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 38, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-65758f6cfc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:39:03.585196 17 resource.go:344] Creating new exec pod
  I0901 11:39:07.660671 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-6830 exec execpod-affinitycdnbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0901 11:39:08.047173 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.11.123) 80 port [tcp/http] succeeded!\n"
  I0901 11:39:08.047644 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:08.048210 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-6830 exec execpod-affinitycdnbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.123 80'
  I0901 11:39:08.317368 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.123 80\nConnection to 10.233.11.123 80 port [tcp/http] succeeded!\n"
  I0901 11:39:08.317518 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:08.318111 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-6830 exec execpod-affinitycdnbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.15 30094'
  I0901 11:39:08.569784 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.15 30094\nConnection to 192.168.121.15 30094 port [tcp/*] succeeded!\n"
  I0901 11:39:08.570473 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:08.570815 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-6830 exec execpod-affinitycdnbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.40 30094'
  I0901 11:39:08.859196 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.40 30094\nConnection to 192.168.121.40 30094 port [tcp/*] succeeded!\n"
  I0901 11:39:08.859463 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:08.860178 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-6830 exec execpod-affinitycdnbw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/ ; done'
  I0901 11:39:09.609584 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:30094/\n"
  I0901 11:39:09.610199 17 builder.go:157] stdout: "\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc\naffinity-nodeport-65758f6cfc-wfzdc"
  I0901 11:39:09.610760 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610798 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610827 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610857 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610895 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610915 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610934 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.610952 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611001 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611020 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611039 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611057 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611076 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611107 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611123 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.611139 17 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-wfzdc
  I0901 11:39:09.612729 17 service.go:4469] Cleaning up the exec pod
  I0901 11:39:09.818571 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6830" for this suite. @ 09/01/25 11:39:09.903
• [10.573 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 11:39:09.963
  I0901 11:39:09.964024 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:39:09.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:10.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:10.051
  STEP: Creating secret with name secret-test-7ba324fd-3a14-40a4-95e7-e252aa2d06c0 @ 09/01/25 11:39:10.057
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:39:10.073
  STEP: Saw pod success @ 09/01/25 11:39:14.19
  I0901 11:39:14.208663 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-351ae3e9-a741-4b79-a5db-0b1c421aa46c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:39:14.273
  I0901 11:39:14.305129 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2887" for this suite. @ 09/01/25 11:39:14.314
• [4.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/01/25 11:39:14.33
  I0901 11:39:14.331001 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:39:14.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:14.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:14.37
  STEP: Creating secret with name projected-secret-test-4e58545b-a50f-42f4-bfaf-6f26dd08cc51 @ 09/01/25 11:39:14.377
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:39:14.386
  STEP: Saw pod success @ 09/01/25 11:39:18.448
  I0901 11:39:18.463487 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-secrets-c8825fe6-5e5b-4c1c-96ab-4e40a329e67f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:39:18.496
  I0901 11:39:18.538099 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8844" for this suite. @ 09/01/25 11:39:18.546
• [4.229 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/01/25 11:39:18.56
  I0901 11:39:18.560812 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:39:18.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:18.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:18.596
  STEP: Create set of pods @ 09/01/25 11:39:18.602
  I0901 11:39:18.627652 17 pods.go:874] created test-pod-1
  I0901 11:39:18.647641 17 pods.go:874] created test-pod-2
  I0901 11:39:18.694778 17 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/01/25 11:39:18.694
  STEP: waiting for all pods to be deleted @ 09/01/25 11:39:20.801
  I0901 11:39:20.809672 17 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0901 11:39:21.811366 17 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0901 11:39:22.812038 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4126" for this suite. @ 09/01/25 11:39:22.821
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/01/25 11:39:22.837
  I0901 11:39:22.837145 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 11:39:22.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:22.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:22.868
  I0901 11:39:22.909625 17 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0901 11:39:27.928578 17 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:39:27.928
  STEP: Scaling up "test-rs" replicaset @ 09/01/25 11:39:27.928
  I0901 11:39:27.952367 17 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/01/25 11:39:27.952
  I0901 11:39:27.981531 17 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1613 with ReadyReplicas 1, AvailableReplicas 1
  I0901 11:39:28.061221 17 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1613 with ReadyReplicas 1, AvailableReplicas 1
  I0901 11:39:28.184453 17 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1613 with ReadyReplicas 1, AvailableReplicas 1
  I0901 11:39:28.220559 17 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1613 with ReadyReplicas 1, AvailableReplicas 1
  I0901 11:39:29.095523 17 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1613 with ReadyReplicas 2, AvailableReplicas 2
  I0901 11:39:30.552907 17 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-1613 with ReadyReplicas 3 found true
  I0901 11:39:30.553223 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1613" for this suite. @ 09/01/25 11:39:30.566
• [7.746 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:39:30.585
  I0901 11:39:30.585148 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename csinodes @ 09/01/25 11:39:30.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:30.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:30.625
  STEP: Creating initial csiNode "e2e-csinode-n8njw" @ 09/01/25 11:39:30.631
  STEP: Getting initial csiNode "e2e-csinode-n8njw" @ 09/01/25 11:39:30.644
  STEP: Patching initial csiNode: "e2e-csinode-n8njw" @ 09/01/25 11:39:30.651
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-n8njw=patched" @ 09/01/25 11:39:30.663
  STEP: Delete initial csiNode: "e2e-csinode-n8njw" @ 09/01/25 11:39:30.669
  STEP: Confirm deletion of csiNode "e2e-csinode-n8njw" @ 09/01/25 11:39:30.687
  STEP: Creating replacement csiNode "e2e-csinode-z9qnf" @ 09/01/25 11:39:30.697
  STEP: Getting replacement csiNode "e2e-csinode-z9qnf" @ 09/01/25 11:39:30.708
  STEP: Updating replacement csiNode "e2e-csinode-z9qnf" @ 09/01/25 11:39:30.718
  STEP: DeleteCollection of CSINodes with "e2e-csinode-z9qnf=updated" label @ 09/01/25 11:39:30.736
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-z9qnf=updated" @ 09/01/25 11:39:30.755
  I0901 11:39:30.764252 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4932" for this suite. @ 09/01/25 11:39:30.774
• [0.208 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/01/25 11:39:30.794
  I0901 11:39:30.794255 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename containers @ 09/01/25 11:39:30.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:30.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:30.831
  STEP: Creating a pod to test override all @ 09/01/25 11:39:30.838
  STEP: Saw pod success @ 09/01/25 11:39:34.886
  I0901 11:39:34.894037 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod client-containers-36cfa7ba-44da-4002-a7cd-5bff63b589d2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:39:34.908
  I0901 11:39:34.948834 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2348" for this suite. @ 09/01/25 11:39:34.961
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3741
  STEP: Creating a kubernetes client @ 09/01/25 11:39:34.979
  I0901 11:39:34.979047 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:39:34.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:35.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:35.022
  STEP: creating service multiprotocol-test in namespace services-477 @ 09/01/25 11:39:35.028
  STEP: creating pod pod1 in namespace services-477 @ 09/01/25 11:39:35.055
  STEP: Creating pod pod1 in namespace services-477 @ 09/01/25 11:39:35.055
  STEP: waiting for EndpointSlices for all ports @ 09/01/25 11:39:39.193
  I0901 11:39:39.194495 17 wait.go:139] Waiting for service services-477/multiprotocol-test to have endpoints for ports [{tcp-port TCP pod1 80} {udp-port UDP pod1 80}]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/01/25 11:39:39.206
  I0901 11:39:39.207249 17 resource.go:344] Creating new exec pod
  I0901 11:39:41.246130 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80'
  I0901 11:39:41.557050 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.59 80\nConnection to 10.233.44.59 80 port [tcp/http] succeeded!\n"
  I0901 11:39:41.557602 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:41.558121 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:43.889992 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:43.890592 17 builder.go:157] stdout: "pod1"
  STEP: updating the service to have only a TCP port @ 09/01/25 11:39:43.89
  STEP: Checking if the Service forwards traffic to TCP only @ 09/01/25 11:39:43.926
  I0901 11:39:43.927811 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80'
  I0901 11:39:44.262261 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.59 80\nConnection to 10.233.44.59 80 port [tcp/http] succeeded!\n"
  I0901 11:39:44.262437 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:39:44.262954 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:46.553245 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:46.553618 17 builder.go:157] stdout: ""
  I0901 11:39:46.554027 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:48.842849 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:48.842946 17 builder.go:157] stdout: ""
  I0901 11:39:48.843521 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:51.107600 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:51.107923 17 builder.go:157] stdout: ""
  STEP: updating the service to have only a UDP port @ 09/01/25 11:39:51.108
  STEP: Checking if the Service forwards traffic to UDP only @ 09/01/25 11:39:51.139
  I0901 11:39:51.139753 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:53.438827 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:53.438953 17 builder.go:157] stdout: ""
  I0901 11:39:53.439523 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.44.59 80'
  I0901 11:39:55.758187 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.44.59 80\n"
  I0901 11:39:55.758671 17 builder.go:157] stdout: "pod1"
  I0901 11:39:55.758997 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80'
  I0901 11:39:58.009616 17 builder.go:145] rc: 1
  I0901 11:39:58.010630 17 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.44.59 80
  nc: connect to 10.233.44.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 11:39:58.011381 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80'
  I0901 11:40:00.297722 17 builder.go:145] rc: 1
  I0901 11:40:00.298752 17 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.233.44.59 80
  echo hostName
  nc: connect to 10.233.44.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 11:40:00.299795 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80'
  I0901 11:40:02.609379 17 builder.go:145] rc: 1
  I0901 11:40:02.609518 17 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-477 exec execpods74cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.59 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.44.59 80
  nc: connect to 10.233.44.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 11:40:02.610543 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-477" for this suite. @ 09/01/25 11:40:02.623
• [27.662 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/01/25 11:40:02.641
  I0901 11:40:02.641129 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:40:02.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:02.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:02.685
  I0901 11:40:02.701820 17 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-7775"
  I0901 11:40:02.721728 17 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-7775"
  STEP: waiting for a new root ca configmap created @ 09/01/25 11:40:03.222
  I0901 11:40:03.230930 17 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-7775"
  I0901 11:40:03.240794 17 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-7775"
  STEP: waiting for the root ca configmap reconciled @ 09/01/25 11:40:03.741
  I0901 11:40:03.752789 17 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-7775"
  I0901 11:40:03.752991 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7775" for this suite. @ 09/01/25 11:40:03.762
• [1.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/01/25 11:40:03.777
  I0901 11:40:03.777533 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:40:03.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:03.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:03.813
  STEP: Creating secret with name secret-test-cebbe104-14a2-4c4f-87de-55739c564b95 @ 09/01/25 11:40:03.818
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:40:03.83
  STEP: Saw pod success @ 09/01/25 11:40:07.889
  I0901 11:40:07.900714 17 output.go:207] Trying to get logs from node wohnahxathu9-1 pod pod-secrets-e79f57ac-4bea-40af-9ab4-e7f6eb439e35 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:40:07.973
  I0901 11:40:08.055667 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8060" for this suite. @ 09/01/25 11:40:08.07
• [4.314 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/01/25 11:40:08.092
  I0901 11:40:08.092730 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:40:08.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:08.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:08.133
  STEP: Creating configMap with name projected-configmap-test-volume-map-0efaa739-a714-425a-b7c0-35848ae35c8a @ 09/01/25 11:40:08.144
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:40:08.167
  STEP: Saw pod success @ 09/01/25 11:40:12.326
  I0901 11:40:12.334181 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-configmaps-7c7966ff-7cfe-4d83-b3bf-acdda17dd5a5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:40:12.354
  I0901 11:40:12.405705 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5786" for this suite. @ 09/01/25 11:40:12.414
• [4.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:730
  STEP: Creating a kubernetes client @ 09/01/25 11:40:12.431
  I0901 11:40:12.431728 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:40:12.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:12.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:12.461
  I0901 11:40:12.473166 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3595" for this suite. @ 09/01/25 11:40:12.515
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 11:40:12.532
  I0901 11:40:12.532626 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:40:12.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:12.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:12.563
  STEP: Creating secret with name secret-test-map-04f7bbad-68f2-47fb-b7f8-b76a32573e66 @ 09/01/25 11:40:12.568
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:40:12.577
  STEP: Saw pod success @ 09/01/25 11:40:16.632
  I0901 11:40:16.642056 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-ea15153f-9b56-4c35-b879-cb85b522c221 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:40:16.662
  I0901 11:40:16.703130 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4110" for this suite. @ 09/01/25 11:40:16.711
• [4.193 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/01/25 11:40:16.725
  I0901 11:40:16.725553 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:40:16.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:16.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:16.758
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/01/25 11:40:16.763
  I0901 11:40:16.787506 17 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6900  df689f26-5f42-4688-81e2-5181cf8b13f7 15325 1 2025-09-01 11:40:16 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-01 11:40:16 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jm8gw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.56,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jm8gw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,RestartPolicyRules:[]ContainerRestartRule{},},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,HostnameOverride:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,ExtendedResourceClaimStatus:nil,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/01/25 11:40:18.835
  I0901 11:40:18.835432 17 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6900 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:40:18.835758 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:40:18.836391 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-6900/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/01/25 11:40:19.052
  I0901 11:40:19.052354 17 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6900 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:40:19.052402 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:40:19.052730 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-6900/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:40:19.217570 17 dns.go:450] Deleting pod test-dns-nameservers...
  I0901 11:40:19.247976 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6900" for this suite. @ 09/01/25 11:40:19.268
• [2.564 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should delete pod first [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:488
  STEP: Creating a kubernetes client @ 09/01/25 11:40:19.291
  I0901 11:40:19.291530 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespacedeletion @ 09/01/25 11:40:19.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:19.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:19.327
  STEP: Creating a test namespace @ 09/01/25 11:40:19.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:19.409
  STEP: Creating a pod with finalizer in the namespace @ 09/01/25 11:40:19.418
  STEP: Waiting for the pod to have running status @ 09/01/25 11:40:19.438
  STEP: Creating a configmap "test-configmap" in namespace "nsdeletetest-9548" @ 09/01/25 11:40:21.47
  STEP: Deleting the namespace @ 09/01/25 11:40:21.492
  STEP: wait until namespace controller had time to process @ 09/01/25 11:40:21.514
  I0901 11:40:21.521561 17 namespace.go:568] Namespace "nsdeletetest-9548" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0901 11:40:23.525014 17 namespace.go:568] Namespace "nsdeletetest-9548" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0901 11:40:25.521545 17 namespace.go:568] Namespace "nsdeletetest-9548" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  STEP: the pod should be deleted before processing deletion for other resources @ 09/01/25 11:40:27.528
  STEP: Removing finalizer from pod "test-pod" in namespace "nsdeletetest-9548" @ 09/01/25 11:40:27.548
  STEP: Waiting for the pod to not be present in the namespace @ 09/01/25 11:40:27.584
  STEP: Waiting for the namespace to be removed. @ 09/01/25 11:40:29.618
  I0901 11:40:32.626940 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespacedeletion-8520" for this suite. @ 09/01/25 11:40:32.636
  STEP: Destroying namespace "nsdeletetest-9548" for this suite. @ 09/01/25 11:40:32.649
  I0901 11:40:32.656401 17 framework.go:370] Namespace nsdeletetest-9548 was already deleted
• [13.367 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/01/25 11:40:32.663
  I0901 11:40:32.663528 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:40:32.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:32.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:32.691
  I0901 11:40:32.697867 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 11:40:35.173
  I0901 11:40:35.173882 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4672 --namespace=crd-publish-openapi-4672 create -f -'
  I0901 11:40:35.511561 17 builder.go:156] stderr: ""
  I0901 11:40:35.511677 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4672-8917-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:40:35.512041 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4672 --namespace=crd-publish-openapi-4672 delete e2e-test-crd-publish-openapi-4672-8917-crds test-cr'
  I0901 11:40:35.822797 17 builder.go:156] stderr: ""
  I0901 11:40:35.823181 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4672-8917-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-4672 namespace\n"
  I0901 11:40:35.823530 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4672 --namespace=crd-publish-openapi-4672 apply -f -'
  I0901 11:40:36.035648 17 builder.go:156] stderr: ""
  I0901 11:40:36.035769 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4672-8917-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:40:36.036476 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4672 --namespace=crd-publish-openapi-4672 delete e2e-test-crd-publish-openapi-4672-8917-crds test-cr'
  I0901 11:40:36.218020 17 builder.go:156] stderr: ""
  I0901 11:40:36.218133 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4672-8917-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-4672 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 11:40:36.218
  I0901 11:40:36.218805 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4672 explain e2e-test-crd-publish-openapi-4672-8917-crds'
  I0901 11:40:36.415141 17 builder.go:156] stderr: ""
  I0901 11:40:36.415332 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4672-8917-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0901 11:40:39.052021 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4672" for this suite. @ 09/01/25 11:40:39.076
• [6.431 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/01/25 11:40:39.095
  I0901 11:40:39.095324 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:40:39.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:39.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:39.131
  I0901 11:40:39.163862 17 resource.go:64] Pod name rollover-pod: Found 0 pods out of 1
  I0901 11:40:44.178084 17 resource.go:64] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:40:44.178
  I0901 11:40:44.178334 17 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0901 11:40:46.192565 17 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0901 11:40:46.233890 17 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0901 11:40:48.264926 17 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0901 11:40:48.317859 17 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0901 11:40:48.331115 17 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0901 11:40:48.349460 17 deployment.go:314] Updating deployment test-rollover-deployment
  I0901 11:40:48.349573 17 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0901 11:40:50.369369 17 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0901 11:40:50.393090 17 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0901 11:40:50.415946 17 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:40:50.416191 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:40:52.437016 17 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:40:52.437378 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:40:54.447032 17 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:40:54.447181 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:40:56.437675 17 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:40:56.437850 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:40:58.446867 17 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:40:58.448781 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 40, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 40, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:41:00.439827 17 deployment.go:95] 
  I0901 11:41:00.439947 17 deployment.go:993] Ensure that both old replica sets have no replicas
  I0901 11:41:00.467077 17 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-751",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8160b2f0-8e3e-4484-9dd0-46304d821858",
      ResourceVersion: (string) (len=5) "15598",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5b97b67475\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:41:00.478115 17 deployment.go:40] New ReplicaSet "test-rollover-deployment-5b97b67475" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-751",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fe2e018-ca7c-489f-b769-4c8e71e87d09",
      ResourceVersion: (string) (len=5) "15587",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8160b2f0-8e3e-4484-9dd0-46304d821858",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 36 30 62 32  66 30 2d 38 65 33 65 2d  |\"8160b2f0-8e3e-|
              00000120  34 34 38 34 2d 39 64 64  30 2d 34 36 33 30 34 64  |4484-9dd0-46304d|
              00000130  38 32 31 38 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |821858\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:41:00.479836 17 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0901 11:41:00.480234 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-751",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a702f1ea-8d2e-464c-a959-a174152b4fee",
      ResourceVersion: (string) (len=5) "15596",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8160b2f0-8e3e-4484-9dd0-46304d821858",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 31 36 30 62 32 66 30  2d 38 65 33 65 2d 34 34  |8160b2f0-8e3e-44|
              000000c0  38 34 2d 39 64 64 30 2d  34 36 33 30 34 64 38 32  |84-9dd0-46304d82|
              000000d0  31 38 35 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1858\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:41:00.482154 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-8fbb868dd",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-751",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5260afc2-4fe2-4f6b-b4c5-03589e980d12",
      ResourceVersion: (string) (len=5) "15547",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8160b2f0-8e3e-4484-9dd0-46304d821858",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 36 30 62 32  66 30 2d 38 65 33 65 2d  |\"8160b2f0-8e3e-|
              00000120  34 34 38 34 2d 39 64 64  30 2d 34 36 33 30 34 64  |4484-9dd0-46304d|
              00000130  38 32 31 38 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |821858\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:41:00.493418 17 deployment.go:68] Pod "test-rollover-deployment-5b97b67475-n7rqh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5b97b67475-n7rqh",
      GenerateName: (string) (len=36) "test-rollover-deployment-5b97b67475-",
      Namespace: (string) (len=14) "deployment-751",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bd48173-9897-4d98-802d-5af9045fe709",
      ResourceVersion: (string) (len=5) "15563",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
          UID: (types.UID) (len=36) "7fe2e018-ca7c-489f-b769-4c8e71e87d09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  65 32 65 30 31 38 2d 63  |d\":\"7fe2e018-c|
              00000090  61 37 63 2d 34 38 39 66  2d 62 37 36 39 2d 34 63  |a7c-489f-b769-4c|
              000000a0  38 65 37 31 65 38 37 64  30 39 5c 22 7d 22 3a 7b  |8e71e87d09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 35 31  5c 22 7d 22 3a 7b 22 2e  |33.66.51\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pztc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pztc7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892323648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=12) "10.233.66.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892323648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892323649,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:30ffacb713aad721881f1c11a768df228bfad3dc366d268e82b02fc43511dfa4",
          ContainerID: (string) (len=72) "cri-o://12d8a1093ce9a116385a3bdc9750e149770f58620ee11567f5cdf00683e92c55",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pztc7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:41:00.497513 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-751" for this suite. @ 09/01/25 11:41:00.506
• [21.438 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/01/25 11:41:00.534
  I0901 11:41:00.534615 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:41:00.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:41:00.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:41:00.563
  STEP: Creating pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600 @ 09/01/25 11:41:00.569
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:41:02.624
  I0901 11:41:02.638679 17 container_probe.go:1749] Initial restart count of pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce is 0
  I0901 11:41:02.649194 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:04.662758 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:06.676430 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:08.688438 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:10.698422 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:12.708788 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:14.717566 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:16.729065 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:18.737490 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:20.751361 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:22.764761 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:24.779821 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:26.796528 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:28.811620 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:30.824183 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:32.836358 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:34.846379 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:36.857956 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:38.868339 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:40.881640 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:42.895091 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:44.905790 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:46.918035 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:48.929613 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:50.944094 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:52.954433 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:54.966968 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:56.975610 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:41:58.986980 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:01.012441 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:03.027667 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:05.051732 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:07.063784 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:09.074484 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:11.090758 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:13.101667 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:15.114486 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:17.130646 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:19.143230 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:21.155614 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:23.170636 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:25.226410 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:27.235342 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:29.252978 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:31.277061 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:33.292378 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:35.306028 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:37.320934 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:39.339265 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:41.359483 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:43.377727 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:45.392101 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:47.412480 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:49.432474 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:51.445078 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:53.457514 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:55.481595 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:57.494146 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:42:59.510572 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:01.525783 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:03.539941 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:05.550498 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:07.565409 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:09.574067 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:11.584544 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:13.596044 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:15.611880 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:17.625607 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:19.639654 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:21.660824 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:23.681812 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:25.700722 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:27.712000 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:29.729200 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:31.742719 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:33.762782 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:35.785157 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:37.800571 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:39.815104 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:41.833668 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:43.852457 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:45.868792 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:47.884708 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:49.900448 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:51.923807 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:53.937462 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:55.955767 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:57.971523 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:43:59.987815 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:02.002827 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:04.019665 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:06.035912 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:08.046855 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:10.061792 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:12.073968 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:14.089579 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:16.101243 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:18.117066 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:20.128691 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:22.143940 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:24.157127 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:26.171717 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:28.186165 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:30.202203 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:32.216641 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:34.226450 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:36.244608 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:38.257041 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:40.276354 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:42.289225 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:44.297409 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:46.311011 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:48.346815 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:50.358595 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:52.370525 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:54.381717 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:56.393594 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:44:58.407474 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:45:00.424258 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  I0901 11:45:02.439256 17 container_probe.go:1759] Get pod test-webserver-4b86953c-9e75-499d-9b49-f4e90517e9ce in namespace container-probe-6600
  STEP: deleting the pod @ 09/01/25 11:45:04.441
  I0901 11:45:04.476327 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6600" for this suite. @ 09/01/25 11:45:04.496
• [243.979 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/01/25 11:45:04.514
  I0901 11:45:04.514164 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:45:04.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:04.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:04.57
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:45:04.58
  STEP: Saw pod success @ 09/01/25 11:45:08.642
  I0901 11:45:08.653553 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-3960e2dd-191e-4446-80ae-09a1a5cb34b9 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:45:08.699
  I0901 11:45:08.730791 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8966" for this suite. @ 09/01/25 11:45:08.741
• [4.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/01/25 11:45:08.76
  I0901 11:45:08.760484 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:45:08.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:08.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:08.797
  I0901 11:45:10.850965 17 delete.go:78] Deleting pod "var-expansion-bd10c646-e6a4-49e0-8bc9-7a450a455709" in namespace "var-expansion-8432"
  I0901 11:45:10.882591 17 delete.go:86] Wait up to 5m0s for pod "var-expansion-bd10c646-e6a4-49e0-8bc9-7a450a455709" to be fully deleted
  I0901 11:45:12.933948 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8432" for this suite. @ 09/01/25 11:45:12.949
• [4.209 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/01/25 11:45:12.97
  I0901 11:45:12.970517 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:45:12.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:13.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:13.028
  STEP: Creating configMap with name projected-configmap-test-volume-37542ee5-df41-4dc8-a167-871e1ce17298 @ 09/01/25 11:45:13.038
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:45:13.051
  STEP: Saw pod success @ 09/01/25 11:45:17.123
  I0901 11:45:17.137522 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-configmaps-13e7ce34-e63e-448a-be6a-ed0502579a49 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:45:17.163
  I0901 11:45:17.230973 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8620" for this suite. @ 09/01/25 11:45:17.244
• [4.289 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/01/25 11:45:17.259
  I0901 11:45:17.260058 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:45:17.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:17.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:17.297
  STEP: Creating configMap with name configmap-test-upd-b2e8415b-f51d-4759-8159-1884e55542e7 @ 09/01/25 11:45:17.344
  STEP: Creating the pod @ 09/01/25 11:45:17.36
  STEP: Updating configmap configmap-test-upd-b2e8415b-f51d-4759-8159-1884e55542e7 @ 09/01/25 11:45:19.462
  STEP: waiting to observe update in volume @ 09/01/25 11:45:19.476
  I0901 11:46:48.987247 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8456" for this suite. @ 09/01/25 11:46:49.007
• [91.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/01/25 11:46:49.035
  I0901 11:46:49.035729 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:46:49.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:49.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:49.088
  STEP: creating a ServiceAccount @ 09/01/25 11:46:49.098
  STEP: watching for the ServiceAccount to be added @ 09/01/25 11:46:49.138
  STEP: patching the ServiceAccount @ 09/01/25 11:46:49.149
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/01/25 11:46:49.169
  STEP: deleting the ServiceAccount @ 09/01/25 11:46:49.189
  I0901 11:46:49.238486 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8111" for this suite. @ 09/01/25 11:46:49.25
• [0.237 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/01/25 11:46:49.272
  I0901 11:46:49.272816 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:46:49.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:49.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:49.309
  STEP: creating a ConfigMap @ 09/01/25 11:46:49.317
  STEP: fetching the ConfigMap @ 09/01/25 11:46:49.327
  STEP: patching the ConfigMap @ 09/01/25 11:46:49.336
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/01/25 11:46:49.349
  STEP: deleting the ConfigMap by collection with a label selector @ 09/01/25 11:46:49.356
  STEP: listing all ConfigMaps in test namespace @ 09/01/25 11:46:49.379
  I0901 11:46:49.391778 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3411" for this suite. @ 09/01/25 11:46:49.406
• [0.167 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/01/25 11:46:49.44
  I0901 11:46:49.440761 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:46:49.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:49.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:49.502
  STEP: Given a ReplicationController is created @ 09/01/25 11:46:49.519
  STEP: When the matched label of one of its pods change @ 09/01/25 11:46:49.538
  I0901 11:46:49.567151 17 resource.go:64] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 11:46:50.651
  I0901 11:46:51.685009 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4215" for this suite. @ 09/01/25 11:46:51.704
• [2.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:740
  STEP: Creating a kubernetes client @ 09/01/25 11:46:51.728
  I0901 11:46:51.729173 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:46:51.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:46:51.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:46:51.788
  STEP: creating service endpoint-test2 in namespace services-1838 @ 09/01/25 11:46:51.798
  I0901 11:46:51.822959 17 wait.go:65] Waiting for amount of service services-1838/endpoint-test2 endpoints to be 0
  I0901 11:46:51.832520 17 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating first endpoint pod for service @ 09/01/25 11:46:52.839
  STEP: Creating pod pod1 in namespace services-1838 @ 09/01/25 11:46:52.839
  I0901 11:46:54.925500 17 wait.go:96] Waiting for service services-1838/endpoint-test2 to have endpoints pointing to [pod1]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/01/25 11:46:54.937
  I0901 11:46:54.937656 17 resource.go:344] Creating new exec pod
  I0901 11:46:57.006159 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 11:46:57.577605 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.49.118) 80 port [tcp/http] succeeded!\n"
  I0901 11:46:57.577735 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:46:57.578720 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.118 80'
  I0901 11:46:57.943979 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.118 80\nConnection to 10.233.49.118 80 port [tcp/http] succeeded!\n"
  I0901 11:46:57.944073 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: creating second endpoint pod for service @ 09/01/25 11:46:57.944
  STEP: Creating pod pod2 in namespace services-1838 @ 09/01/25 11:46:57.944
  I0901 11:46:59.987697 17 wait.go:96] Waiting for service services-1838/endpoint-test2 to have endpoints pointing to [pod1 pod2]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/01/25 11:47:00.001
  I0901 11:47:00.013653 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 11:47:00.443928 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.49.118) 80 port [tcp/http] succeeded!\n"
  I0901 11:47:00.444415 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:47:00.445453 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.118 80'
  I0901 11:47:00.793617 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.118 80\nConnection to 10.233.49.118 80 port [tcp/http] succeeded!\n"
  I0901 11:47:00.794199 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting first endpoint pod @ 09/01/25 11:47:00.794
  STEP: Deleting pod pod1 in namespace services-1838 @ 09/01/25 11:47:00.794
  I0901 11:47:00.858261 17 wait.go:96] Waiting for service services-1838/endpoint-test2 to have endpoints pointing to [pod2]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/01/25 11:47:00.944
  I0901 11:47:00.955340 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 11:47:01.328382 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.49.118) 80 port [tcp/http] succeeded!\n"
  I0901 11:47:01.328465 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:47:01.329370 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-1838 exec execpodz9hx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.118 80'
  I0901 11:47:01.692733 17 builder.go:156] stderr: "+ + nc -v -t -w 2 10.233.49.118 80\necho hostName\nConnection to 10.233.49.118 80 port [tcp/http] succeeded!\n"
  I0901 11:47:01.692881 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting second endpoint pod @ 09/01/25 11:47:01.693
  STEP: Deleting pod pod2 in namespace services-1838 @ 09/01/25 11:47:01.693
  I0901 11:47:01.727784 17 wait.go:65] Waiting for amount of service services-1838/endpoint-test2 endpoints to be 0
  I0901 11:47:01.738617 17 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  I0901 11:47:02.805773 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1838" for this suite. @ 09/01/25 11:47:02.823
• [11.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/01/25 11:47:02.851
  I0901 11:47:02.851745 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 11:47:02.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:02.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:02.898
  I0901 11:47:02.905850 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:47:06.181101 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7420" for this suite. @ 09/01/25 11:47:06.204
• [3.376 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:297
  STEP: Creating a kubernetes client @ 09/01/25 11:47:06.229
  I0901 11:47:06.230055 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:47:06.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:06.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:06.286
  STEP: Setting up server cert @ 09/01/25 11:47:06.333
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:47:07.388
  STEP: Deploying the webhook pod @ 09/01/25 11:47:07.407
  STEP: Wait for the deployment to be ready @ 09/01/25 11:47:07.45
  I0901 11:47:07.473576 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0901 11:47:09.521169 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 47, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 47, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 47, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 47, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:47:11.532
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:47:11.556
  I0901 11:47:12.557267 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/01/25 11:47:12.573
  I0901 11:47:12.652004 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/01/25 11:47:12.801
  I0901 11:47:12.801948 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:47:12.981512 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4626" for this suite. @ 09/01/25 11:47:12.995
  STEP: Destroying namespace "webhook-markers-9687" for this suite. @ 09/01/25 11:47:13.021
• [6.805 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/01/25 11:47:13.038
  I0901 11:47:13.038855 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:47:13.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:13.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:13.077
  STEP: Creating projection with secret that has name secret-emptykey-test-057ded1d-07ef-4505-86d4-cd568d6462b0 @ 09/01/25 11:47:13.088
  I0901 11:47:13.099750 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6211" for this suite. @ 09/01/25 11:47:13.111
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:47:13.143
  I0901 11:47:13.143262 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:47:13.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:13.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:13.191
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:47:13.203
  STEP: Saw pod success @ 09/01/25 11:47:17.269
  I0901 11:47:17.280270 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-b8e712af-c500-4a9e-b04c-118612f70e18 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:47:17.311
  I0901 11:47:17.350506 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2543" for this suite. @ 09/01/25 11:47:17.359
• [4.234 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:47:17.379
  I0901 11:47:17.380047 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:47:17.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:17.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:17.423
  I0901 11:47:17.447432      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:47:17.460939 17 endpointslice.go:1059] Endpoints addresses: [192.168.121.40 192.168.121.57] , ports: [6443]
  I0901 11:47:17.461040 17 endpointslice.go:1089] EndpointSlices addresses: [192.168.121.40 192.168.121.57] , ports: [6443]
  I0901 11:47:17.461348 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3136" for this suite. @ 09/01/25 11:47:17.474
• [0.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/01/25 11:47:17.509
  I0901 11:47:17.510579 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 11:47:17.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:17.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:17.599
  STEP: Setting up server cert @ 09/01/25 11:47:17.607
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 11:47:19.339
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 11:47:19.347
  STEP: Wait for the deployment to be ready @ 09/01/25 11:47:19.373
  I0901 11:47:19.385878 17 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  I0901 11:47:21.421607 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 47, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 47, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 47, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 47, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-788cb954bd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:47:23.433
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:47:23.459
  I0901 11:47:24.459985 17 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 11:47:24.482506 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Creating a v1 custom resource @ 09/01/25 11:47:27.353
  STEP: Create a v2 custom resource @ 09/01/25 11:47:27.394
  STEP: List CRs in v1 @ 09/01/25 11:47:27.415
  STEP: List CRs in v2 @ 09/01/25 11:47:27.673
  I0901 11:47:29.334673 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5461" for this suite. @ 09/01/25 11:47:29.343
• [11.848 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/01/25 11:47:29.361
  I0901 11:47:29.361454 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:47:29.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:29.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:29.427
  STEP: Creating configMap with name configmap-projected-all-test-volume-b7a75bb4-a8b7-4c58-a6cb-97031527b933 @ 09/01/25 11:47:29.433
  STEP: Creating secret with name secret-projected-all-test-volume-3e24989c-a053-4376-b394-222c95e75280 @ 09/01/25 11:47:29.443
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/01/25 11:47:29.453
  STEP: Saw pod success @ 09/01/25 11:47:33.524
  I0901 11:47:33.535345 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod projected-volume-9ed6a1cd-9777-4e6f-87b0-58d85665ae26 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:47:33.586
  I0901 11:47:33.651989 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3088" for this suite. @ 09/01/25 11:47:33.671
• [4.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/01/25 11:47:33.7
  I0901 11:47:33.700910 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename apf @ 09/01/25 11:47:33.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:33.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:33.751
  STEP: getting /apis @ 09/01/25 11:47:33.77
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 11:47:33.795
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 11:47:33.807
  STEP: creating @ 09/01/25 11:47:33.811
  STEP: getting @ 09/01/25 11:47:33.845
  STEP: listing @ 09/01/25 11:47:33.853
  STEP: watching @ 09/01/25 11:47:33.863
  I0901 11:47:33.863910 17 flowcontrol.go:620] starting watch
  STEP: patching @ 09/01/25 11:47:33.867
  STEP: updating @ 09/01/25 11:47:33.881
  I0901 11:47:33.904782 17 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 11:47:33.905
  STEP: patching /status @ 09/01/25 11:47:33.915
  STEP: updating /status @ 09/01/25 11:47:33.926
  STEP: deleting @ 09/01/25 11:47:33.952
  STEP: deleting a collection @ 09/01/25 11:47:33.991
  I0901 11:47:34.041098 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8838" for this suite. @ 09/01/25 11:47:34.055
• [0.372 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/01/25 11:47:34.077
  I0901 11:47:34.077115 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:47:34.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:34.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:34.117
  STEP: Updating Namespace "namespaces-8607" @ 09/01/25 11:47:34.124
  I0901 11:47:34.145853 17 namespace.go:389] Namespace "namespaces-8607" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"697499b5-95b0-4c8e-895f-fd360306875f", "kubernetes.io/metadata.name":"namespaces-8607", "namespaces-8607":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0901 11:47:34.146143 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8607" for this suite. @ 09/01/25 11:47:34.159
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/01/25 11:47:34.191
  I0901 11:47:34.191681 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 11:47:34.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:34.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:34.237
  STEP: getting /apis @ 09/01/25 11:47:34.248
  STEP: getting /apis/discovery.k8s.io @ 09/01/25 11:47:34.259
  STEP: getting /apis/discovery.k8s.iov1 @ 09/01/25 11:47:34.262
  STEP: creating @ 09/01/25 11:47:34.264
  STEP: getting @ 09/01/25 11:47:34.297
  STEP: listing @ 09/01/25 11:47:34.302
  STEP: watching @ 09/01/25 11:47:34.311
  I0901 11:47:34.311235 17 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/01/25 11:47:34.313
  STEP: cluster-wide watching @ 09/01/25 11:47:34.32
  I0901 11:47:34.320337 17 endpointslice.go:459] starting watch
  STEP: patching @ 09/01/25 11:47:34.322
  STEP: updating @ 09/01/25 11:47:34.334
  I0901 11:47:34.361055 17 endpointslice.go:482] waiting for watch events with expected annotations
  I0901 11:47:34.361203 17 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/01/25 11:47:34.361
  STEP: deleting a collection @ 09/01/25 11:47:34.395
  I0901 11:47:34.440607 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1214" for this suite. @ 09/01/25 11:47:34.455
• [0.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/01/25 11:47:34.495
  I0901 11:47:34.495886 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:47:34.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:34.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:34.557
  STEP: Setting up data @ 09/01/25 11:47:34.588
  STEP: Creating pod pod-subpath-test-projected-l7dh @ 09/01/25 11:47:34.612
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:47:34.614
  STEP: Saw pod success @ 09/01/25 11:47:58.823
  I0901 11:47:58.839623 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-subpath-test-projected-l7dh container test-container-subpath-projected-l7dh: <nil>
  STEP: delete the pod @ 09/01/25 11:47:58.872
  STEP: Deleting pod pod-subpath-test-projected-l7dh @ 09/01/25 11:47:58.932
  I0901 11:47:58.933149 17 delete.go:78] Deleting pod "pod-subpath-test-projected-l7dh" in namespace "subpath-3839"
  I0901 11:47:58.942764 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3839" for this suite. @ 09/01/25 11:47:58.957
• [24.481 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/01/25 11:47:58.981
  I0901 11:47:58.981401 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 11:47:58.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:59.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:59.037
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/01/25 11:47:59.046
  STEP: When a replicaset with a matching selector is created @ 09/01/25 11:48:01.111
  STEP: Then the orphan pod is adopted @ 09/01/25 11:48:01.133
  STEP: When the matched label of one of its pods change @ 09/01/25 11:48:02.154
  I0901 11:48:02.176890 17 resource.go:64] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 11:48:02.205
  I0901 11:48:03.228065 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-847" for this suite. @ 09/01/25 11:48:03.242
• [4.292 seconds]
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/01/25 11:48:03.272
  I0901 11:48:03.272444 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:48:03.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:03.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:03.309
  STEP: Saw pod success @ 09/01/25 11:48:09.478
  I0901 11:48:09.492204 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod client-envvars-01a8f915-b5c2-4a23-81cc-3050f0d61900 container env3cont: <nil>
  STEP: delete the pod @ 09/01/25 11:48:09.536
  I0901 11:48:09.582152 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4885" for this suite. @ 09/01/25 11:48:09.597
• [6.340 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/01/25 11:48:09.613
  I0901 11:48:09.613455 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:48:09.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:09.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:09.652
  STEP: creating a Namespace @ 09/01/25 11:48:09.66
  STEP: patching the Namespace @ 09/01/25 11:48:09.725
  STEP: get the Namespace and ensuring it has the label @ 09/01/25 11:48:09.743
  I0901 11:48:09.753215 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2353" for this suite. @ 09/01/25 11:48:09.768
  STEP: Destroying namespace "nspatchtest-af859880-c88a-4a73-b75d-0928147eebcb-4474" for this suite. @ 09/01/25 11:48:09.783
• [0.183 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/01/25 11:48:09.798
  I0901 11:48:09.798434 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:48:09.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:09.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:09.832
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 11:48:09.839
  STEP: Saw pod success @ 09/01/25 11:48:13.906
  I0901 11:48:13.922601 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-d4e69d52-bbc1-4977-b0a8-5c4b608e3576 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:48:13.981
  I0901 11:48:14.010267 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9025" for this suite. @ 09/01/25 11:48:14.023
• [4.242 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/01/25 11:48:14.043
  I0901 11:48:14.043500 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:48:14.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:14.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:14.082
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/01/25 11:48:14.151
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:48:14.165
  I0901 11:48:14.259393 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:48:14.260415 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 11:48:15.230494 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:48:15.230572 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 11:48:16.205934 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:48:16.206351 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 11:48:17.221158 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:48:17.221504 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/01/25 11:48:17.245
  I0901 11:48:17.315402 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:48:17.316028 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/01/25 11:48:17.317
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:48:18.348
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3443, will wait for the garbage collector to delete the pods @ 09/01/25 11:48:18.348
  I0901 11:48:18.474038 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 27.959128ms
  I0901 11:48:18.574735 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.712725ms
  I0901 11:48:20.582054 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:48:20.582124 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:48:20.593614 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17450"},"items":null}

  I0901 11:48:20.601664 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17451"},"items":null}

  I0901 11:48:20.637673 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3443" for this suite. @ 09/01/25 11:48:20.711
• [6.681 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/01/25 11:48:20.726
  I0901 11:48:20.726738 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:48:20.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:20.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:20.763
  STEP: Creating a test headless service @ 09/01/25 11:48:20.769
  I0901 11:48:20.781845      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7290.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-7290.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 11:48:20.782
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7290.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7290.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 11:48:20.783
  STEP: creating a pod to probe DNS @ 09/01/25 11:48:20.783
  STEP: submitting the pod to kubernetes @ 09/01/25 11:48:20.784
  STEP: retrieving the pod @ 09/01/25 11:48:24.839
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:48:24.854
  I0901 11:48:24.948342 17 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-7290/dns-test-80eabe02-e3b3-4693-87bd-b772c33e66fa: the server could not find the requested resource (get pods dns-test-80eabe02-e3b3-4693-87bd-b772c33e66fa)
  I0901 11:48:24.949383 17 dns_common.go:506] Lookups using dns-7290/dns-test-80eabe02-e3b3-4693-87bd-b772c33e66fa failed for: [jessie_hosts@dns-querier-2]

  I0901 11:48:24.977425 17 dns_common.go:514] Pod client logs for webserver: 
  I0901 11:48:25.004998 17 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 11:48:25.027874 17 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 11:48:29.919022 17 dns_common.go:546] DNS probes using dns-7290/dns-test-80eabe02-e3b3-4693-87bd-b772c33e66fa succeeded

  STEP: deleting the pod @ 09/01/25 11:48:29.92
  STEP: deleting the test headless service @ 09/01/25 11:48:29.952
  I0901 11:48:29.984662 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7290" for this suite. @ 09/01/25 11:48:29.995
• [9.285 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/01/25 11:48:30.012
  I0901 11:48:30.012324 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:48:30.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:30.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:30.067
  STEP: Creating a Serviceaccount "e2e-sa-msbb7" in namespace "svcaccounts-7236" @ 09/01/25 11:48:30.079
  STEP: Creating a ServiceaccountToken "e2e-sa-msbb7" in namespace "svcaccounts-7236" @ 09/01/25 11:48:30.088
  STEP: Creating a TokenReview for "e2e-sa-msbb7" in namespace "svcaccounts-7236" @ 09/01/25 11:48:30.101
  I0901 11:48:30.106405 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7236" for this suite. @ 09/01/25 11:48:30.119
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/01/25 11:48:30.134
  I0901 11:48:30.134243 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:48:30.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:30.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:30.166
  STEP: create the container @ 09/01/25 11:48:30.176
  I0901 11:48:30.196270      17 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 11:48:30.196
  STEP: get the container status @ 09/01/25 11:48:34.246
  STEP: the container should be terminated @ 09/01/25 11:48:34.281
  STEP: the termination message should be set @ 09/01/25 11:48:34.281
  I0901 11:48:34.281251 17 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/01/25 11:48:34.281
  I0901 11:48:34.321070 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6470" for this suite. @ 09/01/25 11:48:34.335
• [4.220 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/01/25 11:48:34.355
  I0901 11:48:34.355350 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:48:34.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:34.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:34.407
  STEP: Creating configMap with name configmap-test-volume-97e9b7ad-be27-4f92-bf00-a1bb58395f9a @ 09/01/25 11:48:34.418
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:48:34.431
  STEP: Saw pod success @ 09/01/25 11:48:38.501
  I0901 11:48:38.518877 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-607cd146-41d7-4ed4-b9a8-bffafc658110 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:48:38.544
  I0901 11:48:38.608511 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9531" for this suite. @ 09/01/25 11:48:38.624
• [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/01/25 11:48:38.655
  I0901 11:48:38.655568 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 11:48:38.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:38.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:38.702
  I0901 11:48:38.740906 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 11:49:38.754073 17 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 11:49:38.764
  STEP: Adding a custom resource @ 09/01/25 11:49:38.765
  I0901 11:49:38.815107 17 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0901 11:49:38.829016 17 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:49:38.829
  I0901 11:49:38.914800 17 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 11:49:38.951108 17 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:49:38.951
  I0901 11:49:38.986935 17 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 11:49:39.000475 17 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 11:49:39
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/01/25 11:49:41.064
  STEP: Removing a custom resource @ 09/01/25 11:49:45.326
  STEP: Removing a custom resource @ 09/01/25 11:49:45.352
  STEP: Removing a custom resource @ 09/01/25 11:49:45.378
  I0901 11:49:45.399087 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1875" for this suite. @ 09/01/25 11:49:45.41
• [66.771 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/01/25 11:49:45.428
  I0901 11:49:45.428664 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:49:45.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:45.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:45.461
  STEP: Creating a pod to test substitution in container's args @ 09/01/25 11:49:45.468
  STEP: Saw pod success @ 09/01/25 11:49:55.587
  I0901 11:49:55.597836 17 output.go:207] Trying to get logs from node wohnahxathu9-1 pod var-expansion-38fae662-7ca5-4fdb-9946-24b053351503 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:49:55.653
  I0901 11:49:55.707674 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2725" for this suite. @ 09/01/25 11:49:55.723
• [10.318 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/01/25 11:49:55.747
  I0901 11:49:55.747266 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:49:55.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:55.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:55.798
  STEP: creating a secret @ 09/01/25 11:49:55.811
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/01/25 11:49:55.827
  STEP: patching the secret @ 09/01/25 11:49:55.84
  STEP: deleting the secret using a LabelSelector @ 09/01/25 11:49:55.873
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/01/25 11:49:55.909
  I0901 11:49:55.927856 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1208" for this suite. @ 09/01/25 11:49:55.949
• [0.223 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/01/25 11:49:55.97
  I0901 11:49:55.970604 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:49:55.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:56.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:56.03
  I0901 11:49:56.134498 17 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"134e5b0e-4d21-4e86-b69f-2b636f5e43a3", Controller:(*bool)(0xc00329cd1e), BlockOwnerDeletion:(*bool)(0xc00329cd1f)}}
  I0901 11:49:56.150387 17 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"00635b3f-89d3-4a19-aa4f-7a1f592d5cdc", Controller:(*bool)(0xc00304ae86), BlockOwnerDeletion:(*bool)(0xc00304ae87)}}
  I0901 11:49:56.174513 17 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f0216d1d-74d6-4aca-bea1-64370dfd7ba4", Controller:(*bool)(0xc00329cee6), BlockOwnerDeletion:(*bool)(0xc00329cee7)}}
  I0901 11:50:01.231964 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-136" for this suite. @ 09/01/25 11:50:01.243
• [5.290 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/01/25 11:50:01.261
  I0901 11:50:01.261793 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:50:01.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:01.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:01.294
  I0901 11:50:01.332495 17 resource.go:64] Pod name cleanup-pod: Found 0 pods out of 1
  I0901 11:50:06.346655 17 resource.go:64] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:50:06.346
  I0901 11:50:06.346806 17 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/01/25 11:50:06.366
  I0901 11:50:06.406783 17 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bdde53b-e5bc-4f65-9b02-653744762afd",
      ResourceVersion: (string) (len=5) "18082",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324206,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:50:06.416307 17 deployment.go:40] New ReplicaSet "test-cleanup-deployment-7bc8b8949b" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb44c7a0-206a-498f-9e89-c80c59e7fca4",
      ResourceVersion: (string) (len=5) "18084",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324206,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "4bdde53b-e5bc-4f65-9b02-653744762afd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 62 64 64 65 35  33 62 2d 65 35 62 63 2d  |\"4bdde53b-e5bc-|
              00000120  34 66 36 35 2d 39 62 30  32 2d 36 35 33 37 34 34  |4f65-9b02-653744|
              00000130  37 36 32 61 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |762afd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:50:06.420530 17 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0901 11:50:06.420880 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31bc49d5-a3d6-4290-a53d-94c5134edbf7",
      ResourceVersion: (string) (len=5) "18083",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "4bdde53b-e5bc-4f65-9b02-653744762afd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 34 62 64 64 65 35 33  |"uid\":\"4bdde53|
              00000040  62 2d 65 35 62 63 2d 34  66 36 35 2d 39 62 30 32  |b-e5bc-4f65-9b02|
              00000050  2d 36 35 33 37 34 34 37  36 32 61 66 64 5c 22 7d  |-653744762afd\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:50:06.454014 17 deployment.go:68] Pod "test-cleanup-controller-g2hqb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-g2hqb",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3e69847-08cf-4e76-9417-74c75dd04091",
      ResourceVersion: (string) (len=5) "18072",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "31bc49d5-a3d6-4290-a53d-94c5134edbf7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 31 62 63 34 39 64 35  |uid\":\"31bc49d5|
              00000080  2d 61 33 64 36 2d 34 32  39 30 2d 61 35 33 64 2d  |-a3d6-4290-a53d-|
              00000090  39 34 63 35 31 33 34 65  64 62 66 37 5c 22 7d 22  |94c5134edbf7\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 35 2e 32 30  32 5c 22 7d 22 3a 7b 22  |33.65.202\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88tmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88tmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.40",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.40"
        }
      },
      PodIP: (string) (len=13) "10.233.65.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892324202,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6b2747a3d4272219f35682ee4156a397476f3689fba615f087f857f74a5f59b1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-88tmn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:50:06.472610 17 deployment.go:68] Pod "test-cleanup-deployment-7bc8b8949b-2bfpq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc8b8949b-2bfpq",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc8b8949b-",
      Namespace: (string) (len=15) "deployment-2295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e303eb7-2a75-4231-8372-65b562c1b07a",
      ResourceVersion: (string) (len=5) "18088",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324206,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
          UID: (types.UID) (len=36) "fb44c7a0-206a-498f-9e89-c80c59e7fca4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  34 34 63 37 61 30 2d 32  |d\":\"fb44c7a0-2|
              00000090  30 36 61 2d 34 39 38 66  2d 39 65 38 39 2d 63 38  |06a-498f-9e89-c8|
              000000a0  30 63 35 39 65 37 66 63  61 34 5c 22 7d 22 3a 7b  |0c59e7fca4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xfcgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xfcgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 11:50:06.482827 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2295" for this suite. @ 09/01/25 11:50:06.494
• [5.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/01/25 11:50:06.515
  I0901 11:50:06.515323 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 11:50:06.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:06.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:06.549
  I0901 11:50:06.590127 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 11:51:06.613974 17 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 11:51:06.631
  STEP: Adding a custom resource @ 09/01/25 11:51:06.631
  I0901 11:51:06.697807 17 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0901 11:51:06.721868 17 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:51:06.722
  I0901 11:51:06.806913 17 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 11:51:06.819247 17 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:51:06.819
  I0901 11:51:06.856925 17 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 11:51:06.875687 17 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 11:51:06.876
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/01/25 11:51:08.995
  STEP: Removing a custom resource @ 09/01/25 11:51:13.253
  STEP: Removing a custom resource @ 09/01/25 11:51:13.304
  STEP: Removing a custom resource @ 09/01/25 11:51:13.364
  I0901 11:51:13.430043 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2872" for this suite. @ 09/01/25 11:51:13.458
• [66.966 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/01/25 11:51:13.482
  I0901 11:51:13.482720 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 11:51:13.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:51:13.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:51:13.571
  STEP: Creating a ReplaceConcurrent cronjob @ 09/01/25 11:51:13.579
  STEP: Ensuring a job is scheduled @ 09/01/25 11:51:13.601
  STEP: Ensuring exactly one is scheduled @ 09/01/25 11:52:01.616
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 11:52:01.628
  STEP: Ensuring the job is replaced with a new one @ 09/01/25 11:52:01.647
  STEP: Removing cronjob @ 09/01/25 11:53:01.666
  I0901 11:53:01.693070 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3417" for this suite. @ 09/01/25 11:53:01.713
• [108.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable as environment variable names variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:249
  STEP: Creating a kubernetes client @ 09/01/25 11:53:01.755
  I0901 11:53:01.755471 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:53:01.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:01.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:01.81
  STEP: creating secret secrets-9314/secret-test-4741b198-e559-4b18-aa78-272ed72f02ed @ 09/01/25 11:53:01.82
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:53:01.829
  STEP: Saw pod success @ 09/01/25 11:53:05.893
  I0901 11:53:05.907785 17 output.go:207] Trying to get logs from node wohnahxathu9-1 pod pod-secret-95811c96-387a-4f76-a214-730c69debb69 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:53:05.948
  I0901 11:53:05.996172 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9314" for this suite. @ 09/01/25 11:53:06.007
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:917
  STEP: Creating a kubernetes client @ 09/01/25 11:53:06.028
  I0901 11:53:06.028225 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:53:06.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:06.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:06.083
  STEP: Creating a job @ 09/01/25 11:53:06.092
  STEP: Ensuring active pods == parallelism @ 09/01/25 11:53:06.107
  STEP: Orphaning one of the Job's Pods @ 09/01/25 11:53:08.133
  I0901 11:53:08.683102 17 pod_client.go:186] Successfully updated pod "adopt-release-4wh8j"
  STEP: Checking that the Job readopts the Pod @ 09/01/25 11:53:08.683
  STEP: Removing the labels from the Job's Pod @ 09/01/25 11:53:10.702
  I0901 11:53:11.240078 17 pod_client.go:186] Successfully updated pod "adopt-release-4wh8j"
  STEP: Checking that the Job releases the Pod @ 09/01/25 11:53:11.24
  I0901 11:53:13.269449 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6852" for this suite. @ 09/01/25 11:53:13.282
• [7.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/01/25 11:53:13.305
  I0901 11:53:13.305270 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:53:13.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:13.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:13.352
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/01/25 11:53:13.373
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/01/25 11:53:30.633
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/01/25 11:53:30.641
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/01/25 11:53:30.66
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/01/25 11:53:30.66
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/01/25 11:53:30.719
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/01/25 11:53:33.799
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/01/25 11:53:34.827
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/01/25 11:53:34.844
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/01/25 11:53:34.845
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/01/25 11:53:34.888
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/01/25 11:53:35.912
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/01/25 11:53:37.955
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/01/25 11:53:37.978
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/01/25 11:53:37.979
  I0901 11:53:38.066467 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8328" for this suite. @ 09/01/25 11:53:38.081
• [24.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/01/25 11:53:38.114
  I0901 11:53:38.114572 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:53:38.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:38.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:38.154
  STEP: Creating a pod to test substitution in container's command @ 09/01/25 11:53:38.163
  STEP: Saw pod success @ 09/01/25 11:53:42.224
  I0901 11:53:42.238017 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod var-expansion-aa580f3b-2a7f-42a3-8184-4c8d4717d96e container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:53:42.293
  I0901 11:53:42.331918 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2690" for this suite. @ 09/01/25 11:53:42.347
• [4.248 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/01/25 11:53:42.362
  I0901 11:53:42.362945 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:53:42.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:42.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:42.394
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/01/25 11:53:42.4
  STEP: Saw pod success @ 09/01/25 11:53:46.447
  I0901 11:53:46.458017 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-e89def6e-2d65-4208-b612-3860ea499b11 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:53:46.486
  I0901 11:53:46.543505 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5663" for this suite. @ 09/01/25 11:53:46.56
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2230
  STEP: Creating a kubernetes client @ 09/01/25 11:53:46.584
  I0901 11:53:46.584930 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:53:46.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:46.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:46.634
  STEP: creating service in namespace services-2252 @ 09/01/25 11:53:46.641
  STEP: creating service affinity-clusterip in namespace services-2252 @ 09/01/25 11:53:46.642
  I0901 11:53:46.694093 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:53:48.711682 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 53, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 53, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 53, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 53, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-5d4d4bb77f\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:53:50.746199 17 resource.go:344] Creating new exec pod
  I0901 11:53:52.811692 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2252 exec execpod-affinity5j5lq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0901 11:53:53.177534 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.61.207) 80 port [tcp/http] succeeded!\n"
  I0901 11:53:53.177669 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:53:53.178083 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2252 exec execpod-affinity5j5lq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.207 80'
  I0901 11:53:53.531924 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.207 80\nConnection to 10.233.61.207 80 port [tcp/http] succeeded!\n"
  I0901 11:53:53.532456 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:53:53.533850 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2252 exec execpod-affinity5j5lq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/ ; done'
  I0901 11:53:54.339197 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.61.207:80/\n"
  I0901 11:53:54.339833 17 builder.go:157] stdout: "\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl\naffinity-clusterip-5d4d4bb77f-2svdl"
  I0901 11:53:54.339907 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.339942 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.339973 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340020 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340048 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340075 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340100 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340126 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340418 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340543 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340658 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340761 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340801 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.340908 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.341012 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.341045 17 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-2svdl
  I0901 11:53:54.341369 17 service.go:4469] Cleaning up the exec pod
  I0901 11:53:54.438062 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2252" for this suite. @ 09/01/25 11:53:54.484
• [7.919 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/01/25 11:53:54.503
  I0901 11:53:54.503850 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:53:54.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:54.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:54.614
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 11:53:54.666
  STEP: Saw pod success @ 09/01/25 11:53:58.725
  I0901 11:53:58.733962 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-cb4fbf69-951c-4e41-9421-b5ba73bb8f6f container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:53:58.751
  I0901 11:53:58.788843 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7200" for this suite. @ 09/01/25 11:53:58.801
• [4.315 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/01/25 11:53:58.819
  I0901 11:53:58.819608 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 11:53:58.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:53:58.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:53:58.855
  STEP: creating a target pod @ 09/01/25 11:53:58.865
  STEP: adding an ephemeral container @ 09/01/25 11:54:00.939
  STEP: verifying the pod's generation is 2 @ 09/01/25 11:54:03.001
  STEP: checking pod container endpoints @ 09/01/25 11:54:03.011
  I0901 11:54:03.011769 17 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6717 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:54:03.011858 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:54:03.011971 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-6717/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 11:54:03.143597 17 exec_util.go:112] Exec stderr: ""
  I0901 11:54:03.163392 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6717" for this suite. @ 09/01/25 11:54:03.176
• [4.377 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/01/25 11:54:03.197
  I0901 11:54:03.197941 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:54:03.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:54:03.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:54:03.242
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:54:03.248
  I0901 11:54:03.249081 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5785 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0901 11:54:03.486363 17 builder.go:156] stderr: ""
  I0901 11:54:03.486567 17 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 11:54:03.486
  I0901 11:54:03.515462 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5785 delete pods e2e-test-httpd-pod'
  I0901 11:54:06.286233 17 builder.go:156] stderr: ""
  I0901 11:54:06.286372 17 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-5785 namespace\n"
  I0901 11:54:06.286780 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5785" for this suite. @ 09/01/25 11:54:06.3
• [3.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:767
  STEP: Creating a kubernetes client @ 09/01/25 11:54:06.319
  I0901 11:54:06.319942 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:54:06.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:54:06.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:54:06.364
  STEP: Creating service test in namespace statefulset-6998 @ 09/01/25 11:54:06.371
  I0901 11:54:06.382033      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating stateful set ss in namespace statefulset-6998 @ 09/01/25 11:54:06.382
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6998 @ 09/01/25 11:54:06.397
  I0901 11:54:06.407219 17 wait.go:44] Found 0 stateful pods, waiting for 1
  I0901 11:54:16.410863 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/01/25 11:54:16.411
  I0901 11:54:16.420230 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:54:16.728652 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:54:16.729399 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:54:16.729442 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:54:16.740321 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0901 11:54:26.747836 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:54:26.747982 17 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 11:54:26.824710 17 resource.go:151] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 11:54:26.824907 17 resource.go:158] ss-0  wohnahxathu9-3  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:08 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC  }]
  I0901 11:54:26.825005 17 resource.go:158] ss-1                  Pending         []
  I0901 11:54:26.825027 17 resource.go:161] 
  I0901 11:54:26.825065 17 statefulset.go:2410] StatefulSet ss has not reached scale 3, at 2
  I0901 11:54:27.874729 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.978434497s
  I0901 11:54:28.892739 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.928850757s
  I0901 11:54:29.909697 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.910650854s
  I0901 11:54:30.925096 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.89361111s
  I0901 11:54:31.947066 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.878330163s
  I0901 11:54:32.966502 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.855992928s
  I0901 11:54:33.986720 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.836453584s
  I0901 11:54:34.998536 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.816842029s
  I0901 11:54:36.020044 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 804.698803ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6998 @ 09/01/25 11:54:37.02
  I0901 11:54:37.034465 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:54:37.412682 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:54:37.413254 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:54:37.413357 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:54:37.413859 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:54:37.740078 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 11:54:37.740227 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:54:37.740367 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:54:37.740663 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:54:38.112492 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 11:54:38.112575 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:54:38.112633 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:54:38.129817 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0901 11:54:48.130136 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:54:48.130438 17 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:54:48.130482 17 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/01/25 11:54:48.13
  I0901 11:54:48.143982 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:54:48.476170 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:54:48.476327 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:54:48.476367 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:54:48.476762 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:54:48.771385 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:54:48.772474 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:54:48.772561 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:54:48.773054 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-6998 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:54:49.169883 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:54:49.169973 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:54:49.169998 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:54:49.170045 17 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 11:54:49.186654 17 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0901 11:54:59.220530 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:54:59.220669 17 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:54:59.220707 17 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:54:59.307798 17 resource.go:151] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 11:54:59.310558 17 resource.go:158] ss-0  wohnahxathu9-3  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:08 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC  }]
  I0901 11:54:59.310686 17 resource.go:158] ss-1  wohnahxathu9-1  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:28 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  }]
  I0901 11:54:59.312388 17 resource.go:158] ss-2  wohnahxathu9-2  Running  30s    [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:28 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  }]
  I0901 11:54:59.312459 17 resource.go:161] 
  I0901 11:54:59.312500 17 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  I0901 11:55:00.339306 17 resource.go:151] POD   NODE            PHASE      GRACE  CONDITIONS
  I0901 11:55:00.339631 17 resource.go:158] ss-0  wohnahxathu9-3  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:59 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:06 +0000 UTC  }]
  I0901 11:55:00.339917 17 resource.go:158] ss-1  wohnahxathu9-1  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:59 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  }]
  I0901 11:55:00.340000 17 resource.go:158] ss-2  wohnahxathu9-2  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:55:00 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:49 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:54:26 +0000 UTC  }]
  I0901 11:55:00.340037 17 resource.go:161] 
  I0901 11:55:00.340055 17 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  I0901 11:55:01.350564 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 7.917794067s
  I0901 11:55:02.369070 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 6.907342915s
  I0901 11:55:03.382639 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 5.88899139s
  I0901 11:55:04.399508 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 4.875406977s
  I0901 11:55:05.449972 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 3.858057971s
  I0901 11:55:06.466816 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 2.807318111s
  I0901 11:55:07.480164 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 1.790454675s
  I0901 11:55:08.547940 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 777.809404ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6998 @ 09/01/25 11:55:09.549
  I0901 11:55:09.562163 17 rest.go:153] Scaling statefulset ss to 0
  I0901 11:55:09.611408 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:55:09.623342 17 statefulset.go:136] Deleting all statefulset in ns statefulset-6998
  I0901 11:55:09.634274 17 rest.go:153] Scaling statefulset ss to 0
  I0901 11:55:09.651683 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 11:55:09.661350 17 rest.go:91] Deleting statefulset ss
  I0901 11:55:09.705539 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6998" for this suite. @ 09/01/25 11:55:09.724
• [63.423 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:810
  STEP: Creating a kubernetes client @ 09/01/25 11:55:09.743
  I0901 11:55:09.743753 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 11:55:09.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:09.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:09.789
  STEP: creating service multi-endpoint-test in namespace services-2305 @ 09/01/25 11:55:09.798
  I0901 11:55:09.820242 17 wait.go:65] Waiting for amount of service services-2305/multi-endpoint-test endpoints to be 0
  I0901 11:55:09.839482 17 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating pod1 serving port1 @ 09/01/25 11:55:10.836
  STEP: Creating pod pod1 in namespace services-2305 @ 09/01/25 11:55:10.836
  I0901 11:55:12.911693 17 wait.go:139] Waiting for service services-2305/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100}]
  STEP: creating pod2 serving port2 @ 09/01/25 11:55:12.924
  STEP: Creating pod pod2 in namespace services-2305 @ 09/01/25 11:55:12.925
  I0901 11:55:14.974517 17 wait.go:139] Waiting for service services-2305/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100} {portname2  pod2 101}]
  STEP: Checking if the Service forwards traffic to pods @ 09/01/25 11:55:14.986
  I0901 11:55:14.986672 17 resource.go:344] Creating new exec pod
  I0901 11:55:17.044074 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2305 exec execpodb262k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0901 11:55:17.445371 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.13.250) 80 port [tcp/http] succeeded!\n"
  I0901 11:55:17.445661 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:55:17.446902 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2305 exec execpodb262k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.250 80'
  I0901 11:55:17.800603 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.250 80\nConnection to 10.233.13.250 80 port [tcp/http] succeeded!\n"
  I0901 11:55:17.800844 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:55:17.803222 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2305 exec execpodb262k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0901 11:55:18.117901 17 builder.go:156] stderr: "+ + nc -v -t -w 2 multi-endpoint-test 81\necho hostName\nConnection to multi-endpoint-test (10.233.13.250) 81 port [tcp/*] succeeded!\n"
  I0901 11:55:18.118043 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:55:18.118710 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-2305 exec execpodb262k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.250 81'
  I0901 11:55:18.385448 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.250 81\nConnection to 10.233.13.250 81 port [tcp/*] succeeded!\n"
  I0901 11:55:18.385691 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting pod1 serving port1 @ 09/01/25 11:55:18.385
  STEP: Deleting pod pod1 in namespace services-2305 @ 09/01/25 11:55:18.385
  I0901 11:55:18.425997 17 wait.go:139] Waiting for service services-2305/multi-endpoint-test to have endpoints for ports [{portname2  pod2 101}]
  I0901 11:55:18.446367 17 wait.go:169] Unexpected port mappings on slices, missing: [], extra: [{portname1 TCP pod1 100}]
  STEP: deleting pod2 serving port2 @ 09/01/25 11:55:19.437
  STEP: Deleting pod pod2 in namespace services-2305 @ 09/01/25 11:55:19.437
  I0901 11:55:19.477893 17 wait.go:65] Waiting for amount of service services-2305/multi-endpoint-test endpoints to be 0
  I0901 11:55:19.554925 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2305" for this suite. @ 09/01/25 11:55:19.571
• [9.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/01/25 11:55:19.587
  I0901 11:55:19.587488 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:55:19.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:19.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:19.637
  STEP: Creating a pod to test env composition @ 09/01/25 11:55:19.645
  STEP: Saw pod success @ 09/01/25 11:55:23.699
  I0901 11:55:23.710766 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod var-expansion-881d9dfa-49ec-4bb0-957e-660be8c542fa container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:55:23.739
  I0901 11:55:23.779627 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8369" for this suite. @ 09/01/25 11:55:23.789
• [4.219 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/01/25 11:55:23.805
  I0901 11:55:23.805437 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:55:23.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:23.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:23.839
  STEP: Creating configMap with name configmap-test-volume-map-7b0fb7fc-12bd-4472-a3c7-f375631f87ec @ 09/01/25 11:55:23.846
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:55:23.855
  STEP: Saw pod success @ 09/01/25 11:55:27.933
  I0901 11:55:27.945121 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-ce720050-5030-42e7-8e47-bd7bd7c480da container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:55:27.968
  I0901 11:55:28.006047 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9653" for this suite. @ 09/01/25 11:55:28.018
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/01/25 11:55:28.044
  I0901 11:55:28.044696 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:55:28.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:28.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:28.087
  STEP: creating a new configmap @ 09/01/25 11:55:28.094
  STEP: modifying the configmap once @ 09/01/25 11:55:28.106
  STEP: modifying the configmap a second time @ 09/01/25 11:55:28.134
  STEP: deleting the configmap @ 09/01/25 11:55:28.156
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/01/25 11:55:28.174
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/01/25 11:55:28.18
  I0901 11:55:28.180927 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8845  5636e5d7-1fc2-4359-9903-c362e45c7413 19846 0 2025-09-01 11:55:28 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:55:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:55:28.181749 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8845  5636e5d7-1fc2-4359-9903-c362e45c7413 19847 0 2025-09-01 11:55:28 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:55:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:55:28.182787 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8845" for this suite. @ 09/01/25 11:55:28.198
• [0.171 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/01/25 11:55:28.218
  I0901 11:55:28.218230 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:55:28.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:28.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:28.36
  I0901 11:55:28.367222 17 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:55:28.390864 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 11:55:28.405752 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-1 before test
  I0901 11:55:28.426955 17 predicates.go:958] cilium-node-init-8rnck from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.427700 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:55:28.428497 17 predicates.go:958] cilium-pvcjx from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.429631 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:55:28.430129 17 predicates.go:958] coredns-66bc5c9577-pxnpq from kube-system started at 2025-09-01 10:48:12 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.431186 17 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 11:55:28.431270 17 predicates.go:958] kube-apiserver-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.431337 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:55:28.431367 17 predicates.go:958] kube-controller-manager-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.431430 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:55:28.431458 17 predicates.go:958] kube-proxy-2mpj6 from kube-system started at 2025-09-01 10:45:03 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.431480 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:55:28.431505 17 predicates.go:958] kube-scheduler-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.431528 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:55:28.431569 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:55:28.431596 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:55:28.431620 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:55:28.431663 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-2 before test
  I0901 11:55:28.452681 17 predicates.go:958] cilium-4ll4d from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.452766 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:55:28.452801 17 predicates.go:958] cilium-node-init-nz8p9 from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.452827 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 11:55:28.452856 17 predicates.go:958] kube-apiserver-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.452883 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:55:28.452908 17 predicates.go:958] kube-controller-manager-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.452931 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:55:28.452956 17 predicates.go:958] kube-proxy-mrff2 from kube-system started at 2025-09-01 10:46:06 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.452978 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 11:55:28.453002 17 predicates.go:958] kube-scheduler-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.453024 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:55:28.453067 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-n85nx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:55:28.453107 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:55:28.453128 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 11:55:28.453195 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-3 before test
  I0901 11:55:28.482388 17 predicates.go:958] cilium-lsnls from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.482533 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 11:55:28.482571 17 predicates.go:958] cilium-node-init-78w5b from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.482664 17 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 11:55:28.482694 17 predicates.go:958] cilium-operator-79974c855d-57ngp from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.482717 17 predicates.go:960] 	Container cilium-operator ready: true, restart count 4
  I0901 11:55:28.482743 17 predicates.go:958] coredns-66bc5c9577-9wl8q from kube-system started at 2025-09-01 11:02:55 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.482766 17 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0901 11:55:28.482904 17 predicates.go:958] kube-proxy-4srgk from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.482969 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 2
  I0901 11:55:28.482997 17 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:55:28.483020 17 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:55:28.483045 17 predicates.go:958] sonobuoy-e2e-job-a32e027bfe084d7f from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:55:28.483071 17 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 11:55:28.483094 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:55:28.483119 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-s5ckg from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:55:28.483172 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:55:28.483197 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/01/25 11:55:28.483
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1861268fc3b400a8], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. no new claims to deallocate, preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/01/25 11:55:28.571
  I0901 11:55:29.563585 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1877" for this suite. @ 09/01/25 11:55:29.576
• [1.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/01/25 11:55:29.597
  I0901 11:55:29.598411 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:55:29.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:29.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:29.644
  STEP: Setting up data @ 09/01/25 11:55:29.652
  STEP: Creating pod pod-subpath-test-secret-mz8t @ 09/01/25 11:55:29.671
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:55:29.671
  STEP: Saw pod success @ 09/01/25 11:55:53.877
  I0901 11:55:53.889819 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-subpath-test-secret-mz8t container test-container-subpath-secret-mz8t: <nil>
  STEP: delete the pod @ 09/01/25 11:55:53.926
  STEP: Deleting pod pod-subpath-test-secret-mz8t @ 09/01/25 11:55:53.971
  I0901 11:55:53.971332 17 delete.go:78] Deleting pod "pod-subpath-test-secret-mz8t" in namespace "subpath-6136"
  I0901 11:55:53.980611 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6136" for this suite. @ 09/01/25 11:55:53.994
• [24.413 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1893
  STEP: Creating a kubernetes client @ 09/01/25 11:55:54.014
  I0901 11:55:54.014691 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:55:54.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:54.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:54.072
  STEP: Starting the proxy @ 09/01/25 11:55:54.083
  I0901 11:55:54.088600 17 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-4098 proxy --unix-socket=/tmp/kubectl-proxy-unix2818327110/test'
  STEP: retrieving proxy /api/ output @ 09/01/25 11:55:54.203
  I0901 11:55:54.206207 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4098" for this suite. @ 09/01/25 11:55:54.218
• [0.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:639
  STEP: Creating a kubernetes client @ 09/01/25 11:55:54.241
  I0901 11:55:54.241555 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:55:54.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:54.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:54.282
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/01/25 11:55:54.292
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/01/25 11:55:54.305
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/01/25 11:55:58.363
  I0901 11:55:58.374358 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1323" for this suite. @ 09/01/25 11:55:58.39
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/01/25 11:55:58.41
  I0901 11:55:58.410422 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename prestop @ 09/01/25 11:55:58.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:55:58.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:55:58.451
  STEP: Creating server pod server in namespace prestop-3187 @ 09/01/25 11:55:58.458
  STEP: Waiting for pods to come up. @ 09/01/25 11:55:58.478
  STEP: Creating tester pod tester in namespace prestop-3187 @ 09/01/25 11:56:02.521
  STEP: Deleting pre-stop pod @ 09/01/25 11:56:04.567
  I0901 11:56:09.619658 17 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/01/25 11:56:09.62
  I0901 11:56:09.656566 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3187" for this suite. @ 09/01/25 11:56:09.673
• [11.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 09/01/25 11:56:09.696
  I0901 11:56:09.696541 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:56:09.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:09.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:09.745
  STEP: starting the proxy server @ 09/01/25 11:56:09.754
  I0901 11:56:09.755968 17 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-9685 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/01/25 11:56:09.87
  I0901 11:56:09.902128 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0901 11:56:09.905596 17 kubectl.go:2259] kubectl proxy stdout: Starting to serve on 127.0.0.1:46737

  I0901 11:56:09.905795 17 kubectl.go:2264] kubectl proxy stderr: W0901 11:56:09.869603     631 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-9685" for this suite. @ 09/01/25 11:56:09.919
• [0.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/01/25 11:56:09.938
  I0901 11:56:09.938755 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:56:09.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:09.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:09.981
  I0901 11:56:10.071245 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7364" for this suite. @ 09/01/25 11:56:10.078
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/01/25 11:56:10.093
  I0901 11:56:10.093988 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename containers @ 09/01/25 11:56:10.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:10.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:10.124
  STEP: Creating a pod to test override arguments @ 09/01/25 11:56:10.129
  STEP: Saw pod success @ 09/01/25 11:56:14.191
  I0901 11:56:14.206769 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod client-containers-32f2c1ce-5a38-4140-84d6-30a606a682d3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:56:14.229
  I0901 11:56:14.275831 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4784" for this suite. @ 09/01/25 11:56:14.298
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:56:14.323
  I0901 11:56:14.323475 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 11:56:14.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:14.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:14.37
  STEP: Performing setup for networking test in namespace pod-network-test-583 @ 09/01/25 11:56:14.375
  STEP: creating a selector @ 09/01/25 11:56:14.376
  STEP: Creating the service pods in kubernetes @ 09/01/25 11:56:14.376
  I0901 11:56:14.377170 17 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 11:56:28.678
  I0901 11:56:30.768034 17 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 11:56:30.768203 17 utils.go:496] Going to poll 10.233.64.158 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:56:30.778974 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.158 8081 | grep -v '^\s*$'] Namespace:pod-network-test-583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:30.779056 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:30.779202 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.158+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:56:31.903642 17 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 11:56:31.903883 17 utils.go:496] Going to poll 10.233.65.58 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:56:31.940045 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.58 8081 | grep -v '^\s*$'] Namespace:pod-network-test-583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:31.940183 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:31.940429 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.58+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:56:33.079233 17 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 11:56:33.080119 17 utils.go:496] Going to poll 10.233.66.219 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 11:56:33.095021 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.219 8081 | grep -v '^\s*$'] Namespace:pod-network-test-583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:56:33.095131 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 11:56:33.095355 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.219+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 11:56:34.237881 17 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 11:56:34.238835 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-583" for this suite. @ 09/01/25 11:56:34.256
• [19.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/01/25 11:56:34.284
  I0901 11:56:34.284275 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:56:34.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:34.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:34.368
  I0901 11:56:34.375032 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/01/25 11:56:36.921
  I0901 11:56:36.922584 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 create -f -'
  I0901 11:56:37.216079 17 builder.go:156] stderr: ""
  I0901 11:56:37.216181 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5538-4318-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 11:56:37.216773 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 delete e2e-test-crd-publish-openapi-5538-4318-crds test-foo'
  I0901 11:56:37.566492 17 builder.go:156] stderr: ""
  I0901 11:56:37.566600 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5538-4318-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-5538 namespace\n"
  I0901 11:56:37.567075 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 apply -f -'
  I0901 11:56:37.778115 17 builder.go:156] stderr: ""
  I0901 11:56:37.778241 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5538-4318-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 11:56:37.778905 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 delete e2e-test-crd-publish-openapi-5538-4318-crds test-foo'
  I0901 11:56:37.973453 17 builder.go:156] stderr: ""
  I0901 11:56:37.973600 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5538-4318-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-5538 namespace\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/01/25 11:56:37.973
  I0901 11:56:37.974264 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 create -f -'
  I0901 11:56:38.162462 17 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/01/25 11:56:38.162
  I0901 11:56:38.162890 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 create -f -'
  I0901 11:56:38.327885 17 builder.go:145] rc: 1
  I0901 11:56:38.329094 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 apply -f -'
  I0901 11:56:38.523711 17 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/01/25 11:56:38.524
  I0901 11:56:38.524447 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 create -f -'
  I0901 11:56:38.701913 17 builder.go:145] rc: 1
  I0901 11:56:38.702641 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 --namespace=crd-publish-openapi-5538 apply -f -'
  I0901 11:56:38.887044 17 builder.go:145] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/01/25 11:56:38.887
  I0901 11:56:38.887805 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 explain e2e-test-crd-publish-openapi-5538-4318-crds'
  I0901 11:56:39.057411 17 builder.go:156] stderr: ""
  I0901 11:56:39.057714 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5538-4318-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/01/25 11:56:39.058
  I0901 11:56:39.059030 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 explain e2e-test-crd-publish-openapi-5538-4318-crds.metadata'
  I0901 11:56:39.217359 17 builder.go:156] stderr: ""
  I0901 11:56:39.217682 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5538-4318-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0901 11:56:39.218332 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 explain e2e-test-crd-publish-openapi-5538-4318-crds.spec'
  I0901 11:56:39.407479 17 builder.go:156] stderr: ""
  I0901 11:56:39.407966 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5538-4318-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0901 11:56:39.408926 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 explain e2e-test-crd-publish-openapi-5538-4318-crds.spec.bars'
  I0901 11:56:39.647531 17 builder.go:156] stderr: ""
  I0901 11:56:39.647647 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5538-4318-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/01/25 11:56:39.648
  I0901 11:56:39.648667 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-5538 explain e2e-test-crd-publish-openapi-5538-4318-crds.spec.bars2'
  I0901 11:56:39.898647 17 builder.go:145] rc: 1
  I0901 11:56:42.483401 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5538" for this suite. @ 09/01/25 11:56:42.514
• [8.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:100
  STEP: Creating a kubernetes client @ 09/01/25 11:56:42.539
  I0901 11:56:42.539453 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename proxy @ 09/01/25 11:56:42.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:42.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:42.591
  STEP: starting an echo server on multiple ports @ 09/01/25 11:56:42.628
  I0901 11:56:42.659224 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 11:56:44.678195 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 56, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 56, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 56, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 56, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-b2zb5-554fcbd47b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 11:56:46.707464 17 wait.go:65] Waiting for amount of service proxy-2848/proxy-service-b2zb5 endpoints to be 1
  I0901 11:56:46.736867 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 20.141348ms)
  I0901 11:56:46.737039 17 proxy.go:282] setup took 4.136359882s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/01/25 11:56:46.737
  I0901 11:56:46.780563 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 42.829483ms)
  I0901 11:56:46.788827 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 50.792043ms)
  I0901 11:56:46.801825 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 63.421263ms)
  I0901 11:56:46.813232 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 75.164974ms)
  I0901 11:56:46.813431 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 74.644214ms)
  I0901 11:56:46.814886 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 76.034218ms)
  I0901 11:56:46.815372 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 76.877297ms)
  I0901 11:56:46.817039 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 78.491201ms)
  I0901 11:56:46.817610 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 79.339403ms)
  I0901 11:56:46.818618 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 79.65681ms)
  I0901 11:56:46.821405 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 82.700053ms)
  I0901 11:56:46.828715 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 90.597725ms)
  I0901 11:56:46.831524 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 92.895996ms)
  I0901 11:56:46.831640 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 92.610211ms)
  I0901 11:56:46.831764 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 92.554964ms)
  I0901 11:56:46.835113 17 proxy.go:610] (0) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 97.287967ms)
  I0901 11:56:46.870184 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 34.62808ms)
  I0901 11:56:46.870870 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 34.842357ms)
  I0901 11:56:46.870989 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 34.553137ms)
  I0901 11:56:46.872371 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 36.490446ms)
  I0901 11:56:46.872390 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 35.910477ms)
  I0901 11:56:46.872624 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.345706ms)
  I0901 11:56:46.872633 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 36.198383ms)
  I0901 11:56:46.873414 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 37.633672ms)
  I0901 11:56:46.874444 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 38.189965ms)
  I0901 11:56:46.875033 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 38.69493ms)
  I0901 11:56:46.875089 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 38.905545ms)
  I0901 11:56:46.875716 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 39.615909ms)
  I0901 11:56:46.876691 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 41.412448ms)
  I0901 11:56:46.876677 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 40.304265ms)
  I0901 11:56:46.876766 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 40.816923ms)
  I0901 11:56:46.877836 17 proxy.go:610] (1) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 41.415157ms)
  I0901 11:56:46.893346 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 15.307715ms)
  I0901 11:56:46.902348 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 23.918743ms)
  I0901 11:56:46.902423 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 23.742115ms)
  I0901 11:56:46.902493 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 24.129181ms)
  I0901 11:56:46.906325 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 27.740921ms)
  I0901 11:56:46.912102 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 33.238315ms)
  I0901 11:56:46.913837 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 33.829253ms)
  I0901 11:56:46.914107 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 35.419965ms)
  I0901 11:56:46.912900 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 33.279626ms)
  I0901 11:56:46.915091 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 35.846326ms)
  I0901 11:56:46.915113 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 36.321352ms)
  I0901 11:56:46.915211 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 35.090895ms)
  I0901 11:56:46.917213 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.86521ms)
  I0901 11:56:46.917994 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 38.097463ms)
  I0901 11:56:46.918230 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 38.653527ms)
  I0901 11:56:46.919033 17 proxy.go:610] (2) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 39.988804ms)
  I0901 11:56:46.946529 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 27.34948ms)
  I0901 11:56:46.946676 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 27.242409ms)
  I0901 11:56:46.948895 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 29.159051ms)
  I0901 11:56:46.952873 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 32.281933ms)
  I0901 11:56:46.955801 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.153593ms)
  I0901 11:56:46.955896 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 36.306319ms)
  I0901 11:56:46.956348 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 36.565231ms)
  I0901 11:56:46.956417 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 35.998714ms)
  I0901 11:56:46.956426 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.734673ms)
  I0901 11:56:46.956465 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 35.940795ms)
  I0901 11:56:46.956497 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 37.014039ms)
  I0901 11:56:46.956711 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 37.474276ms)
  I0901 11:56:46.956779 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 36.955608ms)
  I0901 11:56:46.956817 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 35.276925ms)
  I0901 11:56:46.957083 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 37.53396ms)
  I0901 11:56:46.957489 17 proxy.go:610] (3) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 38.118382ms)
  I0901 11:56:46.975995 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 18.141936ms)
  I0901 11:56:46.993811 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 35.329737ms)
  I0901 11:56:46.994912 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.034514ms)
  I0901 11:56:46.995338 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 36.354206ms)
  I0901 11:56:46.995476 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 37.117149ms)
  I0901 11:56:46.996467 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 38.407078ms)
  I0901 11:56:46.997452 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 37.99854ms)
  I0901 11:56:46.997568 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 39.310956ms)
  I0901 11:56:46.997946 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 39.179558ms)
  I0901 11:56:46.998592 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 40.720343ms)
  I0901 11:56:46.999078 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 39.994338ms)
  I0901 11:56:46.999666 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 40.289447ms)
  I0901 11:56:47.000206 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 40.990554ms)
  I0901 11:56:47.000896 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 41.515835ms)
  I0901 11:56:47.000932 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 42.546819ms)
  I0901 11:56:47.001660 17 proxy.go:610] (4) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 43.008228ms)
  I0901 11:56:47.032685 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 30.699545ms)
  I0901 11:56:47.034811 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 30.984149ms)
  I0901 11:56:47.034904 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 32.44627ms)
  I0901 11:56:47.035481 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 32.032593ms)
  I0901 11:56:47.036035 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 32.948481ms)
  I0901 11:56:47.036107 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 32.459541ms)
  I0901 11:56:47.036923 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 33.358252ms)
  I0901 11:56:47.037206 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 33.862222ms)
  I0901 11:56:47.037819 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 36.079289ms)
  I0901 11:56:47.037876 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 34.139077ms)
  I0901 11:56:47.038628 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 36.423236ms)
  I0901 11:56:47.038656 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 35.048717ms)
  I0901 11:56:47.039489 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 36.609119ms)
  I0901 11:56:47.039505 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 36.830201ms)
  I0901 11:56:47.040528 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 37.015374ms)
  I0901 11:56:47.040811 17 proxy.go:610] (5) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 37.112337ms)
  I0901 11:56:47.060775 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 19.257147ms)
  I0901 11:56:47.069628 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 27.584651ms)
  I0901 11:56:47.071567 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 28.724044ms)
  I0901 11:56:47.072234 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 29.183485ms)
  I0901 11:56:47.073386 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 30.959168ms)
  I0901 11:56:47.073411 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 29.280408ms)
  I0901 11:56:47.073885 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 31.570771ms)
  I0901 11:56:47.074095 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 30.642196ms)
  I0901 11:56:47.076241 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 34.666767ms)
  I0901 11:56:47.076367 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 35.461807ms)
  I0901 11:56:47.076463 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 32.531464ms)
  I0901 11:56:47.076487 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 32.475057ms)
  I0901 11:56:47.076543 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 35.322029ms)
  I0901 11:56:47.076569 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 33.827429ms)
  I0901 11:56:47.076610 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 34.039937ms)
  I0901 11:56:47.076648 17 proxy.go:610] (6) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 34.820668ms)
  I0901 11:56:47.096235 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 17.672435ms)
  I0901 11:56:47.097730 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 21.013867ms)
  I0901 11:56:47.106240 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 28.774478ms)
  I0901 11:56:47.108166 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 30.78596ms)
  I0901 11:56:47.109533 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 31.824865ms)
  I0901 11:56:47.109593 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 30.994946ms)
  I0901 11:56:47.111409 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 32.89763ms)
  I0901 11:56:47.111471 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 34.605997ms)
  I0901 11:56:47.111490 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 32.829271ms)
  I0901 11:56:47.111514 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 34.424447ms)
  I0901 11:56:47.111979 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 33.239584ms)
  I0901 11:56:47.112079 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 33.244772ms)
  I0901 11:56:47.112228 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 35.225288ms)
  I0901 11:56:47.114903 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 38.197932ms)
  I0901 11:56:47.114902 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 36.477626ms)
  I0901 11:56:47.114955 17 proxy.go:610] (7) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 36.706621ms)
  I0901 11:56:47.139198 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 23.835815ms)
  I0901 11:56:47.140611 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 25.570061ms)
  I0901 11:56:47.142553 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 26.740454ms)
  I0901 11:56:47.149232 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 33.247543ms)
  I0901 11:56:47.149361 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 33.682151ms)
  I0901 11:56:47.154029 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 38.094873ms)
  I0901 11:56:47.154097 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 38.557153ms)
  I0901 11:56:47.155950 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 38.873325ms)
  I0901 11:56:47.156975 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 39.964077ms)
  I0901 11:56:47.157045 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 40.955479ms)
  I0901 11:56:47.158081 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 39.98194ms)
  I0901 11:56:47.160340 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 45.11887ms)
  I0901 11:56:47.160900 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 43.992286ms)
  I0901 11:56:47.160819 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 43.576361ms)
  I0901 11:56:47.161211 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 43.170155ms)
  I0901 11:56:47.161329 17 proxy.go:610] (8) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 45.222743ms)
  I0901 11:56:47.186578 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 25.026525ms)
  I0901 11:56:47.192675 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 28.818788ms)
  I0901 11:56:47.194611 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 30.605788ms)
  I0901 11:56:47.200022 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 35.344431ms)
  I0901 11:56:47.200100 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 35.325867ms)
  I0901 11:56:47.200392 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 37.222851ms)
  I0901 11:56:47.200456 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 35.865275ms)
  I0901 11:56:47.200224 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 35.497012ms)
  I0901 11:56:47.200496 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 35.677278ms)
  I0901 11:56:47.201434 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 37.73152ms)
  I0901 11:56:47.202840 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 40.929846ms)
  I0901 11:56:47.202913 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 39.53507ms)
  I0901 11:56:47.202960 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 39.418027ms)
  I0901 11:56:47.203060 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 40.080523ms)
  I0901 11:56:47.203219 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 40.281083ms)
  I0901 11:56:47.203671 17 proxy.go:610] (9) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 39.154009ms)
  I0901 11:56:47.224861 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 21.117131ms)
  I0901 11:56:47.228485 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 24.369837ms)
  I0901 11:56:47.228624 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 24.67463ms)
  I0901 11:56:47.235898 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 31.061081ms)
  I0901 11:56:47.236432 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 31.89873ms)
  I0901 11:56:47.238842 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 34.151712ms)
  I0901 11:56:47.238940 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 33.949002ms)
  I0901 11:56:47.238974 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 33.16118ms)
  I0901 11:56:47.239009 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 33.873464ms)
  I0901 11:56:47.239044 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 33.006349ms)
  I0901 11:56:47.239077 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 32.091202ms)
  I0901 11:56:47.239103 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 32.399624ms)
  I0901 11:56:47.239716 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 31.713624ms)
  I0901 11:56:47.239826 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 30.553247ms)
  I0901 11:56:47.239910 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 35.53505ms)
  I0901 11:56:47.240178 17 proxy.go:610] (10) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 32.034799ms)
  I0901 11:56:47.292127 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 51.35548ms)
  I0901 11:56:47.292437 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 52.20433ms)
  I0901 11:56:47.293645 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 53.070371ms)
  I0901 11:56:47.294664 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 53.949907ms)
  I0901 11:56:47.295831 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 54.443684ms)
  I0901 11:56:47.314203 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 72.627187ms)
  I0901 11:56:47.315266 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 74.144125ms)
  I0901 11:56:47.315924 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 75.683855ms)
  I0901 11:56:47.316499 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 75.425004ms)
  I0901 11:56:47.317482 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 75.815871ms)
  I0901 11:56:47.319233 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 78.609421ms)
  I0901 11:56:47.321852 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 80.365538ms)
  I0901 11:56:47.323012 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 82.148089ms)
  I0901 11:56:47.324045 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 82.817122ms)
  I0901 11:56:47.325236 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 84.760115ms)
  I0901 11:56:47.325918 17 proxy.go:610] (11) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 84.963254ms)
  I0901 11:56:47.386050 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 59.060594ms)
  I0901 11:56:47.387715 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 61.696533ms)
  I0901 11:56:47.388590 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 60.734756ms)
  I0901 11:56:47.389756 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 63.116284ms)
  I0901 11:56:47.389847 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 63.007887ms)
  I0901 11:56:47.389953 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 62.205023ms)
  I0901 11:56:47.391063 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 64.97248ms)
  I0901 11:56:47.391554 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 64.772854ms)
  I0901 11:56:47.393266 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 66.889309ms)
  I0901 11:56:47.393440 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 66.4106ms)
  I0901 11:56:47.393535 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 66.589811ms)
  I0901 11:56:47.395116 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 68.221074ms)
  I0901 11:56:47.396858 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 69.294535ms)
  I0901 11:56:47.397018 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 69.47792ms)
  I0901 11:56:47.398553 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 70.94126ms)
  I0901 11:56:47.398702 17 proxy.go:610] (12) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 70.932526ms)
  I0901 11:56:47.438776 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 38.48782ms)
  I0901 11:56:47.439397 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 38.331762ms)
  I0901 11:56:47.440691 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 39.926209ms)
  I0901 11:56:47.443768 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 43.86064ms)
  I0901 11:56:47.443819 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 42.550437ms)
  I0901 11:56:47.443993 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 42.589617ms)
  I0901 11:56:47.444076 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 43.188958ms)
  I0901 11:56:47.444184 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 45.13609ms)
  I0901 11:56:47.443538 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 44.324203ms)
  I0901 11:56:47.444997 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 43.481258ms)
  I0901 11:56:47.445445 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 43.999808ms)
  I0901 11:56:47.445532 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 43.976355ms)
  I0901 11:56:47.445605 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 46.66182ms)
  I0901 11:56:47.445701 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 46.914154ms)
  I0901 11:56:47.445770 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 43.395274ms)
  I0901 11:56:47.447051 17 proxy.go:610] (13) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 47.869116ms)
  I0901 11:56:47.475582 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 27.323744ms)
  I0901 11:56:47.480441 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 32.490945ms)
  I0901 11:56:47.481553 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 32.769686ms)
  I0901 11:56:47.481570 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 32.735199ms)
  I0901 11:56:47.483835 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 34.912542ms)
  I0901 11:56:47.486348 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 37.360925ms)
  I0901 11:56:47.488543 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 39.892669ms)
  I0901 11:56:47.488542 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 39.979935ms)
  I0901 11:56:47.490916 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 42.744828ms)
  I0901 11:56:47.491014 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 43.023273ms)
  I0901 11:56:47.491029 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 42.091013ms)
  I0901 11:56:47.491063 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 42.028595ms)
  I0901 11:56:47.491074 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 43.277855ms)
  I0901 11:56:47.491100 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 42.404495ms)
  I0901 11:56:47.491113 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 43.3193ms)
  I0901 11:56:47.491896 17 proxy.go:610] (14) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 43.371633ms)
  I0901 11:56:47.531537 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 37.811297ms)
  I0901 11:56:47.532337 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 39.885339ms)
  I0901 11:56:47.533462 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 41.469126ms)
  I0901 11:56:47.534529 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 40.896587ms)
  I0901 11:56:47.535671 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 41.886389ms)
  I0901 11:56:47.536476 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 42.394611ms)
  I0901 11:56:47.536657 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 43.037522ms)
  I0901 11:56:47.537448 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 44.664265ms)
  I0901 11:56:47.537523 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 44.992452ms)
  I0901 11:56:47.538764 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 46.16608ms)
  I0901 11:56:47.538825 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 45.291259ms)
  I0901 11:56:47.540081 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 46.409183ms)
  I0901 11:56:47.540270 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 46.388443ms)
  I0901 11:56:47.540406 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 46.427772ms)
  I0901 11:56:47.540466 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 48.241866ms)
  I0901 11:56:47.540623 17 proxy.go:610] (15) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 46.433578ms)
  I0901 11:56:47.566027 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 25.333458ms)
  I0901 11:56:47.585032 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 42.772133ms)
  I0901 11:56:47.585125 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 43.934276ms)
  I0901 11:56:47.585193 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 43.125134ms)
  I0901 11:56:47.585761 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 43.717189ms)
  I0901 11:56:47.586812 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 44.716714ms)
  I0901 11:56:47.588935 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 46.776881ms)
  I0901 11:56:47.589265 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 46.872398ms)
  I0901 11:56:47.592286 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 49.849458ms)
  I0901 11:56:47.594567 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 52.231839ms)
  I0901 11:56:47.594687 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 53.417246ms)
  I0901 11:56:47.595851 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 52.526394ms)
  I0901 11:56:47.596023 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 53.811175ms)
  I0901 11:56:47.596030 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 54.10089ms)
  I0901 11:56:47.596078 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 52.804459ms)
  I0901 11:56:47.596119 17 proxy.go:610] (16) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 55.199489ms)
  I0901 11:56:47.621242 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 23.593948ms)
  I0901 11:56:47.621425 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 23.825692ms)
  I0901 11:56:47.639221 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 42.597524ms)
  I0901 11:56:47.640236 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 42.729464ms)
  I0901 11:56:47.640861 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 44.079424ms)
  I0901 11:56:47.643369 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 46.49797ms)
  I0901 11:56:47.643378 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 47.140158ms)
  I0901 11:56:47.643580 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 46.28475ms)
  I0901 11:56:47.643602 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 46.259765ms)
  I0901 11:56:47.643787 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 46.688798ms)
  I0901 11:56:47.643872 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 46.856407ms)
  I0901 11:56:47.643876 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 46.62358ms)
  I0901 11:56:47.645404 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 47.826739ms)
  I0901 11:56:47.645487 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 48.02815ms)
  I0901 11:56:47.645528 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 48.989076ms)
  I0901 11:56:47.645534 17 proxy.go:610] (17) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 48.135408ms)
  I0901 11:56:47.669005 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 23.382365ms)
  I0901 11:56:47.669939 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 23.621585ms)
  I0901 11:56:47.676400 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 29.878613ms)
  I0901 11:56:47.676462 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 30.697152ms)
  I0901 11:56:47.676587 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 30.194215ms)
  I0901 11:56:47.677593 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 31.913402ms)
  I0901 11:56:47.677723 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 29.842597ms)
  I0901 11:56:47.678321 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 30.676572ms)
  I0901 11:56:47.678394 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 31.927002ms)
  I0901 11:56:47.678499 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 31.534767ms)
  I0901 11:56:47.678502 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 32.52912ms)
  I0901 11:56:47.678554 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 32.419775ms)
  I0901 11:56:47.678592 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 30.77648ms)
  I0901 11:56:47.678624 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 32.063452ms)
  I0901 11:56:47.678605 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 31.995718ms)
  I0901 11:56:47.679189 17 proxy.go:610] (18) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 31.242057ms)
  I0901 11:56:47.708076 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 27.590343ms)
  I0901 11:56:47.708932 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 28.16256ms)
  I0901 11:56:47.716101 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname2/proxy/: bar (200; 36.616367ms)
  I0901 11:56:47.717347 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/rewri... (200; 37.072196ms)
  I0901 11:56:47.719852 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname1/proxy/: tls baz (200; 40.27544ms)
  I0901 11:56:47.720659 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:160/proxy/: foo (200; 40.266954ms)
  I0901 11:56:47.721928 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc/proxy/rewriteme"... (200; 42.255488ms)
  I0901 11:56:47.723432 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname1/proxy/: foo (200; 43.354973ms)
  I0901 11:56:47.723504 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/proxy-service-b2zb5-554fcbd47b-27tlc:162/proxy/: bar (200; 43.683175ms)
  I0901 11:56:47.724770 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/proxy-service-b2zb5:portname1/proxy/: foo (200; 44.1083ms)
  I0901 11:56:47.724900 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/http:proxy-service-b2zb5:portname2/proxy/: bar (200; 44.329761ms)
  I0901 11:56:47.724957 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:460/proxy/: tls baz (200; 44.931088ms)
  I0901 11:56:47.725127 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/http:proxy-service-b2zb5-554fcbd47b-27tlc:1080/proxy/... (200; 45.371064ms)
  I0901 11:56:47.727321 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/: <a href="/api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:443/proxy/... (200; 47.405454ms)
  I0901 11:56:47.727770 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/pods/https:proxy-service-b2zb5-554fcbd47b-27tlc:462/proxy/: tls qux (200; 47.587196ms)
  I0901 11:56:47.731860 17 proxy.go:610] (19) /api/v1/namespaces/proxy-2848/services/https:proxy-service-b2zb5:tlsportname2/proxy/: tls qux (200; 52.488455ms)
  I0901 11:56:47.750833 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2848" for this suite. @ 09/01/25 11:56:47.761
• [5.240 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:524
  STEP: Creating a kubernetes client @ 09/01/25 11:56:47.78
  I0901 11:56:47.780272 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 11:56:47.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:47.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:47.823
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/01/25 11:56:47.854
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/01/25 11:56:47.881
  STEP: Ensure that the job reaches completions @ 09/01/25 11:56:51.938
  STEP: Verifying that the only appropriately index succeeded @ 09/01/25 11:56:51.966
  I0901 11:56:51.980239 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6483" for this suite. @ 09/01/25 11:56:51.996
• [4.236 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/01/25 11:56:52.018
  I0901 11:56:52.018476 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/01/25 11:56:52.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:52.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:52.065
  STEP: mirroring a new custom Endpoint @ 09/01/25 11:56:52.108
  I0901 11:56:52.125486      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:56:52.140059 17 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/01/25 11:56:54.153
  I0901 11:56:54.163750      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/01/25 11:56:54.18
  I0901 11:56:54.196098      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 11:56:54.211333 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3210" for this suite. @ 09/01/25 11:56:54.224
• [2.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 11:56:54.246
  I0901 11:56:54.246946 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:56:54.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:54.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:54.311
  STEP: Creating configMap with name configmap-test-volume-map-e6102bd9-4a1d-44f4-931b-e56e8d31d785 @ 09/01/25 11:56:54.319
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:56:54.328
  STEP: Saw pod success @ 09/01/25 11:56:58.394
  I0901 11:56:58.404908 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-d23d40cb-054a-428e-b708-a79ab418332e container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:56:58.455
  I0901 11:56:58.497435 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5188" for this suite. @ 09/01/25 11:56:58.509
• [4.278 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/01/25 11:56:58.526
  I0901 11:56:58.526556 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pv @ 09/01/25 11:56:58.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:58.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:58.568
  STEP: Creating initial PV and PVC @ 09/01/25 11:56:58.575
  I0901 11:56:58.575372 17 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2773" @ 09/01/25 11:56:58.614
  STEP: Listing PVCs in namespace "pv-2773" @ 09/01/25 11:56:58.624
  STEP: Reading "pvc-7mzft" Status @ 09/01/25 11:56:58.639
  STEP: Reading "pv-2773-tsznf" Status @ 09/01/25 11:56:58.657
  STEP: Patching "pvc-7mzft" Status @ 09/01/25 11:56:58.669
  STEP: Patching "pv-2773-tsznf" Status @ 09/01/25 11:56:58.682
  STEP: Updating "pvc-7mzft" Status @ 09/01/25 11:56:58.714
  STEP: Updating "pv-2773-tsznf" Status @ 09/01/25 11:56:58.735
  I0901 11:56:58.762692 17 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 11:56:58.763112 17 pv.go:205] Deleting PersistentVolumeClaim "pvc-7mzft"
  I0901 11:56:58.782070 17 pv.go:193] Deleting PersistentVolume "pv-2773-tsznf"
  I0901 11:56:58.799677 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2773" for this suite. @ 09/01/25 11:56:58.809
• [0.295 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/01/25 11:56:58.822
  I0901 11:56:58.822731 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:56:58.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:56:58.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:56:58.857
  STEP: create the rc @ 09/01/25 11:56:58.862
  I0901 11:56:58.877684      17 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/01/25 11:57:03.966
  STEP: wait for all pods to be garbage collected @ 09/01/25 11:57:03.981
  STEP: Gathering metrics @ 09/01/25 11:57:09.006
  I0901 11:57:09.277381 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:57:09.277791 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6463" for this suite. @ 09/01/25 11:57:09.291
• [10.486 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/01/25 11:57:09.308
  I0901 11:57:09.308910 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 11:57:09.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:09.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:09.359
  STEP: Create a ReplicaSet @ 09/01/25 11:57:09.368
  STEP: Verify that the required pods have come up @ 09/01/25 11:57:09.381
  I0901 11:57:09.410943 17 resource.go:64] Pod name sample-pod: Found 1 pods out of 3
  I0901 11:57:14.455890 17 resource.go:64] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/01/25 11:57:14.456
  I0901 11:57:14.465357 17 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/01/25 11:57:14.465
  STEP: DeleteCollection of the ReplicaSets @ 09/01/25 11:57:14.473
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/01/25 11:57:14.586
  I0901 11:57:14.596560 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7969" for this suite. @ 09/01/25 11:57:14.611
• [5.336 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/01/25 11:57:14.644
  I0901 11:57:14.645023 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 11:57:14.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:14.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:14.75
  I0901 11:57:14.762553 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:57:18.001004 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9292" for this suite. @ 09/01/25 11:57:18.014
• [3.387 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/01/25 11:57:18.032
  I0901 11:57:18.032820 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:57:18.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:18.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:18.079
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 11:57:18.154
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:57:18.168
  I0901 11:57:18.234223 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:57:18.234352 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 11:57:19.190461 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:57:19.190616 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 11:57:20.228634 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:57:20.228709 17 fixtures.go:131] Node wohnahxathu9-2 is running 0 daemon pod, expected 1
  I0901 11:57:21.263019 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:57:21.263126 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/01/25 11:57:21.276
  I0901 11:57:21.290093 17 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/01/25 11:57:21.29
  I0901 11:57:21.327947 17 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/01/25 11:57:21.328
  I0901 11:57:21.334052 17 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0901 11:57:21.334566 17 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.334975 17 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.335387 17 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.335714 17 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.336843 17 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.337016 17 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-5519 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:57:21.337072 17 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/01/25 11:57:21.337
  STEP: watching for the daemon set status to be patched @ 09/01/25 11:57:21.358
  I0901 11:57:21.366079 17 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0901 11:57:21.366691 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.369081 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.370412 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.370684 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.370871 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.371112 17 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-5519 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:57:21.371583 17 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:57:21.371696 17 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-5519 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0901 11:57:21.371749 17 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:57:21.383
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5519, will wait for the garbage collector to delete the pods @ 09/01/25 11:57:21.383
  I0901 11:57:21.471786 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 26.597973ms
  I0901 11:57:21.575017 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 103.229392ms
  I0901 11:57:23.089360 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:57:23.089700 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:57:23.102263 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20827"},"items":null}

  I0901 11:57:23.111037 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20827"},"items":null}

  I0901 11:57:23.151921 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5519" for this suite. @ 09/01/25 11:57:23.165
• [5.147 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:197
  STEP: Creating a kubernetes client @ 09/01/25 11:57:23.18
  I0901 11:57:23.180056 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:57:23.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:23.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:23.214
  STEP: Creating a pod to test downward api env vars @ 09/01/25 11:57:23.22
  STEP: Saw pod success @ 09/01/25 11:57:27.298
  I0901 11:57:27.309440 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downward-api-32cb0253-0915-4f4d-a10e-ebbc961f616c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:57:27.378
  I0901 11:57:27.441487 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8930" for this suite. @ 09/01/25 11:57:27.454
• [4.298 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/01/25 11:57:27.479
  I0901 11:57:27.479124 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:57:27.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:27.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:27.524
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/01/25 11:57:27.531
  I0901 11:57:27.533446 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:57:30.338571 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 11:57:40.168449 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8648" for this suite. @ 09/01/25 11:57:40.195
• [12.739 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/01/25 11:57:40.218
  I0901 11:57:40.219042 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 11:57:40.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:40.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:40.282
  STEP: getting /apis @ 09/01/25 11:57:40.292
  STEP: getting /apis/node.k8s.io @ 09/01/25 11:57:40.305
  STEP: getting /apis/node.k8s.io/v1 @ 09/01/25 11:57:40.307
  STEP: creating @ 09/01/25 11:57:40.31
  STEP: watching @ 09/01/25 11:57:40.363
  I0901 11:57:40.363464 17 runtimeclass.go:278] starting watch
  STEP: getting @ 09/01/25 11:57:40.383
  STEP: listing @ 09/01/25 11:57:40.391
  STEP: patching @ 09/01/25 11:57:40.399
  STEP: updating @ 09/01/25 11:57:40.409
  I0901 11:57:40.423128 17 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 11:57:40.423
  STEP: deleting a collection @ 09/01/25 11:57:40.451
  I0901 11:57:40.492666 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6907" for this suite. @ 09/01/25 11:57:40.504
• [0.305 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/01/25 11:57:40.525
  I0901 11:57:40.525965 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename containers @ 09/01/25 11:57:40.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:40.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:40.567
  STEP: Creating a pod to test override command @ 09/01/25 11:57:40.574
  STEP: Saw pod success @ 09/01/25 11:57:44.637
  I0901 11:57:44.647944 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod client-containers-6f963233-38c5-4fb1-8c79-0eaa9d1dba8d container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:57:44.694
  I0901 11:57:44.753125 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1559" for this suite. @ 09/01/25 11:57:44.771
• [4.270 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/01/25 11:57:44.796
  I0901 11:57:44.796245 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:57:44.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:44.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:44.839
  STEP: Creating pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755 @ 09/01/25 11:57:44.848
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:57:48.924
  I0901 11:57:48.940751 17 container_probe.go:1749] Initial restart count of pod busybox-56df01f4-909c-43db-b92a-27672215d871 is 0
  I0901 11:57:48.958787 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:57:50.975878 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:57:52.988939 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:57:55.004043 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:57:57.018812 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:57:59.031504 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:01.044958 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:03.060550 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:05.072498 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:07.095301 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:09.112100 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:11.130048 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:13.150697 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:15.165462 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:17.184752 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:19.199775 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:21.213456 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:23.227028 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:25.237256 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:27.251931 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:29.262942 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:31.277019 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:33.290358 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:35.304852 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:37.330209 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:39.342363 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:41.358970 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:43.368175 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:45.382712 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:47.408973 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:49.421670 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:51.439250 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:53.459383 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:55.476369 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:57.487773 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:58:59.507763 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:01.521439 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:03.534192 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:05.585255 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:07.599911 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:09.612828 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:11.626421 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:13.641006 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:15.656323 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:17.670590 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:19.684954 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:21.699215 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:23.731043 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:25.745703 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:27.757624 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:29.771200 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:31.784179 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:33.800933 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:35.813601 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:37.824887 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:39.850577 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:41.863987 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:43.883658 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:45.904488 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:47.925036 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:49.939074 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:51.954141 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:53.970240 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:55.985986 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 11:59:58.001828 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:00.017825 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:02.030255 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:04.044524 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:06.056741 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:08.073157 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:10.086893 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:12.104783 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:14.119639 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:16.138243 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:18.160918 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:20.175138 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:22.190064 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:24.209509 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:26.231159 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:28.247451 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:30.261797 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:32.281059 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:34.304110 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:36.328815 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:38.341813 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:40.356020 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:42.372586 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:44.380058 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:46.393568 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:48.410262 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:50.426497 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:52.445748 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:54.459323 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:56.474279 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:00:58.486212 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:00.501406 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:02.511621 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:04.525233 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:06.540786 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:08.553556 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:10.566623 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:12.582931 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:14.596760 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:16.607505 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:18.626144 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:20.639429 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:22.657262 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:24.671235 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:26.685726 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:28.702010 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:30.726056 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:32.738769 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:34.757866 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:36.772371 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:38.795798 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:40.807548 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:42.824969 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:44.838137 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:46.853629 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  I0901 12:01:48.864915 17 container_probe.go:1759] Get pod busybox-56df01f4-909c-43db-b92a-27672215d871 in namespace container-probe-9755
  STEP: deleting the pod @ 09/01/25 12:01:50.866
  I0901 12:01:50.937118 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9755" for this suite. @ 09/01/25 12:01:50.957
• [246.176 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/01/25 12:01:50.973
  I0901 12:01:50.974020 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:01:50.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:01:51.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:01:51.024
  STEP: Setting up data @ 09/01/25 12:01:51.034
  STEP: Creating pod pod-subpath-test-downwardapi-qlm5 @ 09/01/25 12:01:51.056
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:01:51.056
  STEP: Saw pod success @ 09/01/25 12:02:15.302
  I0901 12:02:15.314546 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-subpath-test-downwardapi-qlm5 container test-container-subpath-downwardapi-qlm5: <nil>
  STEP: delete the pod @ 09/01/25 12:02:15.401
  STEP: Deleting pod pod-subpath-test-downwardapi-qlm5 @ 09/01/25 12:02:15.431
  I0901 12:02:15.431154 17 delete.go:78] Deleting pod "pod-subpath-test-downwardapi-qlm5" in namespace "subpath-3050"
  I0901 12:02:15.442884 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3050" for this suite. @ 09/01/25 12:02:15.457
• [24.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1430
  STEP: Creating a kubernetes client @ 09/01/25 12:02:15.475
  I0901 12:02:15.475109 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:02:15.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:02:15.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:02:15.513
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-523 @ 09/01/25 12:02:15.519
  STEP: changing the ExternalName service to type=ClusterIP @ 09/01/25 12:02:15.533
  I0901 12:02:15.592508 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 12:02:17.603102 17 resource.go:344] Creating new exec pod
  I0901 12:02:19.676237 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-523 exec execpodg598w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:02:20.098214 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.61.197) 80 port [tcp/http] succeeded!\n"
  I0901 12:02:20.098377 17 builder.go:157] stdout: "externalname-service-9584b9787-h827c"
  I0901 12:02:20.099009 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-523 exec execpodg598w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.197 80'
  I0901 12:02:20.476091 17 builder.go:156] stderr: "+ + nc -v -t -wecho hostName\n 2 10.233.61.197 80\nConnection to 10.233.61.197 80 port [tcp/http] succeeded!\n"
  I0901 12:02:20.477040 17 builder.go:157] stdout: "externalname-service-9584b9787-h827c"
  I0901 12:02:20.478025 17 service.go:1439] Cleaning up the ExternalName to ClusterIP test service
  I0901 12:02:20.527992 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-523" for this suite. @ 09/01/25 12:02:20.539
• [5.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/01/25 12:02:20.571
  I0901 12:02:20.571602 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename taint-single-pod @ 09/01/25 12:02:20.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:02:20.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:02:20.637
  I0901 12:02:20.657951 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 12:03:20.659675 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:03:20.678100 17 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/01/25 12:03:20.678
  I0901 12:03:20.927371 17 taints.go:294] Pod is running on wohnahxathu9-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 12:03:20.927
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 12:03:20.972
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/01/25 12:03:20.982
  I0901 12:03:20.982782 17 taints.go:313] Pod wasn't evicted. Proceeding
  I0901 12:03:20.982971 17 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 12:03:21.016
  STEP: Waiting some time to make sure that toleration time passed. @ 09/01/25 12:03:21.029
  I0901 12:04:36.031153 17 taints.go:329] Pod wasn't evicted. Test successful
  I0901 12:04:36.032048 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4357" for this suite. @ 09/01/25 12:04:36.047
• [135.494 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/01/25 12:04:36.066
  I0901 12:04:36.066995 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:04:36.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:36.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:36.113
  STEP: apply creating a deployment @ 09/01/25 12:04:36.126
  I0901 12:04:36.178152 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2803" for this suite. @ 09/01/25 12:04:36.194
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/01/25 12:04:36.215
  I0901 12:04:36.216131 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:04:36.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:36.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:36.263
  I0901 12:04:36.271979 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 12:04:36.936852 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3866" for this suite. @ 09/01/25 12:04:36.954
• [0.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/01/25 12:04:36.979
  I0901 12:04:36.979136 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 12:04:36.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:37.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:37.011
  STEP: Cleaning up the secret @ 09/01/25 12:04:39.091
  STEP: Cleaning up the configmap @ 09/01/25 12:04:39.109
  STEP: Cleaning up the pod @ 09/01/25 12:04:39.127
  I0901 12:04:39.155907 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-608" for this suite. @ 09/01/25 12:04:39.18
• [2.234 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:538
  STEP: Creating a kubernetes client @ 09/01/25 12:04:39.212
  I0901 12:04:39.212644 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:04:39.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:39.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:39.247
  STEP: creating @ 09/01/25 12:04:41.331
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/01/25 12:04:41.358
  I0901 12:04:43.404759 17 util.go:162] Waiting up to 2m0s to get response from 10.233.46.28:80
  I0901 12:04:43.405893 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=endpointslice-6232 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.233.46.28:80/hostname'
  I0901 12:04:43.832883 17 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.233.46.28:80/hostname\n"
  I0901 12:04:43.832991 17 builder.go:157] stdout: "pod-handle-http-request"
  I0901 12:04:43.833083 17 util.go:162] Waiting up to 2m0s to get response from 10.233.46.28:81
  I0901 12:04:43.833941 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=endpointslice-6232 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.233.46.28:81/hostname'
  I0901 12:04:44.245367 17 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.233.46.28:81/hostname\n"
  I0901 12:04:44.245494 17 builder.go:157] stdout: "pod-handle-http-request"
  I0901 12:04:44.247404 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6232" for this suite. @ 09/01/25 12:04:44.262
• [5.063 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:04:44.275
  I0901 12:04:44.276015 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 12:04:44.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:44.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:44.355
  STEP: Create a pod template @ 09/01/25 12:04:44.361
  STEP: Replace a pod template @ 09/01/25 12:04:44.373
  I0901 12:04:44.390135 17 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0901 12:04:44.390571 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9207" for this suite. @ 09/01/25 12:04:44.402
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/01/25 12:04:44.417
  I0901 12:04:44.417616 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:04:44.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:44.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:44.454
  STEP: create the container @ 09/01/25 12:04:44.46
  I0901 12:04:44.483553      17 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:04:44.483
  STEP: get the container status @ 09/01/25 12:04:48.539
  STEP: the container should be terminated @ 09/01/25 12:04:48.55
  STEP: the termination message should be set @ 09/01/25 12:04:48.55
  I0901 12:04:48.550607 17 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 12:04:48.55
  I0901 12:04:48.597187 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4029" for this suite. @ 09/01/25 12:04:48.612
• [4.216 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:04:48.634
  I0901 12:04:48.634849 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 12:04:48.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:48.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:48.697
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/01/25 12:04:48.705
  I0901 12:04:48.719381 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1755" for this suite. @ 09/01/25 12:04:48.731
• [0.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/01/25 12:04:48.752
  I0901 12:04:48.752769 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:04:48.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:04:48.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:04:48.8
  STEP: create the rc @ 09/01/25 12:04:48.831
  I0901 12:04:48.846147      17 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/01/25 12:04:57.17
  STEP: wait for the rc to be deleted @ 09/01/25 12:04:57.324
  I0901 12:04:58.995636 17 garbage_collector.go:678] 100 pods remaining
  I0901 12:04:58.996153 17 garbage_collector.go:685] 100 pods has nil DeletionTimestamp
  I0901 12:04:58.996177 17 garbage_collector.go:686] 
  I0901 12:04:59.701036 17 garbage_collector.go:678] 100 pods remaining
  I0901 12:04:59.701113 17 garbage_collector.go:685] 100 pods has nil DeletionTimestamp
  I0901 12:04:59.701133 17 garbage_collector.go:686] 
  I0901 12:05:00.423748 17 garbage_collector.go:678] 100 pods remaining
  I0901 12:05:00.423826 17 garbage_collector.go:685] 100 pods has nil DeletionTimestamp
  I0901 12:05:00.423866 17 garbage_collector.go:686] 
  I0901 12:05:01.492052 17 garbage_collector.go:678] 100 pods remaining
  I0901 12:05:01.543191 17 garbage_collector.go:685] 100 pods has nil DeletionTimestamp
  I0901 12:05:01.599864 17 garbage_collector.go:686] 
  I0901 12:05:02.602606 17 garbage_collector.go:678] 96 pods remaining
  I0901 12:05:02.602695 17 garbage_collector.go:685] 88 pods has nil DeletionTimestamp
  I0901 12:05:02.602729 17 garbage_collector.go:686] 
  I0901 12:05:04.161998 17 garbage_collector.go:678] 87 pods remaining
  I0901 12:05:04.162078 17 garbage_collector.go:685] 64 pods has nil DeletionTimestamp
  I0901 12:05:04.162098 17 garbage_collector.go:686] 
  I0901 12:05:04.583968 17 garbage_collector.go:678] 84 pods remaining
  I0901 12:05:04.584045 17 garbage_collector.go:685] 61 pods has nil DeletionTimestamp
  I0901 12:05:04.584065 17 garbage_collector.go:686] 
  I0901 12:05:05.357255 17 garbage_collector.go:678] 80 pods remaining
  I0901 12:05:05.357349 17 garbage_collector.go:685] 46 pods has nil DeletionTimestamp
  I0901 12:05:05.357369 17 garbage_collector.go:686] 
  I0901 12:05:07.178784 17 garbage_collector.go:678] 71 pods remaining
  I0901 12:05:07.179564 17 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0901 12:05:07.179592 17 garbage_collector.go:686] 
  I0901 12:05:07.771577 17 garbage_collector.go:678] 67 pods remaining
  I0901 12:05:07.771775 17 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0901 12:05:07.771796 17 garbage_collector.go:686] 
  I0901 12:05:08.613328 17 garbage_collector.go:678] 64 pods remaining
  I0901 12:05:08.613545 17 garbage_collector.go:685] 10 pods has nil DeletionTimestamp
  I0901 12:05:08.613569 17 garbage_collector.go:686] 
  I0901 12:05:09.782231 17 garbage_collector.go:678] 56 pods remaining
  I0901 12:05:09.782533 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:09.782562 17 garbage_collector.go:686] 
  I0901 12:05:10.624551 17 garbage_collector.go:678] 45 pods remaining
  I0901 12:05:10.643116 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:10.643556 17 garbage_collector.go:686] 
  I0901 12:05:11.655498 17 garbage_collector.go:678] 38 pods remaining
  I0901 12:05:11.655565 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:11.655583 17 garbage_collector.go:686] 
  I0901 12:05:12.506761 17 garbage_collector.go:678] 32 pods remaining
  I0901 12:05:12.506832 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:12.506850 17 garbage_collector.go:686] 
  I0901 12:05:13.610888 17 garbage_collector.go:678] 19 pods remaining
  I0901 12:05:13.612074 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:13.612127 17 garbage_collector.go:686] 
  I0901 12:05:14.374495 17 garbage_collector.go:678] 17 pods remaining
  I0901 12:05:14.374595 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:14.374773 17 garbage_collector.go:686] 
  I0901 12:05:15.369581 17 garbage_collector.go:678] 11 pods remaining
  I0901 12:05:15.369650 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:15.369668 17 garbage_collector.go:686] 
  I0901 12:05:16.378396 17 garbage_collector.go:678] 0 pods remaining
  I0901 12:05:16.378693 17 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0901 12:05:16.379107 17 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/01/25 12:05:17.35
  I0901 12:05:17.912234 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:05:17.913204 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1496" for this suite. @ 09/01/25 12:05:18.007
• [29.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:269
  STEP: Creating a kubernetes client @ 09/01/25 12:05:18.052
  I0901 12:05:18.052959 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:05:18.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:18.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:18.184
  STEP: Setting up server cert @ 09/01/25 12:05:18.327
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:05:19.95
  STEP: Deploying the webhook pod @ 09/01/25 12:05:19.969
  STEP: Wait for the deployment to be ready @ 09/01/25 12:05:20.01
  I0901 12:05:20.032091 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0901 12:05:22.084741 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:24.094822 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:26.097420 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:28.096570 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:30.095446 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:32.105887 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:34.095738 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:36.095795 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:38.100078 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:40.100445 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:42.107406 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:44.099559 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:46.097168 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:48.097576 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:50.100027 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:52.103275 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:54.099441 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:56.097930 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:05:58.109063 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:06:00.095415 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:06:02.099446 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:06:04.101658 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 12:06:06.103
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:06:06.139
  I0901 12:06:07.140241 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 12:06:07.151
  I0901 12:06:07.211499 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 12:06:07.34
  STEP: Creating a dummy validating-webhook-configuration object @ 09/01/25 12:06:07.387
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/01/25 12:06:07.413
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/01/25 12:06:07.43
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/01/25 12:06:07.452
  I0901 12:06:07.604097 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4115" for this suite. @ 09/01/25 12:06:07.615
  STEP: Destroying namespace "webhook-markers-3216" for this suite. @ 09/01/25 12:06:07.636
• [49.599 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:06:07.653
  I0901 12:06:07.653616 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:06:07.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:07.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:07.692
  I0901 12:06:07.700395 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 12:06:07.720273      17 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0901 12:06:10.513041      17 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:06:10.513236      17 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:06:10.513273      17 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:06:10.513389      17 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:06:10.513446      17 warnings.go:110] "Warning: unknown field \"gamma\""
  I0901 12:06:11.138327 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3860" for this suite. @ 09/01/25 12:06:11.159
• [3.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/01/25 12:06:11.19
  I0901 12:06:11.190399 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:06:11.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:11.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:11.24
  I0901 12:06:11.349729 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-237" for this suite. @ 09/01/25 12:06:11.361
• [0.196 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/01/25 12:06:11.387
  I0901 12:06:11.387740 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:06:11.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:11.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:11.431
  STEP: creating a watch on configmaps with label A @ 09/01/25 12:06:11.436
  STEP: creating a watch on configmaps with label B @ 09/01/25 12:06:11.445
  STEP: creating a watch on configmaps with label A or B @ 09/01/25 12:06:11.453
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/01/25 12:06:11.46
  I0901 12:06:11.472212 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24187 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:11.473682 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24187 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/01/25 12:06:11.473
  I0901 12:06:11.495407 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24188 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:11.495648 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24188 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/01/25 12:06:11.495
  I0901 12:06:11.517125 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24189 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:11.518693 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24189 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/01/25 12:06:11.519
  I0901 12:06:11.538397 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24190 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:11.538609 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2767  573c65b7-db42-4ed9-b51f-509466420c61 24190 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/01/25 12:06:11.538
  I0901 12:06:11.551941 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2767  dfede925-581a-4297-be62-5d63b58996c9 24191 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:11.553313 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2767  dfede925-581a-4297-be62-5d63b58996c9 24191 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/01/25 12:06:21.554
  I0901 12:06:21.613322 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2767  dfede925-581a-4297-be62-5d63b58996c9 24239 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:21.613500 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2767  dfede925-581a-4297-be62-5d63b58996c9 24239 0 2025-09-01 12:06:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 12:06:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:06:31.614128 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2767" for this suite. @ 09/01/25 12:06:31.631
• [20.264 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/01/25 12:06:31.656
  I0901 12:06:31.656473 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:06:31.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:31.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:31.713
  I0901 12:06:31.723454 17 replica_set.go:192] Creating ReplicaSet my-hostname-basic-04e5acba-6a8f-49fa-9db4-dac118ccc304
  I0901 12:06:31.757253 17 resource.go:64] Pod name my-hostname-basic-04e5acba-6a8f-49fa-9db4-dac118ccc304: Found 0 pods out of 1
  I0901 12:06:36.772466 17 resource.go:64] Pod name my-hostname-basic-04e5acba-6a8f-49fa-9db4-dac118ccc304: Found 1 pods out of 1
  I0901 12:06:36.772584 17 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-04e5acba-6a8f-49fa-9db4-dac118ccc304" is running
  I0901 12:06:36.783406 17 replica_set.go:221] Pod "my-hostname-basic-04e5acba-6a8f-49fa-9db4-dac118ccc304-pwskl" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:06:32 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:06:31 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:06:32 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:06:32 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:06:31 +0000 UTC Reason: Message:}])
  I0901 12:06:36.783513 17 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 12:06:36.783
  I0901 12:06:36.823916 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1856" for this suite. @ 09/01/25 12:06:36.836
• [5.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/01/25 12:06:36.885
  I0901 12:06:36.885526 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename discovery @ 09/01/25 12:06:36.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:36.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:36.929
  STEP: Setting up server cert @ 09/01/25 12:06:36.938
  I0901 12:06:38.237747 17 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0901 12:06:38.241217 17 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0901 12:06:38.241353 17 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0901 12:06:38.241381 17 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0901 12:06:38.241570 17 discovery.go:139] Checking APIGroup: apps
  I0901 12:06:38.244644 17 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0901 12:06:38.244694 17 discovery.go:148] Versions found [{apps/v1 v1}]
  I0901 12:06:38.244712 17 discovery.go:154] apps/v1 matches apps/v1
  I0901 12:06:38.244766 17 discovery.go:139] Checking APIGroup: events.k8s.io
  I0901 12:06:38.248086 17 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0901 12:06:38.248154 17 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0901 12:06:38.248192 17 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0901 12:06:38.248390 17 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0901 12:06:38.251141 17 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0901 12:06:38.251207 17 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0901 12:06:38.251225 17 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0901 12:06:38.251444 17 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0901 12:06:38.254361 17 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0901 12:06:38.254443 17 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0901 12:06:38.254461 17 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0901 12:06:38.254649 17 discovery.go:139] Checking APIGroup: autoscaling
  I0901 12:06:38.257514 17 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0901 12:06:38.257563 17 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0901 12:06:38.257748 17 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0901 12:06:38.257770 17 discovery.go:139] Checking APIGroup: batch
  I0901 12:06:38.262132 17 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0901 12:06:38.262180 17 discovery.go:148] Versions found [{batch/v1 v1}]
  I0901 12:06:38.262410 17 discovery.go:154] batch/v1 matches batch/v1
  I0901 12:06:38.262432 17 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0901 12:06:38.266555 17 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0901 12:06:38.266646 17 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0901 12:06:38.266891 17 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0901 12:06:38.266912 17 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0901 12:06:38.270104 17 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0901 12:06:38.270189 17 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0901 12:06:38.270210 17 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0901 12:06:38.270618 17 discovery.go:139] Checking APIGroup: policy
  I0901 12:06:38.274125 17 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0901 12:06:38.274174 17 discovery.go:148] Versions found [{policy/v1 v1}]
  I0901 12:06:38.274191 17 discovery.go:154] policy/v1 matches policy/v1
  I0901 12:06:38.274207 17 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0901 12:06:38.277164 17 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0901 12:06:38.277215 17 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0901 12:06:38.277442 17 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0901 12:06:38.277539 17 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0901 12:06:38.280704 17 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0901 12:06:38.280752 17 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0901 12:06:38.280770 17 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0901 12:06:38.280820 17 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0901 12:06:38.283338 17 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0901 12:06:38.283592 17 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0901 12:06:38.283844 17 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0901 12:06:38.283866 17 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0901 12:06:38.287448 17 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0901 12:06:38.287498 17 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0901 12:06:38.287515 17 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0901 12:06:38.287529 17 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0901 12:06:38.290416 17 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0901 12:06:38.290522 17 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0901 12:06:38.290581 17 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0901 12:06:38.290596 17 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0901 12:06:38.293276 17 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0901 12:06:38.293377 17 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0901 12:06:38.293429 17 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0901 12:06:38.293449 17 discovery.go:139] Checking APIGroup: node.k8s.io
  I0901 12:06:38.296542 17 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0901 12:06:38.296591 17 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0901 12:06:38.296609 17 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0901 12:06:38.296625 17 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0901 12:06:38.300404 17 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0901 12:06:38.300453 17 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0901 12:06:38.300469 17 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0901 12:06:38.300506 17 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0901 12:06:38.303357 17 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1
  I0901 12:06:38.303614 17 discovery.go:148] Versions found [{resource.k8s.io/v1 v1}]
  I0901 12:06:38.303860 17 discovery.go:154] resource.k8s.io/v1 matches resource.k8s.io/v1
  I0901 12:06:38.304350 17 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0901 12:06:38.307969 17 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0901 12:06:38.308100 17 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0901 12:06:38.308501 17 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0901 12:06:38.308547 17 discovery.go:139] Checking APIGroup: cilium.io
  I0901 12:06:38.311432 17 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0901 12:06:38.311780 17 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0901 12:06:38.312144 17 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0901 12:06:38.313050 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-701" for this suite. @ 09/01/25 12:06:38.33
• [1.469 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/01/25 12:06:38.36
  I0901 12:06:38.360671 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:06:38.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:38.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:38.407
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:06:38.417
  STEP: Saw pod success @ 09/01/25 12:06:42.484
  I0901 12:06:42.493998 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-22c60e79-7ccb-4812-9a17-c8b73d38fa99 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:06:42.541
  I0901 12:06:42.581134 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7343" for this suite. @ 09/01/25 12:06:42.594
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3222
  STEP: Creating a kubernetes client @ 09/01/25 12:06:42.61
  I0901 12:06:42.611029 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:06:42.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:42.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:42.642
  STEP: fetching services @ 09/01/25 12:06:42.65
  I0901 12:06:42.663395 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5319" for this suite. @ 09/01/25 12:06:42.696
• [0.110 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:726
  STEP: Creating a kubernetes client @ 09/01/25 12:06:42.722
  I0901 12:06:42.722092 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 12:06:42.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:42.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:42.768
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/01/25 12:06:42.786
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/01/25 12:06:42.807
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/01/25 12:06:48.854
  I0901 12:06:48.864893 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4004" for this suite. @ 09/01/25 12:06:48.879
• [6.175 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/01/25 12:06:48.901
  I0901 12:06:48.901627 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:06:48.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:48.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:48.963
  STEP: Creating a test headless service @ 09/01/25 12:06:48.972
  I0901 12:06:48.986265      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6388 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6388;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6388 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6388;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6388.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6388.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6388.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6388.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6388.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6388.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6388.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6388.svc;check="$$(dig +notcp +noall +answer +search 202.63.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.63.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.63.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.63.202_tcp@PTR;sleep 1; done
   @ 09/01/25 12:06:49.019
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6388 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6388;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6388 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6388;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6388.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6388.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6388.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6388.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6388.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6388.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6388.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6388.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6388.svc;check="$$(dig +notcp +noall +answer +search 202.63.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.63.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.63.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.63.202_tcp@PTR;sleep 1; done
   @ 09/01/25 12:06:49.019
  STEP: creating a pod to probe DNS @ 09/01/25 12:06:49.019
  STEP: submitting the pod to kubernetes @ 09/01/25 12:06:49.02
  STEP: retrieving the pod @ 09/01/25 12:06:53.094
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:06:53.105
  I0901 12:06:53.468242 17 dns_common.go:546] DNS probes using dns-6388/dns-test-454ecc62-0140-4c11-a287-8f213f170d22 succeeded

  STEP: deleting the pod @ 09/01/25 12:06:53.469
  STEP: deleting the test service @ 09/01/25 12:06:53.519
  STEP: deleting the test headless service @ 09/01/25 12:06:53.659
  I0901 12:06:53.702676 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6388" for this suite. @ 09/01/25 12:06:53.717
• [4.833 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:06:53.734
  I0901 12:06:53.734613 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:06:53.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:53.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:53.773
  I0901 12:07:53.822840 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6934" for this suite. @ 09/01/25 12:07:53.835
• [60.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:916
  STEP: Creating a kubernetes client @ 09/01/25 12:07:53.865
  I0901 12:07:53.865487 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:07:53.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:53.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:53.911
  STEP: validating api versions @ 09/01/25 12:07:53.923
  I0901 12:07:53.923808 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-2045 api-versions'
  I0901 12:07:54.128732 17 builder.go:156] stderr: ""
  I0901 12:07:54.128823 17 builder.go:157] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0901 12:07:54.129414 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2045" for this suite. @ 09/01/25 12:07:54.145
• [0.305 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/01/25 12:07:54.174
  I0901 12:07:54.174841 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:07:54.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:54.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:54.218
  I0901 12:07:54.228802 17 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/01/25 12:07:55.267
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/01/25 12:07:55.283
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/01/25 12:07:56.319
  I0901 12:07:56.364439 17 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/01/25 12:07:56.365
  I0901 12:07:56.381643 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8347" for this suite. @ 09/01/25 12:07:56.406
• [2.250 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/01/25 12:07:56.431
  I0901 12:07:56.431484 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:07:56.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:56.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:56.518
  STEP: create the container @ 09/01/25 12:07:56.529
  I0901 12:07:56.551751      17 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:07:56.552
  STEP: get the container status @ 09/01/25 12:08:00.607
  STEP: the container should be terminated @ 09/01/25 12:08:00.619
  STEP: the termination message should be set @ 09/01/25 12:08:00.62
  I0901 12:08:00.620208 17 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/01/25 12:08:00.62
  I0901 12:08:00.665941 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-971" for this suite. @ 09/01/25 12:08:00.683
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/01/25 12:08:00.716
  I0901 12:08:00.716540 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:08:00.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:00.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:00.751
  STEP: Creating configMap with name cm-test-opt-del-fe4df593-2443-46fd-b1b9-aeb841e19dac @ 09/01/25 12:08:00.78
  STEP: Creating configMap with name cm-test-opt-upd-4c6c6407-9ee9-48f2-8c92-334ae3172b67 @ 09/01/25 12:08:00.791
  STEP: Creating the pod @ 09/01/25 12:08:00.803
  STEP: Deleting configmap cm-test-opt-del-fe4df593-2443-46fd-b1b9-aeb841e19dac @ 09/01/25 12:08:02.953
  STEP: Updating configmap cm-test-opt-upd-4c6c6407-9ee9-48f2-8c92-334ae3172b67 @ 09/01/25 12:08:02.969
  STEP: Creating configMap with name cm-test-opt-create-d8bb21b1-bd65-4c99-a6ee-1b856153a256 @ 09/01/25 12:08:02.979
  STEP: waiting to observe update in volume @ 09/01/25 12:08:02.987
  I0901 12:09:24.500268 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8891" for this suite. @ 09/01/25 12:09:24.526
• [83.837 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/01/25 12:09:24.555
  I0901 12:09:24.555831 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:09:24.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:24.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:24.609
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:09:24.621
  STEP: Saw pod success @ 09/01/25 12:09:28.688
  I0901 12:09:28.707064 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-7b186efc-d5b7-4173-99db-85e526bf916c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:09:28.775
  I0901 12:09:28.829751 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1797" for this suite. @ 09/01/25 12:09:28.842
• [4.305 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:09:28.861
  I0901 12:09:28.861700 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 12:09:28.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:28.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:28.897
  STEP: creating @ 09/01/25 12:09:28.905
  STEP: getting @ 09/01/25 12:09:28.959
  STEP: listing in namespace @ 09/01/25 12:09:28.966
  STEP: patching @ 09/01/25 12:09:28.974
  STEP: deleting @ 09/01/25 12:09:28.993
  I0901 12:09:29.020144 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6590" for this suite. @ 09/01/25 12:09:29.033
• [0.187 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:257
  STEP: Creating a kubernetes client @ 09/01/25 12:09:29.048
  I0901 12:09:29.048381 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:09:29.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:29.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:29.091
  STEP: Setting up server cert @ 09/01/25 12:09:29.202
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:09:29.895
  STEP: Deploying the webhook pod @ 09/01/25 12:09:29.912
  STEP: Wait for the deployment to be ready @ 09/01/25 12:09:29.939
  I0901 12:09:29.960309 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 12:09:31.992
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:09:32.015
  I0901 12:09:33.016200 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/01/25 12:09:33.031
  I0901 12:09:33.092218 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create a pod that should be updated by the webhook @ 09/01/25 12:09:33.28
  I0901 12:09:33.462125 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8156" for this suite. @ 09/01/25 12:09:33.476
  STEP: Destroying namespace "webhook-markers-1741" for this suite. @ 09/01/25 12:09:33.56
• [4.542 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:217
  STEP: Creating a kubernetes client @ 09/01/25 12:09:33.591
  I0901 12:09:33.591603 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:09:33.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:33.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:33.636
  STEP: Setting up server cert @ 09/01/25 12:09:33.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:09:34.196
  STEP: Deploying the webhook pod @ 09/01/25 12:09:34.207
  STEP: Wait for the deployment to be ready @ 09/01/25 12:09:34.23
  I0901 12:09:34.246101 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 12:09:36.287
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:09:36.363
  I0901 12:09:37.363809 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:09:37.376249 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/01/25 12:09:37.911
  STEP: Creating a custom resource that should be denied by the webhook @ 09/01/25 12:09:37.954
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/01/25 12:09:40.086
  STEP: Updating the custom resource with disallowed data should be denied @ 09/01/25 12:09:40.113
  STEP: Deleting the custom resource should be denied @ 09/01/25 12:09:40.141
  STEP: Remove the offending key and value from the custom resource data @ 09/01/25 12:09:40.166
  STEP: Deleting the updated custom resource should be successful @ 09/01/25 12:09:40.201
  I0901 12:09:40.935244 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6873" for this suite. @ 09/01/25 12:09:40.953
  STEP: Destroying namespace "webhook-markers-9286" for this suite. @ 09/01/25 12:09:40.977
• [7.412 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:406
  STEP: Creating a kubernetes client @ 09/01/25 12:09:41.005
  I0901 12:09:41.005983 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 12:09:41.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:41.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:41.067
  STEP: Creating Indexed job @ 09/01/25 12:09:41.073
  STEP: Ensuring job reaches completions @ 09/01/25 12:09:41.091
  STEP: Ensuring pods with index for job exist @ 09/01/25 12:09:49.17
  I0901 12:09:49.196955 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3170" for this suite. @ 09/01/25 12:09:49.211
• [8.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/01/25 12:09:49.235
  I0901 12:09:49.235728 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:09:49.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:49.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:49.279
  I0901 12:09:49.303637 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9993" for this suite. @ 09/01/25 12:09:49.318
• [0.104 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1507
  STEP: Creating a kubernetes client @ 09/01/25 12:09:49.34
  I0901 12:09:49.340452 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:09:49.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:49.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:49.378
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3244 @ 09/01/25 12:09:49.386
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 12:09:49.403
  STEP: creating service externalsvc in namespace services-3244 @ 09/01/25 12:09:49.404
  I0901 12:09:49.441867 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 09/01/25 12:09:51.509
  I0901 12:09:51.546909 17 resource.go:344] Creating new exec pod
  I0901 12:09:53.602359 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3244 exec execpodwgrng -- /bin/sh -x -c nslookup clusterip-service.services-3244.svc.cluster.local'
  I0901 12:09:54.046853 17 builder.go:156] stderr: "+ nslookup clusterip-service.services-3244.svc.cluster.local\n"
  I0901 12:09:54.046987 17 builder.go:157] stdout: ";; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\n;; Got recursion not available from 10.233.0.10\nServer:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-3244.svc.cluster.local\tcanonical name = externalsvc.services-3244.svc.cluster.local.\nName:\texternalsvc.services-3244.svc.cluster.local\nAddress: 10.233.62.192\n;; Got recursion not available from 10.233.0.10\n\n"
  I0901 12:09:54.123255 17 service.go:1516] Cleaning up the ClusterIP to ExternalName test service
  I0901 12:09:54.145880 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3244" for this suite. @ 09/01/25 12:09:54.16
• [4.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:09:54.179
  I0901 12:09:54.179641 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:09:54.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:54.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:54.223
  STEP: Create a Replicaset @ 09/01/25 12:09:54.237
  STEP: Verify that the required pods have come up. @ 09/01/25 12:09:54.249
  I0901 12:09:54.258454 17 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0901 12:09:59.267244 17 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:09:59.267
  STEP: Getting /status @ 09/01/25 12:09:59.267
  I0901 12:09:59.291074 17 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/01/25 12:09:59.291
  I0901 12:09:59.320367 17 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/01/25 12:09:59.32
  I0901 12:09:59.326107 17 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0901 12:09:59.326355 17 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.326684 17 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.329381 17 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.330095 17 replica_set.go:688] Found replicaset test-rs in namespace replicaset-9823 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 12:09:59.330149 17 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/01/25 12:09:59.33
  I0901 12:09:59.330220 17 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:09:59.341724 17 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/01/25 12:09:59.341
  I0901 12:09:59.344888 17 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0901 12:09:59.345081 17 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.345365 17 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.345622 17 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.346314 17 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-9823 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:09:59.347337 17 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0901 12:09:59.347405 17 replica_set.go:724] Found replicaset test-rs in namespace replicaset-9823 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0901 12:09:59.347447 17 replica_set.go:735] Replicaset test-rs has a patched status
  I0901 12:09:59.347646 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9823" for this suite. @ 09/01/25 12:09:59.357
• [5.192 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:09:59.371
  I0901 12:09:59.371557 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:09:59.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:59.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:59.426
  I0901 12:10:03.475209 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7988" for this suite. @ 09/01/25 12:10:03.491
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:157
  STEP: Creating a kubernetes client @ 09/01/25 12:10:03.526
  I0901 12:10:03.526511 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:10:03.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:03.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:03.575
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:10:03.602
  STEP: create the pod with lifecycle hook @ 09/01/25 12:10:07.671
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:10:09.728
  STEP: check prestop hook @ 09/01/25 12:10:11.776
  I0901 12:10:11.806893 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6817" for this suite. @ 09/01/25 12:10:11.823
• [8.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/01/25 12:10:11.85
  I0901 12:10:11.850083 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pv @ 09/01/25 12:10:11.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:11.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:11.903
  STEP: Creating initial PV and PVC @ 09/01/25 12:10:11.915
  I0901 12:10:11.916133 17 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9226" @ 09/01/25 12:10:11.961
  STEP: Listing PVCs in namespace "pv-9226" @ 09/01/25 12:10:11.971
  STEP: Patching the PV "pv-9226-9s7bx" @ 09/01/25 12:10:11.98
  STEP: Patching the PVC "pvc-d4bvf" @ 09/01/25 12:10:12.004
  STEP: Getting PV "pv-9226-9s7bx" @ 09/01/25 12:10:12.021
  STEP: Getting PVC "pvc-d4bvf" @ 09/01/25 12:10:12.027
  STEP: Deleting PVC "pvc-d4bvf" @ 09/01/25 12:10:12.033
  STEP: Confirm deletion of PVC "pvc-d4bvf" @ 09/01/25 12:10:12.047
  STEP: Deleting PV "pv-9226-9s7bx" @ 09/01/25 12:10:14.065
  STEP: Confirm deletion of PV "pv-9226-9s7bx" @ 09/01/25 12:10:14.086
  STEP: Recreating another PV & PVC @ 09/01/25 12:10:16.114
  I0901 12:10:16.114152 17 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9226-v9r4v" @ 09/01/25 12:10:16.159
  STEP: Updating the PVC "pvc-b9cz7" @ 09/01/25 12:10:16.193
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-b9cz7=updated" @ 09/01/25 12:10:16.217
  STEP: Deleting PVC "pvc-b9cz7" via DeleteCollection @ 09/01/25 12:10:16.231
  STEP: Confirm deletion of PVC "pvc-b9cz7" @ 09/01/25 12:10:16.257
  STEP: Deleting PV "pv-9226-v9r4v" via DeleteCollection @ 09/01/25 12:10:18.343
  STEP: Confirm deletion of PV "pv-9226-v9r4v" @ 09/01/25 12:10:18.369
  I0901 12:10:20.393002 17 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 12:10:20.393569 17 pv.go:205] Deleting PersistentVolumeClaim "pvc-b9cz7"
  I0901 12:10:20.405811 17 pv.go:193] Deleting PersistentVolume "pv-9226-v9r4v"
  I0901 12:10:20.418617 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9226" for this suite. @ 09/01/25 12:10:20.437
• [8.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/01/25 12:10:20.464
  I0901 12:10:20.464928 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:10:20.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:20.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:20.518
  I0901 12:10:20.588647 17 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0901 12:10:20.588930 17 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0901 12:10:20.603872 17 service_accounts.go:281] created pod pod-service-account-mountsa
  I0901 12:10:20.603961 17 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0901 12:10:20.631057 17 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0901 12:10:20.631164 17 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0901 12:10:20.660914 17 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0901 12:10:20.661211 17 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0901 12:10:20.680346 17 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0901 12:10:20.680391 17 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0901 12:10:20.714606 17 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0901 12:10:20.714696 17 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0901 12:10:20.790451 17 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0901 12:10:20.790539 17 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0901 12:10:20.867843 17 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0901 12:10:20.867914 17 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0901 12:10:20.940368 17 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0901 12:10:20.940438 17 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0901 12:10:20.940642 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3889" for this suite. @ 09/01/25 12:10:21.113
• [1.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/01/25 12:10:21.471
  I0901 12:10:21.471599 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:10:21.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:21.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:21.702
  I0901 12:10:21.730573 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  W0901 12:10:21.736270      17 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001385420 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0901 12:10:21.759435      17 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0901 12:10:24.633399      17 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:10:24.633477      17 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:10:24.633547      17 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:10:24.633577      17 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:10:24.633638      17 warnings.go:110] "Warning: unknown field \"gamma\""
  I0901 12:10:25.267980 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4109" for this suite. @ 09/01/25 12:10:25.284
• [3.839 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/01/25 12:10:25.313
  I0901 12:10:25.313634 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/01/25 12:10:25.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:25.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:25.362
  STEP: Setting up the test @ 09/01/25 12:10:25.372
  STEP: Creating hostNetwork=false pod @ 09/01/25 12:10:25.372
  STEP: Creating hostNetwork=true pod @ 09/01/25 12:10:29.482
  STEP: Running the test @ 09/01/25 12:10:31.553
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/01/25 12:10:31.554
  I0901 12:10:31.555269 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:31.555423 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:31.555570 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:10:31.727832 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:31.728182 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:31.728244 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:31.728513 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:10:31.881818 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:31.882017 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:31.882048 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:31.882142 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 12:10:31.990856 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:31.991019 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:31.991045 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:31.991162 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 12:10:32.109152 17 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/01/25 12:10:32.109
  I0901 12:10:32.109415 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.109460 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.109617 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0901 12:10:32.268442 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:32.268575 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.268624 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.268742 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0901 12:10:32.411838 17 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/01/25 12:10:32.412
  I0901 12:10:32.412243 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.412354 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.412744 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:10:32.547976 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:32.548086 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.548170 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.548633 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:10:32.657578 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:32.657665 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.657686 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.657777 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 12:10:32.783986 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:32.784438 17 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6716 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:32.784515 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:32.784610 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6716/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 12:10:32.881903 17 exec_util.go:112] Exec stderr: ""
  I0901 12:10:32.883789 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6716" for this suite. @ 09/01/25 12:10:32.894
• [7.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/01/25 12:10:32.918
  I0901 12:10:32.918064 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:10:32.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:32.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:32.949
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:10:32.968
  STEP: Updating PodDisruptionBudget status @ 09/01/25 12:10:34.988
  STEP: Waiting for all pods to be running @ 09/01/25 12:10:35.02
  I0901 12:10:35.037028 17 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/01/25 12:10:37.037
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:10:37.085
  STEP: Patching PodDisruptionBudget status @ 09/01/25 12:10:37.118
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:10:37.152
  I0901 12:10:37.159122 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9628" for this suite. @ 09/01/25 12:10:37.195
• [4.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/01/25 12:10:37.219
  I0901 12:10:37.219766 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:10:37.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:37.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:37.256
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 12:10:37.311
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:10:37.326
  I0901 12:10:37.407894 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:10:37.408123 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:10:38.381021 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:10:38.381094 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:10:39.364209 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:10:39.364793 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:10:40.395937 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:10:40.396470 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/01/25 12:10:40.41
  STEP: DeleteCollection of the DaemonSets @ 09/01/25 12:10:40.436
  STEP: Verify that ReplicaSets have been deleted @ 09/01/25 12:10:40.482
  I0901 12:10:40.540756 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26011"},"items":null}

  I0901 12:10:40.555980 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26011"},"items":[{"metadata":{"name":"daemon-set-9mlds","generateName":"daemon-set-","namespace":"daemonsets-7894","uid":"9a60d2ce-4d06-42ff-9bf4-383293d1d41b","resourceVersion":"26009","generation":2,"creationTimestamp":"2025-09-01T12:10:37Z","deletionTimestamp":"2025-09-01T12:11:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e6417e66-2306-4757-abf2-1a2fa90b1958","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6417e66-2306-4757-abf2-1a2fa90b1958\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fl4sd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fl4sd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"wohnahxathu9-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["wohnahxathu9-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"}],"hostIP":"192.168.121.57","hostIPs":[{"ip":"192.168.121.57"}],"podIP":"10.233.64.38","podIPs":[{"ip":"10.233.64.38"}],"startTime":"2025-09-01T12:10:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:10:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://9588f2af1a460379f4d91bf6aa2111bf3aa94733d3ece80bcd017a4ab7143469","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-fl4sd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gw4mv","generateName":"daemon-set-","namespace":"daemonsets-7894","uid":"c4ab03bc-ae98-496c-950b-13361b33f00b","resourceVersion":"26011","generation":2,"creationTimestamp":"2025-09-01T12:10:37Z","deletionTimestamp":"2025-09-01T12:11:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e6417e66-2306-4757-abf2-1a2fa90b1958","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6417e66-2306-4757-abf2-1a2fa90b1958\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.238\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rrgl7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rrgl7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"wohnahxathu9-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["wohnahxathu9-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"}],"hostIP":"192.168.121.40","hostIPs":[{"ip":"192.168.121.40"}],"podIP":"10.233.65.238","podIPs":[{"ip":"10.233.65.238"}],"startTime":"2025-09-01T12:10:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:10:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://bb4f338d5245c4c6bc787c5daf96a9566429711652b4abee062b49bfb25db9d4","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-rrgl7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kb4qz","generateName":"daemon-set-","namespace":"daemonsets-7894","uid":"422c3275-3e8b-47b1-8a73-63b3d23faeba","resourceVersion":"26010","generation":2,"creationTimestamp":"2025-09-01T12:10:37Z","deletionTimestamp":"2025-09-01T12:11:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e6417e66-2306-4757-abf2-1a2fa90b1958","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6417e66-2306-4757-abf2-1a2fa90b1958\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:10:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.165\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-v7rgb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-v7rgb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"wohnahxathu9-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["wohnahxathu9-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:39Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:10:37Z"}],"hostIP":"192.168.121.15","hostIPs":[{"ip":"192.168.121.15"}],"podIP":"10.233.66.165","podIPs":[{"ip":"10.233.66.165"}],"startTime":"2025-09-01T12:10:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:10:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://16a4fab32f93f43dc15444a012251e9cddcf2ed670c041c31ce93aff2e6b25f6","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-v7rgb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0901 12:10:40.649725 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7894" for this suite. @ 09/01/25 12:10:40.66
• [3.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:10:40.698
  I0901 12:10:40.698705 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:10:40.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:40.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:40.756
  STEP: creating the pod @ 09/01/25 12:10:40.764
  STEP: submitting the pod to kubernetes @ 09/01/25 12:10:40.764
  STEP: verifying QOS class is set on the pod @ 09/01/25 12:10:40.788
  I0901 12:10:40.801257 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7671" for this suite. @ 09/01/25 12:10:40.82
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/01/25 12:10:40.85
  I0901 12:10:40.850055 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:10:40.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:40.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:40.882
  STEP: creating a watch on configmaps @ 09/01/25 12:10:40.887
  STEP: creating a new configmap @ 09/01/25 12:10:40.902
  STEP: modifying the configmap once @ 09/01/25 12:10:40.914
  STEP: closing the watch once it receives two notifications @ 09/01/25 12:10:40.935
  I0901 12:10:40.936447 17 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5078  9c6ed63a-0f3b-478b-bbb4-1235259c32b1 26024 0 2025-09-01 12:10:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 12:10:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:10:40.937158 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5078  9c6ed63a-0f3b-478b-bbb4-1235259c32b1 26025 0 2025-09-01 12:10:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 12:10:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/01/25 12:10:40.937
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/01/25 12:10:40.958
  STEP: deleting the configmap @ 09/01/25 12:10:40.962
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/01/25 12:10:40.98
  I0901 12:10:40.980896 17 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5078  9c6ed63a-0f3b-478b-bbb4-1235259c32b1 26026 0 2025-09-01 12:10:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 12:10:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:10:40.981674 17 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5078  9c6ed63a-0f3b-478b-bbb4-1235259c32b1 26027 0 2025-09-01 12:10:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 12:10:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:10:40.982705 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5078" for this suite. @ 09/01/25 12:10:40.999
• [0.170 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/01/25 12:10:41.02
  I0901 12:10:41.020796 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:10:41.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:41.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:41.059
  STEP: creating the pod @ 09/01/25 12:10:41.066
  STEP: submitting the pod to kubernetes @ 09/01/25 12:10:41.067
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:10:43.127
  STEP: updating the pod @ 09/01/25 12:10:43.142
  I0901 12:10:43.665571 17 pod_client.go:186] Successfully updated pod "pod-update-65b35347-4f09-453f-856e-f8f0c21f0039"
  STEP: verifying the updated pod is in kubernetes @ 09/01/25 12:10:43.671
  I0901 12:10:43.677543 17 pods.go:391] Pod update OK
  I0901 12:10:43.678019 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9879" for this suite. @ 09/01/25 12:10:43.69
• [2.685 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:10:43.706
  I0901 12:10:43.706541 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:10:43.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:43.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:43.736
  STEP: creating pod @ 09/01/25 12:10:43.741
  I0901 12:10:45.796191 17 pods.go:83] Pod pod-hostip-7eb283e1-0810-4224-83ac-f8833f9f716f has hostIP: 192.168.121.57
  I0901 12:10:45.796525 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4471" for this suite. @ 09/01/25 12:10:45.807
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/01/25 12:10:45.828
  I0901 12:10:45.828967 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 12:10:45.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:45.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:45.867
  STEP: Setting up server cert @ 09/01/25 12:10:45.873
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:10:47.915
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:10:47.93
  STEP: Wait for the deployment to be ready @ 09/01/25 12:10:47.954
  I0901 12:10:47.967983 17 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 12:10:50.011
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:10:50.05
  I0901 12:10:51.051575 17 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 12:10:51.076197 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Creating a v1 custom resource @ 09/01/25 12:10:53.921
  STEP: v2 custom resource should be converted @ 09/01/25 12:10:53.934
  I0901 12:10:54.547788 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3802" for this suite. @ 09/01/25 12:10:54.558
• [8.746 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/01/25 12:10:54.577
  I0901 12:10:54.577784 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:10:54.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:10:54.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:10:54.623
  STEP: creating the pod @ 09/01/25 12:10:54.633
  STEP: waiting for pod running @ 09/01/25 12:10:54.674
  STEP: creating a file in subpath @ 09/01/25 12:10:58.712
  I0901 12:10:58.727171 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6218 PodName:var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:58.727725 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:58.727981 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-6218/pods/var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/01/25 12:10:58.872
  I0901 12:10:58.884698 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6218 PodName:var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:10:58.884780 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:10:58.885083 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-6218/pods/var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/01/25 12:10:58.984
  I0901 12:10:59.531234 17 pod_client.go:186] Successfully updated pod "var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf"
  STEP: waiting for annotated pod running @ 09/01/25 12:10:59.531
  STEP: deleting the pod gracefully @ 09/01/25 12:10:59.546
  I0901 12:10:59.546968 17 delete.go:78] Deleting pod "var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf" in namespace "var-expansion-6218"
  I0901 12:10:59.567605 17 delete.go:86] Wait up to 5m0s for pod "var-expansion-1b0a32e7-1782-4a4f-9d7c-b02d03e5a1cf" to be fully deleted
  I0901 12:11:31.816769 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6218" for this suite. @ 09/01/25 12:11:31.839
• [37.294 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:218
  STEP: Creating a kubernetes client @ 09/01/25 12:11:31.876
  I0901 12:11:31.877146 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:11:31.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:31.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:31.925
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:11:31.95
  STEP: create the pod with lifecycle hook @ 09/01/25 12:11:36.018
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:11:38.084
  STEP: check prestop hook @ 09/01/25 12:11:40.13
  I0901 12:11:40.147928 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4609" for this suite. @ 09/01/25 12:11:40.158
• [8.300 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1826
  STEP: Creating a kubernetes client @ 09/01/25 12:11:40.177
  I0901 12:11:40.177650 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:11:40.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:40.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:40.214
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 12:11:40.224
  I0901 12:11:40.224955 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8902 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 12:11:40.434774 17 builder.go:156] stderr: ""
  I0901 12:11:40.434996 17 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/01/25 12:11:40.435
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 12:11:45.485
  I0901 12:11:45.486497 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8902 get pod e2e-test-httpd-pod -o json'
  I0901 12:11:45.690791 17 builder.go:156] stderr: ""
  I0901 12:11:45.691393 17 builder.go:157] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-01T12:11:40Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8902\",\n        \"resourceVersion\": \"26453\",\n        \"uid\": \"d38559f8-6845-47be-a714-6b61b5d74ccf\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ddk7s\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"wohnahxathu9-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ddk7s\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:11:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:11:40Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:11:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:11:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T12:11:40Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://49236e39c64626ec5495e09af16b2a907b66ee575bc9a74e80b80e4d50dcc4a2\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-01T12:11:41Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ddk7s\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.121.15\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.15\"\n            }\n        ],\n        \"observedGeneration\": 1,\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.241\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.241\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-01T12:11:40Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/01/25 12:11:45.691
  I0901 12:11:45.691693 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8902 replace -f -'
  I0901 12:11:46.046611 17 builder.go:156] stderr: ""
  I0901 12:11:46.046684 17 builder.go:157] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.37.0-1 @ 09/01/25 12:11:46.046
  I0901 12:11:46.054124 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8902 delete pods e2e-test-httpd-pod'
  I0901 12:11:48.085086 17 builder.go:156] stderr: ""
  I0901 12:11:48.085175 17 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-8902 namespace\n"
  I0901 12:11:48.085450 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8902" for this suite. @ 09/01/25 12:11:48.103
• [7.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/01/25 12:11:48.125
  I0901 12:11:48.125070 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:11:48.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:48.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:48.165
  STEP: Creating configMap with name projected-configmap-test-volume-137d486d-13e6-43da-99b1-c773e4e07b0d @ 09/01/25 12:11:48.172
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:11:48.185
  STEP: Saw pod success @ 09/01/25 12:11:52.262
  I0901 12:11:52.273254 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-configmaps-2a5c84ff-fd71-43c2-baab-d709710900b1 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:11:52.296
  I0901 12:11:52.366871 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2214" for this suite. @ 09/01/25 12:11:52.377
• [4.266 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/01/25 12:11:52.391
  I0901 12:11:52.391393 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:11:52.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:52.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:52.469
  STEP: Creating pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399 @ 09/01/25 12:11:52.476
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:11:54.522
  I0901 12:11:54.532459 17 container_probe.go:1749] Initial restart count of pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 is 0
  I0901 12:11:54.542410 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:11:56.564775 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:11:58.580223 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:00.597986 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:02.609110 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:04.623730 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:06.638951 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:08.652473 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:10.665864 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:12.683939 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:14.698782 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:16.714078 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:18.732110 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:20.745837 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:22.755530 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:24.767081 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:26.798528 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:28.815189 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:30.828250 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:32.844162 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:34.859432 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:36.874047 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:38.889856 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:40.909034 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:42.921066 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:44.933913 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:46.947788 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:48.967894 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:50.981470 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:52.996633 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:55.012380 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:57.029743 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:12:59.045049 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:01.058196 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:03.069442 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:05.080424 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:07.093919 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:09.110597 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:11.121570 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:13.137474 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:15.150438 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:17.168683 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:19.187946 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:21.218859 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:23.229236 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:25.243833 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:27.257582 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:29.272258 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:31.286707 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:33.299394 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:35.315159 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:37.329402 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:39.346601 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:41.358932 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:43.373889 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:45.385665 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:47.401915 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:49.423141 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:51.437733 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:53.453635 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:55.467950 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:57.480115 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:13:59.497535 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:01.524926 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:03.540610 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:05.556817 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:07.571267 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:09.589037 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:11.599980 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:13.612125 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:15.623822 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:17.638623 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:19.652391 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:21.665418 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:23.678878 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:25.693542 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:27.709452 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:29.722562 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:31.737012 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:33.751092 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:35.767605 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:37.780433 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:39.796837 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:41.808321 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:43.823923 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:45.838111 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:47.851016 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:49.873535 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:51.886198 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:53.903027 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:55.924027 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:57.939658 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:14:59.952023 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:01.967864 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:03.976761 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:05.992615 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:08.009892 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:10.024511 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:12.039248 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:14.054897 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:16.068791 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:18.081004 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:20.097088 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:22.111795 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:24.126748 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:26.140185 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:28.153595 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:30.168989 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:32.182607 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:34.197427 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:36.211008 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:38.223253 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:40.237863 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:42.249630 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:44.263229 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:46.273898 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:48.287190 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:50.302419 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:52.340679 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  I0901 12:15:54.358102 17 container_probe.go:1759] Get pod test-grpc-6b9b9bf7-fe8b-4e64-837a-0e808667b241 in namespace container-probe-6399
  STEP: deleting the pod @ 09/01/25 12:15:56.361
  I0901 12:15:56.418629 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6399" for this suite. @ 09/01/25 12:15:56.433
• [244.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/01/25 12:15:56.45
  I0901 12:15:56.450759 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:15:56.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:56.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:56.499
  I0901 12:15:58.611905 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2794" for this suite. @ 09/01/25 12:15:58.627
• [2.197 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:816
  STEP: Creating a kubernetes client @ 09/01/25 12:15:58.648
  I0901 12:15:58.648938 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:15:58.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:58.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:58.688
  STEP: Setting up server cert @ 09/01/25 12:15:58.751
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:15:59.475
  STEP: Deploying the webhook pod @ 09/01/25 12:15:59.497
  STEP: Wait for the deployment to be ready @ 09/01/25 12:15:59.532
  I0901 12:15:59.553702 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 12:16:01.612
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:16:01.64
  I0901 12:16:02.641095 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 12:16:02.663
  I0901 12:16:02.828910 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7191" for this suite. @ 09/01/25 12:16:02.842
  STEP: Destroying namespace "webhook-markers-8617" for this suite. @ 09/01/25 12:16:02.873
• [4.261 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/01/25 12:16:02.912
  I0901 12:16:02.912458 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:16:02.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:02.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:02.951
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 12:16:02.961
  STEP: Saw pod success @ 09/01/25 12:16:07.015
  I0901 12:16:07.025569 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-26ff7f03-0b78-4d6a-b141-589559dd4902 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:16:07.085
  I0901 12:16:07.121854 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9877" for this suite. @ 09/01/25 12:16:07.133
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:16:07.171
  I0901 12:16:07.171257 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:16:07.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:07.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:07.218
  STEP: Creating secret with name secret-test-56ceabf6-5bc2-4e11-ae86-c7b6d7fdb6db @ 09/01/25 12:16:07.225
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:16:07.236
  STEP: Saw pod success @ 09/01/25 12:16:11.296
  I0901 12:16:11.303841 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-4328c75a-72be-4fae-ae80-174f420da0c9 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:16:11.321
  I0901 12:16:11.356705 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5597" for this suite. @ 09/01/25 12:16:11.371
• [4.218 seconds]
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:198
  STEP: Creating a kubernetes client @ 09/01/25 12:16:11.389
  I0901 12:16:11.389658 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 12:16:11.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:16:11.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:16:11.431
  STEP: Looking for a node to schedule job pods @ 09/01/25 12:16:11.439
  STEP: Creating a job @ 09/01/25 12:16:11.47
  STEP: Waiting for all the pods to be ready @ 09/01/25 12:16:11.485
  STEP: Fetch all running pods @ 09/01/25 12:16:15.534
  STEP: Evict all the Pods @ 09/01/25 12:16:15.547
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-db5mx/job-6234 @ 09/01/25 12:16:15.547
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-mdz5f/job-6234 @ 09/01/25 12:16:15.548
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-nsl4b/job-6234 @ 09/01/25 12:16:15.549
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-mdz5f/job-6234 to be deleted @ 09/01/25 12:16:15.618
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-db5mx/job-6234 to be deleted @ 09/01/25 12:16:15.619
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-nsl4b/job-6234 to be deleted @ 09/01/25 12:16:15.62
  STEP: Ensuring job reaches completions @ 09/01/25 12:16:21.702
  I0901 12:17:06.059959 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6234" for this suite. @ 09/01/25 12:17:06.084
• [54.714 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:17:06.104
  I0901 12:17:06.104262 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:17:06.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:06.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:06.16
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/01/25 12:17:06.167
  STEP: When a replication controller with a matching selector is created @ 09/01/25 12:17:08.237
  STEP: Then the orphan pod is adopted @ 09/01/25 12:17:08.264
  I0901 12:17:09.288766 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-848" for this suite. @ 09/01/25 12:17:09.304
• [3.221 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/01/25 12:17:09.326
  I0901 12:17:09.326787 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:17:09.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:09.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:09.372
  STEP: Creating pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719 @ 09/01/25 12:17:09.383
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:17:11.439
  I0901 12:17:11.447231 17 container_probe.go:1749] Initial restart count of pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 is 0
  I0901 12:17:11.458875 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:13.472995 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:15.490202 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:17.502125 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:19.518104 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:21.535328 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:23.554545 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:25.564761 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:27.580861 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:29.590649 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:31.602793 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:33.622892 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:35.636159 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:37.651847 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:39.669999 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:41.685949 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:43.696509 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:45.713710 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:47.730459 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:49.748227 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:51.762194 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:53.775663 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:55.792934 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:57.810022 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:17:59.824418 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:01.837509 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:03.852825 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:05.865901 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:07.879207 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:09.894271 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:11.914783 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:13.929549 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:15.951860 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:17.966949 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:19.986456 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:22.002990 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:24.019599 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:26.031586 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:28.043357 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:30.058915 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:32.070228 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:34.088361 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:36.107458 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:38.121677 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:40.133702 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:42.146990 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:44.161414 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:46.176828 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:48.193656 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:50.209947 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:52.222592 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:54.236179 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:56.259064 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:18:58.272064 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:00.287919 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:02.319636 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:04.333208 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:06.346163 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:08.356743 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:10.368807 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:12.382871 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:14.396394 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:16.410241 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:18.427801 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:20.445629 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:22.457662 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:24.478203 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:26.492744 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:28.503926 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:30.516462 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:32.534144 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:34.549017 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:36.564680 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:38.577006 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:40.592109 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:42.608628 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:44.622241 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:46.637726 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:48.652442 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:50.663246 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:52.675653 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:54.689657 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:56.702559 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:19:58.711450 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:00.726718 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:02.751380 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:04.764776 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:06.780667 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:08.798608 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:10.814566 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:12.830437 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:14.849175 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:16.865232 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:18.882163 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:20.892637 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:22.907355 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:24.923881 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:26.937789 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:28.946888 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:30.960228 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:32.975588 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:34.990183 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:37.009745 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:39.021609 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:41.035852 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:43.050609 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:45.069210 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:47.084689 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:49.102947 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:51.124641 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:53.139152 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:55.151520 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:57.168442 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:20:59.189863 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:01.205166 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:03.224388 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:05.236469 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:07.257019 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:09.273969 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  I0901 12:21:11.288659 17 container_probe.go:1759] Get pod liveness-2ecfd3a5-30b9-43a2-b72a-fdb8e9f19732 in namespace container-probe-2719
  STEP: deleting the pod @ 09/01/25 12:21:13.291
  I0901 12:21:13.329790 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2719" for this suite. @ 09/01/25 12:21:13.355
• [244.044 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/01/25 12:21:13.372
  I0901 12:21:13.372912 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:21:13.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:21:13.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:21:13.427
  STEP: creating the policy @ 09/01/25 12:21:13.448
  STEP: waiting until the marker is denied @ 09/01/25 12:21:13.487
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 12:21:13.816
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 12:21:13.846
  I0901 12:21:13.902718 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3716" for this suite. @ 09/01/25 12:21:13.914
• [0.564 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/01/25 12:21:13.939
  I0901 12:21:13.939124 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:21:13.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:21:13.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:21:14.008
  I0901 12:21:14.047209 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 12:22:14.069852 17 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:22:14.087
  I0901 12:22:14.087329 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:22:14.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:14.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:14.143
  STEP: Finding an available node @ 09/01/25 12:22:14.154
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:22:14.154
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:22:16.237
  I0901 12:22:16.273807 17 preemption.go:717] found a healthy node: wohnahxathu9-2
  STEP: Adding a custom resource @ 09/01/25 12:22:16.282
  I0901 12:22:22.463503 17 preemption.go:836] pods created so far: [1 1 1]
  I0901 12:22:22.463643 17 preemption.go:837] length of pods created so far: 3
  I0901 12:22:24.494908 17 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 09/01/25 12:22:31.496
  STEP: Removing a custom resource @ 09/01/25 12:22:31.655
  STEP: Removing a custom resource @ 09/01/25 12:22:31.677
  STEP: Removing a custom resource @ 09/01/25 12:22:31.702
  I0901 12:22:31.726003 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2620" for this suite. @ 09/01/25 12:22:31.738
  I0901 12:22:31.756638 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7993" for this suite. @ 09/01/25 12:22:31.841
• [77.926 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:460
  STEP: Creating a kubernetes client @ 09/01/25 12:22:31.867
  I0901 12:22:31.867949 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:22:31.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:31.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:31.917
  STEP: Counting existing ResourceQuota @ 09/01/25 12:22:31.928
  STEP: Creating a ResourceQuota @ 09/01/25 12:22:36.948
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:22:36.964
  I0901 12:22:38.983780 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002563a40>: 
          metadata:
            creationTimestamp: "2025-09-01T12:22:36Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:22:36Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:22:37Z"
            name: test-quota
            namespace: resourcequota-7831
            resourceVersion: "28623"
            uid: 0cdd383e-6025-4046-84ed-2adef22d7ffc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicaSet @ 09/01/25 12:22:38.986
  STEP: Ensuring resource quota status captures replicaset creation @ 09/01/25 12:22:39.016
  I0901 12:22:39.029160 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003657900>: 
          metadata:
            creationTimestamp: "2025-09-01T12:22:36Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:22:36Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:22:37Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:count/replicasets.apps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:22:38Z"
            name: test-quota
            namespace: resourcequota-7831
            resourceVersion: "28659"
            uid: 0cdd383e-6025-4046-84ed-2adef22d7ffc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "1"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicaSet @ 09/01/25 12:22:39.032
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:22:39.046
  I0901 12:22:41.069059 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00249c640>: 
          metadata:
            creationTimestamp: "2025-09-01T12:22:36Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:22:36Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:22:39Z"
            name: test-quota
            namespace: resourcequota-7831
            resourceVersion: "28666"
            uid: 0cdd383e-6025-4046-84ed-2adef22d7ffc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 12:22:41.070574 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7831" for this suite. @ 09/01/25 12:22:41.087
• [9.237 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1469
  STEP: Creating a kubernetes client @ 09/01/25 12:22:41.109
  I0901 12:22:41.109169 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:22:41.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:41.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:41.187
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4678 @ 09/01/25 12:22:41.202
  STEP: changing the ExternalName service to type=NodePort @ 09/01/25 12:22:41.223
  I0901 12:22:41.322609 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 12:22:43.332101 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 22, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 22, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 22, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 22, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-c9797755b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:22:45.340206 17 resource.go:344] Creating new exec pod
  I0901 12:22:47.447035 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:22:47.904660 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.25.65) 80 port [tcp/http] succeeded!\n"
  I0901 12:22:47.904956 17 builder.go:157] stdout: ""
  I0901 12:22:48.447426 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:22:48.815642 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.25.65) 80 port [tcp/http] succeeded!\n"
  I0901 12:22:48.816725 17 builder.go:157] stdout: ""
  I0901 12:22:49.447139 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:22:49.787993 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.25.65) 80 port [tcp/http] succeeded!\n"
  I0901 12:22:49.788105 17 builder.go:157] stdout: "externalname-service-c9797755b-t6wdl"
  I0901 12:22:49.789158 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.65 80'
  I0901 12:22:50.125506 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.65 80\nConnection to 10.233.25.65 80 port [tcp/http] succeeded!\n"
  I0901 12:22:50.125746 17 builder.go:157] stdout: ""
  I0901 12:22:50.789887 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.65 80'
  I0901 12:22:51.150776 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.65 80\nConnection to 10.233.25.65 80 port [tcp/http] succeeded!\n"
  I0901 12:22:51.150892 17 builder.go:157] stdout: ""
  I0901 12:22:51.789759 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.65 80'
  I0901 12:22:52.165169 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.65 80\nConnection to 10.233.25.65 80 port [tcp/http] succeeded!\n"
  I0901 12:22:52.166799 17 builder.go:157] stdout: ""
  I0901 12:22:52.789257 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.65 80'
  I0901 12:22:53.148226 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.65 80\nConnection to 10.233.25.65 80 port [tcp/http] succeeded!\n"
  I0901 12:22:53.148644 17 builder.go:157] stdout: ""
  I0901 12:22:53.790482 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.65 80'
  I0901 12:22:54.087907 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.65 80\nConnection to 10.233.25.65 80 port [tcp/http] succeeded!\n"
  I0901 12:22:54.088066 17 builder.go:157] stdout: "externalname-service-c9797755b-t6wdl"
  I0901 12:22:54.088769 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.57 31900'
  I0901 12:22:54.431429 17 builder.go:156] stderr: "+ nc -v -t -w 2 192.168.121.57 31900\n+ echo hostName\nConnection to 192.168.121.57 31900 port [tcp/*] succeeded!\n"
  I0901 12:22:54.431656 17 builder.go:157] stdout: "externalname-service-c9797755b-r7rb9"
  I0901 12:22:54.432416 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4678 exec execpodlbhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.40 31900'
  I0901 12:22:54.760869 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.40 31900\nConnection to 192.168.121.40 31900 port [tcp/*] succeeded!\n"
  I0901 12:22:54.760991 17 builder.go:157] stdout: "externalname-service-c9797755b-r7rb9"
  I0901 12:22:54.761241 17 service.go:1478] Cleaning up the ExternalName to NodePort test service
  I0901 12:22:54.816787 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4678" for this suite. @ 09/01/25 12:22:54.826
• [13.731 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/01/25 12:22:54.84
  I0901 12:22:54.840398 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:22:54.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:54.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:54.884
  STEP: Creating a test namespace @ 09/01/25 12:22:54.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:54.917
  STEP: Creating a service in the namespace @ 09/01/25 12:22:54.925
  STEP: Deleting the namespace @ 09/01/25 12:22:54.945
  STEP: Waiting for the namespace to be removed. @ 09/01/25 12:22:54.96
  STEP: Recreating the namespace @ 09/01/25 12:23:01.982
  STEP: Verifying there is no service in the namespace @ 09/01/25 12:23:02.017
  I0901 12:23:02.026019 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4136" for this suite. @ 09/01/25 12:23:02.035
  STEP: Destroying namespace "nsdeletetest-8007" for this suite. @ 09/01/25 12:23:02.052
  I0901 12:23:02.059613 17 framework.go:370] Namespace nsdeletetest-8007 was already deleted
  STEP: Destroying namespace "nsdeletetest-7248" for this suite. @ 09/01/25 12:23:02.059
• [7.231 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:645
  STEP: Creating a kubernetes client @ 09/01/25 12:23:02.071
  I0901 12:23:02.071997 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:23:02.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:02.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:02.135
  I0901 12:23:06.317087 17 security_context.go:652] Got logs for pod "busybox-privileged-false-ddf0e31b-eeaf-44be-8c1d-41b16ae077ad": "ip: RTNETLINK answers: Operation not permitted\n"
  I0901 12:23:06.317495 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5081" for this suite. @ 09/01/25 12:23:06.331
• [4.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:23:06.359
  I0901 12:23:06.360056 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:23:06.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:06.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:06.427
  STEP: reading a file in the container @ 09/01/25 12:23:08.514
  I0901 12:23:08.514690 17 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6534 pod-service-account-30ba63e6-46e8-454f-a485-25e46648aa95 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/01/25 12:23:08.858
  I0901 12:23:08.859233 17 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6534 pod-service-account-30ba63e6-46e8-454f-a485-25e46648aa95 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/01/25 12:23:09.167
  I0901 12:23:09.168473 17 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6534 pod-service-account-30ba63e6-46e8-454f-a485-25e46648aa95 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0901 12:23:09.482998 17 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-6534"
  I0901 12:23:09.495833 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6534" for this suite. @ 09/01/25 12:23:09.514
• [3.176 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/01/25 12:23:09.535
  I0901 12:23:09.535791 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename servicecidr @ 09/01/25 12:23:09.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:09.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:09.602
  STEP: getting @ 09/01/25 12:23:09.607
  STEP: getting /status @ 09/01/25 12:23:09.618
  STEP: listing @ 09/01/25 12:23:09.626
  STEP: watching @ 09/01/25 12:23:09.639
  I0901 12:23:09.648452 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-8614" for this suite. @ 09/01/25 12:23:09.66
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:23:09.681
  I0901 12:23:09.681699 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:23:09.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:09.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:09.733
  I0901 12:23:09.781360 17 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/01/25 12:23:09.797
  I0901 12:23:09.803599 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:09.803678 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/01/25 12:23:09.803
  I0901 12:23:09.903754 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:09.903826 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:23:10.901772 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:10.901889 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:23:11.899253 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 12:23:11.899443 17 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/01/25 12:23:11.907
  I0901 12:23:11.962613 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:11.962707 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/01/25 12:23:11.962
  I0901 12:23:12.004541 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:12.004624 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:23:13.010431 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:13.010575 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:23:14.047923 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:14.048070 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:23:15.007947 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 12:23:15.008378 17 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:23:15.024
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3070, will wait for the garbage collector to delete the pods @ 09/01/25 12:23:15.024
  I0901 12:23:15.098502 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.572564ms
  I0901 12:23:15.199315 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.757173ms
  I0901 12:23:17.007193 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:23:17.007348 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:23:17.020260 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29033"},"items":null}

  I0901 12:23:17.030153 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29033"},"items":null}

  I0901 12:23:17.104059 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3070" for this suite. @ 09/01/25 12:23:17.144
• [7.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/01/25 12:23:17.162
  I0901 12:23:17.163007 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:23:17.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:17.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:17.227
  STEP: Creating the pod @ 09/01/25 12:23:17.239
  I0901 12:23:19.865414 17 pod_client.go:186] Successfully updated pod "labelsupdatee37549dd-f730-4ca0-b0e0-34eac1a88171"
  I0901 12:23:21.928487 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9443" for this suite. @ 09/01/25 12:23:21.944
• [4.806 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:639
  STEP: Creating a kubernetes client @ 09/01/25 12:23:21.968
  I0901 12:23:21.968987 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:23:21.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:22.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:22.026
  STEP: Setting up server cert @ 09/01/25 12:23:22.094
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:23:23.376
  STEP: Deploying the webhook pod @ 09/01/25 12:23:23.392
  STEP: Wait for the deployment to be ready @ 09/01/25 12:23:23.434
  I0901 12:23:23.461938 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 12:23:25.518
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:23:25.551
  I0901 12:23:26.552431 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 12:23:26.728
  STEP: Creating a configMap that should be mutated @ 09/01/25 12:23:26.774
  STEP: Deleting the collection of validation webhooks @ 09/01/25 12:23:26.852
  STEP: Creating a configMap that should not be mutated @ 09/01/25 12:23:26.992
  I0901 12:23:27.085265 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1895" for this suite. @ 09/01/25 12:23:27.096
  STEP: Destroying namespace "webhook-markers-2234" for this suite. @ 09/01/25 12:23:27.115
• [5.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/01/25 12:23:27.138
  I0901 12:23:27.138820 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename csi-storageclass @ 09/01/25 12:23:27.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:27.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:27.215
  STEP: Creating a StorageClass @ 09/01/25 12:23:27.222
  STEP: Get StorageClass "e2e-qhslw" @ 09/01/25 12:23:27.238
  STEP: Patching the StorageClass "e2e-qhslw" @ 09/01/25 12:23:27.244
  STEP: Delete StorageClass "e2e-qhslw" @ 09/01/25 12:23:27.262
  STEP: Confirm deletion of StorageClass "e2e-qhslw" @ 09/01/25 12:23:27.274
  STEP: Create a replacement StorageClass @ 09/01/25 12:23:27.28
  STEP: Updating StorageClass "e2e-v2-t6jz6" @ 09/01/25 12:23:27.298
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-t6jz6=updated" @ 09/01/25 12:23:27.319
  STEP: Deleting StorageClass "e2e-v2-t6jz6" via DeleteCollection @ 09/01/25 12:23:27.324
  STEP: Confirm deletion of StorageClass "e2e-v2-t6jz6" @ 09/01/25 12:23:27.339
  I0901 12:23:27.346680 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2007" for this suite. @ 09/01/25 12:23:27.356
• [0.231 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/01/25 12:23:27.37
  I0901 12:23:27.370806 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:23:27.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:27.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:27.415
  I0901 12:23:27.421811 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 12:23:30.11
  I0901 12:23:30.111462 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4183 --namespace=crd-publish-openapi-4183 create -f -'
  I0901 12:23:30.559753 17 builder.go:156] stderr: ""
  I0901 12:23:30.559860 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4183-4569-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:23:30.560187 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4183 --namespace=crd-publish-openapi-4183 delete e2e-test-crd-publish-openapi-4183-4569-crds test-cr'
  I0901 12:23:30.898660 17 builder.go:156] stderr: ""
  I0901 12:23:30.899062 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4183-4569-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-4183 namespace\n"
  I0901 12:23:30.899849 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4183 --namespace=crd-publish-openapi-4183 apply -f -'
  I0901 12:23:31.145001 17 builder.go:156] stderr: ""
  I0901 12:23:31.145104 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4183-4569-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:23:31.145746 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4183 --namespace=crd-publish-openapi-4183 delete e2e-test-crd-publish-openapi-4183-4569-crds test-cr'
  I0901 12:23:31.382764 17 builder.go:156] stderr: ""
  I0901 12:23:31.382869 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4183-4569-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-4183 namespace\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/01/25 12:23:31.382
  I0901 12:23:31.383350 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-4183 explain e2e-test-crd-publish-openapi-4183-4569-crds'
  I0901 12:23:31.569406 17 builder.go:156] stderr: ""
  I0901 12:23:31.569609 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4183-4569-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0901 12:23:34.269963 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4183" for this suite. @ 09/01/25 12:23:34.3
• [6.948 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:23:34.318
  I0901 12:23:34.318751 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:23:34.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:34.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:34.372
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/01/25 12:23:34.377
  I0901 12:23:34.401358 17 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0901 12:23:39.466015 17 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:23:39.466
  STEP: getting scale subresource @ 09/01/25 12:23:39.466
  STEP: updating a scale subresource @ 09/01/25 12:23:39.478
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/01/25 12:23:39.496
  STEP: Patch a scale subresource @ 09/01/25 12:23:39.506
  I0901 12:23:39.557030 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8690" for this suite. @ 09/01/25 12:23:39.576
• [5.290 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/01/25 12:23:39.609
  I0901 12:23:39.609082 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:23:39.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:39.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:39.659
  STEP: getting /apis @ 09/01/25 12:23:39.683
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 12:23:39.695
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 12:23:39.698
  STEP: creating @ 09/01/25 12:23:39.701
  STEP: getting @ 09/01/25 12:23:39.742
  STEP: listing @ 09/01/25 12:23:39.748
  STEP: watching @ 09/01/25 12:23:39.755
  I0901 12:23:39.755213 17 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/01/25 12:23:39.757
  STEP: updating @ 09/01/25 12:23:39.77
  I0901 12:23:39.790203 17 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 12:23:39.79
  STEP: deleting a collection @ 09/01/25 12:23:39.818
  I0901 12:23:39.859911 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1829" for this suite. @ 09/01/25 12:23:39.872
• [0.282 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/01/25 12:23:39.891
  I0901 12:23:39.892056 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl-logs @ 09/01/25 12:23:39.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:39.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:39.935
  STEP: creating a pod @ 09/01/25 12:23:39.942
  I0901 12:23:39.942648 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.56 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0901 12:23:40.127947 17 builder.go:156] stderr: ""
  I0901 12:23:40.128615 17 builder.go:157] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/01/25 12:23:40.129
  I0901 12:23:40.129506 17 resource.go:396] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0901 12:23:42.151740 17 resource.go:418] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/01/25 12:23:42.151
  I0901 12:23:42.152506 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator'
  I0901 12:23:42.432860 17 builder.go:156] stderr: ""
  I0901 12:23:42.433402 17 builder.go:157] stdout: "I0901 12:23:41.353440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dl72 524\nI0901 12:23:41.554185       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/5gvx 471\nI0901 12:23:41.753867       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/r9sf 403\nI0901 12:23:41.953916       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/7v8 223\nI0901 12:23:42.154314       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/25cr 546\nI0901 12:23:42.354479       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/6v7 387\n"
  STEP: limiting log lines @ 09/01/25 12:23:42.433
  I0901 12:23:42.434141 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator --tail=1'
  I0901 12:23:42.701197 17 builder.go:156] stderr: ""
  I0901 12:23:42.701407 17 builder.go:157] stdout: "I0901 12:23:42.553703       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/24b 348\n"
  I0901 12:23:42.701452 17 logs.go:180] got output "I0901 12:23:42.553703       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/24b 348\n"
  STEP: limiting log bytes @ 09/01/25 12:23:42.701
  I0901 12:23:42.702711 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator --limit-bytes=1'
  I0901 12:23:42.959633 17 builder.go:156] stderr: ""
  I0901 12:23:42.959707 17 builder.go:157] stdout: "I"
  I0901 12:23:42.959730 17 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/01/25 12:23:42.959
  I0901 12:23:42.960543 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator --tail=1 --timestamps'
  I0901 12:23:43.184069 17 builder.go:156] stderr: ""
  I0901 12:23:43.184287 17 builder.go:157] stdout: "2025-09-01T12:23:43.153942807Z I0901 12:23:43.153676       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/bcj 375\n"
  I0901 12:23:43.184493 17 logs.go:192] got output "2025-09-01T12:23:43.153942807Z I0901 12:23:43.153676       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/bcj 375\n"
  STEP: restricting to a time range @ 09/01/25 12:23:43.184
  I0901 12:23:45.686201 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator --since=1s'
  I0901 12:23:45.897413 17 builder.go:156] stderr: ""
  I0901 12:23:45.897550 17 builder.go:157] stdout: "I0901 12:23:44.954317       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/tcgn 370\nI0901 12:23:45.153636       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/6pd 530\nI0901 12:23:45.354121       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/q2q 404\nI0901 12:23:45.554477       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/rfwn 454\nI0901 12:23:45.754088       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/7ngf 479\n"
  I0901 12:23:45.897892 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 logs logs-generator logs-generator --since=24h'
  I0901 12:23:46.133842 17 builder.go:156] stderr: ""
  I0901 12:23:46.134203 17 builder.go:157] stdout: "I0901 12:23:41.353440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dl72 524\nI0901 12:23:41.554185       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/5gvx 471\nI0901 12:23:41.753867       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/r9sf 403\nI0901 12:23:41.953916       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/7v8 223\nI0901 12:23:42.154314       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/25cr 546\nI0901 12:23:42.354479       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/6v7 387\nI0901 12:23:42.553703       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/24b 348\nI0901 12:23:42.754433       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/484 467\nI0901 12:23:42.954146       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/8vnb 594\nI0901 12:23:43.153676       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/bcj 375\nI0901 12:23:43.354673       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/zpng 434\nI0901 12:23:43.554881       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/nl7p 261\nI0901 12:23:43.754245       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/vzb 555\nI0901 12:23:43.955176       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/j9j 455\nI0901 12:23:44.154156       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/cdn 531\nI0901 12:23:44.353870       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/fg5 453\nI0901 12:23:44.554547       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/5f8n 426\nI0901 12:23:44.756566       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/v8s 227\nI0901 12:23:44.954317       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/tcgn 370\nI0901 12:23:45.153636       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/6pd 530\nI0901 12:23:45.354121       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/q2q 404\nI0901 12:23:45.554477       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/rfwn 454\nI0901 12:23:45.754088       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/7ngf 479\nI0901 12:23:45.953553       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/kube-system/pods/kw4 269\n"
  I0901 12:23:46.134704 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-logs-5 delete pod logs-generator'
  I0901 12:23:47.213002 17 builder.go:156] stderr: ""
  I0901 12:23:47.213133 17 builder.go:157] stdout: "pod \"logs-generator\" deleted from kubectl-logs-5 namespace\n"
  I0901 12:23:47.214014 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5" for this suite. @ 09/01/25 12:23:47.231
• [7.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/01/25 12:23:47.273
  I0901 12:23:47.273086 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename events @ 09/01/25 12:23:47.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:47.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:47.318
  STEP: creating a test event @ 09/01/25 12:23:47.326
  STEP: listing events in all namespaces @ 09/01/25 12:23:47.358
  STEP: listing events in test namespace @ 09/01/25 12:23:47.371
  STEP: listing events with field selection filtering on source @ 09/01/25 12:23:47.38
  STEP: listing events with field selection filtering on reportingController @ 09/01/25 12:23:47.388
  STEP: getting the test event @ 09/01/25 12:23:47.394
  STEP: patching the test event @ 09/01/25 12:23:47.402
  STEP: getting the test event @ 09/01/25 12:23:47.425
  STEP: updating the test event @ 09/01/25 12:23:47.434
  STEP: getting the test event @ 09/01/25 12:23:47.451
  STEP: deleting the test event @ 09/01/25 12:23:47.46
  STEP: listing events in all namespaces @ 09/01/25 12:23:47.48
  STEP: listing events in test namespace @ 09/01/25 12:23:47.488
  I0901 12:23:47.496103 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6298" for this suite. @ 09/01/25 12:23:47.508
• [0.253 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/01/25 12:23:47.526
  I0901 12:23:47.527564 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:23:47.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:47.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:47.571
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:23:47.578
  STEP: Saw pod success @ 09/01/25 12:23:51.65
  I0901 12:23:51.666205 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-e9105446-46c4-453a-8c8c-30b5a5207b95 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:23:51.714
  I0901 12:23:51.763256 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6170" for this suite. @ 09/01/25 12:23:51.782
• [4.281 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/01/25 12:23:51.808
  I0901 12:23:51.808045 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 12:23:51.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:51.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:51.864
  STEP: creating a target pod @ 09/01/25 12:23:51.871
  STEP: adding an ephemeral container @ 09/01/25 12:23:55.937
  STEP: verifying the pod's generation is 2 @ 09/01/25 12:23:58.003
  STEP: checking pod container endpoints @ 09/01/25 12:23:58.018
  I0901 12:23:58.018228 17 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4237 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:23:58.018380 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:23:58.018659 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4237/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 12:23:58.188263 17 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/01/25 12:23:58.21
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/01/25 12:23:58.225
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/01/25 12:23:58.256
  I0901 12:23:58.288059 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4237" for this suite. @ 09/01/25 12:23:58.318
• [6.544 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/01/25 12:23:58.381
  I0901 12:23:58.381681 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename lease-test @ 09/01/25 12:23:58.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:58.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:58.428
  I0901 12:23:58.579721 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5629" for this suite. @ 09/01/25 12:23:58.589
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/01/25 12:23:58.603
  I0901 12:23:58.603470 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename init-container @ 09/01/25 12:23:58.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:58.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:58.642
  STEP: creating the pod @ 09/01/25 12:23:58.65
  I0901 12:23:58.650812 17 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0901 12:24:43.430727 17 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-a922b3d9-4a2b-4499-87d2-6e4c1d8a8677", GenerateName:"", Namespace:"init-container-1480", SelfLink:"", UID:"75d344ad-1f38-411d-81a5-992d1d134776", ResourceVersion:"29612", Generation:1, CreationTimestamp:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"650765424"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00447b4b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 24, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00447b4e8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-h7wdg", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005411e20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h7wdg", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h7wdg", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h7wdg", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0029adb80), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"wohnahxathu9-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00418a630), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0029adc20)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0029adc40)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0029adc48), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0029adc4c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0048bbe50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil), HostnameOverride:(*string)(nil)}, Status:v1.PodStatus{ObservedGeneration:1, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 23, 59, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.15", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.15"}}, PodIP:"10.233.66.196", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.196"}}, StartTime:time.Date(2025, time.September, 1, 12, 23, 58, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004a76a80)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004a76af0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:0ffbe172f8d245c83f285c6992b452c53d085661e03ddfd3b484332026e6c8bb", ContainerID:"cri-o://4a3da5e2b4bfa12d0b9386b162dfc335d56788c0caa51daf1851c63a3ad93e2c", Started:(*bool)(0xc0029adcfa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002dd95c0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-h7wdg", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0048bbe80)}}, User:(*v1.ContainerUser)(0xc000ce2228), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005411e80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0029add25), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-h7wdg", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0048bbea0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005411e60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10.1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0029adcc4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-h7wdg", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0048bbe60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil), ExtendedResourceClaimStatus:(*v1.PodExtendedResourceClaimStatus)(nil)}}
  I0901 12:24:43.435701 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1480" for this suite. @ 09/01/25 12:24:43.462
• [44.885 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/01/25 12:24:43.49
  I0901 12:24:43.490513 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:24:43.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:43.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:43.535
  STEP: Deleting RuntimeClass runtimeclass-2710-delete-me @ 09/01/25 12:24:43.557
  STEP: Waiting for the RuntimeClass to disappear @ 09/01/25 12:24:43.573
  I0901 12:24:43.601738 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2710" for this suite. @ 09/01/25 12:24:43.619
• [0.143 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/01/25 12:24:43.633
  I0901 12:24:43.633522 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:24:43.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:43.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:43.67
  STEP: Creating a cronjob @ 09/01/25 12:24:43.676
  STEP: creating @ 09/01/25 12:24:43.677
  STEP: getting @ 09/01/25 12:24:43.691
  STEP: listing @ 09/01/25 12:24:43.702
  STEP: watching @ 09/01/25 12:24:43.71
  I0901 12:24:43.710980 17 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:24:43.713
  STEP: cluster-wide watching @ 09/01/25 12:24:43.722
  I0901 12:24:43.722805 17 cronjob.go:407] starting watch
  STEP: patching @ 09/01/25 12:24:43.725
  STEP: updating @ 09/01/25 12:24:43.74
  I0901 12:24:43.764085 17 cronjob.go:431] waiting for watch events with expected annotations
  I0901 12:24:43.764979 17 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 12:24:43.765
  STEP: updating /status @ 09/01/25 12:24:43.779
  STEP: get /status @ 09/01/25 12:24:43.796
  STEP: deleting @ 09/01/25 12:24:43.81
  STEP: deleting a collection @ 09/01/25 12:24:43.844
  I0901 12:24:43.869213 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7214" for this suite. @ 09/01/25 12:24:43.881
• [0.265 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/01/25 12:24:43.898
  I0901 12:24:43.898655 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:24:43.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:43.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:43.942
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:24:43.95
  STEP: Saw pod success @ 09/01/25 12:24:48.012
  I0901 12:24:48.025133 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-864a561f-1d56-46f8-8cb3-369811563096 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:24:48.091
  I0901 12:24:48.153219 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2766" for this suite. @ 09/01/25 12:24:48.168
• [4.294 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/01/25 12:24:48.193
  I0901 12:24:48.193977 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:24:48.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:48.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:48.25
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 12:24:48.258
  STEP: Saw pod success @ 09/01/25 12:24:52.349
  I0901 12:24:52.361590 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-6b5ab932-e58b-4d52-b7a7-ca09ebd1a8a3 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:24:52.381
  I0901 12:24:52.417204 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5579" for this suite. @ 09/01/25 12:24:52.43
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/01/25 12:24:52.449
  I0901 12:24:52.449989 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:24:52.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:52.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:52.489
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:24:52.495
  STEP: Saw pod success @ 09/01/25 12:24:56.574
  I0901 12:24:56.587040 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-321e11f7-a1ad-4e91-ad8a-8aad606063ff container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:24:56.608
  I0901 12:24:56.659709 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2388" for this suite. @ 09/01/25 12:24:56.678
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:248
  STEP: Creating a kubernetes client @ 09/01/25 12:24:56.698
  I0901 12:24:56.698499 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:24:56.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:56.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:56.742
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:24:56.748
  STEP: Saw pod success @ 09/01/25 12:25:00.841
  I0901 12:25:00.848496 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downward-api-732d38fe-84ab-437d-88fe-2491e88b4160 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:25:00.873
  I0901 12:25:00.915122 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6335" for this suite. @ 09/01/25 12:25:00.93
• [4.257 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/01/25 12:25:00.957
  I0901 12:25:00.957225 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:25:00.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:00.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:01.004
  STEP: getting /apis @ 09/01/25 12:25:01.032
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 12:25:01.045
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 12:25:01.05
  STEP: creating @ 09/01/25 12:25:01.055
  STEP: getting @ 09/01/25 12:25:01.136
  STEP: listing @ 09/01/25 12:25:01.15
  STEP: watching @ 09/01/25 12:25:01.159
  I0901 12:25:01.159674 17 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/01/25 12:25:01.162
  STEP: updating @ 09/01/25 12:25:01.184
  I0901 12:25:01.241906 17 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 12:25:01.242
  STEP: patching /status @ 09/01/25 12:25:01.248
  STEP: updating /status @ 09/01/25 12:25:01.268
  STEP: deleting @ 09/01/25 12:25:01.299
  STEP: deleting a collection @ 09/01/25 12:25:01.336
  I0901 12:25:01.379708 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3389" for this suite. @ 09/01/25 12:25:01.39
• [0.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:246
  STEP: Creating a kubernetes client @ 09/01/25 12:25:01.406
  I0901 12:25:01.406748 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:25:01.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:01.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:01.493
  STEP: Setting up server cert @ 09/01/25 12:25:01.549
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:25:04.003
  STEP: Deploying the webhook pod @ 09/01/25 12:25:04.02
  STEP: Wait for the deployment to be ready @ 09/01/25 12:25:04.06
  I0901 12:25:04.084041 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 12:25:06.129
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:25:06.163
  I0901 12:25:07.164499 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/01/25 12:25:07.18
  I0901 12:25:07.250935 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create a configmap that should be updated by the webhook @ 09/01/25 12:25:07.413
  I0901 12:25:07.608599 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5857" for this suite. @ 09/01/25 12:25:07.639
  STEP: Destroying namespace "webhook-markers-198" for this suite. @ 09/01/25 12:25:07.654
• [6.268 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:752
  STEP: Creating a kubernetes client @ 09/01/25 12:25:07.675
  I0901 12:25:07.675686 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:25:07.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:07.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:07.77
  STEP: Creating a ResourceQuota with terminating scope @ 09/01/25 12:25:07.779
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:25:07.79
  I0901 12:25:09.816043 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002e1e8c0>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:07Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:07Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:07Z"
            name: quota-terminating
            namespace: resourcequota-5339
            resourceVersion: "29897"
            uid: 933739aa-f669-449e-b0a4-5d0814e47f7e
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/01/25 12:25:09.818
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:25:09.836
  I0901 12:25:11.864749 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002df5e00>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:09Z"
            name: quota-not-terminating
            namespace: resourcequota-5339
            resourceVersion: "29903"
            uid: aface676-c713-48b0-bbc9-2fba296a4c08
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a long running pod @ 09/01/25 12:25:11.866
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/01/25 12:25:11.929
  I0901 12:25:11.942365 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002e1f040>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:11Z"
            name: quota-not-terminating
            namespace: resourcequota-5339
            resourceVersion: "29907"
            uid: aface676-c713-48b0-bbc9-2fba296a4c08
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/01/25 12:25:11.942
  STEP: Deleting the pod @ 09/01/25 12:25:21.943
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:25:21.996
  I0901 12:25:22.013435 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002fd8280>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:21Z"
            name: quota-not-terminating
            namespace: resourcequota-5339
            resourceVersion: "29950"
            uid: aface676-c713-48b0-bbc9-2fba296a4c08
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a terminating pod @ 09/01/25 12:25:22.014
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/01/25 12:25:22.045
  I0901 12:25:22.053339 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002fd8f00>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:07Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:07Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:07Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:22Z"
            name: quota-terminating
            namespace: resourcequota-5339
            resourceVersion: "29951"
            uid: 933739aa-f669-449e-b0a4-5d0814e47f7e
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/01/25 12:25:22.053
  I0901 12:25:22.066496 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002fd9540>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:21Z"
            name: quota-not-terminating
            namespace: resourcequota-5339
            resourceVersion: "29950"
            uid: aface676-c713-48b0-bbc9-2fba296a4c08
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Deleting the pod @ 09/01/25 12:25:32.07
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:25:32.116
  I0901 12:25:34.147121 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0030f8f00>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:07Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:07Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:32Z"
            name: quota-terminating
            namespace: resourcequota-5339
            resourceVersion: "29979"
            uid: 933739aa-f669-449e-b0a4-5d0814e47f7e
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  I0901 12:25:34.150403 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5339" for this suite. @ 09/01/25 12:25:34.181
• [26.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:404
  STEP: Creating a kubernetes client @ 09/01/25 12:25:34.211
  I0901 12:25:34.211170 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:25:34.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:34.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:34.277
  STEP: Counting existing ResourceQuota @ 09/01/25 12:25:34.284
  STEP: Creating a ResourceQuota @ 09/01/25 12:25:39.301
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:25:39.315
  I0901 12:25:41.356571 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00371a3c0>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:39Z"
            name: test-quota
            namespace: resourcequota-3790
            resourceVersion: "30003"
            uid: a4a9491c-45fa-42bb-ad5d-e8883ff2625c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicationController @ 09/01/25 12:25:41.357
  STEP: Ensuring resource quota status captures replication controller creation @ 09/01/25 12:25:41.399
  I0901 12:25:41.418136 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00371b040>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:replicationcontrollers: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:41Z"
            name: test-quota
            namespace: resourcequota-3790
            resourceVersion: "30015"
            uid: a4a9491c-45fa-42bb-ad5d-e8883ff2625c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "1"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicationController @ 09/01/25 12:25:41.419
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:25:41.447
  I0901 12:25:43.476876 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003139900>: 
          metadata:
            creationTimestamp: "2025-09-01T12:25:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:25:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:25:41Z"
            name: test-quota
            namespace: resourcequota-3790
            resourceVersion: "30019"
            uid: a4a9491c-45fa-42bb-ad5d-e8883ff2625c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 12:25:43.479763 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3790" for this suite. @ 09/01/25 12:25:43.495
• [9.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:25:43.516
  I0901 12:25:43.516105 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:25:43.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:43.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:43.554
  STEP: Performing setup for networking test in namespace pod-network-test-9898 @ 09/01/25 12:25:43.561
  STEP: creating a selector @ 09/01/25 12:25:43.561
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:25:43.561
  I0901 12:25:43.561946 17 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 12:25:57.876
  I0901 12:25:59.948015 17 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:25:59.948200 17 networking.go:42] Breadth first check of 10.233.64.132 on host 192.168.121.57...
  I0901 12:25:59.965169 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.85:9080/dial?request=hostname&protocol=udp&host=10.233.64.132&port=8081&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:25:59.966407 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:25:59.967147 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.85%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.132%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:26:00.178512 17 utils.go:356] Waiting for responses: map[]
  I0901 12:26:00.178693 17 utils.go:360] reached 10.233.64.132 after 0/1 tries
  I0901 12:26:00.178770 17 networking.go:42] Breadth first check of 10.233.65.70 on host 192.168.121.40...
  I0901 12:26:00.188720 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.85:9080/dial?request=hostname&protocol=udp&host=10.233.65.70&port=8081&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:26:00.188804 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:26:00.189089 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.85%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.70%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:26:00.358970 17 utils.go:356] Waiting for responses: map[]
  I0901 12:26:00.359233 17 utils.go:360] reached 10.233.65.70 after 0/1 tries
  I0901 12:26:00.359345 17 networking.go:42] Breadth first check of 10.233.66.93 on host 192.168.121.15...
  I0901 12:26:00.369146 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.85:9080/dial?request=hostname&protocol=udp&host=10.233.66.93&port=8081&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:26:00.369229 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:26:00.369669 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.85%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.93%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:26:00.501640 17 utils.go:356] Waiting for responses: map[]
  I0901 12:26:00.501794 17 utils.go:360] reached 10.233.66.93 after 0/1 tries
  I0901 12:26:00.501843 17 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 12:26:00.502185 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9898" for this suite. @ 09/01/25 12:26:00.518
• [17.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:726
  STEP: Creating a kubernetes client @ 09/01/25 12:26:00.538
  I0901 12:26:00.538919 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:26:00.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:00.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:00.587
  I0901 12:26:08.714988 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6062" for this suite. @ 09/01/25 12:26:08.732
• [8.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/01/25 12:26:08.759
  I0901 12:26:08.759492 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename conformance-tests @ 09/01/25 12:26:08.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:08.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:08.804
  STEP: Getting node addresses @ 09/01/25 12:26:08.811
  I0901 12:26:08.812059 17 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0901 12:26:08.830902 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1395" for this suite. @ 09/01/25 12:26:08.842
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 12:26:08.861
  I0901 12:26:08.861977 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:26:08.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:08.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:08.901
  STEP: Creating configMap with name configmap-test-volume-map-6c1dd205-dc71-49a2-99bc-8a76717c81fb @ 09/01/25 12:26:08.911
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:26:08.92
  STEP: Saw pod success @ 09/01/25 12:26:12.997
  I0901 12:26:13.008725 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-a01128f6-7fca-4e8c-805c-e04b53bf3a9b container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:26:13.029
  I0901 12:26:13.069906 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7079" for this suite. @ 09/01/25 12:26:13.083
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:26:13.1
  I0901 12:26:13.100518 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:26:13.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:13.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:13.162
  STEP: Creating secret with name secret-test-map-c5178140-51d2-4a60-b308-17157e9d3ce1 @ 09/01/25 12:26:13.169
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:26:13.179
  STEP: Saw pod success @ 09/01/25 12:26:17.282
  I0901 12:26:17.296976 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-95b21431-4224-4c5c-8bee-2291dc1387bf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:26:17.323
  I0901 12:26:17.402020 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3399" for this suite. @ 09/01/25 12:26:17.411
• [4.329 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/01/25 12:26:17.429
  I0901 12:26:17.430072 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:26:17.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:17.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:17.479
  STEP: create the rc1 @ 09/01/25 12:26:17.51
  STEP: create the rc2 @ 09/01/25 12:26:17.525
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/01/25 12:26:26.14
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/01/25 12:26:35.069
  STEP: wait for the rc to be deleted @ 09/01/25 12:26:35.206
  I0901 12:26:40.245765 17 garbage_collector.go:770] 92 pods remaining
  I0901 12:26:40.245842 17 garbage_collector.go:777] 72 pods has nil DeletionTimestamp
  I0901 12:26:40.245863 17 garbage_collector.go:778] 
  I0901 12:26:45.251078 17 garbage_collector.go:770] 70 pods remaining
  I0901 12:26:45.251153 17 garbage_collector.go:777] 50 pods has nil DeletionTimestamp
  I0901 12:26:45.251172 17 garbage_collector.go:778] 
  STEP: Gathering metrics @ 09/01/25 12:26:50.253
  I0901 12:26:50.517472 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:26:50.517747 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-27clv" in namespace "gc-8338"
  I0901 12:26:50.586205 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2xjcx" in namespace "gc-8338"
  I0901 12:26:50.623950 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4f9pc" in namespace "gc-8338"
  I0901 12:26:50.668467 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4lf96" in namespace "gc-8338"
  I0901 12:26:50.725405 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4n8d9" in namespace "gc-8338"
  I0901 12:26:50.800135 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4wxph" in namespace "gc-8338"
  I0901 12:26:50.855408 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4zpcw" in namespace "gc-8338"
  I0901 12:26:50.958603 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-57zbx" in namespace "gc-8338"
  I0901 12:26:51.031489 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-582gf" in namespace "gc-8338"
  I0901 12:26:51.115975 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5fddn" in namespace "gc-8338"
  I0901 12:26:51.208753 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6m6bh" in namespace "gc-8338"
  I0901 12:26:51.329159 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6nrg2" in namespace "gc-8338"
  I0901 12:26:51.493462 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6z8z8" in namespace "gc-8338"
  I0901 12:26:51.723016 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-78sfc" in namespace "gc-8338"
  I0901 12:26:51.773781 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7kvkj" in namespace "gc-8338"
  I0901 12:26:51.883452 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7nwb9" in namespace "gc-8338"
  I0901 12:26:51.966992 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7tcrg" in namespace "gc-8338"
  I0901 12:26:52.025393 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7vgnp" in namespace "gc-8338"
  I0901 12:26:52.169015 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8qtwt" in namespace "gc-8338"
  I0901 12:26:52.278371 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9kp4l" in namespace "gc-8338"
  I0901 12:26:52.421841 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9xdkd" in namespace "gc-8338"
  I0901 12:26:52.463821 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-b65kw" in namespace "gc-8338"
  I0901 12:26:52.517101 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-b7862" in namespace "gc-8338"
  I0901 12:26:52.623768 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bcfpf" in namespace "gc-8338"
  I0901 12:26:52.770540 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bks6k" in namespace "gc-8338"
  I0901 12:26:52.985677 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bsv68" in namespace "gc-8338"
  I0901 12:26:53.235858 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c5kg5" in namespace "gc-8338"
  I0901 12:26:53.324704 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c6zhn" in namespace "gc-8338"
  I0901 12:26:53.424645 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cg5hl" in namespace "gc-8338"
  I0901 12:26:53.457079 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-d4mfw" in namespace "gc-8338"
  I0901 12:26:53.534783 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-d6lnq" in namespace "gc-8338"
  I0901 12:26:53.697076 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dcx4q" in namespace "gc-8338"
  I0901 12:26:53.727079 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dnnks" in namespace "gc-8338"
  I0901 12:26:53.773723 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-f84v5" in namespace "gc-8338"
  I0901 12:26:53.841911 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-ffhn2" in namespace "gc-8338"
  I0901 12:26:54.030497 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fnmzz" in namespace "gc-8338"
  I0901 12:26:54.140152 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-g6bx9" in namespace "gc-8338"
  I0901 12:26:54.208541 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gcszm" in namespace "gc-8338"
  I0901 12:26:54.319815 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gn7bt" in namespace "gc-8338"
  I0901 12:26:54.603047 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-grm5t" in namespace "gc-8338"
  I0901 12:26:54.809931 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gvts6" in namespace "gc-8338"
  I0901 12:26:54.872527 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-h2bq7" in namespace "gc-8338"
  I0901 12:26:55.122865 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-h2x4t" in namespace "gc-8338"
  I0901 12:26:55.201414 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-h5bg5" in namespace "gc-8338"
  I0901 12:26:55.362909 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-h5k6l" in namespace "gc-8338"
  I0901 12:26:55.427484 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hmh42" in namespace "gc-8338"
  I0901 12:26:55.485109 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hvk58" in namespace "gc-8338"
  I0901 12:26:55.602522 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hx5gx" in namespace "gc-8338"
  I0901 12:26:55.738454 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j6scs" in namespace "gc-8338"
  I0901 12:26:55.861041 17 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j84vw" in namespace "gc-8338"
  I0901 12:26:55.932237 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8338" for this suite. @ 09/01/25 12:26:56.007
• [38.893 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:26:56.323
  I0901 12:26:56.323036 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:26:56.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:56.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:56.461
  STEP: Creating configMap with name configmap-test-volume-f4278938-a98c-4235-8611-a48dc166655c @ 09/01/25 12:26:56.475
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:26:56.491
  STEP: Saw pod success @ 09/01/25 12:27:28.804
  I0901 12:27:28.813643 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-aa419773-a6a3-4b72-ad37-0e625c822b97 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:28.839
  I0901 12:27:28.887536 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5525" for this suite. @ 09/01/25 12:27:28.903
• [32.595 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:27:28.919
  I0901 12:27:28.919091 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:27:28.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:28.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:28.962
  STEP: Creating a ForbidConcurrent cronjob @ 09/01/25 12:27:28.971
  STEP: Ensuring a job is scheduled @ 09/01/25 12:27:28.988
  STEP: Ensuring exactly one is scheduled @ 09/01/25 12:28:01.001
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 12:28:01.015
  STEP: Ensuring no more jobs are scheduled @ 09/01/25 12:28:01.036
  STEP: Removing cronjob @ 09/01/25 12:28:01.075
  I0901 12:28:01.095763 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3586" for this suite. @ 09/01/25 12:28:01.119
• [32.247 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:28:01.166
  I0901 12:28:01.166796 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subjectreview @ 09/01/25 12:28:01.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:01.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:01.247
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1367" @ 09/01/25 12:28:01.261
  I0901 12:28:01.278149 17 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1367:e2e"
  I0901 12:28:01.278277 17 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1367"}
  I0901 12:28:01.278359 17 subjectreviews.go:71] saUID: "542f304e-30c8-419d-9526-37c13ddd4fc7"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1367:e2e" @ 09/01/25 12:28:01.278
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1367:e2e" @ 09/01/25 12:28:01.28
  I0901 12:28:01.295473 17 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1367:e2e" api 'list' configmaps in "subjectreview-1367" namespace @ 09/01/25 12:28:01.295
  I0901 12:28:01.300607 17 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1367:e2e" @ 09/01/25 12:28:01.301
  I0901 12:28:01.307267 17 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0901 12:28:01.307490 17 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0901 12:28:01.307800 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1367" for this suite. @ 09/01/25 12:28:01.324
• [0.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/01/25 12:28:01.347
  I0901 12:28:01.347899 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:28:01.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:01.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:01.387
  I0901 12:28:01.481404 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7804" for this suite. @ 09/01/25 12:28:01.494
• [0.165 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/01/25 12:28:01.514
  I0901 12:28:01.514268 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:28:01.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:01.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:01.559
  STEP: Creating a pod to test service account token:  @ 09/01/25 12:28:01.567
  STEP: Saw pod success @ 09/01/25 12:28:05.651
  I0901 12:28:05.664645 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod test-pod-dec8847b-4d7e-45ec-9c9f-625b4d12c7b5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:28:05.712
  I0901 12:28:05.746158 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9630" for this suite. @ 09/01/25 12:28:05.758
• [4.268 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1758
  STEP: Creating a kubernetes client @ 09/01/25 12:28:05.782
  I0901 12:28:05.782772 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:28:05.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:05.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:05.816
  I0901 12:28:05.823317 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5716 version'
  I0901 12:28:06.008145 17 builder.go:156] stderr: ""
  I0901 12:28:06.008248 17 builder.go:157] stdout: "Client Version: v1.34.0\nKustomize Version: v5.7.1\nServer Version: v1.34.0\n"
  I0901 12:28:06.008988 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5716" for this suite. @ 09/01/25 12:28:06.026
• [0.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/01/25 12:28:06.053
  I0901 12:28:06.053927 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:28:06.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:06.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:06.125
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:28:06.145
  STEP: Saw pod success @ 09/01/25 12:28:10.221
  I0901 12:28:10.238503 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-c84be003-1a22-41ed-8d7d-c85fea527f8d container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:28:10.274
  I0901 12:28:10.325115 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-884" for this suite. @ 09/01/25 12:28:10.338
• [4.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/01/25 12:28:10.358
  I0901 12:28:10.358175 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:28:10.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:10.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:10.402
  I0901 12:28:10.408470 17 deployment.go:1664] Creating simple deployment test-new-deployment
  I0901 12:28:10.443059 17 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/01/25 12:28:12.48
  STEP: updating a scale subresource @ 09/01/25 12:28:12.488
  STEP: verifying the deployment Spec.Replicas was modified @ 09/01/25 12:28:12.505
  STEP: Patch a scale subresource @ 09/01/25 12:28:12.512
  I0901 12:28:12.554719 17 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02d1437c-f998-4ead-803e-33fcdf55d305",
      ResourceVersion: (string) (len=5) "32433",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-6bc58496c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:28:12.601929 17 deployment.go:40] New ReplicaSet "test-new-deployment-6bc58496c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c933a621-f700-4721-aca7-f8ec34748909",
      ResourceVersion: (string) (len=5) "32436",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "02d1437c-f998-4ead-803e-33fcdf55d305",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 64 31 34 33  37 63 2d 66 39 39 38 2d  |\"02d1437c-f998-|
              00000120  34 65 61 64 2d 38 30 33  65 2d 33 33 66 63 64 66  |4ead-803e-33fcdf|
              00000130  35 35 64 33 30 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |55d305\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:28:12.617419 17 deployment.go:68] Pod "test-new-deployment-6bc58496c7-5djgb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-5djgb",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9306525c-4e11-4c4f-a7fe-fbe9e50b90e7",
      ResourceVersion: (string) (len=5) "32427",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "c933a621-f700-4721-aca7-f8ec34748909",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  33 33 61 36 32 31 2d 66  |d\":\"c933a621-f|
              00000090  37 30 30 2d 34 37 32 31  2d 61 63 61 37 2d 66 38  |700-4721-aca7-f8|
              000000a0  65 63 33 34 37 34 38 39  30 39 5c 22 7d 22 3a 7b  |ec34748909\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 31 5c  22 7d 22 3a 7b 22 2e 22  |33.66.1\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mqrm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mqrm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=11) "10.233.66.1",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.66.1"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326491,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://509592457e157a5226acdaf89692fd8358dcbba437662e39008f7d729cd773cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mqrm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 12:28:12.628034 17 deployment.go:68] Pod "test-new-deployment-6bc58496c7-kndzq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-kndzq",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90c91be3-5231-4715-836a-37c4ae8b7c6c",
      ResourceVersion: (string) (len=5) "32438",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "c933a621-f700-4721-aca7-f8ec34748909",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  33 33 61 36 32 31 2d 66  |d\":\"c933a621-f|
              00000090  37 30 30 2d 34 37 32 31  2d 61 63 61 37 2d 66 38  |700-4721-aca7-f8|
              000000a0  65 63 33 34 37 34 38 39  30 39 5c 22 7d 22 3a 7b  |ec34748909\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kp8b8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kp8b8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 12:28:12.634125 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5201" for this suite. @ 09/01/25 12:28:12.656
• [2.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:28:12.691
  I0901 12:28:12.691124 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:28:12.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:12.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:12.803
  I0901 12:28:14.907247 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6619" for this suite. @ 09/01/25 12:28:14.932
• [2.265 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/01/25 12:28:14.958
  I0901 12:28:14.958684 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:28:14.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:15.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:15.016
  I0901 12:28:15.025953 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 12:28:21.649772 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-192" for this suite. @ 09/01/25 12:28:21.665
• [6.723 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/01/25 12:28:21.682
  I0901 12:28:21.682125 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:28:21.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:21.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:21.775
  STEP: create the rc @ 09/01/25 12:28:21.8
  I0901 12:28:21.813253      17 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/01/25 12:28:30.453
  STEP: wait for the rc to be deleted @ 09/01/25 12:28:31.715
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/01/25 12:28:36.849
  STEP: Gathering metrics @ 09/01/25 12:29:06.889
  I0901 12:29:07.281558 17 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:29:07.281828 17 delete.go:111] Deleting pod "simpletest.rc-2dbkz" in namespace "gc-1235"
  I0901 12:29:07.310041 17 delete.go:111] Deleting pod "simpletest.rc-42d6z" in namespace "gc-1235"
  I0901 12:29:07.351045 17 delete.go:111] Deleting pod "simpletest.rc-49mbt" in namespace "gc-1235"
  I0901 12:29:07.377624 17 delete.go:111] Deleting pod "simpletest.rc-4q5dv" in namespace "gc-1235"
  I0901 12:29:07.486755 17 delete.go:111] Deleting pod "simpletest.rc-4wfrj" in namespace "gc-1235"
  I0901 12:29:07.543858 17 delete.go:111] Deleting pod "simpletest.rc-5gxrd" in namespace "gc-1235"
  I0901 12:29:07.665799 17 delete.go:111] Deleting pod "simpletest.rc-5ksbg" in namespace "gc-1235"
  I0901 12:29:07.737229 17 delete.go:111] Deleting pod "simpletest.rc-5ltfp" in namespace "gc-1235"
  I0901 12:29:07.809145 17 delete.go:111] Deleting pod "simpletest.rc-5v65c" in namespace "gc-1235"
  I0901 12:29:07.890267 17 delete.go:111] Deleting pod "simpletest.rc-62bb7" in namespace "gc-1235"
  I0901 12:29:07.944424 17 delete.go:111] Deleting pod "simpletest.rc-64g88" in namespace "gc-1235"
  I0901 12:29:08.025201 17 delete.go:111] Deleting pod "simpletest.rc-64vkn" in namespace "gc-1235"
  I0901 12:29:08.491041 17 delete.go:111] Deleting pod "simpletest.rc-6678n" in namespace "gc-1235"
  I0901 12:29:08.759659 17 delete.go:111] Deleting pod "simpletest.rc-6g4cc" in namespace "gc-1235"
  I0901 12:29:08.971507 17 delete.go:111] Deleting pod "simpletest.rc-6qjdw" in namespace "gc-1235"
  I0901 12:29:09.065877 17 delete.go:111] Deleting pod "simpletest.rc-6vgtb" in namespace "gc-1235"
  I0901 12:29:09.103781 17 delete.go:111] Deleting pod "simpletest.rc-79q6w" in namespace "gc-1235"
  I0901 12:29:09.298664 17 delete.go:111] Deleting pod "simpletest.rc-7wxlg" in namespace "gc-1235"
  I0901 12:29:09.387753 17 delete.go:111] Deleting pod "simpletest.rc-8lmts" in namespace "gc-1235"
  I0901 12:29:09.523740 17 delete.go:111] Deleting pod "simpletest.rc-8srdb" in namespace "gc-1235"
  I0901 12:29:09.660165 17 delete.go:111] Deleting pod "simpletest.rc-8xqgf" in namespace "gc-1235"
  I0901 12:29:09.946204 17 delete.go:111] Deleting pod "simpletest.rc-942lw" in namespace "gc-1235"
  I0901 12:29:10.072882 17 delete.go:111] Deleting pod "simpletest.rc-94g2h" in namespace "gc-1235"
  I0901 12:29:10.193512 17 delete.go:111] Deleting pod "simpletest.rc-9cpww" in namespace "gc-1235"
  I0901 12:29:10.687240 17 delete.go:111] Deleting pod "simpletest.rc-9rzct" in namespace "gc-1235"
  I0901 12:29:10.863905 17 delete.go:111] Deleting pod "simpletest.rc-9s9v2" in namespace "gc-1235"
  I0901 12:29:10.918103 17 delete.go:111] Deleting pod "simpletest.rc-9xdxz" in namespace "gc-1235"
  I0901 12:29:11.067240 17 delete.go:111] Deleting pod "simpletest.rc-b6lvh" in namespace "gc-1235"
  I0901 12:29:11.192769 17 delete.go:111] Deleting pod "simpletest.rc-bdkws" in namespace "gc-1235"
  I0901 12:29:11.335160 17 delete.go:111] Deleting pod "simpletest.rc-bw2x4" in namespace "gc-1235"
  I0901 12:29:11.417114 17 delete.go:111] Deleting pod "simpletest.rc-c2rhq" in namespace "gc-1235"
  I0901 12:29:11.549835 17 delete.go:111] Deleting pod "simpletest.rc-cdtx7" in namespace "gc-1235"
  I0901 12:29:11.769956 17 delete.go:111] Deleting pod "simpletest.rc-cqpzm" in namespace "gc-1235"
  I0901 12:29:11.914494 17 delete.go:111] Deleting pod "simpletest.rc-dlc4j" in namespace "gc-1235"
  I0901 12:29:12.065202 17 delete.go:111] Deleting pod "simpletest.rc-f2f7s" in namespace "gc-1235"
  I0901 12:29:12.127055 17 delete.go:111] Deleting pod "simpletest.rc-f6n4f" in namespace "gc-1235"
  I0901 12:29:12.245948 17 delete.go:111] Deleting pod "simpletest.rc-ggktp" in namespace "gc-1235"
  I0901 12:29:12.305495 17 delete.go:111] Deleting pod "simpletest.rc-gl866" in namespace "gc-1235"
  I0901 12:29:12.449957 17 delete.go:111] Deleting pod "simpletest.rc-h8zqp" in namespace "gc-1235"
  I0901 12:29:12.545347 17 delete.go:111] Deleting pod "simpletest.rc-hg6sw" in namespace "gc-1235"
  I0901 12:29:12.644718 17 delete.go:111] Deleting pod "simpletest.rc-hxqdc" in namespace "gc-1235"
  I0901 12:29:12.795275 17 delete.go:111] Deleting pod "simpletest.rc-jbs6q" in namespace "gc-1235"
  I0901 12:29:13.044936 17 delete.go:111] Deleting pod "simpletest.rc-jgvh6" in namespace "gc-1235"
  I0901 12:29:13.155823 17 delete.go:111] Deleting pod "simpletest.rc-jlh8m" in namespace "gc-1235"
  I0901 12:29:13.268521 17 delete.go:111] Deleting pod "simpletest.rc-jq92c" in namespace "gc-1235"
  I0901 12:29:13.357686 17 delete.go:111] Deleting pod "simpletest.rc-k8cnz" in namespace "gc-1235"
  I0901 12:29:13.661029 17 delete.go:111] Deleting pod "simpletest.rc-kqdc9" in namespace "gc-1235"
  I0901 12:29:13.879871 17 delete.go:111] Deleting pod "simpletest.rc-l4l52" in namespace "gc-1235"
  I0901 12:29:14.028627 17 delete.go:111] Deleting pod "simpletest.rc-lh2st" in namespace "gc-1235"
  I0901 12:29:14.373615 17 delete.go:111] Deleting pod "simpletest.rc-lnnh5" in namespace "gc-1235"
  I0901 12:29:14.632917 17 delete.go:111] Deleting pod "simpletest.rc-mdngg" in namespace "gc-1235"
  I0901 12:29:14.930742 17 delete.go:111] Deleting pod "simpletest.rc-mgsxw" in namespace "gc-1235"
  I0901 12:29:15.087565 17 delete.go:111] Deleting pod "simpletest.rc-mlnh2" in namespace "gc-1235"
  I0901 12:29:15.179623 17 delete.go:111] Deleting pod "simpletest.rc-mm6n2" in namespace "gc-1235"
  I0901 12:29:15.535043 17 delete.go:111] Deleting pod "simpletest.rc-mmn4t" in namespace "gc-1235"
  I0901 12:29:15.743624 17 delete.go:111] Deleting pod "simpletest.rc-n2h85" in namespace "gc-1235"
  I0901 12:29:15.823058 17 delete.go:111] Deleting pod "simpletest.rc-n5rrm" in namespace "gc-1235"
  I0901 12:29:15.945367 17 delete.go:111] Deleting pod "simpletest.rc-nhpxq" in namespace "gc-1235"
  I0901 12:29:16.019994 17 delete.go:111] Deleting pod "simpletest.rc-nsrsr" in namespace "gc-1235"
  I0901 12:29:16.051961 17 delete.go:111] Deleting pod "simpletest.rc-p87dk" in namespace "gc-1235"
  I0901 12:29:16.144764 17 delete.go:111] Deleting pod "simpletest.rc-prvs7" in namespace "gc-1235"
  I0901 12:29:16.181145 17 delete.go:111] Deleting pod "simpletest.rc-ptqvw" in namespace "gc-1235"
  I0901 12:29:16.210087 17 delete.go:111] Deleting pod "simpletest.rc-qbgff" in namespace "gc-1235"
  I0901 12:29:16.382901 17 delete.go:111] Deleting pod "simpletest.rc-qgshr" in namespace "gc-1235"
  I0901 12:29:16.600008 17 delete.go:111] Deleting pod "simpletest.rc-qmnts" in namespace "gc-1235"
  I0901 12:29:16.801243 17 delete.go:111] Deleting pod "simpletest.rc-qntxn" in namespace "gc-1235"
  I0901 12:29:16.936829 17 delete.go:111] Deleting pod "simpletest.rc-qrg4c" in namespace "gc-1235"
  I0901 12:29:17.011016 17 delete.go:111] Deleting pod "simpletest.rc-qsk4k" in namespace "gc-1235"
  I0901 12:29:17.101773 17 delete.go:111] Deleting pod "simpletest.rc-qtc9l" in namespace "gc-1235"
  I0901 12:29:17.212786 17 delete.go:111] Deleting pod "simpletest.rc-qwsmb" in namespace "gc-1235"
  I0901 12:29:17.384356 17 delete.go:111] Deleting pod "simpletest.rc-r5mp2" in namespace "gc-1235"
  I0901 12:29:17.762659 17 delete.go:111] Deleting pod "simpletest.rc-rcptz" in namespace "gc-1235"
  I0901 12:29:17.871326 17 delete.go:111] Deleting pod "simpletest.rc-rmjxl" in namespace "gc-1235"
  I0901 12:29:17.988729 17 delete.go:111] Deleting pod "simpletest.rc-rsq9n" in namespace "gc-1235"
  I0901 12:29:18.039707 17 delete.go:111] Deleting pod "simpletest.rc-s297m" in namespace "gc-1235"
  I0901 12:29:18.104353 17 delete.go:111] Deleting pod "simpletest.rc-sfztx" in namespace "gc-1235"
  I0901 12:29:18.165167 17 delete.go:111] Deleting pod "simpletest.rc-sk66f" in namespace "gc-1235"
  I0901 12:29:18.223673 17 delete.go:111] Deleting pod "simpletest.rc-svqck" in namespace "gc-1235"
  I0901 12:29:18.413782 17 delete.go:111] Deleting pod "simpletest.rc-t7g65" in namespace "gc-1235"
  I0901 12:29:18.464859 17 delete.go:111] Deleting pod "simpletest.rc-tfgbh" in namespace "gc-1235"
  I0901 12:29:18.626123 17 delete.go:111] Deleting pod "simpletest.rc-thhml" in namespace "gc-1235"
  I0901 12:29:18.859271 17 delete.go:111] Deleting pod "simpletest.rc-tjh69" in namespace "gc-1235"
  I0901 12:29:18.957020 17 delete.go:111] Deleting pod "simpletest.rc-tkncb" in namespace "gc-1235"
  I0901 12:29:19.190261 17 delete.go:111] Deleting pod "simpletest.rc-tldkb" in namespace "gc-1235"
  I0901 12:29:19.265582 17 delete.go:111] Deleting pod "simpletest.rc-tp25x" in namespace "gc-1235"
  I0901 12:29:19.393161 17 delete.go:111] Deleting pod "simpletest.rc-tsklf" in namespace "gc-1235"
  I0901 12:29:19.438763 17 delete.go:111] Deleting pod "simpletest.rc-tv6xk" in namespace "gc-1235"
  I0901 12:29:19.490256 17 delete.go:111] Deleting pod "simpletest.rc-v6dr8" in namespace "gc-1235"
  I0901 12:29:19.534332 17 delete.go:111] Deleting pod "simpletest.rc-v9q6p" in namespace "gc-1235"
  I0901 12:29:19.741735 17 delete.go:111] Deleting pod "simpletest.rc-vh9q5" in namespace "gc-1235"
  I0901 12:29:19.814910 17 delete.go:111] Deleting pod "simpletest.rc-wl6f6" in namespace "gc-1235"
  I0901 12:29:19.973978 17 delete.go:111] Deleting pod "simpletest.rc-ws47n" in namespace "gc-1235"
  I0901 12:29:20.027615 17 delete.go:111] Deleting pod "simpletest.rc-wt47f" in namespace "gc-1235"
  I0901 12:29:20.171004 17 delete.go:111] Deleting pod "simpletest.rc-xjdrw" in namespace "gc-1235"
  I0901 12:29:20.288013 17 delete.go:111] Deleting pod "simpletest.rc-xnw5z" in namespace "gc-1235"
  I0901 12:29:20.417837 17 delete.go:111] Deleting pod "simpletest.rc-xpz6q" in namespace "gc-1235"
  I0901 12:29:20.554134 17 delete.go:111] Deleting pod "simpletest.rc-xwbnr" in namespace "gc-1235"
  I0901 12:29:20.642580 17 delete.go:111] Deleting pod "simpletest.rc-zn9kf" in namespace "gc-1235"
  I0901 12:29:20.791914 17 delete.go:111] Deleting pod "simpletest.rc-zqj6v" in namespace "gc-1235"
  I0901 12:29:20.890089 17 delete.go:111] Deleting pod "simpletest.rc-zvp4j" in namespace "gc-1235"
  I0901 12:29:20.983494 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1235" for this suite. @ 09/01/25 12:29:21.019
• [59.382 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/01/25 12:29:21.063
  I0901 12:29:21.063901 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:29:21.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:21.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:21.164
  STEP: Setting up data @ 09/01/25 12:29:21.17
  STEP: Creating pod pod-subpath-test-configmap-h5qc @ 09/01/25 12:29:21.307
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:29:21.308
  STEP: Saw pod success @ 09/01/25 12:29:45.561
  I0901 12:29:45.571991 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-subpath-test-configmap-h5qc container test-container-subpath-configmap-h5qc: <nil>
  STEP: delete the pod @ 09/01/25 12:29:45.639
  STEP: Deleting pod pod-subpath-test-configmap-h5qc @ 09/01/25 12:29:45.694
  I0901 12:29:45.694783 17 delete.go:78] Deleting pod "pod-subpath-test-configmap-h5qc" in namespace "subpath-6399"
  I0901 12:29:45.703566 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6399" for this suite. @ 09/01/25 12:29:45.715
• [24.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/01/25 12:29:45.737
  I0901 12:29:45.737526 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:29:45.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:45.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:45.795
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/01/25 12:29:45.803
  STEP: Saw pod success @ 09/01/25 12:29:49.877
  I0901 12:29:49.890538 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-f9df6d33-0d3b-4e55-88f5-154b56840543 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:29:49.919
  I0901 12:29:49.980206 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3520" for this suite. @ 09/01/25 12:29:49.995
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/01/25 12:29:50.02
  I0901 12:29:50.020578 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename certificates @ 09/01/25 12:29:50.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:50.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:50.057
  STEP: getting /apis @ 09/01/25 12:29:52.427
  STEP: getting /apis/certificates.k8s.io @ 09/01/25 12:29:52.44
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/01/25 12:29:52.443
  STEP: creating @ 09/01/25 12:29:52.447
  STEP: getting @ 09/01/25 12:29:52.501
  STEP: listing @ 09/01/25 12:29:52.509
  STEP: watching @ 09/01/25 12:29:52.518
  I0901 12:29:52.518475 17 certificates.go:316] starting watch
  STEP: patching @ 09/01/25 12:29:52.522
  STEP: updating @ 09/01/25 12:29:52.542
  I0901 12:29:52.557199 17 certificates.go:332] waiting for watch events with expected annotations
  I0901 12:29:52.557483 17 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/01/25 12:29:52.558
  STEP: patching /approval @ 09/01/25 12:29:52.566
  STEP: updating /approval @ 09/01/25 12:29:52.585
  STEP: getting /status @ 09/01/25 12:29:52.604
  STEP: patching /status @ 09/01/25 12:29:52.616
  STEP: updating /status @ 09/01/25 12:29:52.637
  STEP: deleting @ 09/01/25 12:29:52.656
  STEP: deleting a collection @ 09/01/25 12:29:52.689
  I0901 12:29:52.733500 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9360" for this suite. @ 09/01/25 12:29:52.743
• [2.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/01/25 12:29:52.769
  I0901 12:29:52.769138 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:29:52.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:52.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:52.81
  I0901 12:29:52.818498 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 12:29:55.689
  I0901 12:29:55.690664 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-6803 --namespace=crd-publish-openapi-6803 create -f -'
  I0901 12:29:56.119503 17 builder.go:156] stderr: ""
  I0901 12:29:56.119676 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-6803-884-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 12:29:56.120697 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-6803 --namespace=crd-publish-openapi-6803 delete e2e-test-crd-publish-openapi-6803-884-crds test-cr'
  I0901 12:29:56.338463 17 builder.go:156] stderr: ""
  I0901 12:29:56.338648 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-6803-884-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-6803 namespace\n"
  I0901 12:29:56.338914 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-6803 --namespace=crd-publish-openapi-6803 apply -f -'
  I0901 12:29:56.522383 17 builder.go:156] stderr: ""
  I0901 12:29:56.522493 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-6803-884-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 12:29:56.523474 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-6803 --namespace=crd-publish-openapi-6803 delete e2e-test-crd-publish-openapi-6803-884-crds test-cr'
  I0901 12:29:56.715234 17 builder.go:156] stderr: ""
  I0901 12:29:56.715357 17 builder.go:157] stdout: "e2e-test-crd-publish-openapi-6803-884-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-6803 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 12:29:56.715
  I0901 12:29:56.715882 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=crd-publish-openapi-6803 explain e2e-test-crd-publish-openapi-6803-884-crds'
  I0901 12:29:56.894145 17 builder.go:156] stderr: ""
  I0901 12:29:56.894404 17 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6803-884-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0901 12:29:59.481585 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6803" for this suite. @ 09/01/25 12:29:59.516
• [6.776 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/01/25 12:29:59.55
  I0901 12:29:59.550763 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/01/25 12:29:59.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:59.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:59.596
  I0901 12:29:59.605073 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 12:30:59.607201 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:30:59.624702 17 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/01/25 12:30:59.624
  I0901 12:30:59.878646 17 taints.go:463] Pod1 is running on wohnahxathu9-2. Tainting Node
  I0901 12:31:02.167361 17 taints.go:471] Pod2 is running on wohnahxathu9-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 12:31:02.167
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 12:31:02.204
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/01/25 12:31:02.214
  I0901 12:31:08.024255 17 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0901 12:31:28.393938 17 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 12:31:28.433
  I0901 12:31:28.444397 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-73" for this suite. @ 09/01/25 12:31:28.452
• [88.917 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:31:28.468
  I0901 12:31:28.468747 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:31:28.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:28.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:28.511
  STEP: Creating secret with name secret-test-55668a24-6313-45a4-84dc-761eeba114ff @ 09/01/25 12:31:28.519
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:31:28.527
  STEP: Saw pod success @ 09/01/25 12:31:32.583
  I0901 12:31:32.592364 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-4e838390-c17f-4bda-b6cb-c2fa3973ad26 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:31:32.65
  I0901 12:31:32.703755 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6445" for this suite. @ 09/01/25 12:31:32.718
• [4.274 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3247
  STEP: Creating a kubernetes client @ 09/01/25 12:31:32.746
  I0901 12:31:32.747084 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:31:32.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:32.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:32.82
  I0901 12:31:32.859929      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/01/25 12:31:32.86
  I0901 12:31:32.882451      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/01/25 12:31:32.883
  I0901 12:31:32.889108      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/01/25 12:31:32.89
  I0901 12:31:32.904910      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/01/25 12:31:32.905
  I0901 12:31:32.917866      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:31:32.923737      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:31:32.923
  I0901 12:31:32.932657      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/01/25 12:31:32.933
  I0901 12:31:32.948925      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:31:32.952067      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:31:32.952
  I0901 12:31:32.960424      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/01/25 12:31:32.96
  I0901 12:31:32.988768      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/01/25 12:31:32.988
  I0901 12:31:32.991706      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/01/25 12:31:32.991
  I0901 12:31:33.003556      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:31:33.004372 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7899" for this suite. @ 09/01/25 12:31:33.015
• [0.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/01/25 12:31:33.041
  I0901 12:31:33.041863 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:31:33.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:33.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:33.101
  STEP: Creating configMap with name cm-test-opt-del-8f50020d-fd40-4fe0-afb1-f31f57dc8d7c @ 09/01/25 12:31:33.138
  STEP: Creating configMap with name cm-test-opt-upd-0413f4a4-0c00-41ca-9d4a-87e6e8e24aa4 @ 09/01/25 12:31:33.17
  STEP: Creating the pod @ 09/01/25 12:31:33.213
  STEP: Deleting configmap cm-test-opt-del-8f50020d-fd40-4fe0-afb1-f31f57dc8d7c @ 09/01/25 12:31:39.351
  STEP: Updating configmap cm-test-opt-upd-0413f4a4-0c00-41ca-9d4a-87e6e8e24aa4 @ 09/01/25 12:31:39.365
  STEP: Creating configMap with name cm-test-opt-create-832b2b10-b5eb-4d65-a14e-55907c3ce40a @ 09/01/25 12:31:39.377
  STEP: waiting to observe update in volume @ 09/01/25 12:31:39.388
  I0901 12:32:46.676660 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9424" for this suite. @ 09/01/25 12:32:46.692
• [73.675 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:234
  STEP: Creating a kubernetes client @ 09/01/25 12:32:46.716
  I0901 12:32:46.716864 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:32:46.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:46.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:46.762
  STEP: Setting up server cert @ 09/01/25 12:32:46.823
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:32:47.786
  STEP: Deploying the webhook pod @ 09/01/25 12:32:47.802
  STEP: Wait for the deployment to be ready @ 09/01/25 12:32:47.845
  I0901 12:32:47.872489 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 12:32:49.913
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:32:49.954
  I0901 12:32:50.955260 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/01/25 12:32:50.987
  I0901 12:32:51.058629 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create a namespace for the webhook @ 09/01/25 12:32:51.193
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/01/25 12:32:51.23
  I0901 12:32:51.400114 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9121" for this suite. @ 09/01/25 12:32:51.416
  STEP: Destroying namespace "webhook-markers-3997" for this suite. @ 09/01/25 12:32:51.439
  STEP: Destroying namespace "fail-closed-namespace-1556" for this suite. @ 09/01/25 12:32:51.46
• [4.760 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/01/25 12:32:51.478
  I0901 12:32:51.480069 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:32:51.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:51.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:51.515
  I0901 12:32:51.565032 17 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:32:51.575
  I0901 12:32:51.691020 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:32:51.692454 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:32:52.669885 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:32:52.670328 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 12:32:53.638002 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:32:53.638121 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/01/25 12:32:53.68
  STEP: Check that daemon pods images are updated. @ 09/01/25 12:32:53.716
  I0901 12:32:53.728833 17 daemon_set.go:1193] Wrong image for pod: daemon-set-5qbvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:53.729430 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:54.728902 17 daemon_set.go:1193] Wrong image for pod: daemon-set-5qbvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:54.729020 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:55.737773 17 daemon_set.go:1193] Wrong image for pod: daemon-set-5qbvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:55.737857 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:55.737887 17 daemon_set.go:1198] Pod daemon-set-fd7ph is not available
  I0901 12:32:56.734784 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:57.733857 17 daemon_set.go:1198] Pod daemon-set-2c6pr is not available
  I0901 12:32:57.733943 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:32:58.731497 17 daemon_set.go:1198] Pod daemon-set-2c6pr is not available
  I0901 12:32:58.731683 17 daemon_set.go:1193] Wrong image for pod: daemon-set-7lkfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:33:00.733997 17 daemon_set.go:1198] Pod daemon-set-vkbgh is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/01/25 12:33:00.747
  I0901 12:33:00.768858 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:33:00.769217 17 fixtures.go:131] Node wohnahxathu9-2 is running 0 daemon pod, expected 1
  I0901 12:33:01.777994 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:33:01.778126 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:33:01.828
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3452, will wait for the garbage collector to delete the pods @ 09/01/25 12:33:01.828
  I0901 12:33:01.916775 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 24.158219ms
  I0901 12:33:02.018882 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 102.106008ms
  I0901 12:33:03.431151 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:33:03.431331 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:33:03.445717 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35737"},"items":null}

  I0901 12:33:03.457519 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35737"},"items":null}

  I0901 12:33:03.511944 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3452" for this suite. @ 09/01/25 12:33:03.528
• [12.074 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/01/25 12:33:03.555
  I0901 12:33:03.555344 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:33:03.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:03.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:03.611
  I0901 12:33:03.634896 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7146" for this suite. @ 09/01/25 12:33:03.646
• [0.114 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/01/25 12:33:03.668
  I0901 12:33:03.668928 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:33:03.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:03.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:03.712
  STEP: set up a multi version CRD @ 09/01/25 12:33:03.72
  I0901 12:33:03.725734 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: rename a version @ 09/01/25 12:33:10.131
  STEP: check the new version name is served @ 09/01/25 12:33:10.172
  STEP: check the old version name is removed @ 09/01/25 12:33:12.223
  STEP: check the other version is not changed @ 09/01/25 12:33:13.414
  I0901 12:33:17.816529 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3007" for this suite. @ 09/01/25 12:33:17.853
• [14.205 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/01/25 12:33:17.875
  I0901 12:33:17.875400 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:33:17.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:17.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:17.932
  STEP: creating the pod @ 09/01/25 12:33:17.942
  STEP: setting up watch @ 09/01/25 12:33:17.945
  STEP: submitting the pod to kubernetes @ 09/01/25 12:33:18.055
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:33:18.09
  STEP: verifying pod creation was observed @ 09/01/25 12:33:18.102
  STEP: deleting the pod gracefully @ 09/01/25 12:33:20.137
  STEP: verifying pod deletion was observed @ 09/01/25 12:33:20.164
  I0901 12:33:21.462082 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2104" for this suite. @ 09/01/25 12:33:21.473
• [3.614 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/01/25 12:33:21.488
  I0901 12:33:21.488189 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:33:21.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:21.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:21.553
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9e2c4149-cecd-46ef-9220-0d36db098c93 @ 09/01/25 12:33:21.594
  STEP: Creating the pod @ 09/01/25 12:33:21.615
  STEP: Updating configmap projected-configmap-test-upd-9e2c4149-cecd-46ef-9220-0d36db098c93 @ 09/01/25 12:33:23.698
  STEP: waiting to observe update in volume @ 09/01/25 12:33:23.717
  I0901 12:34:51.191784 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5398" for this suite. @ 09/01/25 12:34:51.214
• [89.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:49
  STEP: Creating a kubernetes client @ 09/01/25 12:34:51.238
  I0901 12:34:51.238186 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:34:51.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:34:51.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:34:51.286
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:34:51.294
  STEP: Saw pod success @ 09/01/25 12:34:55.362
  I0901 12:34:55.373828 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downward-api-97ce652a-c37a-4a4e-9499-eee130d9096c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:34:55.445
  I0901 12:34:55.496608 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8738" for this suite. @ 09/01/25 12:34:55.513
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/01/25 12:34:55.537
  I0901 12:34:55.537996 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:34:55.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:34:55.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:34:55.577
  STEP: creating a Deployment @ 09/01/25 12:34:55.597
  I0901 12:34:55.597549 17 deployment.go:506] Creating simple deployment test-deployment-t54z6
  I0901 12:34:55.649057 17 deployment.go:223] deployment "test-deployment-t54z6" doesn't have the required revision set
  I0901 12:34:57.678421 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 34, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 34, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 34, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 34, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-t54z6-6dcdd4444f\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 09/01/25 12:34:59.705
  I0901 12:34:59.720143 17 deployment.go:531] Deployment test-deployment-t54z6 has Conditions: [{Available True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t54z6-6dcdd4444f" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/01/25 12:34:59.72
  I0901 12:34:59.752942 17 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 34, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 34, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 34, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 34, 55, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-t54z6-6dcdd4444f\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/01/25 12:34:59.753
  I0901 12:34:59.762504 17 deployment.go:578] Observed &Deployment event: ADDED
  I0901 12:34:59.763088 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t54z6-6dcdd4444f"}
  I0901 12:34:59.763815 17 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 12:34:59.763984 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t54z6-6dcdd4444f"}
  I0901 12:34:59.764189 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:34:59.764792 17 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 12:34:59.765159 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:34:59.765227 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-t54z6-6dcdd4444f" is progressing.}
  I0901 12:34:59.765836 17 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 12:34:59.765923 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:34:59.766360 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t54z6-6dcdd4444f" has successfully progressed.}
  I0901 12:34:59.767003 17 deployment.go:578] Observed &Deployment event: MODIFIED
  I0901 12:34:59.767183 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:34:59.767407 17 deployment.go:574] Observed Deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t54z6-6dcdd4444f" has successfully progressed.}
  I0901 12:34:59.767799 17 deployment.go:571] Found Deployment test-deployment-t54z6 in namespace deployment-7705 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:34:59.767997 17 deployment.go:582] Deployment test-deployment-t54z6 has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 12:34:59.768
  I0901 12:34:59.768171 17 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:34:59.791253 17 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/01/25 12:34:59.791
  I0901 12:34:59.798895 17 deployment.go:615] Observed &Deployment event: ADDED
  I0901 12:34:59.799082 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t54z6-6dcdd4444f"}
  I0901 12:34:59.799706 17 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 12:34:59.799864 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t54z6-6dcdd4444f"}
  I0901 12:34:59.799904 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:34:59.800784 17 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 12:34:59.800960 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:34:59.800999 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:55 +0000 UTC 2025-09-01 12:34:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-t54z6-6dcdd4444f" is progressing.}
  I0901 12:34:59.801610 17 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 12:34:59.801796 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:34:59.801877 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t54z6-6dcdd4444f" has successfully progressed.}
  I0901 12:34:59.802330 17 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 12:34:59.802486 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:34:59.802523 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:34:57 +0000 UTC 2025-09-01 12:34:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t54z6-6dcdd4444f" has successfully progressed.}
  I0901 12:34:59.802595 17 deployment.go:611] Observed deployment test-deployment-t54z6 in namespace deployment-7705 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:34:59.803230 17 deployment.go:615] Observed &Deployment event: MODIFIED
  I0901 12:34:59.803360 17 deployment.go:608] Found deployment test-deployment-t54z6 in namespace deployment-7705 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0901 12:34:59.803445 17 deployment.go:619] Deployment test-deployment-t54z6 has a patched status
  I0901 12:34:59.815238 17 deployment.go:632] Deployment "test-deployment-t54z6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-t54z6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29eec70a-b6f3-4a5f-aa03-4a65418b5a76",
      ResourceVersion: (string) (len=5) "36166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-t54z6-6dcdd4444f\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:34:59.835361 17 deployment.go:40] New ReplicaSet "test-deployment-t54z6-6dcdd4444f" of Deployment "test-deployment-t54z6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-t54z6-6dcdd4444f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8f3a64b-759e-4bb3-a241-7f991b47d0b7",
      ResourceVersion: (string) (len=5) "36159",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-t54z6",
          UID: (types.UID) (len=36) "29eec70a-b6f3-4a5f-aa03-4a65418b5a76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 39 65  |k:{\"uid\":\"29e|
              00000120  65 63 37 30 61 2d 62 36  66 33 2d 34 61 35 66 2d  |ec70a-b6f3-4a5f-|
              00000130  61 61 30 33 2d 34 61 36  35 34 31 38 62 35 61 37  |aa03-4a65418b5a7|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:34:59.867162 17 deployment.go:68] Pod "test-deployment-t54z6-6dcdd4444f-wwx8f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-t54z6-6dcdd4444f-wwx8f",
      GenerateName: (string) (len=33) "test-deployment-t54z6-6dcdd4444f-",
      Namespace: (string) (len=15) "deployment-7705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "506c6739-eafa-4ca2-8bfb-8da3aeb25072",
      ResourceVersion: (string) (len=5) "36158",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-t54z6-6dcdd4444f",
          UID: (types.UID) (len=36) "e8f3a64b-759e-4bb3-a241-7f991b47d0b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 38 66 33 61 36 34  62 2d 37 35 39 65 2d 34  |"e8f3a64b-759e-4|
              000000a0  62 62 33 2d 61 32 34 31  2d 37 66 39 39 31 62 34  |bb3-a241-7f991b4|
              000000b0  37 64 30 62 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |7d0b7\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 31 37  32 5c 22 7d 22 3a 7b 22  |33.66.172\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4br7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4br7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=13) "10.233.66.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326896,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://829518d4aa4e444756701c38d9a88b008a2d4ad725cf0feceb6e2c71d783f663",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b4br7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 12:34:59.879556 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7705" for this suite. @ 09/01/25 12:34:59.892
• [4.382 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/01/25 12:34:59.92
  I0901 12:34:59.920126 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:34:59.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:34:59.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:34:59.96
  STEP: creating a Deployment @ 09/01/25 12:34:59.977
  STEP: waiting for Deployment to be created @ 09/01/25 12:34:59.992
  STEP: waiting for all Replicas to be Ready @ 09/01/25 12:34:59.996
  I0901 12:35:00.000256 17 deployment.go:246] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.000333 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.018209 17 deployment.go:246] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.018508 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.053500 17 deployment.go:246] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.053606 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.149743 17 deployment.go:246] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:00.149817 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:35:01.452909 17 deployment.go:246] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:35:01.452986 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:35:02.197707 17 deployment.go:248] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/01/25 12:35:02.197
  I0901 12:35:02.225825 17 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/01/25 12:35:02.225
  I0901 12:35:02.230796 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.230911 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231131 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231161 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231641 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231719 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231752 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.231776 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 0
  I0901 12:35:02.232395 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:02.232444 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:02.232607 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.232654 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.232982 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.233029 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.268452 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.268524 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.299797 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.299913 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:02.405237 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:02.405355 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:02.423822 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:02.423950 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:04.522366 17 deployment.go:309] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:04.522440 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:04.656329 17 deployment.go:311] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  STEP: listing Deployments @ 09/01/25 12:35:04.656
  I0901 12:35:04.662876 17 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/01/25 12:35:04.662
  I0901 12:35:04.710476 17 deployment.go:360] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/01/25 12:35:04.71
  I0901 12:35:04.725801 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:04.760386 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:04.846995 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:04.920752 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:04.984129 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:06.234538 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:06.847753 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:06.928425 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:07.041448 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:35:08.662884 17 deployment.go:389] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/01/25 12:35:08.762
  STEP: fetching the DeploymentStatus @ 09/01/25 12:35:08.799
  I0901 12:35:08.812358 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:08.813156 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:08.813210 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:08.813236 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:08.813387 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 1
  I0901 12:35:08.813545 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:08.813598 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 3
  I0901 12:35:08.814140 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:08.814226 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 2
  I0901 12:35:08.814428 17 deployment.go:448] observed Deployment test-deployment in namespace deployment-4914 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/01/25 12:35:08.814
  I0901 12:35:08.836554 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.837724 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.837802 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.838252 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.838377 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.839615 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.839727 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.839766 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.839950 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.845135 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.845235 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.845518 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.845598 17 deployment.go:474] observed event type MODIFIED
  I0901 12:35:08.871652 17 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0901 12:35:08.881532 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4914" for this suite. @ 09/01/25 12:35:08.895
• [9.002 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/01/25 12:35:08.922
  I0901 12:35:08.922834 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:35:08.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:08.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:08.984
  STEP: Creating configMap with name configmap-test-volume-de3095dd-bc19-4dfc-8b55-29f88a17f548 @ 09/01/25 12:35:09.003
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:35:09.018
  STEP: Saw pod success @ 09/01/25 12:35:13.079
  I0901 12:35:13.089789 17 output.go:207] Trying to get logs from node wohnahxathu9-1 pod pod-configmaps-8f31723a-68d4-4e8f-8ea6-b88911ecef24 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:35:13.13
  I0901 12:35:13.235811 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7439" for this suite. @ 09/01/25 12:35:13.256
• [4.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable as environment variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:253
  STEP: Creating a kubernetes client @ 09/01/25 12:35:13.279
  I0901 12:35:13.279138 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:35:13.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:13.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:13.339
  STEP: Creating configMap configmap-5785/configmap-test-046207bf-c966-4286-a3ca-68543614fffc @ 09/01/25 12:35:13.352
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:35:13.368
  STEP: Saw pod success @ 09/01/25 12:35:17.437
  I0901 12:35:17.445806 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-0ef168db-5917-4450-9fbc-5e4077afa6f6 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:35:17.478
  I0901 12:35:17.531383 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5785" for this suite. @ 09/01/25 12:35:17.541
• [4.321 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/01/25 12:35:17.603
  I0901 12:35:17.603254 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:35:17.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:17.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:17.659
  STEP: Creating a pod to test substitution in volume subpath @ 09/01/25 12:35:17.667
  STEP: Saw pod success @ 09/01/25 12:35:21.718
  I0901 12:35:21.727617 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod var-expansion-d202a843-ecb5-453e-8452-698feece148f container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:35:21.747
  I0901 12:35:21.781474 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6667" for this suite. @ 09/01/25 12:35:21.792
• [4.212 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/01/25 12:35:21.815
  I0901 12:35:21.816345 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:35:21.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:21.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:21.919
  STEP: Creating pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206 @ 09/01/25 12:35:21.926
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:35:23.968
  I0901 12:35:23.981493 17 container_probe.go:1749] Initial restart count of pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 is 0
  I0901 12:35:23.996811 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:26.010538 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:28.024084 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:30.040013 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:32.054227 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:34.066725 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:36.078175 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:38.092697 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:40.107732 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:42.122974 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:44.134483 17 container_probe.go:1759] Get pod liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 in namespace container-probe-2206
  I0901 12:35:44.134884 17 container_probe.go:1763] Restart count of pod container-probe-2206/liveness-333ec1d9-33fd-4834-ac60-0d4c57fff891 is now 1 (20.153245667s elapsed)
  STEP: deleting the pod @ 09/01/25 12:35:44.135
  I0901 12:35:44.174030 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2206" for this suite. @ 09/01/25 12:35:44.192
• [22.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2289
  STEP: Creating a kubernetes client @ 09/01/25 12:35:44.211
  I0901 12:35:44.211648 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:35:44.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:44.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:44.262
  STEP: creating service in namespace services-3825 @ 09/01/25 12:35:44.266
  STEP: creating service affinity-nodeport-transition in namespace services-3825 @ 09/01/25 12:35:44.266
  I0901 12:35:44.401171 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0901 12:35:46.415154 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-5794c6cd75\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:35:48.516951 17 resource.go:344] Creating new exec pod
  I0901 12:35:50.623934 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0901 12:35:51.015234 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.15.190) 80 port [tcp/http] succeeded!\n"
  I0901 12:35:51.015486 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:35:51.016110 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.190 80'
  I0901 12:35:51.395097 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.190 80\nConnection to 10.233.15.190 80 port [tcp/http] succeeded!\n"
  I0901 12:35:51.395223 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:35:51.396051 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.57 32417'
  I0901 12:35:51.772119 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.57 32417\nConnection to 192.168.121.57 32417 port [tcp/*] succeeded!\n"
  I0901 12:35:51.772698 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:35:51.773253 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.15 32417'
  I0901 12:35:52.099710 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.15 32417\nConnection to 192.168.121.15 32417 port [tcp/*] succeeded!\n"
  I0901 12:35:52.099843 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:35:52.118568 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/ ; done'
  I0901 12:35:52.841603 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n"
  I0901 12:35:52.842175 17 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f4lbs\naffinity-nodeport-transition-5794c6cd75-f4lbs\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-f4lbs\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-f4lbs\naffinity-nodeport-transition-5794c6cd75-bnxtl"
  I0901 12:35:52.842241 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.842496 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:52.842755 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.842859 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.842963 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.842989 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.843132 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.843645 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.843937 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f4lbs
  I0901 12:35:52.843960 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f4lbs
  I0901 12:35:52.843976 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:52.844049 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f4lbs
  I0901 12:35:52.844157 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:52.844193 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:52.844393 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f4lbs
  I0901 12:35:52.844506 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:52.873244 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-3825 exec execpod-affinity9n8p8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/ ; done'
  I0901 12:35:53.591426 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.121.57:32417/\n"
  I0901 12:35:53.591546 17 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-f52k9\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl\naffinity-nodeport-transition-5794c6cd75-bnxtl"
  I0901 12:35:53.591587 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f52k9
  I0901 12:35:53.591643 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591706 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591761 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591781 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591828 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591852 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591894 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591925 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591941 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591957 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591973 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.591988 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.592004 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.592019 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.592041 17 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-bnxtl
  I0901 12:35:53.594771 17 service.go:4469] Cleaning up the exec pod
  I0901 12:35:53.710183 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3825" for this suite. @ 09/01/25 12:35:53.722
• [9.527 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/01/25 12:35:53.738
  I0901 12:35:53.738905 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:35:53.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:53.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:53.824
  STEP: Creating namespace "e2e-ns-2hblq" @ 09/01/25 12:35:53.83
  I0901 12:35:53.952527 17 namespace.go:411] Namespace "e2e-ns-2hblq-2771" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-2hblq-2771" @ 09/01/25 12:35:53.952
  I0901 12:35:53.985017 17 namespace.go:434] Namespace "e2e-ns-2hblq-2771" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-2hblq-2771" @ 09/01/25 12:35:53.985
  I0901 12:35:54.000387 17 namespace.go:463] Namespace "e2e-ns-2hblq-2771" has []v1.FinalizerName{"kubernetes"}
  I0901 12:35:54.000992 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4256" for this suite. @ 09/01/25 12:35:54.01
  STEP: Destroying namespace "e2e-ns-2hblq-2771" for this suite. @ 09/01/25 12:35:54.02
• [0.304 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:367
  STEP: Creating a kubernetes client @ 09/01/25 12:35:54.043
  I0901 12:35:54.043951 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:35:54.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:35:54.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:35:54.178
  STEP: Setting up server cert @ 09/01/25 12:35:54.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:35:55.202
  STEP: Deploying the webhook pod @ 09/01/25 12:35:55.217
  STEP: Wait for the deployment to be ready @ 09/01/25 12:35:55.251
  I0901 12:35:55.276563 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0901 12:35:57.316772 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:35:59.331509 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 35, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 12:36:01.332
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:36:01.363
  I0901 12:36:02.364159 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/01/25 12:36:02.378
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:36:02.378
  I0901 12:36:02.429427 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/01/25 12:36:02.567
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/01/25 12:36:03.601
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:36:03.601
  STEP: Having no error when timeout is longer than webhook latency @ 09/01/25 12:36:04.69
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:36:04.691
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/01/25 12:36:09.795
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:36:09.796
  I0901 12:36:15.022376 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3522" for this suite. @ 09/01/25 12:36:15.031
  STEP: Destroying namespace "webhook-markers-8362" for this suite. @ 09/01/25 12:36:15.042
• [21.018 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/01/25 12:36:15.064
  I0901 12:36:15.064136 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:36:15.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:15.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:15.109
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 12:36:15.116
  STEP: Saw pod success @ 09/01/25 12:36:19.163
  I0901 12:36:19.174175 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-d49e36c1-e95c-46b0-8b0a-2b74796eac34 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:36:19.21
  I0901 12:36:19.256920 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1362" for this suite. @ 09/01/25 12:36:19.284
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1082
  STEP: Creating a kubernetes client @ 09/01/25 12:36:19.322
  I0901 12:36:19.322778 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:36:19.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:19.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:19.366
  STEP: create deployment with httpd image @ 09/01/25 12:36:19.374
  I0901 12:36:19.375709 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5435 create -f -'
  I0901 12:36:19.650176 17 builder.go:156] stderr: ""
  I0901 12:36:19.650712 17 builder.go:157] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/01/25 12:36:19.65
  I0901 12:36:19.651561 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5435 diff -f -'
  I0901 12:36:20.020639 17 builder.go:145] rc: 1
  I0901 12:36:20.021913 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-5435 delete -f -'
  I0901 12:36:20.389782 17 builder.go:156] stderr: ""
  I0901 12:36:20.390026 17 builder.go:157] stdout: "deployment.apps \"httpd-deployment\" deleted from kubectl-5435 namespace\n"
  I0901 12:36:20.390433 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5435" for this suite. @ 09/01/25 12:36:20.414
• [1.121 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/01/25 12:36:20.444
  I0901 12:36:20.444474 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 12:36:20.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:36:20.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:36:20.49
  I0901 12:36:20.501102 17 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 12:36:20.523376 17 util.go:390] Waiting for terminating namespaces to be deleted...
  I0901 12:36:20.533230 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-1 before test
  I0901 12:36:20.546421 17 predicates.go:958] cilium-node-init-8rnck from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.546889 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:36:20.546922 17 predicates.go:958] cilium-pvcjx from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.546958 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:36:20.546980 17 predicates.go:958] coredns-66bc5c9577-pxnpq from kube-system started at 2025-09-01 10:48:12 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.546995 17 predicates.go:960] 	Container coredns ready: true, restart count 1
  I0901 12:36:20.547012 17 predicates.go:958] kube-apiserver-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.547035 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:36:20.547593 17 predicates.go:958] kube-controller-manager-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.547739 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:36:20.547764 17 predicates.go:958] kube-proxy-2mpj6 from kube-system started at 2025-09-01 10:45:03 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.547792 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:36:20.547809 17 predicates.go:958] kube-scheduler-wohnahxathu9-1 from kube-system started at 2025-09-01 11:01:32 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.547838 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:36:20.547855 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:36:20.547869 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:36:20.547884 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:36:20.547899 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-2 before test
  I0901 12:36:20.566433 17 predicates.go:958] cilium-4ll4d from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567098 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:36:20.567502 17 predicates.go:958] cilium-node-init-nz8p9 from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567527 17 predicates.go:960] 	Container node-init ready: true, restart count 1
  I0901 12:36:20.567569 17 predicates.go:958] kube-apiserver-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567586 17 predicates.go:960] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:36:20.567604 17 predicates.go:958] kube-controller-manager-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567618 17 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:36:20.567635 17 predicates.go:958] kube-proxy-mrff2 from kube-system started at 2025-09-01 10:46:06 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567692 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 1
  I0901 12:36:20.567717 17 predicates.go:958] kube-scheduler-wohnahxathu9-2 from kube-system started at 2025-09-01 10:51:34 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567732 17 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:36:20.567747 17 predicates.go:958] httpd-deployment-66c85ccc4b-8ttfc from kubectl-5435 started at 2025-09-01 12:36:19 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.567761 17 predicates.go:960] 	Container httpd ready: false, restart count 0
  I0901 12:36:20.567784 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-n85nx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:36:20.567812 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:36:20.567826 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0901 12:36:20.567840 17 predicates.go:120] 
  Logging pods the apiserver thinks is on node wohnahxathu9-3 before test
  I0901 12:36:20.578628 17 predicates.go:958] cilium-lsnls from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.578705 17 predicates.go:960] 	Container cilium-agent ready: true, restart count 1
  I0901 12:36:20.578728 17 predicates.go:958] cilium-node-init-78w5b from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.578744 17 predicates.go:960] 	Container node-init ready: true, restart count 2
  I0901 12:36:20.578761 17 predicates.go:958] cilium-operator-79974c855d-57ngp from kube-system started at 2025-09-01 10:47:28 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.579194 17 predicates.go:960] 	Container cilium-operator ready: true, restart count 4
  I0901 12:36:20.579255 17 predicates.go:958] coredns-66bc5c9577-9wl8q from kube-system started at 2025-09-01 11:02:55 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.579270 17 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0901 12:36:20.579320 17 predicates.go:958] kube-proxy-4srgk from kube-system started at 2025-09-01 10:46:35 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.579335 17 predicates.go:960] 	Container kube-proxy ready: true, restart count 2
  I0901 12:36:20.579351 17 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 12:36:20.579365 17 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 12:36:20.579380 17 predicates.go:958] sonobuoy-e2e-job-a32e027bfe084d7f from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:36:20.579498 17 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0901 12:36:20.579518 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:36:20.579537 17 predicates.go:958] sonobuoy-systemd-logs-daemon-set-637529a452854b3f-s5ckg from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:36:20.579551 17 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:36:20.579565 17 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:36:20.579
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:36:22.633
  STEP: Trying to apply a random label on the found node. @ 09/01/25 12:36:22.697
  STEP: verifying the node has the label kubernetes.io/e2e-20cdf2cf-66dd-4291-b760-e7a4105ad8b6 95 @ 09/01/25 12:36:22.727
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/01/25 12:36:22.739
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.15 on the node which pod4 resides and expect not scheduled @ 09/01/25 12:36:24.779
  STEP: removing the label kubernetes.io/e2e-20cdf2cf-66dd-4291-b760-e7a4105ad8b6 off the node wohnahxathu9-3 @ 09/01/25 12:41:24.806
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-20cdf2cf-66dd-4291-b760-e7a4105ad8b6 @ 09/01/25 12:41:24.85
  I0901 12:41:24.860415 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6156" for this suite. @ 09/01/25 12:41:24.878
• [304.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/01/25 12:41:24.915
  I0901 12:41:24.915405 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:41:24.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:24.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:24.961
  STEP: Creating the pod @ 09/01/25 12:41:24.973
  I0901 12:41:27.643159 17 pod_client.go:186] Successfully updated pod "labelsupdate150c1dbb-fdb3-45ff-93fd-c465a6286ff1"
  I0901 12:41:29.690891 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6976" for this suite. @ 09/01/25 12:41:29.708
• [4.818 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:41:29.734
  I0901 12:41:29.734343 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:41:29.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:29.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:29.788
  I0901 12:41:29.798027 17 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0901 12:41:29.830805 17 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0901 12:41:34.845587 17 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:41:34.845
  I0901 12:41:34.845884 17 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0901 12:41:34.861733 17 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0901 12:41:34.881167 17 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0901 12:41:36.921504 17 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0901 12:41:36.934094 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 41, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 41, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 41, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 41, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 12:41:38.944494 17 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0901 12:41:38.981068 17 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53b97642-397b-46ee-b688-2d8e8efddb80",
      ResourceVersion: (string) (len=5) "37821",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327294,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:41:38.999938 17 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-5bd98b4894" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf8bc639-3923-4ff7-9c34-09595b8980b0",
      ResourceVersion: (string) (len=5) "37809",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327294,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "53b97642-397b-46ee-b688-2d8e8efddb80",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 62 39 37 36  34 32 2d 33 39 37 62 2d  |\"53b97642-397b-|
              00000120  34 36 65 65 2d 62 36 38  38 2d 32 64 38 65 38 65  |46ee-b688-2d8e8e|
              00000130  66 64 64 62 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fddb80\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:41:39.005827 17 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0901 12:41:39.006985 17 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4857282e-67ba-40c2-a053-a43e48e4ad69",
      ResourceVersion: (string) (len=5) "37819",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "53b97642-397b-46ee-b688-2d8e8efddb80",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 33 62 39 37 36 34  |"uid\":\"53b9764|
              000000b0  32 2d 33 39 37 62 2d 34  36 65 65 2d 62 36 38 38  |2-397b-46ee-b688|
              000000c0  2d 32 64 38 65 38 65 66  64 64 62 38 30 5c 22 7d  |-2d8e8efddb80\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:41:39.022834 17 deployment.go:68] Pod "test-rolling-update-deployment-5bd98b4894-8pktc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-5bd98b4894-8pktc",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-5bd98b4894-",
      Namespace: (string) (len=15) "deployment-3579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad7bf148-3819-4fe1-b26d-677eb7b714c5",
      ResourceVersion: (string) (len=5) "37808",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327294,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
          UID: (types.UID) (len=36) "cf8bc639-3923-4ff7-9c34-09595b8980b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 66  38 62 63 36 33 39 2d 33  |d\":\"cf8bc639-3|
              00000090  39 32 33 2d 34 66 66 37  2d 39 63 33 34 2d 30 39  |923-4ff7-9c34-09|
              000000a0  35 39 35 62 38 39 38 30  62 30 5c 22 7d 22 3a 7b  |595b8980b0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 32  |k:{\"ip\":\"10.2|
              00000320  33 33 2e 36 36 2e 33 32  5c 22 7d 22 3a 7b 22 2e  |33.66.32\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccwc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccwc7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "wohnahxathu9-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.15"
        }
      },
      PodIP: (string) (len=12) "10.233.66.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327294,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892327295,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:30ffacb713aad721881f1c11a768df228bfad3dc366d268e82b02fc43511dfa4",
          ContainerID: (string) (len=72) "cri-o://5c4d27d4da980c4502f3ea3c01352deaf16e9e0da7f7ccf9e80df7786d454ab6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ccwc7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0901 12:41:39.046892 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3579" for this suite. @ 09/01/25 12:41:39.072
• [9.359 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:41:39.096
  I0901 12:41:39.096812 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 12:41:39.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:39.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:39.144
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/01/25 12:41:39.153
  STEP: Watching for error events or started pod @ 09/01/25 12:41:39.175
  STEP: Waiting for pod completion @ 09/01/25 12:41:41.188
  STEP: Checking that the pod succeeded @ 09/01/25 12:41:43.24
  STEP: Getting logs from the pod @ 09/01/25 12:41:43.24
  STEP: Checking that the sysctl is actually updated @ 09/01/25 12:41:43.259
  I0901 12:41:43.264050 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8348" for this suite. @ 09/01/25 12:41:43.278
• [4.201 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/01/25 12:41:43.298
  I0901 12:41:43.298954 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:41:43.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:43.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:43.336
  STEP: Creating configMap that has name configmap-test-emptyKey-c0c82e02-bed9-49f2-ad10-c70ce8ef8a30 @ 09/01/25 12:41:43.345
  I0901 12:41:43.349834 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5795" for this suite. @ 09/01/25 12:41:43.378
• [0.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/01/25 12:41:43.414
  I0901 12:41:43.414527 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:41:43.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:43.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:43.47
  STEP: Creating projection with secret that has name projected-secret-test-4552a429-d244-4cf8-aa19-53213a57e5e7 @ 09/01/25 12:41:43.478
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:41:43.494
  STEP: Saw pod success @ 09/01/25 12:41:47.559
  I0901 12:41:47.575778 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-secrets-dec03c13-d12c-4537-a306-32036f4f03a2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:41:47.601
  I0901 12:41:47.666839 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5741" for this suite. @ 09/01/25 12:41:47.684
• [4.293 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/01/25 12:41:47.709
  I0901 12:41:47.710028 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:41:47.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:47.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:47.76
  STEP: create the container @ 09/01/25 12:41:47.77
  I0901 12:41:47.795866      17 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/01/25 12:41:47.796
  STEP: get the container status @ 09/01/25 12:41:51.854
  STEP: the container should be terminated @ 09/01/25 12:41:51.865
  STEP: the termination message should be set @ 09/01/25 12:41:51.865
  I0901 12:41:51.865563 17 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 12:41:51.865
  I0901 12:41:51.930029 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4861" for this suite. @ 09/01/25 12:41:51.942
• [4.252 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:708
  STEP: Creating a kubernetes client @ 09/01/25 12:41:51.962
  I0901 12:41:51.962996 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:41:51.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:51.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:52.013
  STEP: Setting up server cert @ 09/01/25 12:41:52.069
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:41:53.092
  STEP: Deploying the webhook pod @ 09/01/25 12:41:53.101
  STEP: Wait for the deployment to be ready @ 09/01/25 12:41:53.125
  I0901 12:41:53.137744 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0901 12:41:55.176474 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 12:41:57.189
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:41:57.218
  I0901 12:41:58.219372 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 12:41:58.234
  STEP: verifying the validating webhook match conditions @ 09/01/25 12:41:58.249
  STEP: updating the validating webhook match conditions @ 09/01/25 12:41:58.267
  STEP: verifying the validating webhook match conditions @ 09/01/25 12:41:58.294
  I0901 12:41:58.420479 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9965" for this suite. @ 09/01/25 12:41:58.432
  STEP: Destroying namespace "webhook-markers-6950" for this suite. @ 09/01/25 12:41:58.45
• [6.507 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:41:58.484
  I0901 12:41:58.484586 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:41:58.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:41:58.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:41:58.525
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:41:58.539
  STEP: Waiting for all pods to be running @ 09/01/25 12:42:00.626
  I0901 12:42:00.634910 17 disruption.go:691] running pods: 0 < 3
  I0901 12:42:02.649919 17 disruption.go:691] running pods: 2 < 3
  I0901 12:42:04.658007 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-360" for this suite. @ 09/01/25 12:42:04.681
• [6.227 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/01/25 12:42:04.715
  I0901 12:42:04.715736 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:42:04.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:04.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:04.777
  STEP: Creating configMap configmap-184/configmap-test-842ed6e2-b07b-407c-a3b2-824226417320 @ 09/01/25 12:42:04.785
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:42:04.8
  STEP: Saw pod success @ 09/01/25 12:42:08.864
  I0901 12:42:08.878220 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-configmaps-967047a5-4a0c-4753-951e-8ecc7c9b9240 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:42:08.908
  I0901 12:42:08.962163 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-184" for this suite. @ 09/01/25 12:42:08.982
• [4.294 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:338
  STEP: Creating a kubernetes client @ 09/01/25 12:42:09.012
  I0901 12:42:09.012230 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:42:09.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:09.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:09.068
  I0901 12:42:09.081733 17 proxy.go:345] Creating pod...
  I0901 12:42:11.142249 17 proxy.go:369] Creating service...
  I0901 12:42:11.178522 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/DELETE
  I0901 12:42:11.212589 17 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:42:11.212685 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/GET
  I0901 12:42:11.241620 17 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:42:11.241910 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/HEAD
  I0901 12:42:11.253733 17 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0901 12:42:11.253790 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/OPTIONS
  I0901 12:42:11.261880 17 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:42:11.262406 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/PATCH
  I0901 12:42:11.277718 17 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:42:11.277792 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/POST
  I0901 12:42:11.292197 17 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:42:11.292306 17 proxy.go:406] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/pods/agnhost/proxy/some/path/with/PUT
  I0901 12:42:11.302060 17 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:42:11.303161 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/DELETE
  I0901 12:42:11.318713 17 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:42:11.318797 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/GET
  I0901 12:42:11.331755 17 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:42:11.331855 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/HEAD
  I0901 12:42:11.346268 17 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0901 12:42:11.346695 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/OPTIONS
  I0901 12:42:11.359741 17 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:42:11.359823 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/PATCH
  I0901 12:42:11.373635 17 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:42:11.373762 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/POST
  I0901 12:42:11.385465 17 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:42:11.385852 17 proxy.go:417] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8798/services/test-service/proxy/some/path/with/PUT
  I0901 12:42:11.400809 17 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:42:11.401045 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8798" for this suite. @ 09/01/25 12:42:11.413
• [2.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/01/25 12:42:11.433
  I0901 12:42:11.433231 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename ingressclass @ 09/01/25 12:42:11.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:11.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:11.468
  STEP: getting /apis @ 09/01/25 12:42:11.473
  STEP: getting /apis/networking.k8s.io @ 09/01/25 12:42:11.489
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 12:42:11.491
  STEP: creating @ 09/01/25 12:42:11.493
  STEP: getting @ 09/01/25 12:42:11.524
  STEP: listing @ 09/01/25 12:42:11.531
  STEP: watching @ 09/01/25 12:42:11.538
  I0901 12:42:11.538854 17 ingressclass.go:348] starting watch
  STEP: patching @ 09/01/25 12:42:11.54
  STEP: updating @ 09/01/25 12:42:11.551
  I0901 12:42:11.562801 17 ingressclass.go:364] waiting for watch events with expected annotations
  I0901 12:42:11.563141 17 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/01/25 12:42:11.563
  STEP: deleting a collection @ 09/01/25 12:42:11.591
  I0901 12:42:11.621833 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1694" for this suite. @ 09/01/25 12:42:11.632
• [0.215 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/01/25 12:42:11.649
  I0901 12:42:11.649148 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:42:11.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:11.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:11.683
  STEP: Creating projection with secret that has name projected-secret-test-map-63a6e8f7-0aa8-4596-b7a8-ec90684069a8 @ 09/01/25 12:42:11.689
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:42:11.7
  STEP: Saw pod success @ 09/01/25 12:42:15.755
  I0901 12:42:15.764329 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-projected-secrets-e4e53784-4ddb-4ebd-a15d-b3787c744729 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:42:15.815
  I0901 12:42:15.858619 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7061" for this suite. @ 09/01/25 12:42:15.876
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/01/25 12:42:15.898
  I0901 12:42:15.898731 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:42:15.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:15.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:15.948
  I0901 12:42:16.011651 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8425" for this suite. @ 09/01/25 12:42:16.024
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:173
  STEP: Creating a kubernetes client @ 09/01/25 12:42:16.041
  I0901 12:42:16.041725 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:42:16.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:16.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:16.074
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:42:16.127
  STEP: create the pod with lifecycle hook @ 09/01/25 12:42:20.222
  STEP: check poststart hook @ 09/01/25 12:42:22.297
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:42:22.315
  I0901 12:42:24.352990 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-485" for this suite. @ 09/01/25 12:42:24.366
• [8.345 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:42:24.386
  I0901 12:42:24.386832 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:42:24.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:24.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:24.434
  STEP: Creating configMap with name configmap-test-volume-5597c2ae-da17-47d0-bedc-766d45b64d32 @ 09/01/25 12:42:24.442
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:42:24.457
  STEP: Saw pod success @ 09/01/25 12:42:28.535
  I0901 12:42:28.547485 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-configmaps-fd256e04-b191-4c2c-a57d-8b4ad0cb90bb container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:42:28.575
  I0901 12:42:28.636373 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7513" for this suite. @ 09/01/25 12:42:28.649
• [4.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/01/25 12:42:28.729
  I0901 12:42:28.729903 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:42:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:28.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:28.779
  STEP: Creating projection with secret that has name projected-secret-test-06a52793-1811-449e-bc62-9f68d705dec4 @ 09/01/25 12:42:28.798
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:42:28.812
  STEP: Saw pod success @ 09/01/25 12:42:32.905
  I0901 12:42:32.916967 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-projected-secrets-f2095bb1-b0c5-44b2-9e61-f21a931fa77c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:42:32.941
  I0901 12:42:32.979600 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1533" for this suite. @ 09/01/25 12:42:32.994
• [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:42:33.017
  I0901 12:42:33.018069 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:42:33.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:33.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:33.064
  STEP: Creating configMap with name projected-configmap-test-volume-90ec2f2e-5621-4569-baf2-f80baa45acb1 @ 09/01/25 12:42:33.078
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:42:33.103
  STEP: Saw pod success @ 09/01/25 12:42:37.206
  I0901 12:42:37.221962 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-configmaps-0f69fd6c-5cc1-4357-9c22-d52a95f59da9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:42:37.243
  I0901 12:42:37.276161 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2769" for this suite. @ 09/01/25 12:42:37.291
• [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:42:37.311
  I0901 12:42:37.311847 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:42:37.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:37.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:37.349
  STEP: Counting existing ResourceQuota @ 09/01/25 12:42:37.355
  STEP: Creating a ResourceQuota @ 09/01/25 12:42:42.369
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:42:42.381
  I0901 12:42:44.408328 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00355ec80>: 
          metadata:
            creationTimestamp: "2025-09-01T12:42:42Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:42:42Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:42:42Z"
            name: test-quota
            namespace: resourcequota-867
            resourceVersion: "38498"
            uid: ea7e82aa-3ac1-4863-b681-4d7553ef696f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Service @ 09/01/25 12:42:44.411
  STEP: Creating a NodePort Service @ 09/01/25 12:42:44.458
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/01/25 12:42:44.511
  STEP: Ensuring resource quota status captures service creation @ 09/01/25 12:42:44.555
  I0901 12:42:44.566968 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002990280>: 
          metadata:
            creationTimestamp: "2025-09-01T12:42:42Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:42:42Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services.loadbalancers: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:42:42Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:services: {}
                    f:services.nodeports: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:42:44Z"
            name: test-quota
            namespace: resourcequota-867
            resourceVersion: "38517"
            uid: ea7e82aa-3ac1-4863-b681-4d7553ef696f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "2"
              services.loadbalancers: "0"
              services.nodeports: "1"
  STEP: Deleting Services @ 09/01/25 12:42:44.568
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:42:44.65
  I0901 12:42:44.660450 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020af680>: 
          metadata:
            creationTimestamp: "2025-09-01T12:42:42Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:42:42Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:42:44Z"
            name: test-quota
            namespace: resourcequota-867
            resourceVersion: "38528"
            uid: ea7e82aa-3ac1-4863-b681-4d7553ef696f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 12:42:44.662460 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-867" for this suite. @ 09/01/25 12:42:44.672
• [7.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/01/25 12:42:44.706
  I0901 12:42:44.706721 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:42:44.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:42:44.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:42:44.738
  I0901 12:42:44.780796 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 12:43:44.810363 17 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:43:44.837
  I0901 12:43:44.838192 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:43:44.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:44.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:44.899
  I0901 12:43:44.952122 17 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0901 12:43:44.963019 17 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/01/25 12:43:45.111
  STEP: Removing a custom resource @ 09/01/25 12:43:45.149
  STEP: Removing a custom resource @ 09/01/25 12:43:45.248
  I0901 12:43:45.281372 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5826" for this suite. @ 09/01/25 12:43:45.298
  I0901 12:43:45.313013 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-973" for this suite. @ 09/01/25 12:43:45.398
• [60.722 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:865
  STEP: Creating a kubernetes client @ 09/01/25 12:43:45.434
  I0901 12:43:45.434627 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:43:45.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:45.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:45.48
  STEP: Setting up server cert @ 09/01/25 12:43:45.558
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:43:46.872
  STEP: Deploying the webhook pod @ 09/01/25 12:43:46.894
  STEP: Wait for the deployment to be ready @ 09/01/25 12:43:46.937
  I0901 12:43:46.975521 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 12:43:49.017
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:43:49.053
  I0901 12:43:50.053435 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 12:43:50.07
  I0901 12:43:50.154467 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create the configmap with a random name @ 09/01/25 12:43:50.303
  STEP: verify the configmap is mutated @ 09/01/25 12:43:50.35
  STEP: create the configmap with 'skip-me' name @ 09/01/25 12:43:50.351
  I0901 12:43:50.496068 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-191" for this suite. @ 09/01/25 12:43:50.516
  STEP: Destroying namespace "webhook-markers-7294" for this suite. @ 09/01/25 12:43:50.535
• [5.120 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:798
  STEP: Creating a kubernetes client @ 09/01/25 12:43:50.554
  I0901 12:43:50.554497 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 12:43:50.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:43:50.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:43:50.593
  STEP: Creating a job @ 09/01/25 12:43:50.599
  STEP: Ensuring job reaches completions @ 09/01/25 12:43:50.613
  I0901 12:44:00.690825 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7824" for this suite. @ 09/01/25 12:44:00.701
• [10.184 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:209
  STEP: Creating a kubernetes client @ 09/01/25 12:44:00.737
  I0901 12:44:00.737507 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename servicecidr @ 09/01/25 12:44:00.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:00.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:00.779
  STEP: creating @ 09/01/25 12:44:00.787
  STEP: patching @ 09/01/25 12:44:00.815
  STEP: updating @ 09/01/25 12:44:00.827
  STEP: getting @ 09/01/25 12:44:00.845
  STEP: listing @ 09/01/25 12:44:00.854
  STEP: watching @ 09/01/25 12:44:00.861
  STEP: deleting @ 09/01/25 12:44:00.869
  STEP: deleting a collection @ 09/01/25 12:44:00.881
  I0901 12:44:00.921877 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9535" for this suite. @ 09/01/25 12:44:00.935
• [0.217 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/01/25 12:44:00.957
  I0901 12:44:00.957629 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/01/25 12:44:00.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:00.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:00.995
  STEP: Setting up server cert @ 09/01/25 12:44:01.004
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:44:02.504
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:44:02.523
  STEP: Wait for the deployment to be ready @ 09/01/25 12:44:02.563
  I0901 12:44:02.588195 17 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0901 12:44:04.618764 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-788cb954bd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 12:44:06.631
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:44:06.656
  I0901 12:44:07.656876 17 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/01/25 12:44:07.67
  I0901 12:44:07.670578 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Creating a custom resource conversion webhook @ 09/01/25 12:44:08.208
  STEP: Watching with field selectors @ 09/01/25 12:44:10.472
  STEP: Registering informers with field selectors @ 09/01/25 12:44:10.5
  STEP: Creating custom resources @ 09/01/25 12:44:10.5
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/01/25 12:44:10.569
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/01/25 12:44:10.582
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/01/25 12:44:10.592
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/01/25 12:44:10.602
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/01/25 12:44:10.618
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 12:44:10.625
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/01/25 12:44:10.625
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/01/25 12:44:10.625
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 12:44:10.625
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/01/25 12:44:10.625
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/01/25 12:44:10.671
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/01/25 12:44:10.714
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:44:10.723
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/01/25 12:44:10.733
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:44:10.739
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/01/25 12:44:10.739
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/01/25 12:44:10.739
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:44:10.74
  I0901 12:44:11.382119 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-3248" for this suite. @ 09/01/25 12:44:11.403
• [10.463 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:121
  STEP: Creating a kubernetes client @ 09/01/25 12:44:11.42
  I0901 12:44:11.420542 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:44:11.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:11.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:11.477
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:44:11.482
  STEP: Saw pod success @ 09/01/25 12:44:15.537
  I0901 12:44:15.551047 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downward-api-e386896d-ad59-4cb0-b472-8f748251dc1a container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:44:15.612
  I0901 12:44:15.671431 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3670" for this suite. @ 09/01/25 12:44:15.684
• [4.282 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/01/25 12:44:15.707
  I0901 12:44:15.707647 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:44:15.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:15.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:15.757
  STEP: creating a ReplicationController @ 09/01/25 12:44:15.781
  STEP: waiting for RC to be added @ 09/01/25 12:44:15.796
  STEP: waiting for available Replicas @ 09/01/25 12:44:15.798
  STEP: patching ReplicationController @ 09/01/25 12:44:17.984
  STEP: waiting for RC to be modified @ 09/01/25 12:44:18.008
  STEP: patching ReplicationController status @ 09/01/25 12:44:18.01
  STEP: waiting for RC to be modified @ 09/01/25 12:44:18.028
  STEP: waiting for available Replicas @ 09/01/25 12:44:18.028
  STEP: fetching ReplicationController status @ 09/01/25 12:44:18.048
  STEP: patching ReplicationController scale @ 09/01/25 12:44:18.061
  STEP: waiting for RC to be modified @ 09/01/25 12:44:18.083
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/01/25 12:44:18.084
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/01/25 12:44:19.508
  STEP: updating ReplicationController status @ 09/01/25 12:44:19.519
  STEP: waiting for RC to be modified @ 09/01/25 12:44:19.541
  STEP: listing all ReplicationControllers @ 09/01/25 12:44:19.542
  STEP: checking that ReplicationController has expected values @ 09/01/25 12:44:19.554
  STEP: deleting ReplicationControllers by collection @ 09/01/25 12:44:19.554
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/01/25 12:44:19.583
  I0901 12:44:19.691093 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:44:19.691571      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7265" for this suite. @ 09/01/25 12:44:19.706
• [4.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/01/25 12:44:19.725
  I0901 12:44:19.725779 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:44:19.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:19.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:19.772
  STEP: Creating secret with name s-test-opt-del-a2274624-a0ad-4333-8255-08de9aa3c5c3 @ 09/01/25 12:44:19.808
  STEP: Creating secret with name s-test-opt-upd-5e940a20-3f3a-4131-b3b5-3897afbc33bc @ 09/01/25 12:44:19.822
  STEP: Creating the pod @ 09/01/25 12:44:19.845
  E0901 12:44:20.692104      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:21.692401      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:22.693271      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:23.694786      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a2274624-a0ad-4333-8255-08de9aa3c5c3 @ 09/01/25 12:44:24.031
  STEP: Updating secret s-test-opt-upd-5e940a20-3f3a-4131-b3b5-3897afbc33bc @ 09/01/25 12:44:24.05
  STEP: Creating secret with name s-test-opt-create-cd94ec46-c076-49c4-9bd3-fbcdd893de0b @ 09/01/25 12:44:24.064
  STEP: waiting to observe update in volume @ 09/01/25 12:44:24.078
  E0901 12:44:24.694214      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:25.695244      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:26.695804      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:27.696510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:28.697257      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:29.698819      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:30.698268      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:31.698790      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:32.698974      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:33.699420      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:34.700040      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:35.700223      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:36.701036      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:37.702155      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:38.703201      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:39.704426      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:40.705219      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:41.705945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:42.706770      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:43.707104      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:44.708634      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:45.709226      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:46.710577      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:47.710704      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:48.711056      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:49.712348      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:50.712391      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:51.713012      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:52.714955      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:53.714746      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:54.715146      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:55.715505      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:56.715720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:57.715808      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:58.716075      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:44:59.716712      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:00.717928      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:01.718218      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:02.719566      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:03.719720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:04.720788      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:05.721132      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:06.721198      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:07.721853      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:08.722000      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:09.724206      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:10.724731      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:11.725451      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:12.726262      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:13.726695      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:14.727371      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:15.728485      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:16.729548      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:17.729964      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:18.730987      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:19.732853      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:20.733642      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:21.734494      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:22.735266      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:23.736072      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:24.736154      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:25.736409      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:26.736616      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:27.737510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:28.738348      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:29.738586      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:30.739455      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:31.739611      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:32.739865      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:33.740650      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:34.741047      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:35.742025      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:36.743097      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:37.745048      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:38.744509      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:39.392964 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9669" for this suite. @ 09/01/25 12:45:39.408
• [79.707 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/01/25 12:45:39.434
  I0901 12:45:39.434162 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename tables @ 09/01/25 12:45:39.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:39.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:39.522
  I0901 12:45:39.541537 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4289" for this suite. @ 09/01/25 12:45:39.558
• [0.143 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/01/25 12:45:39.578
  I0901 12:45:39.578839 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:45:39.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:39.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:39.621
  STEP: getting a starting resourceVersion @ 09/01/25 12:45:39.631
  STEP: starting a background goroutine to produce watch events @ 09/01/25 12:45:39.654
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/01/25 12:45:39.654
  E0901 12:45:39.744766      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:40.747123      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:41.747794      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:42.405422 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1305" for this suite. @ 09/01/25 12:45:42.45
• [2.934 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/01/25 12:45:42.515
  I0901 12:45:42.515808 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:45:42.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:42.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:42.581
  STEP: Creating the pod @ 09/01/25 12:45:42.592
  E0901 12:45:42.748540      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:43.748575      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:44.748943      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:45.369076 17 pod_client.go:186] Successfully updated pod "annotationupdateb8f95f0e-b0ff-4cd2-a21a-557f203c331c"
  E0901 12:45:45.749150      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:46.750450      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:47.419187 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-262" for this suite. @ 09/01/25 12:45:47.44
• [4.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:491
  STEP: Creating a kubernetes client @ 09/01/25 12:45:47.466
  I0901 12:45:47.466152 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:45:47.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:47.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:47.516
  STEP: Setting up server cert @ 09/01/25 12:45:47.565
  E0901 12:45:47.750491      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:48.750911      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:45:49.56
  STEP: Deploying the webhook pod @ 09/01/25 12:45:49.592
  STEP: Wait for the deployment to be ready @ 09/01/25 12:45:49.624
  I0901 12:45:49.643042 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:45:49.751264      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:50.752315      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:45:51.683
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:45:51.718
  E0901 12:45:51.752809      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:52.719037 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/01/25 12:45:52.731
  E0901 12:45:52.752977      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:45:52.776070 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/01/25 12:45:52.934
  STEP: Creating a configMap that should not be mutated @ 09/01/25 12:45:52.951
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/01/25 12:45:52.977
  STEP: Creating a configMap that should be mutated @ 09/01/25 12:45:52.993
  I0901 12:45:53.234117 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-520" for this suite. @ 09/01/25 12:45:53.258
  STEP: Destroying namespace "webhook-markers-328" for this suite. @ 09/01/25 12:45:53.276
• [5.832 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/01/25 12:45:53.3
  I0901 12:45:53.300907 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:45:53.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:45:53.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:45:53.357
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3616.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-3616.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:45:53.365
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3616.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3616.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:45:53.365
  STEP: creating a pod to probe /etc/hosts @ 09/01/25 12:45:53.365
  STEP: submitting the pod to kubernetes @ 09/01/25 12:45:53.365
  E0901 12:45:53.753226      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:54.753728      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:55.755037      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:56.755938      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:45:57.445
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:45:57.46
  I0901 12:45:57.558582 17 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-3616/dns-test-1dcb42f9-8e50-4a15-8ae3-7a3c187c2205: the server could not find the requested resource (get pods dns-test-1dcb42f9-8e50-4a15-8ae3-7a3c187c2205)
  I0901 12:45:57.558770 17 dns_common.go:506] Lookups using dns-3616/dns-test-1dcb42f9-8e50-4a15-8ae3-7a3c187c2205 failed for: [jessie_hosts@dns-querier-1]

  I0901 12:45:57.613632 17 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:45:57.630558 17 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:45:57.649871 17 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:45:57.756134      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:58.757899      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:45:59.757041      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:00.757845      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:01.758519      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:02.532404 17 dns_common.go:546] DNS probes using dns-3616/dns-test-1dcb42f9-8e50-4a15-8ae3-7a3c187c2205 succeeded

  STEP: deleting the pod @ 09/01/25 12:46:02.533
  I0901 12:46:02.594508 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3616" for this suite. @ 09/01/25 12:46:02.616
• [9.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/01/25 12:46:02.642
  I0901 12:46:02.642411 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename apf @ 09/01/25 12:46:02.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:02.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:02.697
  STEP: getting /apis @ 09/01/25 12:46:02.703
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 12:46:02.713
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 12:46:02.715
  STEP: creating @ 09/01/25 12:46:02.718
  E0901 12:46:02.758533      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting @ 09/01/25 12:46:02.76
  STEP: listing @ 09/01/25 12:46:02.768
  STEP: watching @ 09/01/25 12:46:02.778
  I0901 12:46:02.778451 17 flowcontrol.go:394] starting watch
  STEP: patching @ 09/01/25 12:46:02.78
  STEP: updating @ 09/01/25 12:46:02.809
  I0901 12:46:02.829471 17 flowcontrol.go:422] waiting for watch events with expected annotations
  I0901 12:46:02.829875 17 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/01/25 12:46:02.83
  STEP: patching /status @ 09/01/25 12:46:02.837
  STEP: updating /status @ 09/01/25 12:46:02.85
  STEP: deleting @ 09/01/25 12:46:02.89
  STEP: deleting a collection @ 09/01/25 12:46:02.922
  I0901 12:46:02.973799 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9391" for this suite. @ 09/01/25 12:46:02.99
• [0.371 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/01/25 12:46:03.013
  I0901 12:46:03.013642 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:46:03.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:03.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:03.058
  STEP: Creating configMap with name projected-configmap-test-volume-map-b960643b-aca9-47f4-b54a-b51b2b7a2b58 @ 09/01/25 12:46:03.069
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:46:03.082
  E0901 12:46:03.758956      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:04.759902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:05.762089      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:06.762233      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:07.149
  I0901 12:46:07.169728 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-projected-configmaps-a5c60a94-6e4e-403c-b175-3a2084c7c3fd container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:07.188
  I0901 12:46:07.226039 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4402" for this suite. @ 09/01/25 12:46:07.238
• [4.246 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:328
  STEP: Creating a kubernetes client @ 09/01/25 12:46:07.262
  I0901 12:46:07.262081 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:46:07.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:07.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:07.314
  STEP: Setting up server cert @ 09/01/25 12:46:07.367
  E0901 12:46:07.762332      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:46:08.689
  STEP: Deploying the webhook pod @ 09/01/25 12:46:08.704
  STEP: Wait for the deployment to be ready @ 09/01/25 12:46:08.73
  I0901 12:46:08.749795 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 12:46:08.763380      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:09.763897      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:10.764879      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:10.787980 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 46, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 46, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 46, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 46, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:46:11.765035      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:12.765069      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:46:12.797
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:46:12.817
  E0901 12:46:13.765503      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:13.818589 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:46:13.830080 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2462-1135-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 12:46:14.361
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 12:46:14.432
  E0901 12:46:14.766385      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:15.767039      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:16.767818      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:17.336795 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2462" for this suite. @ 09/01/25 12:46:17.348
  STEP: Destroying namespace "webhook-markers-9876" for this suite. @ 09/01/25 12:46:17.363
• [10.116 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/01/25 12:46:17.378
  I0901 12:46:17.378409 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:46:17.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:17.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:17.412
  I0901 12:46:17.420315 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 12:46:17.442353      17 warnings.go:110] "Warning: unrecognized format \"int32\""
  E0901 12:46:17.769033      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:18.769386      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:19.770170      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:20.171171      17 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:46:20.171366      17 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:46:20.171416      17 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:46:20.171444      17 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:46:20.171469      17 warnings.go:110] "Warning: unknown field \"gamma\""
  E0901 12:46:20.770362      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:46:20.819165 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9924" for this suite. @ 09/01/25 12:46:20.834
• [3.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/01/25 12:46:20.863
  I0901 12:46:20.864033 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:46:20.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:20.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:20.922
  I0901 12:46:20.970915 17 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:46:21.770776      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:22.770786      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:23.771125      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:24.772278      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:25.773157      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:26.774106      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:27.774842      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:28.775906      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:29.777062      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:30.777399      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:31.777799      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:32.778432      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:33.779465      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:34.780271      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:35.780625      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:36.780892      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:37.781101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:38.781614      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:39.781748      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:40.782160      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:41.782336      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:42.783490      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:43.783710      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:44.783790      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:45.784573      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:46.785143      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:47.785477      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:48.786179      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:49.786645      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:50.787114      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:51.788136      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:52.789117      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:53.790265      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:54.791104      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:55.791446      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:56.791616      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:57.791867      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:58.792200      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:46:59.793582      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:00.794376      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:01.795377      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:02.796064      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:03.796164      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:04.796638      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:05.797966      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:06.798072      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:07.798627      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:08.798878      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:09.799063      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:10.800199      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:11.800503      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:12.801236      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:13.801769      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:14.803015      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:15.804232      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:16.804967      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:17.805732      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:18.806779      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:19.807354      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:20.808082      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:20.988388 17 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/01/25 12:47:20.999
  STEP: Adding a custom resource @ 09/01/25 12:47:21
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/01/25 12:47:21.032
  I0901 12:47:21.059211 17 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/01/25 12:47:21.059
  E0901 12:47:21.808436      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:22.809112      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/01/25 12:47:23.088
  I0901 12:47:23.109666 17 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/01/25 12:47:23.109
  E0901 12:47:23.809885      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:24.810251      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/01/25 12:47:25.138
  I0901 12:47:25.148571 17 pod_client.go:396] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0901 12:47:25.709148 17 pod_client.go:186] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/01/25 12:47:25.759
  STEP: Removing a custom resource @ 09/01/25 12:47:25.784
  E0901 12:47:25.810756      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 12:47:25.815
  I0901 12:47:25.837806 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9856" for this suite. @ 09/01/25 12:47:25.852
• [65.003 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/01/25 12:47:25.867
  I0901 12:47:25.867649 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:47:25.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:25.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:25.921
  STEP: Performing setup for networking test in namespace pod-network-test-7409 @ 09/01/25 12:47:25.937
  STEP: creating a selector @ 09/01/25 12:47:25.937
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:47:25.937
  I0901 12:47:25.937903 17 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 12:47:26.811772      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:27.811427      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:28.812074      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:29.812785      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:30.813627      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:31.813966      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:32.814523      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:33.814725      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:34.815393      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:35.816260      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:36.817866      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:37.818651      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:38.818598      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:39.819087      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 12:47:40.217
  E0901 12:47:40.819857      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:41.820639      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:42.281270 17 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:47:42.281458 17 networking.go:42] Breadth first check of 10.233.64.11 on host 192.168.121.57...
  I0901 12:47:42.288443 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.2:9080/dial?request=hostname&protocol=http&host=10.233.64.11&port=8083&tries=1'] Namespace:pod-network-test-7409 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:47:42.288538 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:47:42.288756 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7409/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.11%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:47:42.527587 17 utils.go:356] Waiting for responses: map[]
  I0901 12:47:42.527747 17 utils.go:360] reached 10.233.64.11 after 0/1 tries
  I0901 12:47:42.527798 17 networking.go:42] Breadth first check of 10.233.65.65 on host 192.168.121.40...
  I0901 12:47:42.538218 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.2:9080/dial?request=hostname&protocol=http&host=10.233.65.65&port=8083&tries=1'] Namespace:pod-network-test-7409 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:47:42.538383 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:47:42.538891 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7409/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.65%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:47:42.696670 17 utils.go:356] Waiting for responses: map[]
  I0901 12:47:42.697040 17 utils.go:360] reached 10.233.65.65 after 0/1 tries
  I0901 12:47:42.697098 17 networking.go:42] Breadth first check of 10.233.66.172 on host 192.168.121.15...
  I0901 12:47:42.706436 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.2:9080/dial?request=hostname&protocol=http&host=10.233.66.172&port=8083&tries=1'] Namespace:pod-network-test-7409 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:47:42.706506 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 12:47:42.706612 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7409/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.172%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0901 12:47:42.821175      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:42.852450 17 utils.go:356] Waiting for responses: map[]
  I0901 12:47:42.852513 17 utils.go:360] reached 10.233.66.172 after 0/1 tries
  I0901 12:47:42.852534 17 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 12:47:42.852842 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7409" for this suite. @ 09/01/25 12:47:42.869
• [17.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:95
  STEP: Creating a kubernetes client @ 09/01/25 12:47:42.89
  I0901 12:47:42.890756 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:47:42.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:42.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:42.949
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:47:42.958
  E0901 12:47:43.823127      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:44.823551      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:45.824150      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:46.824925      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:47:47.015
  I0901 12:47:47.025447 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downward-api-03fc168e-ee53-4765-a11c-caa5bbd5eb8c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:47:47.095
  I0901 12:47:47.162715 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3150" for this suite. @ 09/01/25 12:47:47.179
• [4.313 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:978
  STEP: Creating a kubernetes client @ 09/01/25 12:47:47.203
  I0901 12:47:47.203907 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:47:47.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:47.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:47.249
  STEP: Creating service test in namespace statefulset-2252 @ 09/01/25 12:47:47.259
  I0901 12:47:47.272386      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  I0901 12:47:47.295862 17 wait.go:44] Found 0 stateful pods, waiting for 1
  E0901 12:47:47.825951      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:48.826935      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:49.827024      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:50.827445      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:51.827599      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:52.827751      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:53.828027      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:54.828880      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:55.829155      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:56.829431      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:47:57.300833 17 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/01/25 12:47:57.335
  I0901 12:47:57.398872 17 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:47:57.399455 17 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 12:47:57.829916      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:58.830216      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:47:59.831168      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:00.831055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:01.831181      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:02.831860      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:03.832058      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:04.833062      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:05.833242      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:06.834225      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:07.379511 17 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:48:07.379632 17 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/01/25 12:48:07.397
  STEP: Delete all of the StatefulSets @ 09/01/25 12:48:07.408
  STEP: Verify that StatefulSets have been deleted @ 09/01/25 12:48:07.534
  I0901 12:48:07.545725 17 statefulset.go:136] Deleting all statefulset in ns statefulset-2252
  I0901 12:48:07.580942 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2252" for this suite. @ 09/01/25 12:48:07.594
• [20.410 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/01/25 12:48:07.616
  I0901 12:48:07.616559 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:48:07.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:07.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:07.681
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:48:07.691
  E0901 12:48:07.834868      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:08.834756      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:09.835613      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:10.836087      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:48:11.75
  I0901 12:48:11.762672 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downwardapi-volume-80084b20-71de-4413-95b0-fa6bdaa2d548 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:48:11.787
  I0901 12:48:11.833040 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:48:11.836212      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-4343" for this suite. @ 09/01/25 12:48:11.85
• [4.257 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2252
  STEP: Creating a kubernetes client @ 09/01/25 12:48:11.875
  I0901 12:48:11.877807 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:48:11.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:11.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:11.936
  STEP: creating service in namespace services-4066 @ 09/01/25 12:48:11.942
  STEP: creating service affinity-clusterip-transition in namespace services-4066 @ 09/01/25 12:48:11.942
  I0901 12:48:11.995354 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 12:48:12.836580      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:13.837175      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:14.008415 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 48, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 48, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 48, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 48, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-66686d5d57\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:48:14.837677      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:15.837908      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:16.063385 17 resource.go:344] Creating new exec pod
  E0901 12:48:16.838174      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:17.838933      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:18.131743 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4066 exec execpod-affinity6t2xq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0901 12:48:18.552628 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.22.71) 80 port [tcp/http] succeeded!\n"
  I0901 12:48:18.552809 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:48:18.553942 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4066 exec execpod-affinity6t2xq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.22.71 80'
  E0901 12:48:18.838920      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:18.922081 17 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.22.71 80\nConnection to 10.233.22.71 80 port [tcp/http] succeeded!\n"
  I0901 12:48:18.922187 17 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:48:18.950626 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4066 exec execpod-affinity6t2xq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/ ; done'
  I0901 12:48:19.728525 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n"
  I0901 12:48:19.728757 17 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-hsg92\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-hsg92\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-p6lpx\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-p6lpx"
  I0901 12:48:19.728825 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.728847 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.728903 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-hsg92
  I0901 12:48:19.728922 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.728944 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729009 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729028 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729044 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-hsg92
  I0901 12:48:19.729098 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.729128 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.729214 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.729245 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729342 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729361 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.729380 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:19.729432 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p6lpx
  I0901 12:48:19.755329 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=services-4066 exec execpod-affinity6t2xq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/ ; done'
  E0901 12:48:19.839322      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:20.444066 17 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.22.71:80/\n"
  I0901 12:48:20.444211 17 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr\naffinity-clusterip-transition-66686d5d57-jvqfr"
  I0901 12:48:20.444266 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444347 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444364 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444380 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444430 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444462 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444487 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444514 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444540 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444564 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.444589 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445020 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445117 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445138 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445153 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445358 17 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-jvqfr
  I0901 12:48:20.445988 17 service.go:4469] Cleaning up the exec pod
  I0901 12:48:20.519485 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4066" for this suite. @ 09/01/25 12:48:20.529
• [8.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:809
  STEP: Creating a kubernetes client @ 09/01/25 12:48:20.555
  I0901 12:48:20.555718 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:48:20.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:20.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:20.62
  STEP: Creating service test in namespace statefulset-1531 @ 09/01/25 12:48:20.654
  I0901 12:48:20.689957      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Looking for a node to schedule stateful set and pod @ 09/01/25 12:48:20.69
  STEP: Creating pod with conflicting port in namespace statefulset-1531 @ 09/01/25 12:48:20.722
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1531 @ 09/01/25 12:48:20.818
  E0901 12:48:20.840250      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:21.841033      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:22.840766      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1531 @ 09/01/25 12:48:22.853
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1531 @ 09/01/25 12:48:22.901
  I0901 12:48:22.947438 17 statefulset.go:882] Observed stateful pod in namespace: statefulset-1531, name: ss-0, uid: 40fa9732-4f94-488b-9a68-e6ca082beeca, status phase: Pending. Waiting for statefulset controller to delete.
  I0901 12:48:22.973074 17 statefulset.go:882] Observed stateful pod in namespace: statefulset-1531, name: ss-0, uid: 40fa9732-4f94-488b-9a68-e6ca082beeca, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:48:23.001326 17 statefulset.go:882] Observed stateful pod in namespace: statefulset-1531, name: ss-0, uid: 40fa9732-4f94-488b-9a68-e6ca082beeca, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:48:23.010850 17 statefulset.go:876] Observed delete event for stateful pod ss-0 in namespace statefulset-1531
  STEP: Removing pod with conflicting port in namespace statefulset-1531 @ 09/01/25 12:48:23.01
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1531 and will be in running state @ 09/01/25 12:48:23.04
  E0901 12:48:23.841076      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:24.841382      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:25.841881      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:26.842018      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:27.077828 17 statefulset.go:136] Deleting all statefulset in ns statefulset-1531
  I0901 12:48:27.087716 17 rest.go:153] Scaling statefulset ss to 0
  E0901 12:48:27.843023      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:28.843868      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:29.844646      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:30.845720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:31.847497      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:32.847072      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:33.846780      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:34.847418      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:35.847959      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:36.849219      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:37.127897 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:48:37.138086 17 rest.go:91] Deleting statefulset ss
  I0901 12:48:37.182456 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1531" for this suite. @ 09/01/25 12:48:37.226
• [16.693 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:48:37.251
  I0901 12:48:37.252014 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:48:37.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:37.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:37.291
  I0901 12:48:37.328440      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0901 12:48:37.849816      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:38.853076      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:39.339581      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:48:39.425885      17 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0901 12:48:39.454160 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5881" for this suite. @ 09/01/25 12:48:39.466
• [2.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/01/25 12:48:39.5
  I0901 12:48:39.500198 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:48:39.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:39.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:39.534
  STEP: creating a policy with variables @ 09/01/25 12:48:39.552
  STEP: waiting until the marker is denied @ 09/01/25 12:48:39.596
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 12:48:39.72
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 12:48:39.749
  I0901 12:48:39.811428 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9824" for this suite. @ 09/01/25 12:48:39.835
  E0901 12:48:39.851411      17 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.377 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3657
  STEP: Creating a kubernetes client @ 09/01/25 12:48:39.877
  I0901 12:48:39.877955 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename services @ 09/01/25 12:48:39.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:39.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:39.951
  STEP: creating a collection of services @ 09/01/25 12:48:39.96
  I0901 12:48:39.960343 17 service.go:3693] Creating e2e-svc-a-g6j9w
  I0901 12:48:39.984166 17 service.go:3693] Creating e2e-svc-b-4j27c
  I0901 12:48:40.003194 17 service.go:3693] Creating e2e-svc-c-tg8hj
  STEP: deleting service collection @ 09/01/25 12:48:40.03
  I0901 12:48:40.104789 17 service.go:3728] Collection of services has been deleted
  I0901 12:48:40.105115 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7908" for this suite. @ 09/01/25 12:48:40.114
• [0.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1047
  STEP: Creating a kubernetes client @ 09/01/25 12:48:40.13
  I0901 12:48:40.130791 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:48:40.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:40.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:40.166
  STEP: Creating service test in namespace statefulset-6379 @ 09/01/25 12:48:40.172
  I0901 12:48:40.185454      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-6379 @ 09/01/25 12:48:40.194
  I0901 12:48:40.221863 17 wait.go:44] Found 0 stateful pods, waiting for 1
  E0901 12:48:40.862356      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:41.856257      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:42.856903      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:43.857375      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:44.858275      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:45.859127      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:46.859365      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:47.860014      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:48.860025      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:49.860620      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:48:50.229734 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/01/25 12:48:50.257
  STEP: Getting /status @ 09/01/25 12:48:50.288
  I0901 12:48:50.313014 17 statefulset.go:1083] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/01/25 12:48:50.313
  I0901 12:48:50.339034 17 statefulset.go:1103] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/01/25 12:48:50.339
  I0901 12:48:50.346819 17 statefulset.go:1131] Observed &StatefulSet event: ADDED
  I0901 12:48:50.346939 17 statefulset.go:1124] Found Statefulset ss in namespace statefulset-6379 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:48:50.347407 17 statefulset.go:1135] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 12:48:50.347
  I0901 12:48:50.347918 17 statefulset.go:1139] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:48:50.368885 17 statefulset.go:1143] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/01/25 12:48:50.368
  I0901 12:48:50.374812 17 statefulset.go:1168] Observed &StatefulSet event: ADDED
  I0901 12:48:50.375605 17 statefulset.go:136] Deleting all statefulset in ns statefulset-6379
  I0901 12:48:50.388457 17 rest.go:153] Scaling statefulset ss to 0
  E0901 12:48:50.861350      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:51.861623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:52.862073      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:53.862220      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:54.862550      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:55.863185      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:56.863249      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:57.864436      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:58.864006      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:48:59.865406      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:00.432901 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 12:49:00.444129 17 rest.go:91] Deleting statefulset ss
  I0901 12:49:00.498332 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6379" for this suite. @ 09/01/25 12:49:00.516
• [20.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:49:00.54
  I0901 12:49:00.540437 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:49:00.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:00.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:00.596
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 12:49:00.683
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:49:00.703
  I0901 12:49:00.755589 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:49:00.755776 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  E0901 12:49:00.864720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:01.724086 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:49:01.724174 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  E0901 12:49:01.864950      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:02.746154 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:49:02.746231 17 fixtures.go:131] Node wohnahxathu9-2 is running 0 daemon pod, expected 1
  E0901 12:49:02.865242      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:03.739028 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:49:03.739404 17 fixtures.go:131] Node wohnahxathu9-2 is running 0 daemon pod, expected 1
  E0901 12:49:03.865310      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:04.780225 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:49:04.780406 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/01/25 12:49:04.795
  E0901 12:49:04.865667      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:04.876368 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:49:04.876478 17 fixtures.go:131] Node wohnahxathu9-3 is running 0 daemon pod, expected 1
  E0901 12:49:05.869423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:05.885495 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:49:05.885607 17 fixtures.go:131] Node wohnahxathu9-3 is running 0 daemon pod, expected 1
  E0901 12:49:06.870219      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:06.877255 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:49:06.877792 17 fixtures.go:131] Node wohnahxathu9-3 is running 0 daemon pod, expected 1
  I0901 12:49:07.860949 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:49:07.861133 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  E0901 12:49:07.871467      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:49:07.877
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4783, will wait for the garbage collector to delete the pods @ 09/01/25 12:49:07.878
  I0901 12:49:07.965120 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 24.339257ms
  I0901 12:49:08.165671 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.426012ms
  E0901 12:49:08.871658      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:09.276504 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:49:09.276620 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:49:09.287788 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41092"},"items":null}

  I0901 12:49:09.296759 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41092"},"items":null}

  I0901 12:49:09.350807 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4783" for this suite. @ 09/01/25 12:49:09.359
• [8.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/01/25 12:49:09.379
  I0901 12:49:09.379206 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:49:09.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:09.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:09.422
  STEP: Creating a test headless service @ 09/01/25 12:49:09.432
  I0901 12:49:09.449801      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3334.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:49:09.45
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3334.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3334.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3334.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:49:09.45
  STEP: creating a pod to probe DNS @ 09/01/25 12:49:09.45
  STEP: submitting the pod to kubernetes @ 09/01/25 12:49:09.45
  E0901 12:49:09.872490      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:10.872782      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:11.873596      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:12.874509      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:49:13.53
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:49:13.541
  I0901 12:49:13.647180 17 dns_common.go:546] DNS probes using dns-3334/dns-test-6fead7e5-1415-417e-af46-84446aeb2c4d succeeded

  STEP: deleting the pod @ 09/01/25 12:49:13.647
  STEP: deleting the test headless service @ 09/01/25 12:49:13.673
  I0901 12:49:13.698423 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3334" for this suite. @ 09/01/25 12:49:13.709
• [4.342 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:49:13.721
  I0901 12:49:13.721367 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename chunking @ 09/01/25 12:49:13.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:13.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:13.761
  STEP: creating a large number of resources @ 09/01/25 12:49:13.766
  E0901 12:49:13.874362      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:14.874523      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:15.875115      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:16.876394      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:17.876504      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:18.876522      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:19.876634      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:20.876968      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:21.877045      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:22.877991      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:23.879007      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:24.879888      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:25.880619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:26.881641      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:27.882735      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:28.884802      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:29.883914      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:30.884529      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/01/25 12:49:31.437
  I0901 12:49:31.487879 17 chunking.go:163] Retrieved 40/40 results with rv 41620 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/01/25 12:49:31.487
  E0901 12:49:31.885500      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:32.885387      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:33.886416      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:34.887477      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:35.887247      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:36.888151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:37.889150      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:38.889919      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:39.891010      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:40.890639      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:41.891235      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:42.891742      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:43.891818      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:44.892228      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:45.892727      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:46.893439      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:47.894151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:48.894648      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:49.895404      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:50.896213      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:49:51.497799 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:49:51.896409      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:52.897382      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:53.897752      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:54.899535      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:55.898939      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:56.899497      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:57.900026      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:58.900737      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:49:59.901532      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:00.901878      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:01.901947      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:02.902543      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:03.902757      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:04.903492      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:05.903619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:06.904101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:07.903963      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:08.904885      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:09.904765      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:10.904993      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:50:11.504082 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:50:11.905790      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:12.909791      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:13.909624      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:14.908229      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:15.908417      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:16.908640      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:17.909510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:18.911015      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:19.910467      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:20.911940      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:21.912430      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:22.912736      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:23.913138      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:24.913593      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:25.913675      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:26.913930      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:27.914379      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:28.914914      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:29.915382      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:30.915531      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:50:31.502041 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:50:31.916201      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:32.916170      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:33.916970      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:34.917534      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:35.918238      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:36.919191      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:37.919512      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:38.919762      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:39.920892      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:40.921186      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:41.922137      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:42.922828      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:43.923651      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:44.924229      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:45.924604      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:46.925917      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:47.926573      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:48.926994      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:49.927081      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:50.927989      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:50:51.502652 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:50:51.928423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:52.928650      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:53.928821      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:54.929177      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:55.929645      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:56.930153      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:57.930902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:58.931879      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:50:59.932662      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:00.932585      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:01.933253      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:02.933945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:03.935159      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:04.935442      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:05.936265      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:06.936485      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:07.937058      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:08.937797      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:09.938027      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:10.939364      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:11.501352 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:51:11.940198      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:12.940463      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:13.941830      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:14.942055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:15.942888      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:16.943138      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:17.943428      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:18.943957      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:19.944499      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:20.945386      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:21.945678      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:22.946096      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:23.946478      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:24.946834      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:25.947002      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:26.948062      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:27.948447      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:28.949251      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:29.949574      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:30.950137      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:31.501698 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:51:31.951171      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:32.951614      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:33.951734      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:34.952584      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:35.952847      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:36.952939      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:37.953808      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:38.954582      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:39.954589      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:40.954631      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:41.954975      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:42.955252      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:43.955500      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:44.956463      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:45.956615      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:46.956956      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:47.957470      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:48.957703      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:49.957963      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:50.958506      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:51:51.500591 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:51:51.958756      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:52.959095      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:53.959368      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:54.959608      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:55.960414      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:56.960539      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:57.961534      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:58.961689      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:51:59.962592      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:00.963147      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:01.964194      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:02.964613      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:03.965560      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:04.965938      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:05.966744      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:06.966927      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:07.967764      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:08.968200      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:09.968245      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:10.969377      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:11.501076 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:52:11.970577      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:12.972070      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:13.971862      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:14.972592      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:15.972375      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:16.973258      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:17.974031      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:18.974469      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:19.975430      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:20.976027      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:21.976255      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:22.977139      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:23.977968      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:24.979100      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:25.979560      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:26.980416      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:27.980641      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:28.981520      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:29.981860      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:30.982209      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:31.501463 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:52:31.982678      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:32.982693      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:33.983823      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:34.984525      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:35.985751      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:36.986456      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:37.986752      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:38.987596      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:39.988078      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:40.988222      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:41.988674      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:42.989536      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:43.989853      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:44.990808      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:45.991089      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:46.991758      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:47.992598      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:48.993239      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:49.994970      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:50.995058      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:52:51.508012 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:52:51.995833      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:52.995672      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:53.996111      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:54.996545      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:55.997339      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:56.997931      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:57.998578      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:58.999048      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:52:59.999209      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:00.999971      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:02.000981      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:03.001452      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:04.001764      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:05.002101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:06.002947      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:07.003009      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:08.003161      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:09.003541      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:10.003687      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:11.004032      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:11.499786 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:53:12.005067      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:13.006137      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:14.006694      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:15.007198      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:16.007376      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:17.008043      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:18.009066      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:19.009176      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:20.010468      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:21.010908      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:22.011096      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:23.011813      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:24.012094      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:25.012627      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:26.013375      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:27.013021      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:28.013682      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:29.013667      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:30.014407      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:31.014361      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:31.498933 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:53:32.015967      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:33.016521      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:34.017679      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:35.017526      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:36.018014      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:37.018205      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:38.018827      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:39.019190      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:40.019835      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:41.020404      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:42.021182      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:43.021855      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:44.022236      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:45.022576      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:46.023380      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:47.023979      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:48.024180      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:49.024358      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:50.024994      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:51.025518      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:53:51.498646 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:53:52.025836      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:53.026900      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:54.028450      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:55.028622      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:56.029824      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:57.029670      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:58.031696      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:53:59.030623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:00.030822      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:01.031556      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:02.031940      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:03.032683      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:04.033254      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:05.033697      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:06.034370      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:07.035098      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:08.036082      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:09.036650      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:10.036981      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:11.037717      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:11.502609 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:54:12.038404      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:13.038817      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:14.039940      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:15.040238      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:16.040389      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:17.040809      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:18.041135      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:19.041248      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:20.041777      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:21.042035      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:22.042359      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:23.042758      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:24.043612      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:25.044466      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:26.045066      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:27.045464      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:28.045666      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:29.045911      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:30.046560      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:31.046671      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:31.510329 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:54:32.046974      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:33.048433      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:34.047708      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:35.048688      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:36.048598      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:37.049419      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:38.049835      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:39.050424      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:40.050892      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:41.051523      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:42.052413      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:43.053530      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:44.053592      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:45.053948      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:46.054179      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:47.055144      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:48.056113      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:49.058047      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:50.057670      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:51.058104      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:54:51.501249 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:54:52.059153      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:53.060010      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:54.060217      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:55.060956      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:56.061589      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:57.061947      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:58.062474      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:54:59.062635      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:00.063100      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:01.063500      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:02.064099      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:03.064682      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:04.065362      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:05.066043      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:06.066449      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:07.067400      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:08.067659      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:09.069952      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:10.068659      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:11.069256      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:11.495599 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:55:12.069541      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:13.069870      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:14.070021      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:15.085004      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:16.072690      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:17.073724      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:18.074977      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:19.082261      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:20.083632      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:21.084776      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:22.082985      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:23.083560      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:24.084058      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:25.084926      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:26.086218      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:27.086399      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:28.088535      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:29.089055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:30.088039      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:31.089482      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:31.506874 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:55:32.089864      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:33.090694      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:34.090826      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:35.091365      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:36.091940      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:37.092379      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:38.093049      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:39.093193      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:40.093930      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:41.095202      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:42.094786      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:43.095975      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:44.096669      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:45.097000      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:46.097537      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:47.097646      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:48.097927      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:49.098192      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:50.098688      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:51.099009      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:55:51.498594 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:55:52.099907      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:53.099672      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:54.100248      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:55.101438      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:56.101651      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:57.102107      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:58.103034      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:55:59.103400      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:00.103689      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:01.104004      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:02.104698      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:03.105076      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:04.105400      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:05.106059      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:06.106839      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:07.107589      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:08.108391      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:09.109251      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:10.109692      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:11.110617      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:11.501024 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:56:12.111692      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:13.112452      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:14.113387      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:15.113828      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:16.114189      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:17.114378      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:18.115177      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:19.116173      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:20.116441      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:21.116784      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:22.117066      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:23.119077      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:24.117947      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:25.119744      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:26.120490      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:27.120688      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:28.121132      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:29.127845      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:30.121552      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:31.121700      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:31.504874 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:56:32.122249      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:33.123832      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:34.124219      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:35.124556      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:36.124895      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:37.125941      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:38.127143      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:39.127401      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:40.127718      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:41.129350      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:42.129619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:43.129801      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:44.130134      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:45.130811      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:46.131039      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:47.131729      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:48.131503      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:49.132473      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:50.132807      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:51.133549      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:56:51.496527 17 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE2MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0901 12:56:52.134262      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:53.134669      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:54.134917      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:55.135838      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:56.136107      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:57.136678      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:58.136964      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:56:59.137883      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:00.138150      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:01.138960      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:02.139486      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:03.140670      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:04.140815      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:05.141649      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:06.142095      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:07.142422      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:08.143506      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:09.143945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:10.144103      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:11.145908      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:11.505051 17 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0901 12:57:11.505593 17 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/01/25 12:57:11.505
  STEP: retrieving all remaining pages @ 09/01/25 12:57:11.529
  I0901 12:57:11.546246 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0901 12:57:11.565220 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0901 12:57:11.590357 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0901 12:57:11.608273 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0901 12:57:11.623783 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0901 12:57:11.638516 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0901 12:57:11.658511 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI2MjgsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0901 12:57:11.679054 17 chunking.go:221] Retrieved 40/40 results with rv 42628 and continue 
  I0901 12:57:11.681594 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2952" for this suite. @ 09/01/25 12:57:11.704
• [478.012 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:867
  STEP: Creating a kubernetes client @ 09/01/25 12:57:11.736
  I0901 12:57:11.736421 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:57:11.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:11.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:11.785
  STEP: Creating a ResourceQuota with best effort scope @ 09/01/25 12:57:11.803
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:57:11.821
  E0901 12:57:12.145961      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:13.146734      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:13.849593 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020ae000>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:11Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:11Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:11Z"
            name: quota-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42636"
            uid: 75bf1be5-c753-439a-b9d4-492a038c88f5
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/01/25 12:57:13.85
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 12:57:13.876
  I0901 12:57:13.906262 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0022f5cc0>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:13Z"
            name: quota-not-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42643"
            uid: 8d5c4589-fa15-4024-a2a2-92d9480ff870
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a best-effort pod @ 09/01/25 12:57:13.907
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/01/25 12:57:13.954
  I0901 12:57:13.973832 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020af400>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:11Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:11Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:11Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:13Z"
            name: quota-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42644"
            uid: 75bf1be5-c753-439a-b9d4-492a038c88f5
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/01/25 12:57:13.976
  I0901 12:57:13.989413 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002990780>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:13Z"
            name: quota-not-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42643"
            uid: 8d5c4589-fa15-4024-a2a2-92d9480ff870
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/01/25 12:57:13.99
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:57:14.01
  E0901 12:57:14.146825      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:15.147232      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:16.041950 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002991540>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:11Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:11Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:14Z"
            name: quota-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42650"
            uid: 75bf1be5-c753-439a-b9d4-492a038c88f5
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a not best-effort pod @ 09/01/25 12:57:16.044
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/01/25 12:57:16.073
  I0901 12:57:16.094490 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0047088c0>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:16Z"
            name: quota-not-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42656"
            uid: 8d5c4589-fa15-4024-a2a2-92d9480ff870
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/01/25 12:57:16.095
  I0901 12:57:16.104040 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002991a40>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:11Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:11Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:14Z"
            name: quota-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42650"
            uid: 75bf1be5-c753-439a-b9d4-492a038c88f5
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/01/25 12:57:16.105
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 12:57:16.132
  I0901 12:57:16.144534 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0017768c0>: 
          metadata:
            creationTimestamp: "2025-09-01T12:57:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T12:57:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T12:57:16Z"
            name: quota-not-besteffort
            namespace: resourcequota-4135
            resourceVersion: "42662"
            uid: 8d5c4589-fa15-4024-a2a2-92d9480ff870
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  I0901 12:57:16.146506 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:57:16.147157      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-4135" for this suite. @ 09/01/25 12:57:16.161
• [4.451 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/01/25 12:57:16.187
  I0901 12:57:16.187747 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:57:16.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:16.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:16.238
  I0901 12:57:16.261726 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 12:57:16.317788      17 warnings.go:110] "Warning: unrecognized format \"int32\""
  E0901 12:57:17.148686      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:18.148153      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:19.062096      17 warnings.go:110] "Warning: unknown field \"alpha\""
  I0901 12:57:19.062178      17 warnings.go:110] "Warning: unknown field \"beta\""
  I0901 12:57:19.062226      17 warnings.go:110] "Warning: unknown field \"delta\""
  I0901 12:57:19.062253      17 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0901 12:57:19.062321      17 warnings.go:110] "Warning: unknown field \"gamma\""
  E0901 12:57:19.148499      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:19.684072 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7108" for this suite. @ 09/01/25 12:57:19.696
• [3.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:657
  STEP: Creating a kubernetes client @ 09/01/25 12:57:19.718
  I0901 12:57:19.718347 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:57:19.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:19.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:19.758
  STEP: Creating service test in namespace statefulset-8755 @ 09/01/25 12:57:19.765
  I0901 12:57:19.777660      17 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/01/25 12:57:19.778
  STEP: Creating stateful set ss in namespace statefulset-8755 @ 09/01/25 12:57:19.791
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8755 @ 09/01/25 12:57:19.809
  I0901 12:57:19.867943 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 12:57:20.153744      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:21.151406      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:22.153087      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:23.153881      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:24.154079      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:25.154706      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:26.155936      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:27.156433      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:28.156752      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:29.156895      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:29.822953 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/01/25 12:57:29.823
  I0901 12:57:29.836860 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 12:57:30.158116      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:30.263156 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:57:30.263236 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:57:30.263260 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:57:30.273549 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0901 12:57:31.158735      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:32.159403      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:33.159406      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:34.160230      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:35.160391      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:36.160758      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:37.160889      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:38.161742      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:39.162426      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:40.163326      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:40.280725 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:57:40.281158 17 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:57:40.379367 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 9.999999137s
  E0901 12:57:41.163854      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:41.396041 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 8.978901662s
  E0901 12:57:42.164605      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:42.407429 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 7.961032075s
  E0901 12:57:43.164857      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:43.428227 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 6.951078078s
  E0901 12:57:44.164888      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:44.444885 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 5.928476264s
  E0901 12:57:45.165374      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:45.462564 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 4.912721213s
  E0901 12:57:46.166623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:46.472988 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 3.894970429s
  E0901 12:57:47.167624      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:47.488619 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 2.885393766s
  E0901 12:57:48.168715      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:48.505448 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 1.869002871s
  E0901 12:57:49.168807      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:57:49.520191 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 852.646412ms
  E0901 12:57:50.169928      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8755 @ 09/01/25 12:57:50.521
  I0901 12:57:50.531864 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:57:50.900326 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:57:50.900468 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:57:50.900509 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:57:50.920662 17 wait.go:44] Found 1 stateful pods, waiting for 3
  E0901 12:57:51.170061      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:52.170101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:53.170652      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:54.173860      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:55.172928      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:56.173164      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:57.173870      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:58.174876      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:57:59.176050      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:00.176248      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:00.930431 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:58:00.930575 17 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:58:00.930739 17 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/01/25 12:58:00.93
  STEP: Scale down will halt with unhealthy stateful pod @ 09/01/25 12:58:00.931
  I0901 12:58:00.957072 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 12:58:01.176638      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:01.269988 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:58:01.270460 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:58:01.270532 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:58:01.271386 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:58:01.585456 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:58:01.585538 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:58:01.585788 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:58:01.586389 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:58:01.934836 17 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:58:01.935569 17 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:58:01.935658 17 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:58:01.935731 17 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:58:01.946682 17 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0901 12:58:02.177895      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:03.179249      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:04.179834      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:05.180237      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:06.180417      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:07.180762      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:08.181213      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:09.181269      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:10.182051      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:11.184859      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:11.961342 17 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:58:11.961425 17 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:58:11.961450 17 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:58:12.063194 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 9.999999403s
  E0901 12:58:12.185920      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:13.081520 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.929396957s
  E0901 12:58:13.186688      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:14.103190 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.910327172s
  E0901 12:58:14.186708      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:15.116337 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.888963883s
  E0901 12:58:15.188038      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:16.134243 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.876227764s
  E0901 12:58:16.189484      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:17.148223 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.857400557s
  E0901 12:58:17.189943      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:18.166344 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.842866632s
  E0901 12:58:18.192248      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:19.180229 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.825225705s
  E0901 12:58:19.191813      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:20.192965      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:20.209425 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.812223256s
  E0901 12:58:21.193584      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:21.220701 17 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 782.274649ms
  E0901 12:58:22.194480      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8755 @ 09/01/25 12:58:22.22
  I0901 12:58:22.242429 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:58:22.613768 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:58:22.613929 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:58:22.613970 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:58:22.614361 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:58:22.989400 17 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:58:22.989519 17 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:58:22.989569 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:58:22.989873 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:58:23.194805      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:23.417109 17 builder.go:145] rc: 1
  I0901 12:58:23.419723 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: Internal error occurred: error executing command in container: container is not created or running

  error:
  exit status 1
  E0901 12:58:24.195422      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:25.195655      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:26.196720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:27.197481      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:28.197659      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:29.198180      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:30.198703      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:31.199608      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:32.199631      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:33.199918      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:33.425387 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:58:33.681637 17 builder.go:145] rc: 1
  I0901 12:58:33.682162 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:58:34.200521      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:35.200820      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:36.202076      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:37.202630      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:38.203364      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:39.205033      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:40.204703      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:41.205605      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:42.206702      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:43.207492      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:43.682948 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:58:43.946747 17 builder.go:145] rc: 1
  I0901 12:58:43.947128 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:58:44.208672      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:45.208948      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:46.209657      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:47.210776      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:48.211055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:49.211228      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:50.212110      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:51.213959      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:52.214820      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:53.214582      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:58:53.948511 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:58:54.167100 17 builder.go:145] rc: 1
  I0901 12:58:54.167368 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:58:54.215415      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:55.216576      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:56.216623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:57.217587      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:58.217960      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:58:59.218679      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:00.218779      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:01.219587      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:02.220567      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:03.220828      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:04.169349 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:59:04.222644      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:04.429417 17 builder.go:145] rc: 1
  I0901 12:59:04.429691 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:05.223125      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:06.224010      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:07.224475      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:08.224823      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:09.225920      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:10.227778      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:11.227743      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:12.228360      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:13.229744      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:14.229416      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:14.431412 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:59:14.649119 17 builder.go:145] rc: 1
  I0901 12:59:14.649233 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:15.229987      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:16.230515      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:17.230717      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:18.231509      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:19.231749      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:20.232349      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:21.232741      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:22.233418      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:23.233629      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:24.233908      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:24.650051 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:59:24.868745 17 builder.go:145] rc: 1
  I0901 12:59:24.868898 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:25.234635      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:26.236126      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:27.236067      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:28.236935      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:29.236690      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:30.236866      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:31.237218      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:32.237683      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:33.238485      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:34.239177      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:34.870168 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:59:35.080897 17 builder.go:145] rc: 1
  I0901 12:59:35.081030 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:35.240507      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:36.242242      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:37.241715      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:38.242423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:39.242482      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:40.243101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:41.243535      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:42.243945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:43.244588      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:44.245219      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:45.082148 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:59:45.246060      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:45.296814 17 builder.go:145] rc: 1
  I0901 12:59:45.296943 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:46.246110      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:47.246529      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:48.247590      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:49.247618      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:50.247899      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:51.248624      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:52.249185      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:53.249899      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:54.250149      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:55.250922      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 12:59:55.298680 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:59:55.516610 17 builder.go:145] rc: 1
  I0901 12:59:55.516765 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 12:59:56.251858      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:57.252615      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:58.253089      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 12:59:59.253176      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:00.254130      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:01.254509      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:02.254710      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:03.255941      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:04.257510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:05.257613      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:05.517836 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:00:05.723003 17 builder.go:145] rc: 1
  I0901 13:00:05.723377 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:06.257684      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:07.258995      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:08.259749      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:09.259822      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:10.260482      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:11.260976      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:12.261612      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:13.261962      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:14.262462      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:15.263245      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:15.725355 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:00:15.943496 17 builder.go:145] rc: 1
  I0901 13:00:15.943935 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:16.263711      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:17.264201      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:18.264195      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:19.265222      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:20.264965      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:21.265911      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:22.265945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:23.267856      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:24.267465      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:25.267737      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:25.945745 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:00:26.181659 17 builder.go:145] rc: 1
  I0901 13:00:26.182113 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:26.268184      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:27.268899      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:28.269410      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:29.269755      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:30.270564      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:31.270664      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:32.271845      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:33.272447      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:34.272587      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:35.273433      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:36.182882 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 13:00:36.274623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:36.462072 17 builder.go:145] rc: 1
  I0901 13:00:36.462265 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:37.275067      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:38.276022      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:39.276564      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:40.277369      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:41.278234      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:42.277961      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:43.278397      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:44.278790      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:45.280361      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:46.279699      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:46.463519 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:00:46.742896 17 builder.go:145] rc: 1
  I0901 13:00:46.743059 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:47.280056      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:48.283137      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:49.280766      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:50.281230      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:51.282149      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:52.282371      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:53.283091      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:54.283153      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:55.284701      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:56.285260      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:00:56.743740 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:00:57.014143 17 builder.go:145] rc: 1
  I0901 13:00:57.014356 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:00:57.285207      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:58.286051      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:00:59.286915      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:00.287400      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:01.287757      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:02.287972      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:03.288917      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:04.288577      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:05.309710      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:06.294679      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:07.015602 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:01:07.236656 17 builder.go:145] rc: 1
  I0901 13:01:07.236958 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:07.295636      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:08.295828      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:09.296693      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:10.302695      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:11.300070      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:12.301160      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:13.302673      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:14.303676      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:15.302798      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:16.303874      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:17.239106 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 13:01:17.304138      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:17.455124 17 builder.go:145] rc: 1
  I0901 13:01:17.455550 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:18.305555      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:19.306407      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:20.308263      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:21.309334      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:22.307682      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:23.314030      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:24.310082      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:25.314093      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:26.312584      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:27.311922      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:27.457003 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:01:27.664679 17 builder.go:145] rc: 1
  I0901 13:01:27.666733 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:28.312124      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:29.312929      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:30.313846      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:31.314716      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:32.315930      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:33.316522      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:34.316775      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:35.317207      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:36.317661      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:37.317764      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:37.669979 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:01:37.915160 17 builder.go:145] rc: 1
  I0901 13:01:37.915374 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:38.318570      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:39.318366      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:40.318879      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:41.319539      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:42.320699      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:43.321770      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:44.322550      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:45.324199      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:46.323793      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:47.323652      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:47.917732 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:01:48.156381 17 builder.go:145] rc: 1
  I0901 13:01:48.156546 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:48.324352      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:49.324853      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:50.325423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:51.325786      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:52.326150      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:53.326629      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:54.327097      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:55.328530      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:56.327653      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:01:57.328039      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:58.157715 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 13:01:58.328660      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:01:58.400791 17 builder.go:145] rc: 1
  I0901 13:01:58.401212 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:01:59.328794      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:00.329224      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:01.329706      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:02.330766      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:03.330991      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:04.331460      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:05.332172      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:06.333202      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:07.333867      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:08.334594      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:08.402625 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:02:08.644780 17 builder.go:145] rc: 1
  I0901 13:02:08.644991 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:02:09.335894      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:10.336553      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:11.337167      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:12.338485      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:13.338048      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:14.339008      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:15.339346      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:16.342918      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:17.340976      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:18.341564      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:18.646377 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:02:18.859057 17 builder.go:145] rc: 1
  I0901 13:02:18.859269 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:02:19.341732      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:20.341906      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:21.342361      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:22.342791      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:23.343924      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:24.343888      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:25.344259      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:26.345778      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:27.345598      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:28.345732      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:28.861112 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:02:29.096787 17 builder.go:145] rc: 1
  I0901 13:02:29.097609 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:02:29.346423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:30.347737      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:31.347058      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:32.348137      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:33.349096      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:34.349756      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:35.350484      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:36.350615      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:37.350878      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:38.351094      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:39.099524 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:02:39.304988 17 builder.go:145] rc: 1
  I0901 13:02:39.305128 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:02:39.351720      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:40.352396      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:41.352767      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:42.353700      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:43.353952      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:44.354430      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:45.355194      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:46.355772      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:47.356510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:48.356813      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:49.306127 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 13:02:49.357731      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:49.543545 17 builder.go:145] rc: 1
  I0901 13:02:49.543700 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:02:50.358151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:51.358621      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:52.359550      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:53.360404      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:54.360678      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:55.361051      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:56.361423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:57.361264      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:58.362083      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:02:59.363019      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:02:59.544578 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:02:59.780709 17 builder.go:145] rc: 1
  I0901 13:02:59.780845 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:03:00.363154      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:01.363927      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:02.364017      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:03.364203      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:04.364887      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:05.365606      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:06.365780      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:07.366627      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:08.366727      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:09.367101      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:09.782713 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:03:10.028639 17 builder.go:145] rc: 1
  I0901 13:03:10.028804 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:03:10.368582      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:11.368545      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:12.370572      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:13.369770      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:14.369733      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:15.369914      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:16.370579      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:17.370796      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:18.371579      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:19.372274      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:20.029935 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 13:03:20.239514 17 builder.go:145] rc: 1
  I0901 13:03:20.240125 17 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  E0901 13:03:20.373511      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:21.374218      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:22.374517      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:23.375055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:24.375132      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:25.376222      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:26.377167      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:27.377124      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:28.378008      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:29.378806      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:30.243594 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=statefulset-8755 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 13:03:30.379711      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:30.444916 17 builder.go:145] rc: 1
  I0901 13:03:30.445345 17 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
  I0901 13:03:30.445478 17 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/01/25 13:03:30.49
  I0901 13:03:30.491730 17 statefulset.go:136] Deleting all statefulset in ns statefulset-8755
  I0901 13:03:30.507890 17 rest.go:153] Scaling statefulset ss to 0
  I0901 13:03:30.530623 17 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0901 13:03:30.539935 17 rest.go:91] Deleting statefulset ss
  I0901 13:03:30.584439 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8755" for this suite. @ 09/01/25 13:03:30.597
• [370.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/01/25 13:03:30.615
  I0901 13:03:30.615945 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 13:03:30.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:30.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:30.652
  I0901 13:03:30.660931 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  E0901 13:03:31.380812      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:32.381624      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:33.382472      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:34.098351 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3271" for this suite. @ 09/01/25 13:03:34.114
• [3.522 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:298
  STEP: Creating a kubernetes client @ 09/01/25 13:03:34.138
  I0901 13:03:34.138705 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 13:03:34.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:34.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:34.181
  STEP: Creating a pod to test downward api env vars @ 09/01/25 13:03:34.188
  E0901 13:03:34.383348      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:35.384117      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:36.384878      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:37.385428      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:03:38.274
  I0901 13:03:38.291068 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod downward-api-5ccc5dc8-480b-49e9-8d89-5b8bbe98b399 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 13:03:38.373
  E0901 13:03:38.385765      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:38.421038 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3101" for this suite. @ 09/01/25 13:03:38.43
• [4.311 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/01/25 13:03:38.451
  I0901 13:03:38.451479 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename ingress @ 09/01/25 13:03:38.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:38.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:38.501
  STEP: getting /apis @ 09/01/25 13:03:38.51
  STEP: getting /apis/networking.k8s.io @ 09/01/25 13:03:38.522
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 13:03:38.525
  STEP: creating @ 09/01/25 13:03:38.528
  STEP: getting @ 09/01/25 13:03:38.571
  STEP: listing @ 09/01/25 13:03:38.578
  STEP: watching @ 09/01/25 13:03:38.585
  I0901 13:03:38.585879 17 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/01/25 13:03:38.589
  STEP: cluster-wide watching @ 09/01/25 13:03:38.596
  I0901 13:03:38.596487 17 ingress.go:198] starting watch
  STEP: patching @ 09/01/25 13:03:38.598
  STEP: updating @ 09/01/25 13:03:38.61
  I0901 13:03:38.632158 17 ingress.go:221] waiting for watch events with expected annotations
  I0901 13:03:38.632561 17 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 13:03:38.632
  STEP: updating /status @ 09/01/25 13:03:38.642
  STEP: get /status @ 09/01/25 13:03:38.658
  STEP: deleting @ 09/01/25 13:03:38.665
  STEP: deleting a collection @ 09/01/25 13:03:38.694
  I0901 13:03:38.730163 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9681" for this suite. @ 09/01/25 13:03:38.741
• [0.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/01/25 13:03:38.76
  I0901 13:03:38.761040 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 13:03:38.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:38.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:38.799
  I0901 13:03:38.806184 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  E0901 13:03:39.387242      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:39.853867 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5506" for this suite. @ 09/01/25 13:03:39.868
• [1.127 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/01/25 13:03:39.888
  I0901 13:03:39.888929 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pods @ 09/01/25 13:03:39.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:39.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:39.988
  STEP: Create a pod @ 09/01/25 13:03:39.999
  E0901 13:03:40.387788      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:41.387545      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:42.387671      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:43.388040      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/01/25 13:03:44.059
  I0901 13:03:44.082213 17 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0901 13:03:44.082565 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9834" for this suite. @ 09/01/25 13:03:44.096
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/01/25 13:03:44.116
  I0901 13:03:44.116726 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 13:03:44.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:44.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:44.166
  I0901 13:03:44.252648 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5699" for this suite. @ 09/01/25 13:03:44.263
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/01/25 13:03:44.305
  I0901 13:03:44.306031 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 13:03:44.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:44.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:44.347
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 13:03:44.353
  E0901 13:03:44.387939      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:45.388994      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:46.389753      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:47.389546      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:48.390451      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:03:48.419
  I0901 13:03:48.434493 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-e8c8ce80-c3cb-4d33-991a-f99b58b97740 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 13:03:48.475
  I0901 13:03:48.543243 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-368" for this suite. @ 09/01/25 13:03:48.558
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/01/25 13:03:48.581
  I0901 13:03:48.581653 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 13:03:48.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:48.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:48.628
  STEP: Creating ReplicationController "e2e-rc-x46rn" @ 09/01/25 13:03:48.634
  I0901 13:03:48.647476 17 rc.go:795] Get Replication Controller "e2e-rc-x46rn" to confirm replicas
  E0901 13:03:49.392723      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:49.647961 17 rc.go:795] Get Replication Controller "e2e-rc-x46rn" to confirm replicas
  I0901 13:03:49.688039 17 rc.go:804] Found 1 replicas for "e2e-rc-x46rn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-x46rn" @ 09/01/25 13:03:49.688
  STEP: Updating a scale subresource @ 09/01/25 13:03:49.713
  STEP: Verifying replicas where modified for replication controller "e2e-rc-x46rn" @ 09/01/25 13:03:49.761
  I0901 13:03:49.763177 17 rc.go:795] Get Replication Controller "e2e-rc-x46rn" to confirm replicas
  E0901 13:03:50.392728      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:50.763392 17 rc.go:795] Get Replication Controller "e2e-rc-x46rn" to confirm replicas
  I0901 13:03:50.772511 17 rc.go:804] Found 2 replicas for "e2e-rc-x46rn" replication controller
  I0901 13:03:50.772776 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-567" for this suite. @ 09/01/25 13:03:50.785
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:60
  STEP: Creating a kubernetes client @ 09/01/25 13:03:50.804
  I0901 13:03:50.804559 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svc-latency @ 09/01/25 13:03:50.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:03:50.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:03:50.85
  I0901 13:03:50.858167 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  I0901 13:03:50.904387 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0901 13:03:51.393566      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:52.395073      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:52.919526 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 13, 3, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 3, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 3, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 3, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"svc-latency-rc-54bb7c7469\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 13:03:53.395267      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:03:54.396036      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:55.072370 17 service_latency.go:356] Created: latency-svc-rnsbv
  I0901 13:03:55.108191 17 service_latency.go:363] Got endpoints: latency-svc-rnsbv [93.754124ms]
  I0901 13:03:55.152346 17 service_latency.go:356] Created: latency-svc-m56xj
  I0901 13:03:55.165924 17 service_latency.go:363] Got endpoints: latency-svc-m56xj [55.814148ms]
  I0901 13:03:55.173762 17 service_latency.go:356] Created: latency-svc-dxqmw
  I0901 13:03:55.197108 17 service_latency.go:356] Created: latency-svc-px6n6
  I0901 13:03:55.205735 17 service_latency.go:363] Got endpoints: latency-svc-dxqmw [94.476223ms]
  I0901 13:03:55.209791 17 service_latency.go:356] Created: latency-svc-khpjp
  I0901 13:03:55.218033 17 service_latency.go:363] Got endpoints: latency-svc-px6n6 [104.506966ms]
  I0901 13:03:55.241112 17 service_latency.go:363] Got endpoints: latency-svc-khpjp [127.322253ms]
  I0901 13:03:55.242450 17 service_latency.go:356] Created: latency-svc-c96sl
  I0901 13:03:55.261680 17 service_latency.go:363] Got endpoints: latency-svc-c96sl [147.515866ms]
  I0901 13:03:55.275625 17 service_latency.go:356] Created: latency-svc-mr2wp
  I0901 13:03:55.294023 17 service_latency.go:363] Got endpoints: latency-svc-mr2wp [179.556199ms]
  I0901 13:03:55.294527 17 service_latency.go:356] Created: latency-svc-mxb8x
  I0901 13:03:55.309370 17 service_latency.go:363] Got endpoints: latency-svc-mxb8x [194.728129ms]
  I0901 13:03:55.319381 17 service_latency.go:356] Created: latency-svc-vb5qs
  I0901 13:03:55.325853 17 service_latency.go:356] Created: latency-svc-bnncc
  I0901 13:03:55.338696 17 service_latency.go:363] Got endpoints: latency-svc-vb5qs [76.946145ms]
  I0901 13:03:55.357698 17 service_latency.go:356] Created: latency-svc-8dkvk
  I0901 13:03:55.375170 17 service_latency.go:363] Got endpoints: latency-svc-bnncc [260.379919ms]
  I0901 13:03:55.382882 17 service_latency.go:363] Got endpoints: latency-svc-8dkvk [268.489684ms]
  I0901 13:03:55.395426 17 service_latency.go:356] Created: latency-svc-49v5n
  E0901 13:03:55.396871      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:55.426718 17 service_latency.go:356] Created: latency-svc-pflk4
  I0901 13:03:55.434675 17 service_latency.go:363] Got endpoints: latency-svc-49v5n [319.687543ms]
  I0901 13:03:55.456759 17 service_latency.go:356] Created: latency-svc-wvfkm
  I0901 13:03:55.462252 17 service_latency.go:363] Got endpoints: latency-svc-pflk4 [296.25119ms]
  I0901 13:03:55.492336 17 service_latency.go:356] Created: latency-svc-cf9s4
  I0901 13:03:55.499758 17 service_latency.go:363] Got endpoints: latency-svc-wvfkm [384.690381ms]
  I0901 13:03:55.519488 17 service_latency.go:356] Created: latency-svc-rsl8z
  I0901 13:03:55.522434 17 service_latency.go:363] Got endpoints: latency-svc-cf9s4 [405.624678ms]
  I0901 13:03:55.537488 17 service_latency.go:363] Got endpoints: latency-svc-rsl8z [422.266842ms]
  I0901 13:03:55.575202 17 service_latency.go:356] Created: latency-svc-sgfkv
  I0901 13:03:55.589766 17 service_latency.go:356] Created: latency-svc-5qpq6
  I0901 13:03:55.607934 17 service_latency.go:363] Got endpoints: latency-svc-sgfkv [490.308527ms]
  I0901 13:03:55.627925 17 service_latency.go:363] Got endpoints: latency-svc-5qpq6 [513.725467ms]
  I0901 13:03:55.627949 17 service_latency.go:356] Created: latency-svc-2twhs
  I0901 13:03:55.639238 17 service_latency.go:363] Got endpoints: latency-svc-2twhs [433.427473ms]
  I0901 13:03:55.650106 17 service_latency.go:356] Created: latency-svc-ffbxg
  I0901 13:03:55.676400 17 service_latency.go:363] Got endpoints: latency-svc-ffbxg [458.195712ms]
  I0901 13:03:55.696019 17 service_latency.go:356] Created: latency-svc-bzvmt
  I0901 13:03:55.719641 17 service_latency.go:356] Created: latency-svc-bm9lb
  I0901 13:03:55.725781 17 service_latency.go:363] Got endpoints: latency-svc-bzvmt [484.573805ms]
  I0901 13:03:55.741484 17 service_latency.go:363] Got endpoints: latency-svc-bm9lb [447.241557ms]
  I0901 13:03:55.741601 17 service_latency.go:356] Created: latency-svc-t8kmq
  I0901 13:03:55.765039 17 service_latency.go:356] Created: latency-svc-6lg49
  I0901 13:03:55.774452 17 service_latency.go:363] Got endpoints: latency-svc-t8kmq [464.746496ms]
  I0901 13:03:55.787197 17 service_latency.go:356] Created: latency-svc-ngl66
  I0901 13:03:55.787587 17 service_latency.go:363] Got endpoints: latency-svc-6lg49 [448.068321ms]
  I0901 13:03:55.797174 17 service_latency.go:356] Created: latency-svc-xs275
  I0901 13:03:55.815116 17 service_latency.go:363] Got endpoints: latency-svc-ngl66 [432.169086ms]
  I0901 13:03:55.815659 17 service_latency.go:363] Got endpoints: latency-svc-xs275 [440.288488ms]
  I0901 13:03:55.839243 17 service_latency.go:356] Created: latency-svc-mwrg8
  I0901 13:03:55.884488 17 service_latency.go:356] Created: latency-svc-wwf94
  I0901 13:03:55.884698 17 service_latency.go:363] Got endpoints: latency-svc-mwrg8 [449.945423ms]
  I0901 13:03:55.885193 17 service_latency.go:356] Created: latency-svc-l5d4p
  I0901 13:03:55.905046 17 service_latency.go:363] Got endpoints: latency-svc-wwf94 [442.683649ms]
  I0901 13:03:55.905888 17 service_latency.go:356] Created: latency-svc-44qfz
  I0901 13:03:55.921538 17 service_latency.go:363] Got endpoints: latency-svc-l5d4p [421.715962ms]
  I0901 13:03:55.943012 17 service_latency.go:363] Got endpoints: latency-svc-44qfz [420.316318ms]
  I0901 13:03:55.953723 17 service_latency.go:356] Created: latency-svc-c4fgh
  I0901 13:03:55.964539 17 service_latency.go:356] Created: latency-svc-kr6f8
  I0901 13:03:55.980515 17 service_latency.go:363] Got endpoints: latency-svc-c4fgh [442.780091ms]
  I0901 13:03:55.983561 17 service_latency.go:363] Got endpoints: latency-svc-kr6f8 [375.544405ms]
  I0901 13:03:55.997745 17 service_latency.go:356] Created: latency-svc-vx94l
  I0901 13:03:56.018788 17 service_latency.go:363] Got endpoints: latency-svc-vx94l [390.767582ms]
  I0901 13:03:56.023613 17 service_latency.go:356] Created: latency-svc-rpqzh
  I0901 13:03:56.062244 17 service_latency.go:356] Created: latency-svc-mkkgz
  I0901 13:03:56.064453 17 service_latency.go:363] Got endpoints: latency-svc-rpqzh [424.999095ms]
  I0901 13:03:56.098078 17 service_latency.go:363] Got endpoints: latency-svc-mkkgz [421.484093ms]
  I0901 13:03:56.106511 17 service_latency.go:356] Created: latency-svc-jrvtw
  I0901 13:03:56.145613 17 service_latency.go:356] Created: latency-svc-qmgk9
  I0901 13:03:56.155571 17 service_latency.go:363] Got endpoints: latency-svc-jrvtw [429.566255ms]
  I0901 13:03:56.187792 17 service_latency.go:363] Got endpoints: latency-svc-qmgk9 [446.226142ms]
  I0901 13:03:56.200876 17 service_latency.go:356] Created: latency-svc-pbfq4
  I0901 13:03:56.248365 17 service_latency.go:363] Got endpoints: latency-svc-pbfq4 [473.705502ms]
  I0901 13:03:56.300078 17 service_latency.go:356] Created: latency-svc-pdgbw
  I0901 13:03:56.322086 17 service_latency.go:363] Got endpoints: latency-svc-pdgbw [533.481869ms]
  I0901 13:03:56.327007 17 service_latency.go:356] Created: latency-svc-5ptwj
  I0901 13:03:56.376804 17 service_latency.go:356] Created: latency-svc-gr5pk
  I0901 13:03:56.390543 17 service_latency.go:363] Got endpoints: latency-svc-5ptwj [573.821148ms]
  E0901 13:03:56.397558      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:56.414917 17 service_latency.go:363] Got endpoints: latency-svc-gr5pk [599.255411ms]
  I0901 13:03:56.416548 17 service_latency.go:356] Created: latency-svc-cd5fp
  I0901 13:03:56.477660 17 service_latency.go:356] Created: latency-svc-xqsgp
  I0901 13:03:56.478098 17 service_latency.go:356] Created: latency-svc-sjscf
  I0901 13:03:56.478156 17 service_latency.go:363] Got endpoints: latency-svc-sjscf [573.02889ms]
  I0901 13:03:56.515789 17 service_latency.go:363] Got endpoints: latency-svc-xqsgp [593.736774ms]
  I0901 13:03:56.518142 17 service_latency.go:356] Created: latency-svc-p85bt
  I0901 13:03:56.518237 17 service_latency.go:363] Got endpoints: latency-svc-cd5fp [633.45758ms]
  I0901 13:03:56.520451 17 service_latency.go:356] Created: latency-svc-55scb
  I0901 13:03:56.521514 17 service_latency.go:363] Got endpoints: latency-svc-55scb [578.436618ms]
  I0901 13:03:56.521885 17 service_latency.go:356] Created: latency-svc-kbrbs
  I0901 13:03:56.541731 17 service_latency.go:363] Got endpoints: latency-svc-kbrbs [561.139095ms]
  I0901 13:03:56.542340 17 service_latency.go:363] Got endpoints: latency-svc-p85bt [558.703647ms]
  I0901 13:03:56.544857 17 service_latency.go:356] Created: latency-svc-k6xw9
  I0901 13:03:56.557881 17 service_latency.go:363] Got endpoints: latency-svc-k6xw9 [538.998801ms]
  I0901 13:03:56.567865 17 service_latency.go:356] Created: latency-svc-pcr4l
  I0901 13:03:56.590736 17 service_latency.go:356] Created: latency-svc-rxf2x
  I0901 13:03:56.594476 17 service_latency.go:363] Got endpoints: latency-svc-pcr4l [529.792287ms]
  I0901 13:03:56.609186 17 service_latency.go:363] Got endpoints: latency-svc-rxf2x [511.016723ms]
  I0901 13:03:56.621312 17 service_latency.go:356] Created: latency-svc-8nmln
  I0901 13:03:56.625023 17 service_latency.go:363] Got endpoints: latency-svc-8nmln [469.39148ms]
  I0901 13:03:56.638187 17 service_latency.go:356] Created: latency-svc-fr7ds
  I0901 13:03:56.659508 17 service_latency.go:356] Created: latency-svc-7bk8s
  I0901 13:03:56.665455 17 service_latency.go:363] Got endpoints: latency-svc-fr7ds [477.541738ms]
  I0901 13:03:56.686051 17 service_latency.go:363] Got endpoints: latency-svc-7bk8s [435.677628ms]
  I0901 13:03:56.689743 17 service_latency.go:356] Created: latency-svc-5llfh
  I0901 13:03:56.705210 17 service_latency.go:363] Got endpoints: latency-svc-5llfh [383.041765ms]
  I0901 13:03:56.737755 17 service_latency.go:356] Created: latency-svc-2mt29
  I0901 13:03:56.856865 17 service_latency.go:356] Created: latency-svc-v27cp
  I0901 13:03:56.876080 17 service_latency.go:363] Got endpoints: latency-svc-2mt29 [485.303385ms]
  I0901 13:03:56.901208 17 service_latency.go:363] Got endpoints: latency-svc-v27cp [486.138704ms]
  I0901 13:03:57.060632 17 service_latency.go:356] Created: latency-svc-fz56f
  I0901 13:03:57.103116 17 service_latency.go:356] Created: latency-svc-6n8pf
  I0901 13:03:57.105781 17 service_latency.go:363] Got endpoints: latency-svc-fz56f [627.575051ms]
  I0901 13:03:57.131716 17 service_latency.go:356] Created: latency-svc-mfqwc
  I0901 13:03:57.152504 17 service_latency.go:363] Got endpoints: latency-svc-6n8pf [636.572071ms]
  I0901 13:03:57.157630 17 service_latency.go:363] Got endpoints: latency-svc-mfqwc [639.286687ms]
  I0901 13:03:57.174883 17 service_latency.go:356] Created: latency-svc-cbpjs
  I0901 13:03:57.184071 17 service_latency.go:363] Got endpoints: latency-svc-cbpjs [662.491863ms]
  I0901 13:03:57.240885 17 service_latency.go:356] Created: latency-svc-csv46
  I0901 13:03:57.249869 17 service_latency.go:356] Created: latency-svc-cfwrw
  I0901 13:03:57.352968 17 service_latency.go:363] Got endpoints: latency-svc-csv46 [810.54844ms]
  I0901 13:03:57.353084 17 service_latency.go:363] Got endpoints: latency-svc-cfwrw [810.995411ms]
  I0901 13:03:57.358409 17 service_latency.go:356] Created: latency-svc-dw996
  I0901 13:03:57.375262 17 service_latency.go:363] Got endpoints: latency-svc-dw996 [817.316452ms]
  E0901 13:03:57.399356      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:57.415451 17 service_latency.go:356] Created: latency-svc-kflnz
  I0901 13:03:57.441671 17 service_latency.go:363] Got endpoints: latency-svc-kflnz [847.124971ms]
  I0901 13:03:57.443544 17 service_latency.go:356] Created: latency-svc-5xmsd
  I0901 13:03:57.454027 17 service_latency.go:356] Created: latency-svc-5h6qp
  I0901 13:03:57.484382 17 service_latency.go:356] Created: latency-svc-9dfqj
  I0901 13:03:57.493123 17 service_latency.go:363] Got endpoints: latency-svc-5h6qp [883.699049ms]
  I0901 13:03:57.576757 17 service_latency.go:363] Got endpoints: latency-svc-5xmsd [951.628914ms]
  I0901 13:03:57.577450 17 service_latency.go:363] Got endpoints: latency-svc-9dfqj [911.930577ms]
  I0901 13:03:57.584316 17 service_latency.go:356] Created: latency-svc-ttpsr
  I0901 13:03:57.590799 17 service_latency.go:356] Created: latency-svc-r78sr
  I0901 13:03:57.623681 17 service_latency.go:363] Got endpoints: latency-svc-r78sr [918.129735ms]
  I0901 13:03:57.626205 17 service_latency.go:356] Created: latency-svc-4njhg
  I0901 13:03:57.636332 17 service_latency.go:363] Got endpoints: latency-svc-ttpsr [950.163826ms]
  I0901 13:03:57.673877 17 service_latency.go:356] Created: latency-svc-5ndkq
  I0901 13:03:57.675250 17 service_latency.go:363] Got endpoints: latency-svc-4njhg [799.048976ms]
  I0901 13:03:57.692342 17 service_latency.go:356] Created: latency-svc-nxckp
  I0901 13:03:57.702083 17 service_latency.go:363] Got endpoints: latency-svc-5ndkq [800.102196ms]
  I0901 13:03:57.737787 17 service_latency.go:363] Got endpoints: latency-svc-nxckp [631.406957ms]
  I0901 13:03:57.754355 17 service_latency.go:356] Created: latency-svc-9pdkj
  I0901 13:03:57.797225 17 service_latency.go:363] Got endpoints: latency-svc-9pdkj [644.63115ms]
  I0901 13:03:57.805595 17 service_latency.go:356] Created: latency-svc-vwqhn
  I0901 13:03:57.819802 17 service_latency.go:356] Created: latency-svc-nw8j8
  I0901 13:03:57.831471 17 service_latency.go:363] Got endpoints: latency-svc-vwqhn [673.773626ms]
  I0901 13:03:57.870988 17 service_latency.go:363] Got endpoints: latency-svc-nw8j8 [686.85364ms]
  I0901 13:03:57.872458 17 service_latency.go:356] Created: latency-svc-2kb6v
  I0901 13:03:57.891182 17 service_latency.go:356] Created: latency-svc-tdpnd
  I0901 13:03:57.895632 17 service_latency.go:363] Got endpoints: latency-svc-2kb6v [542.565055ms]
  I0901 13:03:57.915822 17 service_latency.go:363] Got endpoints: latency-svc-tdpnd [562.671777ms]
  I0901 13:03:57.919053 17 service_latency.go:356] Created: latency-svc-ksrv4
  I0901 13:03:57.934580 17 service_latency.go:363] Got endpoints: latency-svc-ksrv4 [559.199336ms]
  I0901 13:03:57.965571 17 service_latency.go:356] Created: latency-svc-2wskc
  I0901 13:03:57.987025 17 service_latency.go:363] Got endpoints: latency-svc-2wskc [545.204609ms]
  I0901 13:03:57.988356 17 service_latency.go:356] Created: latency-svc-vvfrc
  I0901 13:03:58.001575 17 service_latency.go:356] Created: latency-svc-9mtqn
  I0901 13:03:58.007450 17 service_latency.go:363] Got endpoints: latency-svc-vvfrc [514.180408ms]
  I0901 13:03:58.022820 17 service_latency.go:356] Created: latency-svc-bh9vx
  I0901 13:03:58.026391 17 service_latency.go:363] Got endpoints: latency-svc-9mtqn [448.880725ms]
  I0901 13:03:58.037167 17 service_latency.go:363] Got endpoints: latency-svc-bh9vx [460.231245ms]
  I0901 13:03:58.056870 17 service_latency.go:356] Created: latency-svc-bd9ln
  I0901 13:03:58.077722 17 service_latency.go:356] Created: latency-svc-c6fwm
  I0901 13:03:58.079180 17 service_latency.go:363] Got endpoints: latency-svc-bd9ln [455.424587ms]
  I0901 13:03:58.099941 17 service_latency.go:363] Got endpoints: latency-svc-c6fwm [463.376924ms]
  I0901 13:03:58.104780 17 service_latency.go:356] Created: latency-svc-nnmsm
  I0901 13:03:58.133384 17 service_latency.go:363] Got endpoints: latency-svc-nnmsm [457.608876ms]
  I0901 13:03:58.134947 17 service_latency.go:356] Created: latency-svc-mv6mk
  I0901 13:03:58.146784 17 service_latency.go:356] Created: latency-svc-bthpq
  I0901 13:03:58.158103 17 service_latency.go:363] Got endpoints: latency-svc-mv6mk [455.394059ms]
  I0901 13:03:58.169016 17 service_latency.go:363] Got endpoints: latency-svc-bthpq [430.651443ms]
  I0901 13:03:58.176703 17 service_latency.go:356] Created: latency-svc-b7jcb
  I0901 13:03:58.191787 17 service_latency.go:363] Got endpoints: latency-svc-b7jcb [394.446944ms]
  I0901 13:03:58.199478 17 service_latency.go:356] Created: latency-svc-jb6h2
  I0901 13:03:58.210811 17 service_latency.go:363] Got endpoints: latency-svc-jb6h2 [379.174224ms]
  I0901 13:03:58.213824 17 service_latency.go:356] Created: latency-svc-d7b7s
  I0901 13:03:58.290209 17 service_latency.go:363] Got endpoints: latency-svc-d7b7s [419.121265ms]
  I0901 13:03:58.300875 17 service_latency.go:356] Created: latency-svc-k2ff2
  I0901 13:03:58.322819 17 service_latency.go:356] Created: latency-svc-vrtj4
  I0901 13:03:58.328908 17 service_latency.go:363] Got endpoints: latency-svc-k2ff2 [433.153753ms]
  I0901 13:03:58.349202 17 service_latency.go:356] Created: latency-svc-np65z
  I0901 13:03:58.375551 17 service_latency.go:363] Got endpoints: latency-svc-np65z [439.879621ms]
  I0901 13:03:58.376100 17 service_latency.go:363] Got endpoints: latency-svc-vrtj4 [459.442057ms]
  I0901 13:03:58.382139 17 service_latency.go:356] Created: latency-svc-8xknl
  E0901 13:03:58.399624      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:58.406038 17 service_latency.go:363] Got endpoints: latency-svc-8xknl [418.827501ms]
  I0901 13:03:58.407652 17 service_latency.go:356] Created: latency-svc-j5wp4
  I0901 13:03:58.420398 17 service_latency.go:356] Created: latency-svc-d4c5s
  I0901 13:03:58.423506 17 service_latency.go:363] Got endpoints: latency-svc-j5wp4 [415.970889ms]
  I0901 13:03:58.440672 17 service_latency.go:363] Got endpoints: latency-svc-d4c5s [414.215367ms]
  I0901 13:03:58.447948 17 service_latency.go:356] Created: latency-svc-ldvh2
  I0901 13:03:58.475703 17 service_latency.go:363] Got endpoints: latency-svc-ldvh2 [438.264895ms]
  I0901 13:03:58.478335 17 service_latency.go:356] Created: latency-svc-zdkll
  I0901 13:03:58.511816 17 service_latency.go:356] Created: latency-svc-rvvzj
  I0901 13:03:58.526576 17 service_latency.go:363] Got endpoints: latency-svc-zdkll [447.328709ms]
  I0901 13:03:58.528572 17 service_latency.go:356] Created: latency-svc-cn66z
  I0901 13:03:58.539486 17 service_latency.go:356] Created: latency-svc-pzxsj
  I0901 13:03:58.549810 17 service_latency.go:356] Created: latency-svc-8vx9t
  I0901 13:03:58.563546 17 service_latency.go:363] Got endpoints: latency-svc-rvvzj [462.717399ms]
  I0901 13:03:58.574576 17 service_latency.go:356] Created: latency-svc-gmcg9
  I0901 13:03:58.584828 17 service_latency.go:356] Created: latency-svc-qnsc6
  I0901 13:03:58.595953 17 service_latency.go:356] Created: latency-svc-w9xvt
  I0901 13:03:58.612825 17 service_latency.go:356] Created: latency-svc-npsq6
  I0901 13:03:58.616969 17 service_latency.go:363] Got endpoints: latency-svc-cn66z [483.183949ms]
  I0901 13:03:58.630484 17 service_latency.go:356] Created: latency-svc-8c75r
  I0901 13:03:58.636639 17 service_latency.go:356] Created: latency-svc-d65jb
  I0901 13:03:58.652004 17 service_latency.go:356] Created: latency-svc-fw48g
  I0901 13:03:58.664974 17 service_latency.go:363] Got endpoints: latency-svc-pzxsj [506.795604ms]
  I0901 13:03:58.673181 17 service_latency.go:356] Created: latency-svc-rp8cv
  I0901 13:03:58.679825 17 service_latency.go:356] Created: latency-svc-8wm5v
  I0901 13:03:58.696171 17 service_latency.go:356] Created: latency-svc-wz65j
  I0901 13:03:58.709648 17 service_latency.go:356] Created: latency-svc-lbbbt
  I0901 13:03:58.720313 17 service_latency.go:356] Created: latency-svc-dnb8c
  I0901 13:03:58.724943 17 service_latency.go:363] Got endpoints: latency-svc-8vx9t [554.84774ms]
  I0901 13:03:58.737080 17 service_latency.go:356] Created: latency-svc-zncb7
  I0901 13:03:58.764467 17 service_latency.go:363] Got endpoints: latency-svc-gmcg9 [572.587929ms]
  I0901 13:03:58.765200 17 service_latency.go:356] Created: latency-svc-v88wf
  I0901 13:03:58.775687 17 service_latency.go:356] Created: latency-svc-2dfwr
  I0901 13:03:58.792568 17 service_latency.go:356] Created: latency-svc-ct7vs
  I0901 13:03:58.813555 17 service_latency.go:363] Got endpoints: latency-svc-qnsc6 [602.602559ms]
  I0901 13:03:58.846335 17 service_latency.go:356] Created: latency-svc-8cb5l
  I0901 13:03:58.861729 17 service_latency.go:363] Got endpoints: latency-svc-w9xvt [571.22717ms]
  I0901 13:03:58.928810 17 service_latency.go:356] Created: latency-svc-nhwqz
  I0901 13:03:58.931211 17 service_latency.go:363] Got endpoints: latency-svc-npsq6 [601.085163ms]
  I0901 13:03:58.968895 17 service_latency.go:363] Got endpoints: latency-svc-8c75r [593.143626ms]
  I0901 13:03:58.975718 17 service_latency.go:356] Created: latency-svc-d7bf5
  I0901 13:03:58.995773 17 service_latency.go:356] Created: latency-svc-gpt6l
  I0901 13:03:59.016109 17 service_latency.go:363] Got endpoints: latency-svc-d65jb [639.758859ms]
  I0901 13:03:59.042275 17 service_latency.go:356] Created: latency-svc-fqgrd
  I0901 13:03:59.063595 17 service_latency.go:363] Got endpoints: latency-svc-fw48g [657.354798ms]
  I0901 13:03:59.090259 17 service_latency.go:356] Created: latency-svc-hcwhm
  I0901 13:03:59.116729 17 service_latency.go:363] Got endpoints: latency-svc-rp8cv [692.312747ms]
  I0901 13:03:59.143264 17 service_latency.go:356] Created: latency-svc-57mwv
  I0901 13:03:59.157964 17 service_latency.go:363] Got endpoints: latency-svc-8wm5v [715.168549ms]
  I0901 13:03:59.180250 17 service_latency.go:356] Created: latency-svc-cgnfk
  I0901 13:03:59.209986 17 service_latency.go:363] Got endpoints: latency-svc-wz65j [733.546281ms]
  I0901 13:03:59.229643 17 service_latency.go:356] Created: latency-svc-4wwxf
  I0901 13:03:59.264041 17 service_latency.go:363] Got endpoints: latency-svc-lbbbt [737.350633ms]
  I0901 13:03:59.295415 17 service_latency.go:356] Created: latency-svc-fvprb
  I0901 13:03:59.306875 17 service_latency.go:363] Got endpoints: latency-svc-dnb8c [743.143551ms]
  I0901 13:03:59.324629 17 service_latency.go:356] Created: latency-svc-7jh7r
  I0901 13:03:59.361800 17 service_latency.go:363] Got endpoints: latency-svc-zncb7 [744.694942ms]
  I0901 13:03:59.389319 17 service_latency.go:356] Created: latency-svc-7dr9z
  E0901 13:03:59.400920      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:03:59.413155 17 service_latency.go:363] Got endpoints: latency-svc-v88wf [748.043146ms]
  I0901 13:03:59.439622 17 service_latency.go:356] Created: latency-svc-tthlr
  I0901 13:03:59.458745 17 service_latency.go:363] Got endpoints: latency-svc-2dfwr [733.367069ms]
  I0901 13:03:59.477990 17 service_latency.go:356] Created: latency-svc-sqzx9
  I0901 13:03:59.510382 17 service_latency.go:363] Got endpoints: latency-svc-ct7vs [745.82737ms]
  I0901 13:03:59.531802 17 service_latency.go:356] Created: latency-svc-tfjnx
  I0901 13:03:59.559621 17 service_latency.go:363] Got endpoints: latency-svc-8cb5l [745.760939ms]
  I0901 13:03:59.591667 17 service_latency.go:356] Created: latency-svc-g2hzx
  I0901 13:03:59.630650 17 service_latency.go:363] Got endpoints: latency-svc-nhwqz [768.821107ms]
  I0901 13:03:59.655007 17 service_latency.go:356] Created: latency-svc-7wqbs
  I0901 13:03:59.666380 17 service_latency.go:363] Got endpoints: latency-svc-d7bf5 [734.979378ms]
  I0901 13:03:59.691257 17 service_latency.go:356] Created: latency-svc-xbwmm
  I0901 13:03:59.711052 17 service_latency.go:363] Got endpoints: latency-svc-gpt6l [742.040837ms]
  I0901 13:03:59.739711 17 service_latency.go:356] Created: latency-svc-7tgms
  I0901 13:03:59.791113 17 service_latency.go:363] Got endpoints: latency-svc-fqgrd [774.818003ms]
  I0901 13:03:59.818245 17 service_latency.go:363] Got endpoints: latency-svc-hcwhm [754.578523ms]
  I0901 13:03:59.824395 17 service_latency.go:356] Created: latency-svc-vzjwl
  I0901 13:03:59.847533 17 service_latency.go:356] Created: latency-svc-6hzdg
  I0901 13:03:59.862160 17 service_latency.go:363] Got endpoints: latency-svc-57mwv [745.35867ms]
  I0901 13:03:59.882068 17 service_latency.go:356] Created: latency-svc-j4wk5
  I0901 13:03:59.919719 17 service_latency.go:363] Got endpoints: latency-svc-cgnfk [761.664727ms]
  I0901 13:03:59.956192 17 service_latency.go:356] Created: latency-svc-mjpb2
  I0901 13:03:59.966110 17 service_latency.go:363] Got endpoints: latency-svc-4wwxf [756.021344ms]
  I0901 13:03:59.992361 17 service_latency.go:356] Created: latency-svc-m8gx2
  I0901 13:04:00.011998 17 service_latency.go:363] Got endpoints: latency-svc-fvprb [747.86351ms]
  I0901 13:04:00.033868 17 service_latency.go:356] Created: latency-svc-2n6cw
  I0901 13:04:00.080590 17 service_latency.go:363] Got endpoints: latency-svc-7jh7r [773.5367ms]
  I0901 13:04:00.115751 17 service_latency.go:356] Created: latency-svc-52r4f
  I0901 13:04:00.122621 17 service_latency.go:363] Got endpoints: latency-svc-7dr9z [760.429637ms]
  I0901 13:04:00.148566 17 service_latency.go:356] Created: latency-svc-n66mk
  I0901 13:04:00.160398 17 service_latency.go:363] Got endpoints: latency-svc-tthlr [746.884613ms]
  I0901 13:04:00.205085 17 service_latency.go:356] Created: latency-svc-fr2r7
  I0901 13:04:00.222563 17 service_latency.go:363] Got endpoints: latency-svc-sqzx9 [763.678238ms]
  I0901 13:04:00.244014 17 service_latency.go:356] Created: latency-svc-vxxmt
  I0901 13:04:00.261501 17 service_latency.go:363] Got endpoints: latency-svc-tfjnx [751.045736ms]
  I0901 13:04:00.306823 17 service_latency.go:356] Created: latency-svc-r4rmf
  I0901 13:04:00.332781 17 service_latency.go:363] Got endpoints: latency-svc-g2hzx [771.71437ms]
  I0901 13:04:00.369230 17 service_latency.go:356] Created: latency-svc-9hzlb
  I0901 13:04:00.375561 17 service_latency.go:363] Got endpoints: latency-svc-7wqbs [744.637716ms]
  E0901 13:04:00.403410      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:00.405883 17 service_latency.go:356] Created: latency-svc-llv4q
  I0901 13:04:00.411902 17 service_latency.go:363] Got endpoints: latency-svc-xbwmm [745.401689ms]
  I0901 13:04:00.431879 17 service_latency.go:356] Created: latency-svc-mn2jh
  I0901 13:04:00.461422 17 service_latency.go:363] Got endpoints: latency-svc-7tgms [747.011419ms]
  I0901 13:04:00.486204 17 service_latency.go:356] Created: latency-svc-c8rtb
  I0901 13:04:00.511662 17 service_latency.go:363] Got endpoints: latency-svc-vzjwl [720.235517ms]
  I0901 13:04:00.536670 17 service_latency.go:356] Created: latency-svc-hmvhl
  I0901 13:04:00.558609 17 service_latency.go:363] Got endpoints: latency-svc-6hzdg [738.639818ms]
  I0901 13:04:00.583879 17 service_latency.go:356] Created: latency-svc-lj26f
  I0901 13:04:00.610455 17 service_latency.go:363] Got endpoints: latency-svc-j4wk5 [748.183842ms]
  I0901 13:04:00.632956 17 service_latency.go:356] Created: latency-svc-wvlsd
  I0901 13:04:00.662388 17 service_latency.go:363] Got endpoints: latency-svc-mjpb2 [741.7943ms]
  I0901 13:04:00.683516 17 service_latency.go:356] Created: latency-svc-kmjpj
  I0901 13:04:00.715495 17 service_latency.go:363] Got endpoints: latency-svc-m8gx2 [748.275386ms]
  I0901 13:04:00.745188 17 service_latency.go:356] Created: latency-svc-fvx2c
  I0901 13:04:00.760677 17 service_latency.go:363] Got endpoints: latency-svc-2n6cw [748.588249ms]
  I0901 13:04:00.787666 17 service_latency.go:356] Created: latency-svc-7wdkh
  I0901 13:04:00.816506 17 service_latency.go:363] Got endpoints: latency-svc-52r4f [735.267155ms]
  I0901 13:04:00.843399 17 service_latency.go:356] Created: latency-svc-mpgrm
  I0901 13:04:00.861257 17 service_latency.go:363] Got endpoints: latency-svc-n66mk [738.51739ms]
  I0901 13:04:00.891372 17 service_latency.go:356] Created: latency-svc-9drcd
  I0901 13:04:00.911095 17 service_latency.go:363] Got endpoints: latency-svc-fr2r7 [750.467239ms]
  I0901 13:04:00.934585 17 service_latency.go:356] Created: latency-svc-wwwh7
  I0901 13:04:00.967946 17 service_latency.go:363] Got endpoints: latency-svc-vxxmt [745.275345ms]
  I0901 13:04:00.988421 17 service_latency.go:356] Created: latency-svc-l5d46
  I0901 13:04:01.008419 17 service_latency.go:363] Got endpoints: latency-svc-r4rmf [746.843971ms]
  I0901 13:04:01.030932 17 service_latency.go:356] Created: latency-svc-p2kn5
  I0901 13:04:01.063961 17 service_latency.go:363] Got endpoints: latency-svc-9hzlb [731.073398ms]
  I0901 13:04:01.094763 17 service_latency.go:356] Created: latency-svc-hlx5j
  I0901 13:04:01.112331 17 service_latency.go:363] Got endpoints: latency-svc-llv4q [736.551423ms]
  I0901 13:04:01.143142 17 service_latency.go:356] Created: latency-svc-mfvxf
  I0901 13:04:01.162482 17 service_latency.go:363] Got endpoints: latency-svc-mn2jh [750.500611ms]
  I0901 13:04:01.192942 17 service_latency.go:356] Created: latency-svc-q9hd2
  I0901 13:04:01.214402 17 service_latency.go:363] Got endpoints: latency-svc-c8rtb [752.831448ms]
  I0901 13:04:01.247636 17 service_latency.go:356] Created: latency-svc-vd9kl
  I0901 13:04:01.261372 17 service_latency.go:363] Got endpoints: latency-svc-hmvhl [749.570696ms]
  I0901 13:04:01.300570 17 service_latency.go:356] Created: latency-svc-ch7nx
  I0901 13:04:01.317805 17 service_latency.go:363] Got endpoints: latency-svc-lj26f [759.039869ms]
  I0901 13:04:01.338168 17 service_latency.go:356] Created: latency-svc-bp9f2
  I0901 13:04:01.358478 17 service_latency.go:363] Got endpoints: latency-svc-wvlsd [747.936486ms]
  I0901 13:04:01.385386 17 service_latency.go:356] Created: latency-svc-66mq2
  E0901 13:04:01.401945      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:01.409276 17 service_latency.go:363] Got endpoints: latency-svc-kmjpj [746.44058ms]
  I0901 13:04:01.438688 17 service_latency.go:356] Created: latency-svc-8fmqg
  I0901 13:04:01.469488 17 service_latency.go:363] Got endpoints: latency-svc-fvx2c [753.786196ms]
  I0901 13:04:01.490960 17 service_latency.go:356] Created: latency-svc-2ffbd
  I0901 13:04:01.519626 17 service_latency.go:363] Got endpoints: latency-svc-7wdkh [758.850825ms]
  I0901 13:04:01.545046 17 service_latency.go:356] Created: latency-svc-h98pn
  I0901 13:04:01.570396 17 service_latency.go:363] Got endpoints: latency-svc-mpgrm [753.712134ms]
  I0901 13:04:01.592721 17 service_latency.go:356] Created: latency-svc-2x5r5
  I0901 13:04:01.612625 17 service_latency.go:363] Got endpoints: latency-svc-9drcd [751.20707ms]
  I0901 13:04:01.637736 17 service_latency.go:356] Created: latency-svc-hdss6
  I0901 13:04:01.663048 17 service_latency.go:363] Got endpoints: latency-svc-wwwh7 [751.874237ms]
  I0901 13:04:01.687032 17 service_latency.go:356] Created: latency-svc-hksj4
  I0901 13:04:01.712930 17 service_latency.go:363] Got endpoints: latency-svc-l5d46 [743.588939ms]
  I0901 13:04:01.733219 17 service_latency.go:356] Created: latency-svc-wk759
  I0901 13:04:01.767679 17 service_latency.go:363] Got endpoints: latency-svc-p2kn5 [759.175066ms]
  I0901 13:04:01.793931 17 service_latency.go:356] Created: latency-svc-9nfbk
  I0901 13:04:01.811924 17 service_latency.go:363] Got endpoints: latency-svc-hlx5j [747.861824ms]
  I0901 13:04:01.842599 17 service_latency.go:356] Created: latency-svc-w7trn
  I0901 13:04:01.858806 17 service_latency.go:363] Got endpoints: latency-svc-mfvxf [746.382935ms]
  I0901 13:04:01.883158 17 service_latency.go:356] Created: latency-svc-q64lx
  I0901 13:04:01.915365 17 service_latency.go:363] Got endpoints: latency-svc-q9hd2 [752.789697ms]
  I0901 13:04:01.942369 17 service_latency.go:356] Created: latency-svc-mlnrj
  I0901 13:04:01.959849 17 service_latency.go:363] Got endpoints: latency-svc-vd9kl [745.305459ms]
  I0901 13:04:01.988594 17 service_latency.go:356] Created: latency-svc-dml6t
  I0901 13:04:02.012255 17 service_latency.go:363] Got endpoints: latency-svc-ch7nx [750.781171ms]
  I0901 13:04:02.041365 17 service_latency.go:356] Created: latency-svc-4k4p7
  I0901 13:04:02.067120 17 service_latency.go:363] Got endpoints: latency-svc-bp9f2 [748.301795ms]
  I0901 13:04:02.094239 17 service_latency.go:356] Created: latency-svc-qwgct
  I0901 13:04:02.113030 17 service_latency.go:363] Got endpoints: latency-svc-66mq2 [754.474888ms]
  I0901 13:04:02.147034 17 service_latency.go:356] Created: latency-svc-qb9p5
  I0901 13:04:02.165449 17 service_latency.go:363] Got endpoints: latency-svc-8fmqg [756.047893ms]
  I0901 13:04:02.193395 17 service_latency.go:356] Created: latency-svc-q4lzc
  I0901 13:04:02.211271 17 service_latency.go:363] Got endpoints: latency-svc-2ffbd [741.437167ms]
  I0901 13:04:02.255220 17 service_latency.go:356] Created: latency-svc-mlbxg
  I0901 13:04:02.269434 17 service_latency.go:363] Got endpoints: latency-svc-h98pn [748.367401ms]
  I0901 13:04:02.296665 17 service_latency.go:356] Created: latency-svc-5zpzh
  I0901 13:04:02.313422 17 service_latency.go:363] Got endpoints: latency-svc-2x5r5 [742.888059ms]
  I0901 13:04:02.332958 17 service_latency.go:356] Created: latency-svc-k2bfb
  I0901 13:04:02.370541 17 service_latency.go:363] Got endpoints: latency-svc-hdss6 [757.823589ms]
  I0901 13:04:02.396696 17 service_latency.go:356] Created: latency-svc-6khvh
  E0901 13:04:02.403619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:02.413318 17 service_latency.go:363] Got endpoints: latency-svc-hksj4 [750.117226ms]
  I0901 13:04:02.433967 17 service_latency.go:356] Created: latency-svc-4qbwb
  I0901 13:04:02.460367 17 service_latency.go:363] Got endpoints: latency-svc-wk759 [747.308264ms]
  I0901 13:04:02.485161 17 service_latency.go:356] Created: latency-svc-bc72c
  I0901 13:04:02.530639 17 service_latency.go:363] Got endpoints: latency-svc-9nfbk [762.260989ms]
  I0901 13:04:02.557984 17 service_latency.go:356] Created: latency-svc-8tqkj
  I0901 13:04:02.571073 17 service_latency.go:363] Got endpoints: latency-svc-w7trn [758.711911ms]
  I0901 13:04:02.594749 17 service_latency.go:356] Created: latency-svc-vfbxd
  I0901 13:04:02.609629 17 service_latency.go:363] Got endpoints: latency-svc-q64lx [749.841438ms]
  I0901 13:04:02.632942 17 service_latency.go:356] Created: latency-svc-kndkg
  I0901 13:04:02.663226 17 service_latency.go:363] Got endpoints: latency-svc-mlnrj [747.763399ms]
  I0901 13:04:02.690234 17 service_latency.go:356] Created: latency-svc-bsm94
  I0901 13:04:02.710195 17 service_latency.go:363] Got endpoints: latency-svc-dml6t [749.824326ms]
  I0901 13:04:02.739012 17 service_latency.go:356] Created: latency-svc-mwdhc
  I0901 13:04:02.761339 17 service_latency.go:363] Got endpoints: latency-svc-4k4p7 [748.499067ms]
  I0901 13:04:02.783058 17 service_latency.go:356] Created: latency-svc-r5grg
  I0901 13:04:02.812603 17 service_latency.go:363] Got endpoints: latency-svc-qwgct [745.384676ms]
  I0901 13:04:02.840142 17 service_latency.go:356] Created: latency-svc-77c4k
  I0901 13:04:02.863071 17 service_latency.go:363] Got endpoints: latency-svc-qb9p5 [749.948485ms]
  I0901 13:04:02.909106 17 service_latency.go:356] Created: latency-svc-75g9v
  I0901 13:04:02.921006 17 service_latency.go:363] Got endpoints: latency-svc-q4lzc [755.440944ms]
  I0901 13:04:02.944738 17 service_latency.go:356] Created: latency-svc-n7b4l
  I0901 13:04:02.959410 17 service_latency.go:363] Got endpoints: latency-svc-mlbxg [748.00327ms]
  I0901 13:04:03.013518 17 service_latency.go:363] Got endpoints: latency-svc-5zpzh [743.953391ms]
  I0901 13:04:03.061684 17 service_latency.go:363] Got endpoints: latency-svc-k2bfb [748.126473ms]
  I0901 13:04:03.120963 17 service_latency.go:363] Got endpoints: latency-svc-6khvh [750.320652ms]
  I0901 13:04:03.173562 17 service_latency.go:363] Got endpoints: latency-svc-4qbwb [760.148003ms]
  I0901 13:04:03.218353 17 service_latency.go:363] Got endpoints: latency-svc-bc72c [757.243332ms]
  I0901 13:04:03.274162 17 service_latency.go:363] Got endpoints: latency-svc-8tqkj [743.407361ms]
  I0901 13:04:03.319869 17 service_latency.go:363] Got endpoints: latency-svc-vfbxd [748.685605ms]
  I0901 13:04:03.364106 17 service_latency.go:363] Got endpoints: latency-svc-kndkg [754.360794ms]
  E0901 13:04:03.404017      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:03.410539 17 service_latency.go:363] Got endpoints: latency-svc-bsm94 [745.032417ms]
  I0901 13:04:03.460596 17 service_latency.go:363] Got endpoints: latency-svc-mwdhc [750.264525ms]
  I0901 13:04:03.511691 17 service_latency.go:363] Got endpoints: latency-svc-r5grg [750.107774ms]
  I0901 13:04:03.565200 17 service_latency.go:363] Got endpoints: latency-svc-77c4k [752.211335ms]
  I0901 13:04:03.624603 17 service_latency.go:363] Got endpoints: latency-svc-75g9v [761.188474ms]
  I0901 13:04:03.661220 17 service_latency.go:363] Got endpoints: latency-svc-n7b4l [740.110689ms]
  I0901 13:04:03.661758 17 service_latency.go:115] Latencies: [55.814148ms 76.946145ms 94.476223ms 104.506966ms 127.322253ms 147.515866ms 179.556199ms 194.728129ms 260.379919ms 268.489684ms 296.25119ms 319.687543ms 375.544405ms 379.174224ms 383.041765ms 384.690381ms 390.767582ms 394.446944ms 405.624678ms 414.215367ms 415.970889ms 418.827501ms 419.121265ms 420.316318ms 421.484093ms 421.715962ms 422.266842ms 424.999095ms 429.566255ms 430.651443ms 432.169086ms 433.153753ms 433.427473ms 435.677628ms 438.264895ms 439.879621ms 440.288488ms 442.683649ms 442.780091ms 446.226142ms 447.241557ms 447.328709ms 448.068321ms 448.880725ms 449.945423ms 455.394059ms 455.424587ms 457.608876ms 458.195712ms 459.442057ms 460.231245ms 462.717399ms 463.376924ms 464.746496ms 469.39148ms 473.705502ms 477.541738ms 483.183949ms 484.573805ms 485.303385ms 486.138704ms 490.308527ms 506.795604ms 511.016723ms 513.725467ms 514.180408ms 529.792287ms 533.481869ms 538.998801ms 542.565055ms 545.204609ms 554.84774ms 558.703647ms 559.199336ms 561.139095ms 562.671777ms 571.22717ms 572.587929ms 573.02889ms 573.821148ms 578.436618ms 593.143626ms 593.736774ms 599.255411ms 601.085163ms 602.602559ms 627.575051ms 631.406957ms 633.45758ms 636.572071ms 639.286687ms 639.758859ms 644.63115ms 657.354798ms 662.491863ms 673.773626ms 686.85364ms 692.312747ms 715.168549ms 720.235517ms 731.073398ms 733.367069ms 733.546281ms 734.979378ms 735.267155ms 736.551423ms 737.350633ms 738.51739ms 738.639818ms 740.110689ms 741.437167ms 741.7943ms 742.040837ms 742.888059ms 743.143551ms 743.407361ms 743.588939ms 743.953391ms 744.637716ms 744.694942ms 745.032417ms 745.275345ms 745.305459ms 745.35867ms 745.384676ms 745.401689ms 745.760939ms 745.82737ms 746.382935ms 746.44058ms 746.843971ms 746.884613ms 747.011419ms 747.308264ms 747.763399ms 747.861824ms 747.86351ms 747.936486ms 748.00327ms 748.043146ms 748.126473ms 748.183842ms 748.275386ms 748.301795ms 748.367401ms 748.499067ms 748.588249ms 748.685605ms 749.570696ms 749.824326ms 749.841438ms 749.948485ms 750.107774ms 750.117226ms 750.264525ms 750.320652ms 750.467239ms 750.500611ms 750.781171ms 751.045736ms 751.20707ms 751.874237ms 752.211335ms 752.789697ms 752.831448ms 753.712134ms 753.786196ms 754.360794ms 754.474888ms 754.578523ms 755.440944ms 756.021344ms 756.047893ms 757.243332ms 757.823589ms 758.711911ms 758.850825ms 759.039869ms 759.175066ms 760.148003ms 760.429637ms 761.188474ms 761.664727ms 762.260989ms 763.678238ms 768.821107ms 771.71437ms 773.5367ms 774.818003ms 799.048976ms 800.102196ms 810.54844ms 810.995411ms 817.316452ms 847.124971ms 883.699049ms 911.930577ms 918.129735ms 950.163826ms 951.628914ms]
  I0901 13:04:03.661830 17 service_latency.go:119] 50 %ile: 731.073398ms
  I0901 13:04:03.661890 17 service_latency.go:120] 90 %ile: 760.429637ms
  I0901 13:04:03.661920 17 service_latency.go:121] 99 %ile: 950.163826ms
  I0901 13:04:03.661950 17 service_latency.go:122] Total sample count: 200
  I0901 13:04:03.664130 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6385" for this suite. @ 09/01/25 13:04:03.679
• [12.894 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/01/25 13:04:03.7
  I0901 13:04:03.700176 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 13:04:03.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:03.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:03.74
  STEP: apply creating a deployment @ 09/01/25 13:04:03.746
  I0901 13:04:03.794529 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5515" for this suite. @ 09/01/25 13:04:03.804
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/01/25 13:04:03.826
  I0901 13:04:03.826168 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 13:04:03.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:03.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:03.862
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 13:04:03.869
  E0901 13:04:04.403784      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:05.404009      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:06.404981      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:07.407900      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:04:07.95
  I0901 13:04:07.965556 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-824de188-171d-4d76-a24c-668835473c9c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 13:04:08.032
  I0901 13:04:08.083434 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1181" for this suite. @ 09/01/25 13:04:08.101
• [4.300 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1426
  STEP: Creating a kubernetes client @ 09/01/25 13:04:08.128
  I0901 13:04:08.128620 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 13:04:08.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:08.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:08.171
  I0901 13:04:08.179009 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 create -f -'
  E0901 13:04:08.405397      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:08.537536 17 builder.go:156] stderr: ""
  I0901 13:04:08.537617 17 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  I0901 13:04:08.538131 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 create -f -'
  I0901 13:04:09.036918 17 builder.go:156] stderr: ""
  I0901 13:04:09.037000 17 builder.go:157] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 13:04:09.037
  E0901 13:04:09.406048      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:10.054033 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 13:04:10.054106 17 framework.go:738] Found 0 / 1
  E0901 13:04:10.408060      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:11.050450 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 13:04:11.050659 17 framework.go:738] Found 0 / 1
  E0901 13:04:11.407896      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:12.050071 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 13:04:12.050181 17 framework.go:738] Found 1 / 1
  I0901 13:04:12.050253 17 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 13:04:12.153137 17 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0901 13:04:12.153247 17 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 13:04:12.155709 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 describe pod agnhost-primary-f2qq9'
  E0901 13:04:12.408332      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:12.469440 17 builder.go:156] stderr: ""
  I0901 13:04:12.470199 17 builder.go:157] stdout: "Name:             agnhost-primary-f2qq9\nNamespace:        kubectl-8202\nPriority:         0\nService Account:  default\nNode:             wohnahxathu9-2/192.168.121.40\nStart Time:       Mon, 01 Sep 2025 13:04:08 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.65.251\nIPs:\n  IP:           10.233.65.251\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://7d74da27c41fdf75921cfae8e404a9424153084b10b28acfe3c105b202cefee8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.56\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:30ffacb713aad721881f1c11a768df228bfad3dc366d268e82b02fc43511dfa4\n    Port:           6379/TCP (agnhost-server)\n    Host Port:      0/TCP (agnhost-server)\n    State:          Running\n      Started:      Mon, 01 Sep 2025 13:04:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bfj5d (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bfj5d:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-8202/agnhost-primary-f2qq9 to wohnahxathu9-2\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.56\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0901 13:04:12.470892 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 describe rc agnhost-primary'
  I0901 13:04:12.750169 17 builder.go:156] stderr: ""
  I0901 13:04:12.750323 17 builder.go:157] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8202\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.56\n    Port:          6379/TCP (agnhost-server)\n    Host Port:     0/TCP (agnhost-server)\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  4s    replication-controller  Created pod: agnhost-primary-f2qq9\n"
  I0901 13:04:12.750589 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 describe service agnhost-primary'
  I0901 13:04:13.052101 17 builder.go:156] stderr: ""
  I0901 13:04:13.052332 17 builder.go:157] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8202\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.43.69\nIPs:                      10.233.43.69\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                <none>\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0901 13:04:13.081058 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 describe node wohnahxathu9-1'
  E0901 13:04:13.411077      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:13.493313 17 builder.go:156] stderr: ""
  I0901 13:04:13.493629 17 builder.go:157] stdout: "Name:               wohnahxathu9-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=wohnahxathu9-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 01 Sep 2025 10:44:53 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  wohnahxathu9-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 01 Sep 2025 13:04:09 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 01 Sep 2025 10:48:12 +0000   Mon, 01 Sep 2025 10:48:12 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Mon, 01 Sep 2025 13:02:19 +0000   Mon, 01 Sep 2025 11:02:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 01 Sep 2025 13:02:19 +0000   Mon, 01 Sep 2025 11:02:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 01 Sep 2025 13:02:19 +0000   Mon, 01 Sep 2025 11:02:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 01 Sep 2025 13:02:19 +0000   Mon, 01 Sep 2025 11:02:00 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.57\n  Hostname:    wohnahxathu9-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8133124Ki\n  pods:               256\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283460Ki\n  pods:               256\nSystem Info:\n  Machine ID:                 269afcd8934642009233cdeb298066a9\n  System UUID:                269afcd8-9346-4200-9233-cdeb298066a9\n  Boot ID:                    8d3b3b55-8134-43b9-a907-4bc4e6157d34\n  Kernel Version:             6.14.0-29-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.34.0\n  Kubelet Version:            v1.34.0\n  Kube-Proxy Version:         \nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-node-init-8rnck                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         136m\n  kube-system                 cilium-pvcjx                                               100m (6%)     0 (0%)      10Mi (0%)        0 (0%)         136m\n  kube-system                 coredns-66bc5c9577-pxnpq                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     139m\n  kube-system                 kube-apiserver-wohnahxathu9-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         139m\n  kube-system                 kube-controller-manager-wohnahxathu9-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         139m\n  kube-system                 kube-proxy-2mpj6                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         139m\n  kube-system                 kube-scheduler-wohnahxathu9-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         139m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-637529a452854b3f-dnk9z    0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (53%)  0 (0%)\n  memory             180Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0901 13:04:13.494530 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-8202 describe namespace kubectl-8202'
  I0901 13:04:13.795431 17 builder.go:156] stderr: ""
  I0901 13:04:13.796154 17 builder.go:157] stdout: "Name:         kubectl-8202\nLabels:       e2e-framework=kubectl\n              e2e-run=697499b5-95b0-4c8e-895f-fd360306875f\n              kubernetes.io/metadata.name=kubectl-8202\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0901 13:04:13.796848 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8202" for this suite. @ 09/01/25 13:04:13.813
• [5.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:603
  STEP: Creating a kubernetes client @ 09/01/25 13:04:13.851
  I0901 13:04:13.852045 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 13:04:13.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:13.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:13.933
  E0901 13:04:14.413583      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:15.413015      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:16.414619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:17.414689      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:18.027399 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5061" for this suite. @ 09/01/25 13:04:18.047
• [4.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:206
  STEP: Creating a kubernetes client @ 09/01/25 13:04:18.072
  I0901 13:04:18.072679 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 13:04:18.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:18.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:18.142
  STEP: Setting up server cert @ 09/01/25 13:04:18.208
  E0901 13:04:18.415224      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:19.416415      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:20.417328      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 13:04:20.873
  STEP: Deploying the webhook pod @ 09/01/25 13:04:20.893
  STEP: Wait for the deployment to be ready @ 09/01/25 13:04:20.938
  I0901 13:04:21.000903 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 13:04:21.418020      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:22.418447      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:23.046381 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 13, 4, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 4, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 4, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 4, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 13:04:23.418796      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:24.419215      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:04:25.06
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:04:25.1
  E0901 13:04:25.420114      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:26.101996 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 13:04:26.119
  STEP: create a pod @ 09/01/25 13:04:26.199
  E0901 13:04:26.420520      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:27.420937      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/01/25 13:04:28.262
  I0901 13:04:28.263065 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=webhook-3269 attach --namespace=webhook-3269 to-be-attached-pod -i -c=container1'
  E0901 13:04:28.421946      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:28.585617 17 builder.go:145] rc: 1
  I0901 13:04:28.721796 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3269" for this suite. @ 09/01/25 13:04:28.743
  STEP: Destroying namespace "webhook-markers-5662" for this suite. @ 09/01/25 13:04:28.775
• [10.726 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:484
  STEP: Creating a kubernetes client @ 09/01/25 13:04:28.8
  I0901 13:04:28.801165 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 13:04:28.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:28.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:28.841
  STEP: Creating an indexed job with successPolicy @ 09/01/25 13:04:28.85
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/01/25 13:04:28.879
  E0901 13:04:29.422765      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:30.424136      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:31.428151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:32.425792      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/01/25 13:04:32.916
  STEP: Verifying that the job status to ensure correct final state @ 09/01/25 13:04:32.934
  I0901 13:04:32.943613 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7185" for this suite. @ 09/01/25 13:04:32.962
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/01/25 13:04:32.993
  I0901 13:04:32.993168 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 13:04:32.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:33.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:33.041
  STEP: creating a replication controller @ 09/01/25 13:04:33.052
  I0901 13:04:33.054269 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 create -f -'
  E0901 13:04:33.426198      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:33.460540 17 builder.go:156] stderr: ""
  I0901 13:04:33.461021 17 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 13:04:33.461
  I0901 13:04:33.462540 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 13:04:33.682066 17 builder.go:156] stderr: ""
  I0901 13:04:33.682145 17 builder.go:157] stdout: "update-demo-nautilus-2zlnb update-demo-nautilus-z79rs "
  I0901 13:04:33.682889 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods update-demo-nautilus-2zlnb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 13:04:33.967395 17 builder.go:156] stderr: ""
  I0901 13:04:33.967769 17 builder.go:157] stdout: ""
  I0901 13:04:33.967818 17 kubectl.go:2537] update-demo-nautilus-2zlnb is created but not running
  E0901 13:04:34.427125      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:35.428363      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:36.429030      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:37.428953      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:38.429102      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:38.969429 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 13:04:39.192945 17 builder.go:156] stderr: ""
  I0901 13:04:39.193081 17 builder.go:157] stdout: "update-demo-nautilus-2zlnb update-demo-nautilus-z79rs "
  I0901 13:04:39.193543 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods update-demo-nautilus-2zlnb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 13:04:39.390826 17 builder.go:156] stderr: ""
  I0901 13:04:39.391779 17 builder.go:157] stdout: "true"
  I0901 13:04:39.392246 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods update-demo-nautilus-2zlnb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0901 13:04:39.430423      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:39.576430 17 builder.go:156] stderr: ""
  I0901 13:04:39.576960 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 13:04:39.577226 17 kubectl.go:2428] validating pod update-demo-nautilus-2zlnb
  I0901 13:04:39.601590 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 13:04:39.602186 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 13:04:39.602232 17 kubectl.go:2555] update-demo-nautilus-2zlnb is verified up and running
  I0901 13:04:39.602714 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods update-demo-nautilus-z79rs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 13:04:39.789068 17 builder.go:156] stderr: ""
  I0901 13:04:39.789223 17 builder.go:157] stdout: "true"
  I0901 13:04:39.789929 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods update-demo-nautilus-z79rs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 13:04:39.961932 17 builder.go:156] stderr: ""
  I0901 13:04:39.962393 17 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 13:04:39.962471 17 kubectl.go:2428] validating pod update-demo-nautilus-z79rs
  I0901 13:04:39.983778 17 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0901 13:04:39.984151 17 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 13:04:39.984231 17 kubectl.go:2555] update-demo-nautilus-z79rs is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 13:04:39.984
  I0901 13:04:39.984746 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 delete --grace-period=0 --force -f -'
  I0901 13:04:40.193266 17 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 13:04:40.193478 17 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-6183 namespace\n"
  I0901 13:04:40.195397 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get rc,svc -l name=update-demo --no-headers'
  E0901 13:04:40.430430      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:40.455140 17 builder.go:156] stderr: "No resources found in kubectl-6183 namespace.\n"
  I0901 13:04:40.455218 17 builder.go:157] stdout: ""
  I0901 13:04:40.455441 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-6183 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 13:04:40.659889 17 builder.go:156] stderr: ""
  I0901 13:04:40.662465 17 builder.go:157] stdout: ""
  I0901 13:04:40.662972 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6183" for this suite. @ 09/01/25 13:04:40.673
• [7.695 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/01/25 13:04:40.689
  I0901 13:04:40.689755 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 13:04:40.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:40.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:40.791
  STEP: Creating a test namespace @ 09/01/25 13:04:40.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:40.835
  STEP: Creating a pod in the namespace @ 09/01/25 13:04:40.84
  STEP: Waiting for the pod to have running status @ 09/01/25 13:04:40.854
  E0901 13:04:41.432026      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:42.431176      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/01/25 13:04:42.887
  STEP: Waiting for the namespace to be removed. @ 09/01/25 13:04:42.913
  E0901 13:04:43.431354      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:44.432268      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:45.433396      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:46.434008      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:47.434275      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:48.434521      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:49.435707      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:50.436497      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:51.436912      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:52.437260      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:53.437645      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:54.439135      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/01/25 13:04:54.926
  STEP: Verifying there are no pods in the namespace @ 09/01/25 13:04:54.961
  I0901 13:04:54.968932 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4925" for this suite. @ 09/01/25 13:04:54.985
  STEP: Destroying namespace "nsdeletetest-5672" for this suite. @ 09/01/25 13:04:55.004
  I0901 13:04:55.012800 17 framework.go:370] Namespace nsdeletetest-5672 was already deleted
  STEP: Destroying namespace "nsdeletetest-4264" for this suite. @ 09/01/25 13:04:55.012
• [14.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/01/25 13:04:55.035
  I0901 13:04:55.035126 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 13:04:55.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:04:55.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:04:55.08
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/01/25 13:04:55.089
  I0901 13:04:55.091258 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  E0901 13:04:55.440011      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:56.440911      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:57.441795      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:04:57.661328 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  E0901 13:04:58.441972      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:04:59.443015      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:00.443200      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:01.443146      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:02.444005      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:03.444489      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:04.445367      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:05.445442      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:06.446178      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:07.446202      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:08.372607 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7568" for this suite. @ 09/01/25 13:05:08.4
• [13.386 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:241
  STEP: Creating a kubernetes client @ 09/01/25 13:05:08.419
  I0901 13:05:08.419660 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 13:05:08.423
  E0901 13:05:08.447798      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:08.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:08.459
  STEP: Counting existing ResourceQuota @ 09/01/25 13:05:08.467
  E0901 13:05:09.447787      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:10.447745      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:11.449148      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:12.450196      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:13.451478      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 13:05:13.485
  STEP: Ensuring resource quota status is calculated @ 09/01/25 13:05:13.503
  E0901 13:05:14.453253      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:15.451967      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:15.530552 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0062b37c0>: 
          metadata:
            creationTimestamp: "2025-09-01T13:05:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:13Z"
            name: test-quota
            namespace: resourcequota-6603
            resourceVersion: "47030"
            uid: 8e6062b0-a590-495b-ac8f-6387eaf9e242
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Pod that fits quota @ 09/01/25 13:05:15.533
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/01/25 13:05:15.576
  I0901 13:05:15.591672 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00627f7c0>: 
          metadata:
            creationTimestamp: "2025-09-01T13:05:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:15Z"
            name: test-quota
            namespace: resourcequota-6603
            resourceVersion: "47040"
            uid: 8e6062b0-a590-495b-ac8f-6387eaf9e242
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/01/25 13:05:15.597
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/01/25 13:05:15.603
  STEP: Ensuring a pod cannot update its resource requirements @ 09/01/25 13:05:15.607
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/01/25 13:05:15.615
  I0901 13:05:15.628525 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0063d4dc0>: 
          metadata:
            creationTimestamp: "2025-09-01T13:05:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:15Z"
            name: test-quota
            namespace: resourcequota-6603
            resourceVersion: "47040"
            uid: 8e6062b0-a590-495b-ac8f-6387eaf9e242
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting the pod @ 09/01/25 13:05:15.631
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 13:05:15.664
  I0901 13:05:15.676810 17 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00631aa00>: 
          metadata:
            creationTimestamp: "2025-09-01T13:05:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-01T13:05:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-01T13:05:15Z"
            name: test-quota
            namespace: resourcequota-6603
            resourceVersion: "47046"
            uid: 8e6062b0-a590-495b-ac8f-6387eaf9e242
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0901 13:05:15.678344 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6603" for this suite. @ 09/01/25 13:05:15.689
• [7.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/01/25 13:05:15.713
  I0901 13:05:15.714171 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 13:05:15.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:15.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:15.75
  STEP: Creating a LimitRange @ 09/01/25 13:05:15.759
  STEP: Setting up watch @ 09/01/25 13:05:15.76
  STEP: Submitting a LimitRange @ 09/01/25 13:05:15.869
  STEP: Verifying LimitRange creation was observed @ 09/01/25 13:05:15.893
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/01/25 13:05:15.893
  I0901 13:05:15.906761 17 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 13:05:15.906944 17 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/01/25 13:05:15.906
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/01/25 13:05:15.925
  I0901 13:05:15.938886 17 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 13:05:15.938981 17 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/01/25 13:05:15.939
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/01/25 13:05:15.964
  I0901 13:05:15.972971 17 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0901 13:05:15.973048 17 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/01/25 13:05:15.973
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 13:05:15.977
  STEP: Updating a LimitRange @ 09/01/25 13:05:15.992
  STEP: Verifying LimitRange updating is effective @ 09/01/25 13:05:16.007
  E0901 13:05:16.452181      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:17.452952      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/01/25 13:05:18.021
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 13:05:18.045
  STEP: Deleting a LimitRange @ 09/01/25 13:05:18.056
  STEP: Verifying the LimitRange was deleted @ 09/01/25 13:05:18.08
  E0901 13:05:18.454037      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:19.455263      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:20.456104      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:21.456794      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:22.457335      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:23.097137 17 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/01/25 13:05:23.097
  I0901 13:05:23.127998 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9868" for this suite. @ 09/01/25 13:05:23.148
• [7.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/01/25 13:05:23.174
  I0901 13:05:23.174371 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 13:05:23.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:05:23.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:05:23.224
  STEP: Creating pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761 @ 09/01/25 13:05:23.233
  E0901 13:05:23.458096      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:24.458953      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 13:05:25.278
  I0901 13:05:25.285230 17 container_probe.go:1749] Initial restart count of pod busybox-6ff535b2-a330-480f-a451-74ba151822ca is 0
  I0901 13:05:25.298564 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:25.459390      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:26.460089      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:27.310733 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:27.460677      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:28.461470      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:29.324030 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:29.461788      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:30.461937      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:31.338054 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:31.462596      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:32.462266      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:33.351892 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:33.462622      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:34.462893      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:35.372018 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:35.463716      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:36.464587      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:37.385624 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:37.464638      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:38.464726      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:39.400505 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:39.465397      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:40.466735      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:41.411453 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:41.467018      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:42.467390      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:43.431747 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:43.468233      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:44.468750      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:45.450473 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:45.469008      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:46.468998      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:47.465954 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:47.470358      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:48.471435      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:49.472090      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:49.483917 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:50.473075      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:51.474100      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:51.500569 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:52.474686      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:53.475395      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:53.520994 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:54.475722      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:55.476888      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:55.536107 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:56.477167      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:57.477716      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:57.552091 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:05:58.478083      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:05:59.478699      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:05:59.567259 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:00.478967      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:01.479382      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:01.614873 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:02.479691      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:03.480013      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:03.631337 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:04.480530      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:05.481511      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:05.651501 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:06.482072      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:07.482126      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:07.667839 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:08.483461      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:09.483713      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:09.686361 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:10.484157      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:11.484623      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:11.698892 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:12.484911      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:13.485018      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:13.716641 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  E0901 13:06:14.485902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:15.486257      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:15.727145 17 container_probe.go:1759] Get pod busybox-6ff535b2-a330-480f-a451-74ba151822ca in namespace container-probe-6761
  I0901 13:06:15.727354 17 container_probe.go:1763] Restart count of pod container-probe-6761/busybox-6ff535b2-a330-480f-a451-74ba151822ca is now 1 (50.441193311s elapsed)
  STEP: deleting the pod @ 09/01/25 13:06:15.727
  I0901 13:06:15.777025 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6761" for this suite. @ 09/01/25 13:06:15.795
• [52.644 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/01/25 13:06:15.822
  I0901 13:06:15.822713 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename secrets @ 09/01/25 13:06:15.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:15.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:15.862
  STEP: Creating secret with name secret-test-4a2d3cec-2f72-41d3-9570-1b9276b7424e @ 09/01/25 13:06:15.867
  STEP: Creating a pod to test consume secrets @ 09/01/25 13:06:15.879
  E0901 13:06:16.490536      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:17.491001      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:18.492099      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:19.492600      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:06:19.937
  I0901 13:06:19.949117 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod pod-secrets-f8c7055e-4b19-4d5c-866b-62fe947a286c container secret-env-test: <nil>
  STEP: delete the pod @ 09/01/25 13:06:20.001
  I0901 13:06:20.053154 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-633" for this suite. @ 09/01/25 13:06:20.063
• [4.260 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:140
  STEP: Creating a kubernetes client @ 09/01/25 13:06:20.082
  I0901 13:06:20.082721 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 13:06:20.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:20.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:20.122
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 13:06:20.165
  E0901 13:06:20.492991      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:21.493666      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:22.494811      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:23.495927      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 13:06:24.265
  E0901 13:06:24.496148      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:25.497005      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:26.497933      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:27.498747      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/01/25 13:06:28.369
  STEP: delete the pod with lifecycle hook @ 09/01/25 13:06:28.39
  E0901 13:06:28.498932      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:29.500775      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:30.440092 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-594" for this suite. @ 09/01/25 13:06:30.455
• [10.389 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/01/25 13:06:30.473
  I0901 13:06:30.473252 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 13:06:30.475
  E0901 13:06:30.500450      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:30.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:30.525
  STEP: Creating configMap with name projected-configmap-test-volume-map-32a53127-502c-45a9-84de-7357c5e725a1 @ 09/01/25 13:06:30.535
  STEP: Creating a pod to test consume configMaps @ 09/01/25 13:06:30.547
  E0901 13:06:31.500602      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:32.501265      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:33.501833      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:34.503105      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:06:34.609
  I0901 13:06:34.622181 17 output.go:207] Trying to get logs from node wohnahxathu9-3 pod pod-projected-configmaps-faa3caa6-5364-4f9c-b40f-504ab044cf78 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 13:06:34.661
  I0901 13:06:34.710536 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5900" for this suite. @ 09/01/25 13:06:34.724
• [4.296 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:565
  STEP: Creating a kubernetes client @ 09/01/25 13:06:34.769
  I0901 13:06:34.769607 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 13:06:34.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:34.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:34.812
  STEP: Setting up server cert @ 09/01/25 13:06:34.859
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 13:06:35.32
  STEP: Deploying the webhook pod @ 09/01/25 13:06:35.339
  STEP: Wait for the deployment to be ready @ 09/01/25 13:06:35.383
  I0901 13:06:35.398089 17 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 13:06:35.502560      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:36.502645      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:06:37.439
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:06:37.464
  E0901 13:06:37.503426      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:38.464982 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0901 13:06:38.504062      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/01/25 13:06:38.654
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 13:06:38.725
  STEP: Deleting the collection of validation webhooks @ 09/01/25 13:06:38.778
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 13:06:38.874
  I0901 13:06:38.989216 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3146" for this suite. @ 09/01/25 13:06:39.005
  STEP: Destroying namespace "webhook-markers-4096" for this suite. @ 09/01/25 13:06:39.027
• [4.277 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/01/25 13:06:39.049
  I0901 13:06:39.049104 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 13:06:39.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:39.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:39.093
  STEP: Read namespace status @ 09/01/25 13:06:39.1
  I0901 13:06:39.110528 17 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/01/25 13:06:39.11
  I0901 13:06:39.126102 17 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/01/25 13:06:39.126
  I0901 13:06:39.144560 17 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0901 13:06:39.145067 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1104" for this suite. @ 09/01/25 13:06:39.155
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/01/25 13:06:39.178
  I0901 13:06:39.178134 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 13:06:39.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:39.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:39.215
  STEP: Performing setup for networking test in namespace pod-network-test-858 @ 09/01/25 13:06:39.22
  STEP: creating a selector @ 09/01/25 13:06:39.22
  STEP: Creating the service pods in kubernetes @ 09/01/25 13:06:39.22
  I0901 13:06:39.221026 17 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 13:06:39.506017      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:40.505980      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:41.506606      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:42.507420      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:43.508391      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:44.508253      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:45.508933      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:46.509060      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:47.509902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:48.510614      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:49.511830      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:50.512619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:51.512798      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:52.513764      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:53.515245      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 13:06:53.525
  E0901 13:06:54.514736      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:55.515441      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:06:55.684932 17 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 13:06:55.685097 17 utils.go:496] Going to poll 10.233.64.197 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 13:06:55.691967 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.197:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-858 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 13:06:55.692060 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 13:06:55.692160 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-858/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.197%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 13:06:55.880894 17 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 13:06:55.880974 17 utils.go:496] Going to poll 10.233.65.239 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 13:06:55.889959 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.239:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-858 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 13:06:55.890451 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 13:06:55.890890 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-858/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.239%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 13:06:56.020615 17 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 13:06:56.020708 17 utils.go:496] Going to poll 10.233.66.17 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 13:06:56.030113 17 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.17:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-858 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 13:06:56.030198 17 exec_util.go:68] ExecWithOptions: Clientset creation
  I0901 13:06:56.030359 17 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-858/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.17%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 13:06:56.166788 17 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 13:06:56.167259 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-858" for this suite. @ 09/01/25 13:06:56.188
• [17.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:605
  STEP: Creating a kubernetes client @ 09/01/25 13:06:56.215
  I0901 13:06:56.215113 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 13:06:56.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:06:56.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:06:56.294
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/01/25 13:06:56.303
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/01/25 13:06:56.328
  E0901 13:06:56.516364      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:57.516644      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:58.517194      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:06:59.518040      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:00.519066      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:01.519732      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:02.520457      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:03.521593      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:04.522088      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:05.522638      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:06.522842      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:07.523779      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:08.524017      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:09.524368      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:10.524612      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:11.524647      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:12.525661      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:13.526984      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:14.527684      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:15.528243      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:16.529367      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:17.530116      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:18.530639      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:19.531085      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/01/25 13:07:20.525
  E0901 13:07:20.532065      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:20.537477 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4786" for this suite. @ 09/01/25 13:07:20.56
• [24.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/01/25 13:07:20.59
  I0901 13:07:20.590362 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 13:07:20.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:07:20.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:07:20.636
  STEP: fetching the /apis discovery document @ 09/01/25 13:07:20.643
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/01/25 13:07:20.646
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 13:07:20.646
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/01/25 13:07:20.646
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/01/25 13:07:20.649
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 13:07:20.649
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 13:07:20.653
  I0901 13:07:20.654401 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-694" for this suite. @ 09/01/25 13:07:20.67
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/01/25 13:07:20.691
  I0901 13:07:20.691995 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 13:07:20.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:07:20.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:07:20.726
  I0901 13:07:20.804178 17 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0901 13:07:20.815772 17 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0901 13:07:20.903395 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 13:07:20.903508 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  E0901 13:07:21.555834      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:21.874793 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 13:07:21.874941 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  E0901 13:07:22.556113      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:22.848253 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 13:07:22.848439 17 fixtures.go:131] Node wohnahxathu9-3 is running 0 daemon pod, expected 1
  E0901 13:07:23.556521      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:23.848527 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 13:07:23.848747 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0901 13:07:23.850037 17 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0901 13:07:23.885711 17 daemon_set.go:102] Updating DaemonSet daemon-set
  E0901 13:07:24.556773      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:24.918773 17 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0901 13:07:24.940634 17 daemon_set.go:102] Updating DaemonSet daemon-set
  I0901 13:07:24.940741 17 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0901 13:07:24.951638 17 daemon_set.go:1193] Wrong image for pod: daemon-set-xfwkq. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0901 13:07:24.951766 17 daemon_set.go:1198] Pod daemon-set-xfwkq is not available
  E0901 13:07:25.556901      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:26.557350      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:27.557789      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:28.558678      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:29.558722      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:30.558986      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:31.559493      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:32.559621      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:33.560051      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:33.954119 17 daemon_set.go:1198] Pod daemon-set-68mbw is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 13:07:33.993
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2221, will wait for the garbage collector to delete the pods @ 09/01/25 13:07:33.993
  I0901 13:07:34.068139 17 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.044853ms
  I0901 13:07:34.168737 17 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.565052ms
  E0901 13:07:34.560822      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:35.561428      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:35.983923 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 13:07:35.984047 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 13:07:35.999823 17 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48013"},"items":null}

  I0901 13:07:36.011607 17 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48013"},"items":null}

  I0901 13:07:36.069880 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2221" for this suite. @ 09/01/25 13:07:36.081
• [15.418 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/01/25 13:07:36.111
  I0901 13:07:36.111259 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename init-container @ 09/01/25 13:07:36.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:07:36.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:07:36.161
  STEP: creating the pod @ 09/01/25 13:07:36.169
  I0901 13:07:36.169939 17 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0901 13:07:36.562195      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:37.562932      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:38.563118      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:39.563373      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:40.564501      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:07:40.906795 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4459" for this suite. @ 09/01/25 13:07:40.918
• [4.831 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/01/25 13:07:40.942
  I0901 13:07:40.942792 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 13:07:40.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:07:40.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:07:40.975
  I0901 13:07:41.007913 17 service_accounts.go:646] created pod
  E0901 13:07:41.564777      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:42.565827      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:43.566506      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:44.597195      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:07:45.06
  E0901 13:07:45.574386      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:46.576644      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:47.575643      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:48.577902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:49.578496      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:50.584153      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:51.579422      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:52.580719      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:53.580355      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:54.581528      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:55.583706      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:56.582841      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:57.597558      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:58.589562      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:07:59.587809      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:00.589533      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:01.589034      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:02.591685      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:03.590032      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:04.590791      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:05.590873      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:06.592111      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:07.596211      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:08.593062      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:09.593922      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:10.594526      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:11.595576      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:12.595908      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:13.595946      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:14.596762      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:15.061392 17 service_accounts.go:652] polling logs
  I0901 13:08:15.130020 17 service_accounts.go:662] Pod logs: 
  I0901 13:07:42.446841       1 log.go:245] OK: Got token
  I0901 13:07:42.448389       1 log.go:245] validating with in-cluster discovery
  I0901 13:07:42.449444       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0901 13:07:42.449498       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-118:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000103e8), NotBefore:(*jwt.NumericDate)(0xc0000104b0), IssuedAt:(*jwt.NumericDate)(0xc0000103f8), ID:"e6f484a0-23ea-48a2-81bd-2c587adce768"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-118", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"422e9a8a-ee08-4b63-b9ea-027d84ef507c"}}}
  I0901 13:07:42.487421       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0901 13:07:42.512832       1 log.go:245] OK: Validated signature on JWT
  I0901 13:07:42.512977       1 log.go:245] OK: Got valid claims from token!
  I0901 13:07:42.513030       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-118:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000acee8), NotBefore:(*jwt.NumericDate)(0xc0000acf10), IssuedAt:(*jwt.NumericDate)(0xc0000acef0), ID:"e6f484a0-23ea-48a2-81bd-2c587adce768"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-118", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"422e9a8a-ee08-4b63-b9ea-027d84ef507c"}}}

  I0901 13:08:15.130368 17 service_accounts.go:666] completed pod
  I0901 13:08:15.160615 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-118" for this suite. @ 09/01/25 13:08:15.178
• [34.257 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/01/25 13:08:15.201
  I0901 13:08:15.201613 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 13:08:15.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:15.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:15.261
  I0901 13:08:15.295507 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8433" for this suite. @ 09/01/25 13:08:15.308
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:281
  STEP: Creating a kubernetes client @ 09/01/25 13:08:15.327
  I0901 13:08:15.327789 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 13:08:15.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:15.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:15.366
  STEP: Setting up server cert @ 09/01/25 13:08:15.425
  E0901 13:08:15.597098      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:16.597524      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 13:08:16.65
  STEP: Deploying the webhook pod @ 09/01/25 13:08:16.667
  STEP: Wait for the deployment to be ready @ 09/01/25 13:08:16.703
  I0901 13:08:16.729220 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 13:08:17.597793      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:18.598539      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:18.767666 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 13, 8, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 8, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 8, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 8, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 13:08:19.599328      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:20.599913      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:08:20.779
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:08:20.81
  E0901 13:08:21.600028      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:21.811977 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 13:08:21.830792 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9068-5084-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 13:08:22.358
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 13:08:22.407
  E0901 13:08:22.599972      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:23.601039      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:24.601148      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:25.241105 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9068" for this suite. @ 09/01/25 13:08:25.264
  STEP: Destroying namespace "webhook-markers-3869" for this suite. @ 09/01/25 13:08:25.281
• [9.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/01/25 13:08:25.306
  I0901 13:08:25.306814 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename controllerrevisions @ 09/01/25 13:08:25.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:25.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:25.345
  STEP: Creating DaemonSet "e2e-rc97v-daemon-set" @ 09/01/25 13:08:25.407
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 13:08:25.428
  E0901 13:08:25.602438      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:25.616630 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rc97v-daemon-set: 0
  I0901 13:08:25.616705 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  I0901 13:08:26.460834 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rc97v-daemon-set: 0
  I0901 13:08:26.460999 17 fixtures.go:131] Node wohnahxathu9-1 is running 0 daemon pod, expected 1
  E0901 13:08:26.602536      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:27.464955 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rc97v-daemon-set: 2
  I0901 13:08:27.466175 17 fixtures.go:131] Node wohnahxathu9-3 is running 0 daemon pod, expected 1
  E0901 13:08:27.602808      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:28.458120 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rc97v-daemon-set: 3
  I0901 13:08:28.458248 17 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-rc97v-daemon-set
  STEP: Confirm DaemonSet "e2e-rc97v-daemon-set" successfully created with "daemonset-name=e2e-rc97v-daemon-set" label @ 09/01/25 13:08:28.47
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-rc97v-daemon-set" @ 09/01/25 13:08:28.496
  I0901 13:08:28.509347 17 controller_revision.go:162] Located ControllerRevision: "e2e-rc97v-daemon-set-6bc87b798d"
  STEP: Patching ControllerRevision "e2e-rc97v-daemon-set-6bc87b798d" @ 09/01/25 13:08:28.519
  I0901 13:08:28.545366 17 controller_revision.go:173] e2e-rc97v-daemon-set-6bc87b798d has been patched
  STEP: Create a new ControllerRevision @ 09/01/25 13:08:28.545
  I0901 13:08:28.568716 17 controller_revision.go:191] Created ControllerRevision: e2e-rc97v-daemon-set-655c6f4786
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 13:08:28.574
  I0901 13:08:28.576796 17 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 13:08:28.588182 17 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-rc97v-daemon-set-6bc87b798d" @ 09/01/25 13:08:28.588
  E0901 13:08:28.604178      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 13:08:28.61
  I0901 13:08:28.610584 17 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 13:08:28.619883 17 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-rc97v-daemon-set-655c6f4786" @ 09/01/25 13:08:28.63
  I0901 13:08:28.654183 17 controller_revision.go:220] e2e-rc97v-daemon-set-655c6f4786 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/01/25 13:08:28.654
  I0901 13:08:28.677095      17 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 13:08:28.678
  I0901 13:08:28.678922 17 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0901 13:08:29.609586      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:29.679971 17 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 13:08:29.696834 17 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-rc97v-daemon-set-655c6f4786=updated" @ 09/01/25 13:08:29.697
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 13:08:29.735
  I0901 13:08:29.736423 17 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 13:08:29.796738 17 controller_revision.go:265] Found 1 ControllerRevisions
  I0901 13:08:29.806344 17 controller_revision.go:246] ControllerRevision "e2e-rc97v-daemon-set-66cfb8f4f9" has revision 3
  STEP: Deleting DaemonSet "e2e-rc97v-daemon-set" @ 09/01/25 13:08:29.823
  STEP: deleting DaemonSet.extensions e2e-rc97v-daemon-set in namespace controllerrevisions-4434, will wait for the garbage collector to delete the pods @ 09/01/25 13:08:29.823
  I0901 13:08:29.917991 17 resources.go:139] Deleting DaemonSet.extensions e2e-rc97v-daemon-set took: 33.348104ms
  I0901 13:08:30.019415 17 resources.go:163] Terminating DaemonSet.extensions e2e-rc97v-daemon-set pods took: 101.370926ms
  E0901 13:08:30.610241      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:31.610595      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:32.611586      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:33.433439 17 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rc97v-daemon-set: 0
  I0901 13:08:33.433572 17 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-rc97v-daemon-set
  I0901 13:08:33.450721 17 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48412"},"items":null}

  I0901 13:08:33.462697 17 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48412"},"items":null}

  I0901 13:08:33.515988 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4434" for this suite. @ 09/01/25 13:08:33.525
• [8.240 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/01/25 13:08:33.545
  I0901 13:08:33.546064 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename projected @ 09/01/25 13:08:33.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:33.606
  E0901 13:08:33.611381      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:33.614
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 13:08:33.629
  E0901 13:08:34.612065      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:35.613758      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:36.614762      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:37.615390      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:08:37.698
  I0901 13:08:37.710980 17 output.go:207] Trying to get logs from node wohnahxathu9-2 pod downwardapi-volume-c05d7bb1-6031-4d6b-8b40-05b9d42b9711 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 13:08:37.749
  I0901 13:08:37.801895 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8453" for this suite. @ 09/01/25 13:08:37.822
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1400
  STEP: Creating a kubernetes client @ 09/01/25 13:08:37.838
  I0901 13:08:37.838845 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 13:08:37.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:37.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:37.896
  STEP: validating cluster-info @ 09/01/25 13:08:37.903
  I0901 13:08:37.904370 17 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2944970990 --namespace=kubectl-7026 cluster-info'
  I0901 13:08:38.134629 17 builder.go:156] stderr: ""
  I0901 13:08:38.134745 17 builder.go:157] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0901 13:08:38.135038 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7026" for this suite. @ 09/01/25 13:08:38.15
• [0.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/01/25 13:08:38.171
  I0901 13:08:38.171840 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename disruption @ 09/01/25 13:08:38.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:38.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:38.209
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/01/25 13:08:38.217
  STEP: Waiting for the pdb to be processed @ 09/01/25 13:08:38.228
  E0901 13:08:38.616434      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:39.616553      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/01/25 13:08:40.282
  STEP: Waiting for all pods to be running @ 09/01/25 13:08:40.282
  I0901 13:08:40.292558 17 disruption.go:680] pods: 0 < 3
  E0901 13:08:40.618047      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:41.617642      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:08:42.300652 17 disruption.go:691] running pods: 1 < 3
  E0901 13:08:42.618526      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:43.619055      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 13:08:44.334
  STEP: Updating the pdb to allow a pod to be evicted @ 09/01/25 13:08:44.379
  STEP: Waiting for the pdb to be processed @ 09/01/25 13:08:44.401
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 13:08:44.41
  STEP: Waiting for all pods to be running @ 09/01/25 13:08:44.41
  STEP: Waiting for the pdb to observed all healthy pods @ 09/01/25 13:08:44.435
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/01/25 13:08:44.494
  STEP: Waiting for the pdb to be processed @ 09/01/25 13:08:44.555
  STEP: Waiting for all pods to be running @ 09/01/25 13:08:44.596
  I0901 13:08:44.608794 17 disruption.go:691] running pods: 2 < 3
  E0901 13:08:44.619474      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:45.620399      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 13:08:46.619
  E0901 13:08:46.620809      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/01/25 13:08:46.668
  STEP: Waiting for the pdb to be deleted @ 09/01/25 13:08:46.685
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 13:08:46.697
  STEP: Waiting for all pods to be running @ 09/01/25 13:08:46.697
  I0901 13:08:46.784938 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-404" for this suite. @ 09/01/25 13:08:46.816
• [8.686 seconds]
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/01/25 13:08:46.857
  I0901 13:08:46.857617 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename fake-node @ 09/01/25 13:08:46.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:46.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:46.957
  STEP: Create "e2e-fake-node-jb8gm" @ 09/01/25 13:08:46.965
  STEP: Getting "e2e-fake-node-jb8gm" @ 09/01/25 13:08:46.98
  STEP: Patching "e2e-fake-node-jb8gm" @ 09/01/25 13:08:46.994
  STEP: Listing nodes with LabelSelector "e2e-fake-node-jb8gm=patched" @ 09/01/25 13:08:47.047
  STEP: Updating "e2e-fake-node-jb8gm" @ 09/01/25 13:08:47.081
  STEP: Delete "e2e-fake-node-jb8gm" @ 09/01/25 13:08:47.185
  STEP: Confirm deletion of "e2e-fake-node-jb8gm" @ 09/01/25 13:08:47.217
  I0901 13:08:47.236443 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2427" for this suite. @ 09/01/25 13:08:47.247
• [0.406 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/01/25 13:08:47.265
  I0901 13:08:47.265451 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 13:08:47.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:08:47.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:08:47.312
  STEP: Creating a cronjob @ 09/01/25 13:08:47.32
  STEP: Ensuring more than one job is running at a time @ 09/01/25 13:08:47.339
  E0901 13:08:47.620967      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:48.621477      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:49.622489      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:50.623666      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:51.624347      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:52.625051      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:53.627673      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:54.626167      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:55.626676      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:56.626804      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:57.627151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:58.628033      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:08:59.628196      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:00.628996      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:01.630117      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:02.631602      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:03.630651      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:04.631255      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:05.632495      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:06.633117      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:07.633559      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:08.633902      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:09.634644      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:10.635416      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:11.636056      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:12.637035      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:13.639762      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:14.640561      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:15.640809      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:16.641355      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:17.641477      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:18.642179      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:19.642835      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:20.643257      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:21.643769      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:22.644346      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:23.645059      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:24.645232      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:25.647147      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:26.647574      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:27.647551      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:28.647666      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:29.648608      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:30.649255      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:31.650464      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:32.651270      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:33.652614      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:34.653075      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:35.653408      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:36.654064      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:37.654231      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:38.655176      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:39.655587      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:40.655765      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:41.656176      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:42.656245      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:43.656642      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:44.657433      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:45.658188      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:46.659076      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:47.659981      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:48.661057      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:49.661010      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:50.661485      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:51.661610      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:52.662521      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:53.662640      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:54.663581      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:55.664584      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:56.664671      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:57.666801      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:58.665151      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:09:59.666462      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:00.666655      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/01/25 13:10:01.352
  STEP: Removing cronjob @ 09/01/25 13:10:01.367
  I0901 13:10:01.387825 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2608" for this suite. @ 09/01/25 13:10:01.399
• [74.151 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/01/25 13:10:01.417
  I0901 13:10:01.417734 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 13:10:01.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:10:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:10:01.49
  STEP: set up a multi version CRD @ 09/01/25 13:10:01.501
  I0901 13:10:01.503720 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  E0901 13:10:01.667450      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:02.667852      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:03.668041      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:04.669021      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:05.669821      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:06.669619      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:07.677620      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/01/25 13:10:07.943
  STEP: check the unserved version gets removed @ 09/01/25 13:10:07.99
  E0901 13:10:08.678066      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:09.678406      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/01/25 13:10:10.036
  E0901 13:10:10.678917      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:11.679708      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:12.680773      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:13.685084      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:14.684735      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:10:14.731573 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3515" for this suite. @ 09/01/25 13:10:14.761
• [13.367 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/01/25 13:10:14.785
  I0901 13:10:14.785802 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 13:10:14.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:10:14.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:10:14.835
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 13:10:14.842
  E0901 13:10:15.685849      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:16.686737      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:17.688466      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:18.688037      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:10:18.911
  I0901 13:10:18.918583 17 output.go:207] Trying to get logs from node wohnahxathu9-1 pod pod-f1d14bd8-f3fd-423c-83b5-7494399bfa4c container test-container: <nil>
  STEP: delete the pod @ 09/01/25 13:10:18.969
  I0901 13:10:19.032717 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2705" for this suite. @ 09/01/25 13:10:19.048
• [4.281 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:399
  STEP: Creating a kubernetes client @ 09/01/25 13:10:19.066
  I0901 13:10:19.066206 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename webhook @ 09/01/25 13:10:19.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:10:19.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:10:19.113
  STEP: Setting up server cert @ 09/01/25 13:10:19.169
  E0901 13:10:19.688496      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:20.689510      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 13:10:20.877
  STEP: Deploying the webhook pod @ 09/01/25 13:10:20.924
  STEP: Wait for the deployment to be ready @ 09/01/25 13:10:20.961
  I0901 13:10:20.989711 17 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 13:10:21.690516      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:22.690733      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:10:23.022084 17 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 13, 10, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 10, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 13, 10, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 13, 10, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 13:10:23.690906      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:24.691240      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:10:25.033
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:10:25.063
  E0901 13:10:25.691693      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:10:26.063819 17 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/01/25 13:10:26.081
  I0901 13:10:26.166530 17 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 13:10:26.302
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/01/25 13:10:26.36
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 13:10:26.404
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/01/25 13:10:26.437
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 13:10:26.459
  I0901 13:10:26.577118 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3889" for this suite. @ 09/01/25 13:10:26.586
  STEP: Destroying namespace "webhook-markers-5955" for this suite. @ 09/01/25 13:10:26.602
• [7.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:888
  STEP: Creating a kubernetes client @ 09/01/25 13:10:26.643
  I0901 13:10:26.643269 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename job @ 09/01/25 13:10:26.647
  E0901 13:10:26.691596      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:10:26.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:10:26.737
  STEP: Creating a job @ 09/01/25 13:10:26.751
  STEP: Ensuring active pods == parallelism @ 09/01/25 13:10:26.779
  E0901 13:10:27.691674      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:28.692183      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/01/25 13:10:28.808
  STEP: deleting Job.batch foo in namespace job-7118, will wait for the garbage collector to delete the pods @ 09/01/25 13:10:28.808
  I0901 13:10:28.901544 17 resources.go:139] Deleting Job.batch foo took: 24.849934ms
  I0901 13:10:29.002154 17 resources.go:163] Terminating Job.batch foo pods took: 100.604261ms
  E0901 13:10:29.692613      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/01/25 13:10:30.603
  I0901 13:10:30.619159 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7118" for this suite. @ 09/01/25 13:10:30.635
• [4.020 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/01/25 13:10:30.664
  I0901 13:10:30.664741 17 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2944970990
  STEP: Building a namespace api object, basename init-container @ 09/01/25 13:10:30.671
  E0901 13:10:30.693225      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:10:30.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:10:30.722
  STEP: creating the pod @ 09/01/25 13:10:30.734
  I0901 13:10:30.734356 17 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0901 13:10:31.693559      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:32.695994      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:33.694935      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0901 13:10:34.695210      17 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0901 13:10:34.875125 17 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9860" for this suite. @ 09/01/25 13:10:34.893
• [4.258 seconds]
------------------------------
SSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0901 13:10:34.928828 17 suites.go:34] Running AfterSuite actions on node 1
  I0901 13:10:34.929353 17 util.go:564] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.003 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:616
[ReportAfterSuite] PASSED [0.383 seconds]
------------------------------

Ran 424 of 7132 Specs in 7269.015 seconds
SUCCESS! -- 424 Passed | 0 Failed | 0 Pending | 6708 Skipped
PASS

Ginkgo ran 1 suite in 2h1m11.929075915s
Test Suite Passed
